(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
(function (__filename){(function (){
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).zip={})}(this,(function(e){"use strict";const t=256,n=256,i=-2,r=-5;function a(e){return e.map((([e,t])=>new Array(e).fill(t,0,e))).flat()}const s=[0,1,2,3].concat(...a([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function o(){const e=this;function t(e,t){let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}e.build_tree=function(n){const i=e.dyn_tree,r=e.stat_desc.static_tree,a=e.stat_desc.elems;let s,o,d,l=-1;for(n.heap_len=0,n.heap_max=573,s=0;s<a;s++)0!==i[2*s]?(n.heap[++n.heap_len]=l=s,n.depth[s]=0):i[2*s+1]=0;for(;n.heap_len<2;)d=n.heap[++n.heap_len]=l<2?++l:0,i[2*d]=1,n.depth[d]=0,n.opt_len--,r&&(n.static_len-=r[2*d+1]);for(e.max_code=l,s=Math.floor(n.heap_len/2);s>=1;s--)n.pqdownheap(i,s);d=a;do{s=n.heap[1],n.heap[1]=n.heap[n.heap_len--],n.pqdownheap(i,1),o=n.heap[1],n.heap[--n.heap_max]=s,n.heap[--n.heap_max]=o,i[2*d]=i[2*s]+i[2*o],n.depth[d]=Math.max(n.depth[s],n.depth[o])+1,i[2*s+1]=i[2*o+1]=d,n.heap[1]=d++,n.pqdownheap(i,1)}while(n.heap_len>=2);n.heap[--n.heap_max]=n.heap[1],function(t){const n=e.dyn_tree,i=e.stat_desc.static_tree,r=e.stat_desc.extra_bits,a=e.stat_desc.extra_base,s=e.stat_desc.max_length;let o,d,l,c,f,u,p=0;for(c=0;c<=15;c++)t.bl_count[c]=0;for(n[2*t.heap[t.heap_max]+1]=0,o=t.heap_max+1;o<573;o++)d=t.heap[o],c=n[2*n[2*d+1]+1]+1,c>s&&(c=s,p++),n[2*d+1]=c,d>e.max_code||(t.bl_count[c]++,f=0,d>=a&&(f=r[d-a]),u=n[2*d],t.opt_len+=u*(c+f),i&&(t.static_len+=u*(i[2*d+1]+f)));if(0!==p){do{for(c=s-1;0===t.bl_count[c];)c--;t.bl_count[c]--,t.bl_count[c+1]+=2,t.bl_count[s]--,p-=2}while(p>0);for(c=s;0!==c;c--)for(d=t.bl_count[c];0!==d;)l=t.heap[--o],l>e.max_code||(n[2*l+1]!=c&&(t.opt_len+=(c-n[2*l+1])*n[2*l],n[2*l+1]=c),d--)}}(n),function(e,n,i){const r=[];let a,s,o,d=0;for(a=1;a<=15;a++)r[a]=d=d+i[a-1]<<1;for(s=0;s<=n;s++)o=e[2*s+1],0!==o&&(e[2*s]=t(r[o]++,o))}(i,e.max_code,n.bl_count)}}function d(e,t,n,i,r){const a=this;a.static_tree=e,a.extra_bits=t,a.extra_base=n,a.elems=i,a.max_length=r}o._length_code=[0,1,2,3,4,5,6,7].concat(...a([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),o.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],o.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],o.d_code=function(e){return e<256?s[e]:s[256+(e>>>7)]},o.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],o.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],o.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],o.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],d.static_ltree=[12,8,140,8,76,8,204,8,44,8,172,8,108,8,236,8,28,8,156,8,92,8,220,8,60,8,188,8,124,8,252,8,2,8,130,8,66,8,194,8,34,8,162,8,98,8,226,8,18,8,146,8,82,8,210,8,50,8,178,8,114,8,242,8,10,8,138,8,74,8,202,8,42,8,170,8,106,8,234,8,26,8,154,8,90,8,218,8,58,8,186,8,122,8,250,8,6,8,134,8,70,8,198,8,38,8,166,8,102,8,230,8,22,8,150,8,86,8,214,8,54,8,182,8,118,8,246,8,14,8,142,8,78,8,206,8,46,8,174,8,110,8,238,8,30,8,158,8,94,8,222,8,62,8,190,8,126,8,254,8,1,8,129,8,65,8,193,8,33,8,161,8,97,8,225,8,17,8,145,8,81,8,209,8,49,8,177,8,113,8,241,8,9,8,137,8,73,8,201,8,41,8,169,8,105,8,233,8,25,8,153,8,89,8,217,8,57,8,185,8,121,8,249,8,5,8,133,8,69,8,197,8,37,8,165,8,101,8,229,8,21,8,149,8,85,8,213,8,53,8,181,8,117,8,245,8,13,8,141,8,77,8,205,8,45,8,173,8,109,8,237,8,29,8,157,8,93,8,221,8,61,8,189,8,125,8,253,8,19,9,275,9,147,9,403,9,83,9,339,9,211,9,467,9,51,9,307,9,179,9,435,9,115,9,371,9,243,9,499,9,11,9,267,9,139,9,395,9,75,9,331,9,203,9,459,9,43,9,299,9,171,9,427,9,107,9,363,9,235,9,491,9,27,9,283,9,155,9,411,9,91,9,347,9,219,9,475,9,59,9,315,9,187,9,443,9,123,9,379,9,251,9,507,9,7,9,263,9,135,9,391,9,71,9,327,9,199,9,455,9,39,9,295,9,167,9,423,9,103,9,359,9,231,9,487,9,23,9,279,9,151,9,407,9,87,9,343,9,215,9,471,9,55,9,311,9,183,9,439,9,119,9,375,9,247,9,503,9,15,9,271,9,143,9,399,9,79,9,335,9,207,9,463,9,47,9,303,9,175,9,431,9,111,9,367,9,239,9,495,9,31,9,287,9,159,9,415,9,95,9,351,9,223,9,479,9,63,9,319,9,191,9,447,9,127,9,383,9,255,9,511,9,0,7,64,7,32,7,96,7,16,7,80,7,48,7,112,7,8,7,72,7,40,7,104,7,24,7,88,7,56,7,120,7,4,7,68,7,36,7,100,7,20,7,84,7,52,7,116,7,3,8,131,8,67,8,195,8,35,8,163,8,99,8,227,8],d.static_dtree=[0,5,16,5,8,5,24,5,4,5,20,5,12,5,28,5,2,5,18,5,10,5,26,5,6,5,22,5,14,5,30,5,1,5,17,5,9,5,25,5,5,5,21,5,13,5,29,5,3,5,19,5,11,5,27,5,7,5,23,5],d.static_l_desc=new d(d.static_ltree,o.extra_lbits,257,286,15),d.static_d_desc=new d(d.static_dtree,o.extra_dbits,0,30,15),d.static_bl_desc=new d(null,o.extra_blbits,0,19,7);function l(e,t,n,i,r){const a=this;a.good_length=e,a.max_lazy=t,a.nice_length=n,a.max_chain=i,a.func=r}const c=[new l(0,0,0,0,0),new l(4,4,8,4,1),new l(4,5,16,8,1),new l(4,6,32,32,1),new l(4,4,16,16,2),new l(8,16,32,32,2),new l(8,16,128,128,2),new l(8,32,128,256,2),new l(32,128,258,1024,2),new l(32,258,258,4096,2)],f=["need dictionary","stream end","","","stream error","data error","","buffer error","",""],u=113,p=666,h=258,_=262;function m(e,t,n,i){const r=e[2*t],a=e[2*n];return r<a||r==a&&i[t]<=i[n]}function x(){const e=this;let a,s,l,x,w,g,b,v,y,k,z,A,E,U,R,D,S,j,I,F,C,B,O,T,M,W,q,H,P,L,N,V,Z;const K=new o,G=new o,Y=new o;let X,J,Q,$,ee,te,ne,ie;function re(){let t;for(t=0;t<286;t++)N[2*t]=0;for(t=0;t<30;t++)V[2*t]=0;for(t=0;t<19;t++)Z[2*t]=0;N[512]=1,e.opt_len=e.static_len=0,Q=ee=0}function ae(e,t){let n,i=-1,r=e[1],a=0,s=7,o=4;0===r&&(s=138,o=3),e[2*(t+1)+1]=65535;for(let d=0;d<=t;d++)n=r,r=e[2*(d+1)+1],++a<s&&n==r||(a<o?Z[2*n]+=a:0!==n?(n!=i&&Z[2*n]++,Z[32]++):a<=10?Z[34]++:Z[36]++,a=0,i=n,0===r?(s=138,o=3):n==r?(s=6,o=3):(s=7,o=4))}function se(t){e.pending_buf[e.pending++]=t}function oe(e){se(255&e),se(e>>>8&255)}function de(e,t){let n;const i=t;ie>16-i?(n=e,ne|=n<<ie&65535,oe(ne),ne=n>>>16-ie,ie+=i-16):(ne|=e<<ie&65535,ie+=i)}function le(e,t){const n=2*e;de(65535&t[n],65535&t[n+1])}function ce(e,t){let n,i,r=-1,a=e[1],s=0,o=7,d=4;for(0===a&&(o=138,d=3),n=0;n<=t;n++)if(i=a,a=e[2*(n+1)+1],!(++s<o&&i==a)){if(s<d)do{le(i,Z)}while(0!=--s);else 0!==i?(i!=r&&(le(i,Z),s--),le(16,Z),de(s-3,2)):s<=10?(le(17,Z),de(s-3,3)):(le(18,Z),de(s-11,7));s=0,r=i,0===a?(o=138,d=3):i==a?(o=6,d=3):(o=7,d=4)}}function fe(){16==ie?(oe(ne),ne=0,ie=0):ie>=8&&(se(255&ne),ne>>>=8,ie-=8)}function ue(n,i){let r,a,s;if(e.pending_buf[$+2*Q]=n>>>8&255,e.pending_buf[$+2*Q+1]=255&n,e.pending_buf[X+Q]=255&i,Q++,0===n?N[2*i]++:(ee++,n--,N[2*(o._length_code[i]+t+1)]++,V[2*o.d_code(n)]++),0==(8191&Q)&&q>2){for(r=8*Q,a=C-S,s=0;s<30;s++)r+=V[2*s]*(5+o.extra_dbits[s]);if(r>>>=3,ee<Math.floor(Q/2)&&r<Math.floor(a/2))return!0}return Q==J-1}function pe(i,r){let a,s,d,l,c=0;if(0!==Q)do{a=e.pending_buf[$+2*c]<<8&65280|255&e.pending_buf[$+2*c+1],s=255&e.pending_buf[X+c],c++,0===a?le(s,i):(d=o._length_code[s],le(d+t+1,i),l=o.extra_lbits[d],0!==l&&(s-=o.base_length[d],de(s,l)),a--,d=o.d_code(a),le(d,r),l=o.extra_dbits[d],0!==l&&(a-=o.base_dist[d],de(a,l)))}while(c<Q);le(n,i),te=i[513]}function he(){ie>8?oe(ne):ie>0&&se(255&ne),ne=0,ie=0}function _e(t,n,i){de(0+(i?1:0),3),function(t,n,i){he(),te=8,i&&(oe(n),oe(~n)),e.pending_buf.set(v.subarray(t,t+n),e.pending),e.pending+=n}(t,n,!0)}function me(t,n,i){let r,a,s=0;q>0?(K.build_tree(e),G.build_tree(e),s=function(){let t;for(ae(N,K.max_code),ae(V,G.max_code),Y.build_tree(e),t=18;t>=3&&0===Z[2*o.bl_order[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(),r=e.opt_len+3+7>>>3,a=e.static_len+3+7>>>3,a<=r&&(r=a)):r=a=n+5,n+4<=r&&-1!=t?_e(t,n,i):a==r?(de(2+(i?1:0),3),pe(d.static_ltree,d.static_dtree)):(de(4+(i?1:0),3),function(e,t,n){let i;for(de(e-257,5),de(t-1,5),de(n-4,4),i=0;i<n;i++)de(Z[2*o.bl_order[i]+1],3);ce(N,e-1),ce(V,t-1)}(K.max_code+1,G.max_code+1,s+1),pe(N,V)),re(),i&&he()}function xe(e){me(S>=0?S:-1,C-S,e),S=C,a.flush_pending()}function we(){let e,t,n,i;do{if(i=y-O-C,0===i&&0===C&&0===O)i=w;else if(-1==i)i--;else if(C>=w+w-_){v.set(v.subarray(w,w+w),0),B-=w,C-=w,S-=w,e=E,n=e;do{t=65535&z[--n],z[n]=t>=w?t-w:0}while(0!=--e);e=w,n=e;do{t=65535&k[--n],k[n]=t>=w?t-w:0}while(0!=--e);i+=w}if(0===a.avail_in)return;e=a.read_buf(v,C+O,i),O+=e,O>=3&&(A=255&v[C],A=(A<<D^255&v[C+1])&R)}while(O<_&&0!==a.avail_in)}function ge(e){let t,n,i=M,r=C,a=T;const s=C>w-_?C-(w-_):0;let o=L;const d=b,l=C+h;let c=v[r+a-1],f=v[r+a];T>=P&&(i>>=2),o>O&&(o=O);do{if(t=e,v[t+a]==f&&v[t+a-1]==c&&v[t]==v[r]&&v[++t]==v[r+1]){r+=2,t++;do{}while(v[++r]==v[++t]&&v[++r]==v[++t]&&v[++r]==v[++t]&&v[++r]==v[++t]&&v[++r]==v[++t]&&v[++r]==v[++t]&&v[++r]==v[++t]&&v[++r]==v[++t]&&r<l);if(n=h-(l-r),r=l-h,n>a){if(B=e,a=n,n>=o)break;c=v[r+a-1],f=v[r+a]}}}while((e=65535&k[e&d])>s&&0!=--i);return a<=O?a:O}function be(t){return t.total_in=t.total_out=0,t.msg=null,e.pending=0,e.pending_out=0,s=u,x=0,K.dyn_tree=N,K.stat_desc=d.static_l_desc,G.dyn_tree=V,G.stat_desc=d.static_d_desc,Y.dyn_tree=Z,Y.stat_desc=d.static_bl_desc,ne=0,ie=0,te=8,re(),function(){y=2*w,z[E-1]=0;for(let e=0;e<E-1;e++)z[e]=0;W=c[q].max_lazy,P=c[q].good_length,L=c[q].nice_length,M=c[q].max_chain,C=0,S=0,O=0,j=T=2,F=0,A=0}(),0}e.depth=[],e.bl_count=[],e.heap=[],N=[],V=[],Z=[],e.pqdownheap=function(t,n){const i=e.heap,r=i[n];let a=n<<1;for(;a<=e.heap_len&&(a<e.heap_len&&m(t,i[a+1],i[a],e.depth)&&a++,!m(t,r,i[a],e.depth));)i[n]=i[a],n=a,a<<=1;i[n]=r},e.deflateInit=function(t,n,r,a,s,o){return a||(a=8),s||(s=8),o||(o=0),t.msg=null,-1==n&&(n=6),s<1||s>9||8!=a||r<9||r>15||n<0||n>9||o<0||o>2?i:(t.dstate=e,g=r,w=1<<g,b=w-1,U=s+7,E=1<<U,R=E-1,D=Math.floor((U+3-1)/3),v=new Uint8Array(2*w),k=[],z=[],J=1<<s+6,e.pending_buf=new Uint8Array(4*J),l=4*J,$=Math.floor(J/2),X=3*J,q=n,H=o,be(t))},e.deflateEnd=function(){return 42!=s&&s!=u&&s!=p?i:(e.pending_buf=null,z=null,k=null,v=null,e.dstate=null,s==u?-3:0)},e.deflateParams=function(e,t,n){let r=0;return-1==t&&(t=6),t<0||t>9||n<0||n>2?i:(c[q].func!=c[t].func&&0!==e.total_in&&(r=e.deflate(1)),q!=t&&(q=t,W=c[q].max_lazy,P=c[q].good_length,L=c[q].nice_length,M=c[q].max_chain),H=n,r)},e.deflateSetDictionary=function(e,t,n){let r,a=n,o=0;if(!t||42!=s)return i;if(a<3)return 0;for(a>w-_&&(a=w-_,o=n-a),v.set(t.subarray(o,o+a),0),C=a,S=a,A=255&v[0],A=(A<<D^255&v[1])&R,r=0;r<=a-3;r++)A=(A<<D^255&v[r+2])&R,k[r&b]=z[A],z[A]=r;return 0},e.deflate=function(t,o){let h,m,y,U,M;if(o>4||o<0)return i;if(!t.next_out||!t.next_in&&0!==t.avail_in||s==p&&4!=o)return t.msg=f[4],i;if(0===t.avail_out)return t.msg=f[7],r;var P;if(a=t,U=x,x=o,42==s&&(m=8+(g-8<<4)<<8,y=(q-1&255)>>1,y>3&&(y=3),m|=y<<6,0!==C&&(m|=32),m+=31-m%31,s=u,se((P=m)>>8&255),se(255&P)),0!==e.pending){if(a.flush_pending(),0===a.avail_out)return x=-1,0}else if(0===a.avail_in&&o<=U&&4!=o)return a.msg=f[7],r;if(s==p&&0!==a.avail_in)return t.msg=f[7],r;if(0!==a.avail_in||0!==O||0!=o&&s!=p){switch(M=-1,c[q].func){case 0:M=function(e){let t,n=65535;for(n>l-5&&(n=l-5);;){if(O<=1){if(we(),0===O&&0==e)return 0;if(0===O)break}if(C+=O,O=0,t=S+n,(0===C||C>=t)&&(O=C-t,C=t,xe(!1),0===a.avail_out))return 0;if(C-S>=w-_&&(xe(!1),0===a.avail_out))return 0}return xe(4==e),0===a.avail_out?4==e?2:0:4==e?3:1}(o);break;case 1:M=function(e){let t,n=0;for(;;){if(O<_){if(we(),O<_&&0==e)return 0;if(0===O)break}if(O>=3&&(A=(A<<D^255&v[C+2])&R,n=65535&z[A],k[C&b]=z[A],z[A]=C),0!==n&&(C-n&65535)<=w-_&&2!=H&&(j=ge(n)),j>=3)if(t=ue(C-B,j-3),O-=j,j<=W&&O>=3){j--;do{C++,A=(A<<D^255&v[C+2])&R,n=65535&z[A],k[C&b]=z[A],z[A]=C}while(0!=--j);C++}else C+=j,j=0,A=255&v[C],A=(A<<D^255&v[C+1])&R;else t=ue(0,255&v[C]),O--,C++;if(t&&(xe(!1),0===a.avail_out))return 0}return xe(4==e),0===a.avail_out?4==e?2:0:4==e?3:1}(o);break;case 2:M=function(e){let t,n,i=0;for(;;){if(O<_){if(we(),O<_&&0==e)return 0;if(0===O)break}if(O>=3&&(A=(A<<D^255&v[C+2])&R,i=65535&z[A],k[C&b]=z[A],z[A]=C),T=j,I=B,j=2,0!==i&&T<W&&(C-i&65535)<=w-_&&(2!=H&&(j=ge(i)),j<=5&&(1==H||3==j&&C-B>4096)&&(j=2)),T>=3&&j<=T){n=C+O-3,t=ue(C-1-I,T-3),O-=T-1,T-=2;do{++C<=n&&(A=(A<<D^255&v[C+2])&R,i=65535&z[A],k[C&b]=z[A],z[A]=C)}while(0!=--T);if(F=0,j=2,C++,t&&(xe(!1),0===a.avail_out))return 0}else if(0!==F){if(t=ue(0,255&v[C-1]),t&&xe(!1),C++,O--,0===a.avail_out)return 0}else F=1,C++,O--}return 0!==F&&(t=ue(0,255&v[C-1]),F=0),xe(4==e),0===a.avail_out?4==e?2:0:4==e?3:1}(o)}if(2!=M&&3!=M||(s=p),0==M||2==M)return 0===a.avail_out&&(x=-1),0;if(1==M){if(1==o)de(2,3),le(n,d.static_ltree),fe(),1+te+10-ie<9&&(de(2,3),le(n,d.static_ltree),fe()),te=7;else if(_e(0,0,!1),3==o)for(h=0;h<E;h++)z[h]=0;if(a.flush_pending(),0===a.avail_out)return x=-1,0}}return 4!=o?0:1}}function w(){const e=this;e.next_in_index=0,e.next_out_index=0,e.avail_in=0,e.total_in=0,e.avail_out=0,e.total_out=0}w.prototype={deflateInit:function(e,t){const n=this;return n.dstate=new x,t||(t=15),n.dstate.deflateInit(n,e,t)},deflate:function(e){const t=this;return t.dstate?t.dstate.deflate(t,e):i},deflateEnd:function(){const e=this;if(!e.dstate)return i;const t=e.dstate.deflateEnd();return e.dstate=null,t},deflateParams:function(e,t){const n=this;return n.dstate?n.dstate.deflateParams(n,e,t):i},deflateSetDictionary:function(e,t){const n=this;return n.dstate?n.dstate.deflateSetDictionary(n,e,t):i},read_buf:function(e,t,n){const i=this;let r=i.avail_in;return r>n&&(r=n),0===r?0:(i.avail_in-=r,e.set(i.next_in.subarray(i.next_in_index,i.next_in_index+r),t),i.next_in_index+=r,i.total_in+=r,r)},flush_pending:function(){const e=this;let t=e.dstate.pending;t>e.avail_out&&(t=e.avail_out),0!==t&&(e.next_out.set(e.dstate.pending_buf.subarray(e.dstate.pending_out,e.dstate.pending_out+t),e.next_out_index),e.next_out_index+=t,e.dstate.pending_out+=t,e.total_out+=t,e.avail_out-=t,e.dstate.pending-=t,0===e.dstate.pending&&(e.dstate.pending_out=0))}};const g=-2,b=-3,v=-5,y=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],k=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],z=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],A=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],E=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],U=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],R=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],D=15;function S(){let e,t,n,i,r,a;function s(e,t,s,o,d,l,c,f,u,p,h){let _,m,x,w,g,y,k,z,A,E,U,R,S,j,I;E=0,g=s;do{n[e[t+E]]++,E++,g--}while(0!==g);if(n[0]==s)return c[0]=-1,f[0]=0,0;for(z=f[0],y=1;y<=D&&0===n[y];y++);for(k=y,z<y&&(z=y),g=D;0!==g&&0===n[g];g--);for(x=g,z>g&&(z=g),f[0]=z,j=1<<y;y<g;y++,j<<=1)if((j-=n[y])<0)return b;if((j-=n[g])<0)return b;for(n[g]+=j,a[1]=y=0,E=1,S=2;0!=--g;)a[S]=y+=n[E],S++,E++;g=0,E=0;do{0!==(y=e[t+E])&&(h[a[y]++]=g),E++}while(++g<s);for(s=a[x],a[0]=g=0,E=0,w=-1,R=-z,r[0]=0,U=0,I=0;k<=x;k++)for(_=n[k];0!=_--;){for(;k>R+z;){if(w++,R+=z,I=x-R,I=I>z?z:I,(m=1<<(y=k-R))>_+1&&(m-=_+1,S=k,y<I))for(;++y<I&&!((m<<=1)<=n[++S]);)m-=n[S];if(I=1<<y,p[0]+I>1440)return b;r[w]=U=p[0],p[0]+=I,0!==w?(a[w]=g,i[0]=y,i[1]=z,y=g>>>R-z,i[2]=U-r[w-1]-y,u.set(i,3*(r[w-1]+y))):c[0]=U}for(i[1]=k-R,E>=s?i[0]=192:h[E]<o?(i[0]=h[E]<256?0:96,i[2]=h[E++]):(i[0]=l[h[E]-o]+16+64,i[2]=d[h[E++]-o]),m=1<<k-R,y=g>>>R;y<I;y+=m)u.set(i,3*(U+y));for(y=1<<k-1;0!=(g&y);y>>>=1)g^=y;for(g^=y,A=(1<<R)-1;(g&A)!=a[w];)w--,R-=z,A=(1<<R)-1}return 0!==j&&1!=x?v:0}function o(s){let o;for(e||(e=[],t=[],n=new Int32Array(16),i=[],r=new Int32Array(D),a=new Int32Array(16)),t.length<s&&(t=[]),o=0;o<s;o++)t[o]=0;for(o=0;o<16;o++)n[o]=0;for(o=0;o<3;o++)i[o]=0;r.set(n.subarray(0,D),0),a.set(n.subarray(0,16),0)}this.inflate_trees_bits=function(n,i,r,a,d){let l;return o(19),e[0]=0,l=s(n,0,19,19,null,null,r,i,a,e,t),l==b?d.msg="oversubscribed dynamic bit lengths tree":l!=v&&0!==i[0]||(d.msg="incomplete dynamic bit lengths tree",l=b),l},this.inflate_trees_dynamic=function(n,i,r,a,d,l,c,f,u){let p;return o(288),e[0]=0,p=s(r,0,n,257,A,E,l,a,f,e,t),0!=p||0===a[0]?(p==b?u.msg="oversubscribed literal/length tree":-4!=p&&(u.msg="incomplete literal/length tree",p=b),p):(o(288),p=s(r,n,i,0,U,R,c,d,f,e,t),0!=p||0===d[0]&&n>257?(p==b?u.msg="oversubscribed distance tree":p==v?(u.msg="incomplete distance tree",p=b):-4!=p&&(u.msg="empty distance tree with lengths",p=b),p):0)}}S.inflate_trees_fixed=function(e,t,n,i){return e[0]=9,t[0]=5,n[0]=k,i[0]=z,0};function j(){const e=this;let t,n,i,r,a=0,s=0,o=0,d=0,l=0,c=0,f=0,u=0,p=0,h=0;function _(e,t,n,i,r,a,s,o){let d,l,c,f,u,p,h,_,m,x,w,g,v,k,z,A;h=o.next_in_index,_=o.avail_in,u=s.bitb,p=s.bitk,m=s.write,x=m<s.read?s.read-m-1:s.end-m,w=y[e],g=y[t];do{for(;p<20;)_--,u|=(255&o.read_byte(h++))<<p,p+=8;if(d=u&w,l=n,c=i,A=3*(c+d),0!==(f=l[A]))for(;;){if(u>>=l[A+1],p-=l[A+1],0!=(16&f)){for(f&=15,v=l[A+2]+(u&y[f]),u>>=f,p-=f;p<15;)_--,u|=(255&o.read_byte(h++))<<p,p+=8;for(d=u&g,l=r,c=a,A=3*(c+d),f=l[A];;){if(u>>=l[A+1],p-=l[A+1],0!=(16&f)){for(f&=15;p<f;)_--,u|=(255&o.read_byte(h++))<<p,p+=8;if(k=l[A+2]+(u&y[f]),u>>=f,p-=f,x-=v,m>=k)z=m-k,m-z>0&&2>m-z?(s.window[m++]=s.window[z++],s.window[m++]=s.window[z++],v-=2):(s.window.set(s.window.subarray(z,z+2),m),m+=2,z+=2,v-=2);else{z=m-k;do{z+=s.end}while(z<0);if(f=s.end-z,v>f){if(v-=f,m-z>0&&f>m-z)do{s.window[m++]=s.window[z++]}while(0!=--f);else s.window.set(s.window.subarray(z,z+f),m),m+=f,z+=f,f=0;z=0}}if(m-z>0&&v>m-z)do{s.window[m++]=s.window[z++]}while(0!=--v);else s.window.set(s.window.subarray(z,z+v),m),m+=v,z+=v,v=0;break}if(0!=(64&f))return o.msg="invalid distance code",v=o.avail_in-_,v=p>>3<v?p>>3:v,_+=v,h-=v,p-=v<<3,s.bitb=u,s.bitk=p,o.avail_in=_,o.total_in+=h-o.next_in_index,o.next_in_index=h,s.write=m,b;d+=l[A+2],d+=u&y[f],A=3*(c+d),f=l[A]}break}if(0!=(64&f))return 0!=(32&f)?(v=o.avail_in-_,v=p>>3<v?p>>3:v,_+=v,h-=v,p-=v<<3,s.bitb=u,s.bitk=p,o.avail_in=_,o.total_in+=h-o.next_in_index,o.next_in_index=h,s.write=m,1):(o.msg="invalid literal/length code",v=o.avail_in-_,v=p>>3<v?p>>3:v,_+=v,h-=v,p-=v<<3,s.bitb=u,s.bitk=p,o.avail_in=_,o.total_in+=h-o.next_in_index,o.next_in_index=h,s.write=m,b);if(d+=l[A+2],d+=u&y[f],A=3*(c+d),0===(f=l[A])){u>>=l[A+1],p-=l[A+1],s.window[m++]=l[A+2],x--;break}}else u>>=l[A+1],p-=l[A+1],s.window[m++]=l[A+2],x--}while(x>=258&&_>=10);return v=o.avail_in-_,v=p>>3<v?p>>3:v,_+=v,h-=v,p-=v<<3,s.bitb=u,s.bitk=p,o.avail_in=_,o.total_in+=h-o.next_in_index,o.next_in_index=h,s.write=m,0}e.init=function(e,a,s,o,d,l){t=0,f=e,u=a,i=s,p=o,r=d,h=l,n=null},e.proc=function(e,m,x){let w,v,k,z,A,E,U,R=0,D=0,S=0;for(S=m.next_in_index,z=m.avail_in,R=e.bitb,D=e.bitk,A=e.write,E=A<e.read?e.read-A-1:e.end-A;;)switch(t){case 0:if(E>=258&&z>=10&&(e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,x=_(f,u,i,p,r,h,e,m),S=m.next_in_index,z=m.avail_in,R=e.bitb,D=e.bitk,A=e.write,E=A<e.read?e.read-A-1:e.end-A,0!=x)){t=1==x?7:9;break}o=f,n=i,s=p,t=1;case 1:for(w=o;D<w;){if(0===z)return e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);x=0,z--,R|=(255&m.read_byte(S++))<<D,D+=8}if(v=3*(s+(R&y[w])),R>>>=n[v+1],D-=n[v+1],k=n[v],0===k){d=n[v+2],t=6;break}if(0!=(16&k)){l=15&k,a=n[v+2],t=2;break}if(0==(64&k)){o=k,s=v/3+n[v+2];break}if(0!=(32&k)){t=7;break}return t=9,m.msg="invalid literal/length code",x=b,e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);case 2:for(w=l;D<w;){if(0===z)return e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);x=0,z--,R|=(255&m.read_byte(S++))<<D,D+=8}a+=R&y[w],R>>=w,D-=w,o=u,n=r,s=h,t=3;case 3:for(w=o;D<w;){if(0===z)return e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);x=0,z--,R|=(255&m.read_byte(S++))<<D,D+=8}if(v=3*(s+(R&y[w])),R>>=n[v+1],D-=n[v+1],k=n[v],0!=(16&k)){l=15&k,c=n[v+2],t=4;break}if(0==(64&k)){o=k,s=v/3+n[v+2];break}return t=9,m.msg="invalid distance code",x=b,e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);case 4:for(w=l;D<w;){if(0===z)return e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);x=0,z--,R|=(255&m.read_byte(S++))<<D,D+=8}c+=R&y[w],R>>=w,D-=w,t=5;case 5:for(U=A-c;U<0;)U+=e.end;for(;0!==a;){if(0===E&&(A==e.end&&0!==e.read&&(A=0,E=A<e.read?e.read-A-1:e.end-A),0===E&&(e.write=A,x=e.inflate_flush(m,x),A=e.write,E=A<e.read?e.read-A-1:e.end-A,A==e.end&&0!==e.read&&(A=0,E=A<e.read?e.read-A-1:e.end-A),0===E)))return e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);e.window[A++]=e.window[U++],E--,U==e.end&&(U=0),a--}t=0;break;case 6:if(0===E&&(A==e.end&&0!==e.read&&(A=0,E=A<e.read?e.read-A-1:e.end-A),0===E&&(e.write=A,x=e.inflate_flush(m,x),A=e.write,E=A<e.read?e.read-A-1:e.end-A,A==e.end&&0!==e.read&&(A=0,E=A<e.read?e.read-A-1:e.end-A),0===E)))return e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);x=0,e.window[A++]=d,E--,t=0;break;case 7:if(D>7&&(D-=8,z++,S--),e.write=A,x=e.inflate_flush(m,x),A=e.write,E=A<e.read?e.read-A-1:e.end-A,e.read!=e.write)return e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);t=8;case 8:return x=1,e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);case 9:return x=b,e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x);default:return x=g,e.bitb=R,e.bitk=D,m.avail_in=z,m.total_in+=S-m.next_in_index,m.next_in_index=S,e.write=A,e.inflate_flush(m,x)}},e.free=function(){}}const I=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function F(e,t){const n=this;let i,r=0,a=0,s=0,o=0;const d=[0],l=[0],c=new j;let f=0,u=new Int32Array(4320);const p=new S;n.bitk=0,n.bitb=0,n.window=new Uint8Array(t),n.end=t,n.read=0,n.write=0,n.reset=function(e,t){t&&(t[0]=0),6==r&&c.free(e),r=0,n.bitk=0,n.bitb=0,n.read=n.write=0},n.reset(e,null),n.inflate_flush=function(e,t){let i,r,a;return r=e.next_out_index,a=n.read,i=(a<=n.write?n.write:n.end)-a,i>e.avail_out&&(i=e.avail_out),0!==i&&t==v&&(t=0),e.avail_out-=i,e.total_out+=i,e.next_out.set(n.window.subarray(a,a+i),r),r+=i,a+=i,a==n.end&&(a=0,n.write==n.end&&(n.write=0),i=n.write-a,i>e.avail_out&&(i=e.avail_out),0!==i&&t==v&&(t=0),e.avail_out-=i,e.total_out+=i,e.next_out.set(n.window.subarray(a,a+i),r),r+=i,a+=i),e.next_out_index=r,n.read=a,t},n.proc=function(e,t){let h,_,m,x,w,v,k,z;for(x=e.next_in_index,w=e.avail_in,_=n.bitb,m=n.bitk,v=n.write,k=v<n.read?n.read-v-1:n.end-v;;){let A,E,U,R,D,j,F,C;switch(r){case 0:for(;m<3;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}switch(h=7&_,f=1&h,h>>>1){case 0:_>>>=3,m-=3,h=7&m,_>>>=h,m-=h,r=1;break;case 1:A=[],E=[],U=[[]],R=[[]],S.inflate_trees_fixed(A,E,U,R),c.init(A[0],E[0],U[0],0,R[0],0),_>>>=3,m-=3,r=6;break;case 2:_>>>=3,m-=3,r=3;break;case 3:return _>>>=3,m-=3,r=9,e.msg="invalid block type",t=b,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t)}break;case 1:for(;m<32;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}if((~_>>>16&65535)!=(65535&_))return r=9,e.msg="invalid stored block lengths",t=b,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);a=65535&_,_=m=0,r=0!==a?2:0!==f?7:0;break;case 2:if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);if(0===k&&(v==n.end&&0!==n.read&&(v=0,k=v<n.read?n.read-v-1:n.end-v),0===k&&(n.write=v,t=n.inflate_flush(e,t),v=n.write,k=v<n.read?n.read-v-1:n.end-v,v==n.end&&0!==n.read&&(v=0,k=v<n.read?n.read-v-1:n.end-v),0===k)))return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);if(t=0,h=a,h>w&&(h=w),h>k&&(h=k),n.window.set(e.read_buf(x,h),v),x+=h,w-=h,v+=h,k-=h,0!=(a-=h))break;r=0!==f?7:0;break;case 3:for(;m<14;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}if(s=h=16383&_,(31&h)>29||(h>>5&31)>29)return r=9,e.msg="too many length or distance symbols",t=b,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);if(h=258+(31&h)+(h>>5&31),!i||i.length<h)i=[];else for(z=0;z<h;z++)i[z]=0;_>>>=14,m-=14,o=0,r=4;case 4:for(;o<4+(s>>>10);){for(;m<3;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}i[I[o++]]=7&_,_>>>=3,m-=3}for(;o<19;)i[I[o++]]=0;if(d[0]=7,h=p.inflate_trees_bits(i,d,l,u,e),0!=h)return(t=h)==b&&(i=null,r=9),n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);o=0,r=5;case 5:for(;h=s,!(o>=258+(31&h)+(h>>5&31));){let a,c;for(h=d[0];m<h;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}if(h=u[3*(l[0]+(_&y[h]))+1],c=u[3*(l[0]+(_&y[h]))+2],c<16)_>>>=h,m-=h,i[o++]=c;else{for(z=18==c?7:c-14,a=18==c?11:3;m<h+z;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}if(_>>>=h,m-=h,a+=_&y[z],_>>>=z,m-=z,z=o,h=s,z+a>258+(31&h)+(h>>5&31)||16==c&&z<1)return i=null,r=9,e.msg="invalid bit length repeat",t=b,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);c=16==c?i[z-1]:0;do{i[z++]=c}while(0!=--a);o=z}}if(l[0]=-1,D=[],j=[],F=[],C=[],D[0]=9,j[0]=6,h=s,h=p.inflate_trees_dynamic(257+(31&h),1+(h>>5&31),i,D,j,F,C,u,e),0!=h)return h==b&&(i=null,r=9),t=h,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);c.init(D[0],j[0],u,F[0],u,C[0]),r=6;case 6:if(n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,1!=(t=c.proc(n,e,t)))return n.inflate_flush(e,t);if(t=0,c.free(e),x=e.next_in_index,w=e.avail_in,_=n.bitb,m=n.bitk,v=n.write,k=v<n.read?n.read-v-1:n.end-v,0===f){r=0;break}r=7;case 7:if(n.write=v,t=n.inflate_flush(e,t),v=n.write,k=v<n.read?n.read-v-1:n.end-v,n.read!=n.write)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);r=8;case 8:return t=1,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);case 9:return t=b,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t);default:return t=g,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=v,n.inflate_flush(e,t)}}},n.free=function(e){n.reset(e,null),n.window=null,u=null},n.set_dictionary=function(e,t,i){n.window.set(e.subarray(t,t+i),0),n.read=n.write=i},n.sync_point=function(){return 1==r?1:0}}const C=13,B=[0,0,255,255];function O(){const e=this;function t(e){return e&&e.istate?(e.total_in=e.total_out=0,e.msg=null,e.istate.mode=7,e.istate.blocks.reset(e,null),0):g}e.mode=0,e.method=0,e.was=[0],e.need=0,e.marker=0,e.wbits=0,e.inflateEnd=function(t){return e.blocks&&e.blocks.free(t),e.blocks=null,0},e.inflateInit=function(n,i){return n.msg=null,e.blocks=null,i<8||i>15?(e.inflateEnd(n),g):(e.wbits=i,n.istate.blocks=new F(n,1<<i),t(n),0)},e.inflate=function(e,t){let n,i;if(!e||!e.istate||!e.next_in)return g;const r=e.istate;for(t=4==t?v:0,n=v;;)switch(r.mode){case 0:if(0===e.avail_in)return n;if(n=t,e.avail_in--,e.total_in++,8!=(15&(r.method=e.read_byte(e.next_in_index++)))){r.mode=C,e.msg="unknown compression method",r.marker=5;break}if(8+(r.method>>4)>r.wbits){r.mode=C,e.msg="invalid window size",r.marker=5;break}r.mode=1;case 1:if(0===e.avail_in)return n;if(n=t,e.avail_in--,e.total_in++,i=255&e.read_byte(e.next_in_index++),((r.method<<8)+i)%31!=0){r.mode=C,e.msg="incorrect header check",r.marker=5;break}if(0==(32&i)){r.mode=7;break}r.mode=2;case 2:if(0===e.avail_in)return n;n=t,e.avail_in--,e.total_in++,r.need=(255&e.read_byte(e.next_in_index++))<<24&4278190080,r.mode=3;case 3:if(0===e.avail_in)return n;n=t,e.avail_in--,e.total_in++,r.need+=(255&e.read_byte(e.next_in_index++))<<16&16711680,r.mode=4;case 4:if(0===e.avail_in)return n;n=t,e.avail_in--,e.total_in++,r.need+=(255&e.read_byte(e.next_in_index++))<<8&65280,r.mode=5;case 5:return 0===e.avail_in?n:(n=t,e.avail_in--,e.total_in++,r.need+=255&e.read_byte(e.next_in_index++),r.mode=6,2);case 6:return r.mode=C,e.msg="need dictionary",r.marker=0,g;case 7:if(n=r.blocks.proc(e,n),n==b){r.mode=C,r.marker=0;break}if(0==n&&(n=t),1!=n)return n;n=t,r.blocks.reset(e,r.was),r.mode=12;case 12:return 1;case C:return b;default:return g}},e.inflateSetDictionary=function(e,t,n){let i=0,r=n;if(!e||!e.istate||6!=e.istate.mode)return g;const a=e.istate;return r>=1<<a.wbits&&(r=(1<<a.wbits)-1,i=n-r),a.blocks.set_dictionary(t,i,r),a.mode=7,0},e.inflateSync=function(e){let n,i,r,a,s;if(!e||!e.istate)return g;const o=e.istate;if(o.mode!=C&&(o.mode=C,o.marker=0),0===(n=e.avail_in))return v;for(i=e.next_in_index,r=o.marker;0!==n&&r<4;)e.read_byte(i)==B[r]?r++:r=0!==e.read_byte(i)?0:4-r,i++,n--;return e.total_in+=i-e.next_in_index,e.next_in_index=i,e.avail_in=n,o.marker=r,4!=r?b:(a=e.total_in,s=e.total_out,t(e),e.total_in=a,e.total_out=s,o.mode=7,0)},e.inflateSyncPoint=function(e){return e&&e.istate&&e.istate.blocks?e.istate.blocks.sync_point():g}}function T(){}T.prototype={inflateInit:function(e){const t=this;return t.istate=new O,e||(e=15),t.istate.inflateInit(t,e)},inflate:function(e){const t=this;return t.istate?t.istate.inflate(t,e):g},inflateEnd:function(){const e=this;if(!e.istate)return g;const t=e.istate.inflateEnd(e);return e.istate=null,t},inflateSync:function(){const e=this;return e.istate?e.istate.inflateSync(e):g},inflateSetDictionary:function(e,t){const n=this;return n.istate?n.istate.inflateSetDictionary(n,e,t):g},read_byte:function(e){return this.next_in.subarray(e,e+1)[0]},read_buf:function(e,t){return this.next_in.subarray(e,e+t)}};const M={chunkSize:524288,maxWorkers:"undefined"!=typeof navigator&&navigator.hardwareConcurrency||2,useWebWorkers:!0,workerScripts:void 0},W=Object.assign({},M);function q(){return W}function H(e){if(void 0!==e.chunkSize&&(W.chunkSize=e.chunkSize),void 0!==e.maxWorkers&&(W.maxWorkers=e.maxWorkers),void 0!==e.useWebWorkers&&(W.useWebWorkers=e.useWebWorkers),void 0!==e.Deflate&&(W.Deflate=e.Deflate),void 0!==e.Inflate&&(W.Inflate=e.Inflate),void 0!==e.workerScripts){if(e.workerScripts.deflate){if(!Array.isArray(e.workerScripts.deflate))throw new Error("workerScripts.deflate must be an array");W.workerScripts||(W.workerScripts={}),W.workerScripts.deflate=e.workerScripts.deflate}if(e.workerScripts.inflate){if(!Array.isArray(e.workerScripts.inflate))throw new Error("workerScripts.inflate must be an array");W.workerScripts||(W.workerScripts={}),W.workerScripts.inflate=e.workerScripts.inflate}}}const P={application:{"andrew-inset":"ez",annodex:"anx","atom+xml":"atom","atomcat+xml":"atomcat","atomserv+xml":"atomsrv",bbolin:"lin",cap:["cap","pcap"],"cu-seeme":"cu","davmount+xml":"davmount",dsptype:"tsp",ecmascript:["es","ecma"],futuresplash:"spl",hta:"hta","java-archive":"jar","java-serialized-object":"ser","java-vm":"class",javascript:"js",m3g:"m3g","mac-binhex40":"hqx",mathematica:["nb","ma","mb"],msaccess:"mdb",msword:["doc","dot"],mxf:"mxf",oda:"oda",ogg:"ogx",pdf:"pdf","pgp-keys":"key","pgp-signature":["asc","sig"],"pics-rules":"prf",postscript:["ps","ai","eps","epsi","epsf","eps2","eps3"],rar:"rar","rdf+xml":"rdf","rss+xml":"rss",rtf:"rtf",smil:["smi","smil"],"xhtml+xml":["xhtml","xht"],xml:["xml","xsl","xsd"],"xspf+xml":"xspf",zip:"zip","vnd.android.package-archive":"apk","vnd.cinderella":"cdy","vnd.google-earth.kml+xml":"kml","vnd.google-earth.kmz":"kmz","vnd.mozilla.xul+xml":"xul","vnd.ms-excel":["xls","xlb","xlt","xlm","xla","xlc","xlw"],"vnd.ms-pki.seccat":"cat","vnd.ms-pki.stl":"stl","vnd.ms-powerpoint":["ppt","pps","pot"],"vnd.oasis.opendocument.chart":"odc","vnd.oasis.opendocument.database":"odb","vnd.oasis.opendocument.formula":"odf","vnd.oasis.opendocument.graphics":"odg","vnd.oasis.opendocument.graphics-template":"otg","vnd.oasis.opendocument.image":"odi","vnd.oasis.opendocument.presentation":"odp","vnd.oasis.opendocument.presentation-template":"otp","vnd.oasis.opendocument.spreadsheet":"ods","vnd.oasis.opendocument.spreadsheet-template":"ots","vnd.oasis.opendocument.text":"odt","vnd.oasis.opendocument.text-master":"odm","vnd.oasis.opendocument.text-template":"ott","vnd.oasis.opendocument.text-web":"oth","vnd.openxmlformats-officedocument.spreadsheetml.sheet":"xlsx","vnd.openxmlformats-officedocument.spreadsheetml.template":"xltx","vnd.openxmlformats-officedocument.presentationml.presentation":"pptx","vnd.openxmlformats-officedocument.presentationml.slideshow":"ppsx","vnd.openxmlformats-officedocument.presentationml.template":"potx","vnd.openxmlformats-officedocument.wordprocessingml.document":"docx","vnd.openxmlformats-officedocument.wordprocessingml.template":"dotx","vnd.smaf":"mmf","vnd.stardivision.calc":"sdc","vnd.stardivision.chart":"sds","vnd.stardivision.draw":"sda","vnd.stardivision.impress":"sdd","vnd.stardivision.math":["sdf","smf"],"vnd.stardivision.writer":["sdw","vor"],"vnd.stardivision.writer-global":"sgl","vnd.sun.xml.calc":"sxc","vnd.sun.xml.calc.template":"stc","vnd.sun.xml.draw":"sxd","vnd.sun.xml.draw.template":"std","vnd.sun.xml.impress":"sxi","vnd.sun.xml.impress.template":"sti","vnd.sun.xml.math":"sxm","vnd.sun.xml.writer":"sxw","vnd.sun.xml.writer.global":"sxg","vnd.sun.xml.writer.template":"stw","vnd.symbian.install":["sis","sisx"],"vnd.visio":["vsd","vst","vss","vsw"],"vnd.wap.wbxml":"wbxml","vnd.wap.wmlc":"wmlc","vnd.wap.wmlscriptc":"wmlsc","vnd.wordperfect":"wpd","vnd.wordperfect5.1":"wp5","x-123":"wk","x-7z-compressed":"7z","x-abiword":"abw","x-apple-diskimage":"dmg","x-bcpio":"bcpio","x-bittorrent":"torrent","x-cbr":["cbr","cba","cbt","cb7"],"x-cbz":"cbz","x-cdf":["cdf","cda"],"x-cdlink":"vcd","x-chess-pgn":"pgn","x-cpio":"cpio","x-csh":"csh","x-debian-package":["deb","udeb"],"x-director":["dcr","dir","dxr","cst","cct","cxt","w3d","fgd","swa"],"x-dms":"dms","x-doom":"wad","x-dvi":"dvi","x-httpd-eruby":"rhtml","x-font":"pcf.Z","x-freemind":"mm","x-gnumeric":"gnumeric","x-go-sgf":"sgf","x-graphing-calculator":"gcf","x-gtar":["gtar","taz"],"x-hdf":"hdf","x-httpd-php":["phtml","pht","php"],"x-httpd-php-source":"phps","x-httpd-php3":"php3","x-httpd-php3-preprocessed":"php3p","x-httpd-php4":"php4","x-httpd-php5":"php5","x-ica":"ica","x-info":"info","x-internet-signup":["ins","isp"],"x-iphone":"iii","x-iso9660-image":"iso","x-java-jnlp-file":"jnlp","x-jmol":"jmz","x-killustrator":"kil","x-koan":["skp","skd","skt","skm"],"x-kpresenter":["kpr","kpt"],"x-kword":["kwd","kwt"],"x-latex":"latex","x-lha":"lha","x-lyx":"lyx","x-lzh":"lzh","x-lzx":"lzx","x-maker":["frm","maker","frame","fm","fb","book","fbdoc"],"x-ms-wmd":"wmd","x-ms-wmz":"wmz","x-msdos-program":["com","exe","bat","dll"],"x-msi":"msi","x-netcdf":["nc","cdf"],"x-ns-proxy-autoconfig":["pac","dat"],"x-nwc":"nwc","x-object":"o","x-oz-application":"oza","x-pkcs7-certreqresp":"p7r","x-python-code":["pyc","pyo"],"x-qgis":["qgs","shp","shx"],"x-quicktimeplayer":"qtl","x-redhat-package-manager":"rpm","x-ruby":"rb","x-sh":"sh","x-shar":"shar","x-shockwave-flash":["swf","swfl"],"x-silverlight":"scr","x-stuffit":"sit","x-sv4cpio":"sv4cpio","x-sv4crc":"sv4crc","x-tar":"tar","x-tcl":"tcl","x-tex-gf":"gf","x-tex-pk":"pk","x-texinfo":["texinfo","texi"],"x-trash":["~","%","bak","old","sik"],"x-troff":["t","tr","roff"],"x-troff-man":"man","x-troff-me":"me","x-troff-ms":"ms","x-ustar":"ustar","x-wais-source":"src","x-wingz":"wz","x-x509-ca-cert":["crt","der","cer"],"x-xcf":"xcf","x-xfig":"fig","x-xpinstall":"xpi",applixware:"aw","atomsvc+xml":"atomsvc","ccxml+xml":"ccxml","cdmi-capability":"cdmia","cdmi-container":"cdmic","cdmi-domain":"cdmid","cdmi-object":"cdmio","cdmi-queue":"cdmiq","docbook+xml":"dbk","dssc+der":"dssc","dssc+xml":"xdssc","emma+xml":"emma","epub+zip":"epub",exi:"exi","font-tdpfr":"pfr","gml+xml":"gml","gpx+xml":"gpx",gxf:"gxf",hyperstudio:"stk","inkml+xml":["ink","inkml"],ipfix:"ipfix",json:"json","jsonml+json":"jsonml","lost+xml":"lostxml","mads+xml":"mads",marc:"mrc","marcxml+xml":"mrcx","mathml+xml":"mathml",mbox:"mbox","mediaservercontrol+xml":"mscml","metalink+xml":"metalink","metalink4+xml":"meta4","mets+xml":"mets","mods+xml":"mods",mp21:["m21","mp21"],mp4:"mp4s","oebps-package+xml":"opf","omdoc+xml":"omdoc",onenote:["onetoc","onetoc2","onetmp","onepkg"],oxps:"oxps","patch-ops-error+xml":"xer","pgp-encrypted":"pgp",pkcs10:"p10","pkcs7-mime":["p7m","p7c"],"pkcs7-signature":"p7s",pkcs8:"p8","pkix-attr-cert":"ac","pkix-crl":"crl","pkix-pkipath":"pkipath",pkixcmp:"pki","pls+xml":"pls","prs.cww":"cww","pskc+xml":"pskcxml","reginfo+xml":"rif","relax-ng-compact-syntax":"rnc","resource-lists+xml":"rl","resource-lists-diff+xml":"rld","rls-services+xml":"rs","rpki-ghostbusters":"gbr","rpki-manifest":"mft","rpki-roa":"roa","rsd+xml":"rsd","sbml+xml":"sbml","scvp-cv-request":"scq","scvp-cv-response":"scs","scvp-vp-request":"spq","scvp-vp-response":"spp",sdp:"sdp","set-payment-initiation":"setpay","set-registration-initiation":"setreg","shf+xml":"shf","sparql-query":"rq","sparql-results+xml":"srx",srgs:"gram","srgs+xml":"grxml","sru+xml":"sru","ssdl+xml":"ssdl","ssml+xml":"ssml","tei+xml":["tei","teicorpus"],"thraud+xml":"tfi","timestamped-data":"tsd","vnd.3gpp.pic-bw-large":"plb","vnd.3gpp.pic-bw-small":"psb","vnd.3gpp.pic-bw-var":"pvb","vnd.3gpp2.tcap":"tcap","vnd.3m.post-it-notes":"pwn","vnd.accpac.simply.aso":"aso","vnd.accpac.simply.imp":"imp","vnd.acucobol":"acu","vnd.acucorp":["atc","acutc"],"vnd.adobe.air-application-installer-package+zip":"air","vnd.adobe.formscentral.fcdt":"fcdt","vnd.adobe.fxp":["fxp","fxpl"],"vnd.adobe.xdp+xml":"xdp","vnd.adobe.xfdf":"xfdf","vnd.ahead.space":"ahead","vnd.airzip.filesecure.azf":"azf","vnd.airzip.filesecure.azs":"azs","vnd.amazon.ebook":"azw","vnd.americandynamics.acc":"acc","vnd.amiga.ami":"ami","vnd.anser-web-certificate-issue-initiation":"cii","vnd.anser-web-funds-transfer-initiation":"fti","vnd.antix.game-component":"atx","vnd.apple.installer+xml":"mpkg","vnd.apple.mpegurl":"m3u8","vnd.aristanetworks.swi":"swi","vnd.astraea-software.iota":"iota","vnd.audiograph":"aep","vnd.blueice.multipass":"mpm","vnd.bmi":"bmi","vnd.businessobjects":"rep","vnd.chemdraw+xml":"cdxml","vnd.chipnuts.karaoke-mmd":"mmd","vnd.claymore":"cla","vnd.cloanto.rp9":"rp9","vnd.clonk.c4group":["c4g","c4d","c4f","c4p","c4u"],"vnd.cluetrust.cartomobile-config":"c11amc","vnd.cluetrust.cartomobile-config-pkg":"c11amz","vnd.commonspace":"csp","vnd.contact.cmsg":"cdbcmsg","vnd.cosmocaller":"cmc","vnd.crick.clicker":"clkx","vnd.crick.clicker.keyboard":"clkk","vnd.crick.clicker.palette":"clkp","vnd.crick.clicker.template":"clkt","vnd.crick.clicker.wordbank":"clkw","vnd.criticaltools.wbs+xml":"wbs","vnd.ctc-posml":"pml","vnd.cups-ppd":"ppd","vnd.curl.car":"car","vnd.curl.pcurl":"pcurl","vnd.dart":"dart","vnd.data-vision.rdz":"rdz","vnd.dece.data":["uvf","uvvf","uvd","uvvd"],"vnd.dece.ttml+xml":["uvt","uvvt"],"vnd.dece.unspecified":["uvx","uvvx"],"vnd.dece.zip":["uvz","uvvz"],"vnd.denovo.fcselayout-link":"fe_launch","vnd.dna":"dna","vnd.dolby.mlp":"mlp","vnd.dpgraph":"dpg","vnd.dreamfactory":"dfac","vnd.ds-keypoint":"kpxx","vnd.dvb.ait":"ait","vnd.dvb.service":"svc","vnd.dynageo":"geo","vnd.ecowin.chart":"mag","vnd.enliven":"nml","vnd.epson.esf":"esf","vnd.epson.msf":"msf","vnd.epson.quickanime":"qam","vnd.epson.salt":"slt","vnd.epson.ssf":"ssf","vnd.eszigno3+xml":["es3","et3"],"vnd.ezpix-album":"ez2","vnd.ezpix-package":"ez3","vnd.fdf":"fdf","vnd.fdsn.mseed":"mseed","vnd.fdsn.seed":["seed","dataless"],"vnd.flographit":"gph","vnd.fluxtime.clip":"ftc","vnd.framemaker":["fm","frame","maker","book"],"vnd.frogans.fnc":"fnc","vnd.frogans.ltf":"ltf","vnd.fsc.weblaunch":"fsc","vnd.fujitsu.oasys":"oas","vnd.fujitsu.oasys2":"oa2","vnd.fujitsu.oasys3":"oa3","vnd.fujitsu.oasysgp":"fg5","vnd.fujitsu.oasysprs":"bh2","vnd.fujixerox.ddd":"ddd","vnd.fujixerox.docuworks":"xdw","vnd.fujixerox.docuworks.binder":"xbd","vnd.fuzzysheet":"fzs","vnd.genomatix.tuxedo":"txd","vnd.geogebra.file":"ggb","vnd.geogebra.tool":"ggt","vnd.geometry-explorer":["gex","gre"],"vnd.geonext":"gxt","vnd.geoplan":"g2w","vnd.geospace":"g3w","vnd.gmx":"gmx","vnd.grafeq":["gqf","gqs"],"vnd.groove-account":"gac","vnd.groove-help":"ghf","vnd.groove-identity-message":"gim","vnd.groove-injector":"grv","vnd.groove-tool-message":"gtm","vnd.groove-tool-template":"tpl","vnd.groove-vcard":"vcg","vnd.hal+xml":"hal","vnd.handheld-entertainment+xml":"zmm","vnd.hbci":"hbci","vnd.hhe.lesson-player":"les","vnd.hp-hpgl":"hpgl","vnd.hp-hpid":"hpid","vnd.hp-hps":"hps","vnd.hp-jlyt":"jlt","vnd.hp-pcl":"pcl","vnd.hp-pclxl":"pclxl","vnd.hydrostatix.sof-data":"sfd-hdstx","vnd.ibm.minipay":"mpy","vnd.ibm.modcap":["afp","listafp","list3820"],"vnd.ibm.rights-management":"irm","vnd.ibm.secure-container":"sc","vnd.iccprofile":["icc","icm"],"vnd.igloader":"igl","vnd.immervision-ivp":"ivp","vnd.immervision-ivu":"ivu","vnd.insors.igm":"igm","vnd.intercon.formnet":["xpw","xpx"],"vnd.intergeo":"i2g","vnd.intu.qbo":"qbo","vnd.intu.qfx":"qfx","vnd.ipunplugged.rcprofile":"rcprofile","vnd.irepository.package+xml":"irp","vnd.is-xpr":"xpr","vnd.isac.fcs":"fcs","vnd.jam":"jam","vnd.jcp.javame.midlet-rms":"rms","vnd.jisp":"jisp","vnd.joost.joda-archive":"joda","vnd.kahootz":["ktz","ktr"],"vnd.kde.karbon":"karbon","vnd.kde.kchart":"chrt","vnd.kde.kformula":"kfo","vnd.kde.kivio":"flw","vnd.kde.kontour":"kon","vnd.kde.kpresenter":["kpr","kpt"],"vnd.kde.kspread":"ksp","vnd.kde.kword":["kwd","kwt"],"vnd.kenameaapp":"htke","vnd.kidspiration":"kia","vnd.kinar":["kne","knp"],"vnd.koan":["skp","skd","skt","skm"],"vnd.kodak-descriptor":"sse","vnd.las.las+xml":"lasxml","vnd.llamagraphics.life-balance.desktop":"lbd","vnd.llamagraphics.life-balance.exchange+xml":"lbe","vnd.lotus-1-2-3":"123","vnd.lotus-approach":"apr","vnd.lotus-freelance":"pre","vnd.lotus-notes":"nsf","vnd.lotus-organizer":"org","vnd.lotus-screencam":"scm","vnd.lotus-wordpro":"lwp","vnd.macports.portpkg":"portpkg","vnd.mcd":"mcd","vnd.medcalcdata":"mc1","vnd.mediastation.cdkey":"cdkey","vnd.mfer":"mwf","vnd.mfmp":"mfm","vnd.micrografx.flo":"flo","vnd.micrografx.igx":"igx","vnd.mif":"mif","vnd.mobius.daf":"daf","vnd.mobius.dis":"dis","vnd.mobius.mbk":"mbk","vnd.mobius.mqy":"mqy","vnd.mobius.msl":"msl","vnd.mobius.plc":"plc","vnd.mobius.txf":"txf","vnd.mophun.application":"mpn","vnd.mophun.certificate":"mpc","vnd.ms-artgalry":"cil","vnd.ms-cab-compressed":"cab","vnd.ms-excel.addin.macroenabled.12":"xlam","vnd.ms-excel.sheet.binary.macroenabled.12":"xlsb","vnd.ms-excel.sheet.macroenabled.12":"xlsm","vnd.ms-excel.template.macroenabled.12":"xltm","vnd.ms-fontobject":"eot","vnd.ms-htmlhelp":"chm","vnd.ms-ims":"ims","vnd.ms-lrm":"lrm","vnd.ms-officetheme":"thmx","vnd.ms-powerpoint.addin.macroenabled.12":"ppam","vnd.ms-powerpoint.presentation.macroenabled.12":"pptm","vnd.ms-powerpoint.slide.macroenabled.12":"sldm","vnd.ms-powerpoint.slideshow.macroenabled.12":"ppsm","vnd.ms-powerpoint.template.macroenabled.12":"potm","vnd.ms-project":["mpp","mpt"],"vnd.ms-word.document.macroenabled.12":"docm","vnd.ms-word.template.macroenabled.12":"dotm","vnd.ms-works":["wps","wks","wcm","wdb"],"vnd.ms-wpl":"wpl","vnd.ms-xpsdocument":"xps","vnd.mseq":"mseq","vnd.musician":"mus","vnd.muvee.style":"msty","vnd.mynfc":"taglet","vnd.neurolanguage.nlu":"nlu","vnd.nitf":["ntf","nitf"],"vnd.noblenet-directory":"nnd","vnd.noblenet-sealer":"nns","vnd.noblenet-web":"nnw","vnd.nokia.n-gage.data":"ngdat","vnd.nokia.n-gage.symbian.install":"n-gage","vnd.nokia.radio-preset":"rpst","vnd.nokia.radio-presets":"rpss","vnd.novadigm.edm":"edm","vnd.novadigm.edx":"edx","vnd.novadigm.ext":"ext","vnd.oasis.opendocument.chart-template":"otc","vnd.oasis.opendocument.formula-template":"odft","vnd.oasis.opendocument.image-template":"oti","vnd.olpc-sugar":"xo","vnd.oma.dd2+xml":"dd2","vnd.openofficeorg.extension":"oxt","vnd.openxmlformats-officedocument.presentationml.slide":"sldx","vnd.osgeo.mapguide.package":"mgp","vnd.osgi.dp":"dp","vnd.osgi.subsystem":"esa","vnd.palm":["pdb","pqa","oprc"],"vnd.pawaafile":"paw","vnd.pg.format":"str","vnd.pg.osasli":"ei6","vnd.picsel":"efif","vnd.pmi.widget":"wg","vnd.pocketlearn":"plf","vnd.powerbuilder6":"pbd","vnd.previewsystems.box":"box","vnd.proteus.magazine":"mgz","vnd.publishare-delta-tree":"qps","vnd.pvi.ptid1":"ptid","vnd.quark.quarkxpress":["qxd","qxt","qwd","qwt","qxl","qxb"],"vnd.realvnc.bed":"bed","vnd.recordare.musicxml":"mxl","vnd.recordare.musicxml+xml":"musicxml","vnd.rig.cryptonote":"cryptonote","vnd.rn-realmedia":"rm","vnd.rn-realmedia-vbr":"rmvb","vnd.route66.link66+xml":"link66","vnd.sailingtracker.track":"st","vnd.seemail":"see","vnd.sema":"sema","vnd.semd":"semd","vnd.semf":"semf","vnd.shana.informed.formdata":"ifm","vnd.shana.informed.formtemplate":"itp","vnd.shana.informed.interchange":"iif","vnd.shana.informed.package":"ipk","vnd.simtech-mindmapper":["twd","twds"],"vnd.smart.teacher":"teacher","vnd.solent.sdkm+xml":["sdkm","sdkd"],"vnd.spotfire.dxp":"dxp","vnd.spotfire.sfs":"sfs","vnd.stepmania.package":"smzip","vnd.stepmania.stepchart":"sm","vnd.sus-calendar":["sus","susp"],"vnd.svd":"svd","vnd.syncml+xml":"xsm","vnd.syncml.dm+wbxml":"bdm","vnd.syncml.dm+xml":"xdm","vnd.tao.intent-module-archive":"tao","vnd.tcpdump.pcap":["pcap","cap","dmp"],"vnd.tmobile-livetv":"tmo","vnd.trid.tpt":"tpt","vnd.triscape.mxs":"mxs","vnd.trueapp":"tra","vnd.ufdl":["ufd","ufdl"],"vnd.uiq.theme":"utz","vnd.umajin":"umj","vnd.unity":"unityweb","vnd.uoml+xml":"uoml","vnd.vcx":"vcx","vnd.visionary":"vis","vnd.vsf":"vsf","vnd.webturbo":"wtb","vnd.wolfram.player":"nbp","vnd.wqd":"wqd","vnd.wt.stf":"stf","vnd.xara":"xar","vnd.xfdl":"xfdl","vnd.yamaha.hv-dic":"hvd","vnd.yamaha.hv-script":"hvs","vnd.yamaha.hv-voice":"hvp","vnd.yamaha.openscoreformat":"osf","vnd.yamaha.openscoreformat.osfpvg+xml":"osfpvg","vnd.yamaha.smaf-audio":"saf","vnd.yamaha.smaf-phrase":"spf","vnd.yellowriver-custom-menu":"cmp","vnd.zul":["zir","zirz"],"vnd.zzazz.deck+xml":"zaz","voicexml+xml":"vxml",widget:"wgt",winhlp:"hlp","wsdl+xml":"wsdl","wspolicy+xml":"wspolicy","x-ace-compressed":"ace","x-authorware-bin":["aab","x32","u32","vox"],"x-authorware-map":"aam","x-authorware-seg":"aas","x-blorb":["blb","blorb"],"x-bzip":"bz","x-bzip2":["bz2","boz"],"x-cfs-compressed":"cfs","x-chat":"chat","x-conference":"nsc","x-dgc-compressed":"dgc","x-dtbncx+xml":"ncx","x-dtbook+xml":"dtb","x-dtbresource+xml":"res","x-eva":"eva","x-font-bdf":"bdf","x-font-ghostscript":"gsf","x-font-linux-psf":"psf","x-font-otf":"otf","x-font-pcf":"pcf","x-font-snf":"snf","x-font-ttf":["ttf","ttc"],"x-font-type1":["pfa","pfb","pfm","afm"],"x-font-woff":"woff","x-freearc":"arc","x-gca-compressed":"gca","x-glulx":"ulx","x-gramps-xml":"gramps","x-install-instructions":"install","x-lzh-compressed":["lzh","lha"],"x-mie":"mie","x-mobipocket-ebook":["prc","mobi"],"x-ms-application":"application","x-ms-shortcut":"lnk","x-ms-xbap":"xbap","x-msbinder":"obd","x-mscardfile":"crd","x-msclip":"clp","x-msdownload":["exe","dll","com","bat","msi"],"x-msmediaview":["mvb","m13","m14"],"x-msmetafile":["wmf","wmz","emf","emz"],"x-msmoney":"mny","x-mspublisher":"pub","x-msschedule":"scd","x-msterminal":"trm","x-mswrite":"wri","x-nzb":"nzb","x-pkcs12":["p12","pfx"],"x-pkcs7-certificates":["p7b","spc"],"x-research-info-systems":"ris","x-silverlight-app":"xap","x-sql":"sql","x-stuffitx":"sitx","x-subrip":"srt","x-t3vm-image":"t3","x-tads":"gam","x-tex":"tex","x-tex-tfm":"tfm","x-tgif":"obj","x-xliff+xml":"xlf","x-xz":"xz","x-zmachine":["z1","z2","z3","z4","z5","z6","z7","z8"],"xaml+xml":"xaml","xcap-diff+xml":"xdf","xenc+xml":"xenc","xml-dtd":"dtd","xop+xml":"xop","xproc+xml":"xpl","xslt+xml":"xslt","xv+xml":["mxml","xhvml","xvml","xvm"],yang:"yang","yin+xml":"yin",envoy:"evy",fractals:"fif","internet-property-stream":"acx",olescript:"axs","vnd.ms-outlook":"msg","vnd.ms-pkicertstore":"sst","x-compress":"z","x-compressed":"tgz","x-gzip":"gz","x-perfmon":["pma","pmc","pml","pmr","pmw"],"x-pkcs7-mime":["p7c","p7m"],"ynd.ms-pkipko":"pko"},audio:{amr:"amr","amr-wb":"awb",annodex:"axa",basic:["au","snd"],flac:"flac",midi:["mid","midi","kar","rmi"],mpeg:["mpga","mpega","mp2","mp3","m4a","mp2a","m2a","m3a"],mpegurl:"m3u",ogg:["oga","ogg","spx"],"prs.sid":"sid","x-aiff":["aif","aiff","aifc"],"x-gsm":"gsm","x-ms-wma":"wma","x-ms-wax":"wax","x-pn-realaudio":"ram","x-realaudio":"ra","x-sd2":"sd2","x-wav":"wav",adpcm:"adp",mp4:"mp4a",s3m:"s3m",silk:"sil","vnd.dece.audio":["uva","uvva"],"vnd.digital-winds":"eol","vnd.dra":"dra","vnd.dts":"dts","vnd.dts.hd":"dtshd","vnd.lucent.voice":"lvp","vnd.ms-playready.media.pya":"pya","vnd.nuera.ecelp4800":"ecelp4800","vnd.nuera.ecelp7470":"ecelp7470","vnd.nuera.ecelp9600":"ecelp9600","vnd.rip":"rip",webm:"weba","x-aac":"aac","x-caf":"caf","x-matroska":"mka","x-pn-realaudio-plugin":"rmp",xm:"xm",mid:["mid","rmi"]},chemical:{"x-alchemy":"alc","x-cache":["cac","cache"],"x-cache-csf":"csf","x-cactvs-binary":["cbin","cascii","ctab"],"x-cdx":"cdx","x-chem3d":"c3d","x-cif":"cif","x-cmdf":"cmdf","x-cml":"cml","x-compass":"cpa","x-crossfire":"bsd","x-csml":["csml","csm"],"x-ctx":"ctx","x-cxf":["cxf","cef"],"x-embl-dl-nucleotide":["emb","embl"],"x-gamess-input":["inp","gam","gamin"],"x-gaussian-checkpoint":["fch","fchk"],"x-gaussian-cube":"cub","x-gaussian-input":["gau","gjc","gjf"],"x-gaussian-log":"gal","x-gcg8-sequence":"gcg","x-genbank":"gen","x-hin":"hin","x-isostar":["istr","ist"],"x-jcamp-dx":["jdx","dx"],"x-kinemage":"kin","x-macmolecule":"mcm","x-macromodel-input":["mmd","mmod"],"x-mdl-molfile":"mol","x-mdl-rdfile":"rd","x-mdl-rxnfile":"rxn","x-mdl-sdfile":["sd","sdf"],"x-mdl-tgf":"tgf","x-mmcif":"mcif","x-mol2":"mol2","x-molconn-Z":"b","x-mopac-graph":"gpt","x-mopac-input":["mop","mopcrt","mpc","zmt"],"x-mopac-out":"moo","x-ncbi-asn1":"asn","x-ncbi-asn1-ascii":["prt","ent"],"x-ncbi-asn1-binary":["val","aso"],"x-pdb":["pdb","ent"],"x-rosdal":"ros","x-swissprot":"sw","x-vamas-iso14976":"vms","x-vmd":"vmd","x-xtel":"xtel","x-xyz":"xyz"},image:{gif:"gif",ief:"ief",jpeg:["jpeg","jpg","jpe"],pcx:"pcx",png:"png","svg+xml":["svg","svgz"],tiff:["tiff","tif"],"vnd.djvu":["djvu","djv"],"vnd.wap.wbmp":"wbmp","x-canon-cr2":"cr2","x-canon-crw":"crw","x-cmu-raster":"ras","x-coreldraw":"cdr","x-coreldrawpattern":"pat","x-coreldrawtemplate":"cdt","x-corelphotopaint":"cpt","x-epson-erf":"erf","x-icon":"ico","x-jg":"art","x-jng":"jng","x-nikon-nef":"nef","x-olympus-orf":"orf","x-photoshop":"psd","x-portable-anymap":"pnm","x-portable-bitmap":"pbm","x-portable-graymap":"pgm","x-portable-pixmap":"ppm","x-rgb":"rgb","x-xbitmap":"xbm","x-xpixmap":"xpm","x-xwindowdump":"xwd",bmp:"bmp",cgm:"cgm",g3fax:"g3",ktx:"ktx","prs.btif":"btif",sgi:"sgi","vnd.dece.graphic":["uvi","uvvi","uvg","uvvg"],"vnd.dwg":"dwg","vnd.dxf":"dxf","vnd.fastbidsheet":"fbs","vnd.fpx":"fpx","vnd.fst":"fst","vnd.fujixerox.edmics-mmr":"mmr","vnd.fujixerox.edmics-rlc":"rlc","vnd.ms-modi":"mdi","vnd.ms-photo":"wdp","vnd.net-fpx":"npx","vnd.xiff":"xif",webp:"webp","x-3ds":"3ds","x-cmx":"cmx","x-freehand":["fh","fhc","fh4","fh5","fh7"],"x-pict":["pic","pct"],"x-tga":"tga","cis-cod":"cod",pipeg:"jfif"},message:{rfc822:["eml","mime","mht","mhtml","nws"]},model:{iges:["igs","iges"],mesh:["msh","mesh","silo"],vrml:["wrl","vrml"],"x3d+vrml":["x3dv","x3dvz"],"x3d+xml":["x3d","x3dz"],"x3d+binary":["x3db","x3dbz"],"vnd.collada+xml":"dae","vnd.dwf":"dwf","vnd.gdl":"gdl","vnd.gtw":"gtw","vnd.mts":"mts","vnd.vtu":"vtu"},text:{"cache-manifest":["manifest","appcache"],calendar:["ics","icz","ifb"],css:"css",csv:"csv",h323:"323",html:["html","htm","shtml","stm"],iuls:"uls",mathml:"mml",plain:["txt","text","brf","conf","def","list","log","in","bas"],richtext:"rtx",scriptlet:["sct","wsc"],texmacs:["tm","ts"],"tab-separated-values":"tsv","vnd.sun.j2me.app-descriptor":"jad","vnd.wap.wml":"wml","vnd.wap.wmlscript":"wmls","x-bibtex":"bib","x-boo":"boo","x-c++hdr":["h++","hpp","hxx","hh"],"x-c++src":["c++","cpp","cxx","cc"],"x-component":"htc","x-dsrc":"d","x-diff":["diff","patch"],"x-haskell":"hs","x-java":"java","x-literate-haskell":"lhs","x-moc":"moc","x-pascal":["p","pas"],"x-pcs-gcd":"gcd","x-perl":["pl","pm"],"x-python":"py","x-scala":"scala","x-setext":"etx","x-tcl":["tcl","tk"],"x-tex":["tex","ltx","sty","cls"],"x-vcalendar":"vcs","x-vcard":"vcf",n3:"n3","prs.lines.tag":"dsc",sgml:["sgml","sgm"],troff:["t","tr","roff","man","me","ms"],turtle:"ttl","uri-list":["uri","uris","urls"],vcard:"vcard","vnd.curl":"curl","vnd.curl.dcurl":"dcurl","vnd.curl.scurl":"scurl","vnd.curl.mcurl":"mcurl","vnd.dvb.subtitle":"sub","vnd.fly":"fly","vnd.fmi.flexstor":"flx","vnd.graphviz":"gv","vnd.in3d.3dml":"3dml","vnd.in3d.spot":"spot","x-asm":["s","asm"],"x-c":["c","cc","cxx","cpp","h","hh","dic"],"x-fortran":["f","for","f77","f90"],"x-opml":"opml","x-nfo":"nfo","x-sfv":"sfv","x-uuencode":"uu",webviewhtml:"htt"},video:{avif:".avif","3gpp":"3gp",annodex:"axv",dl:"dl",dv:["dif","dv"],fli:"fli",gl:"gl",mpeg:["mpeg","mpg","mpe","m1v","m2v","mp2","mpa","mpv2"],mp4:["mp4","mp4v","mpg4"],quicktime:["qt","mov"],ogg:"ogv","vnd.mpegurl":["mxu","m4u"],"x-flv":"flv","x-la-asf":["lsf","lsx"],"x-mng":"mng","x-ms-asf":["asf","asx","asr"],"x-ms-wm":"wm","x-ms-wmv":"wmv","x-ms-wmx":"wmx","x-ms-wvx":"wvx","x-msvideo":"avi","x-sgi-movie":"movie","x-matroska":["mpv","mkv","mk3d","mks"],"3gpp2":"3g2",h261:"h261",h263:"h263",h264:"h264",jpeg:"jpgv",jpm:["jpm","jpgm"],mj2:["mj2","mjp2"],"vnd.dece.hd":["uvh","uvvh"],"vnd.dece.mobile":["uvm","uvvm"],"vnd.dece.pd":["uvp","uvvp"],"vnd.dece.sd":["uvs","uvvs"],"vnd.dece.video":["uvv","uvvv"],"vnd.dvb.file":"dvb","vnd.fvt":"fvt","vnd.ms-playready.media.pyv":"pyv","vnd.uvvu.mp4":["uvu","uvvu"],"vnd.vivo":"viv",webm:"webm","x-f4v":"f4v","x-m4v":"m4v","x-ms-vob":"vob","x-smv":"smv"},"x-conference":{"x-cooltalk":"ice"},"x-world":{"x-vrml":["vrm","vrml","wrl","flr","wrz","xaf","xof"]}},L=(()=>{const e={};for(let t in P)if(P.hasOwnProperty(t))for(let n in P[t])if(P[t].hasOwnProperty(n)){const i=P[t][n];if("string"==typeof i)e[i]=t+"/"+n;else for(let r=0;r<i.length;r++)e[i[r]]=t+"/"+n}return e})();function N(e,t,n){return class{constructor(i){const r=this;r.codec=new e(Object.assign({},t,i)),n(r.codec,(e=>{if(r.pendingData){const t=r.pendingData;r.pendingData=new Uint8Array(t.length+e.length),r.pendingData.set(t,0),r.pendingData.set(e,t.length)}else r.pendingData=new Uint8Array(e)}))}async append(e){return this.codec.push(e),i(this)}async flush(){return this.codec.push(new Uint8Array(0),!0),i(this)}};function i(e){if(e.pendingData){const t=e.pendingData;return e.pendingData=null,t}return new Uint8Array(0)}}const V="HTTP error ",Z="HTTP Range not supported",K="text/plain",G="Content-Length",Y="Accept-Ranges",X="HEAD",J="GET",Q="bytes";class ${constructor(){this.size=0}init(){this.initialized=!0}}class ee extends ${}class te extends ${writeUint8Array(e){this.size+=e.length}}class ne extends ee{constructor(e){super(),this.blobReader=new se(new Blob([e],{type:K}))}async init(){super.init(),this.blobReader.init(),this.size=this.blobReader.size}async readUint8Array(e,t){return this.blobReader.readUint8Array(e,t)}}class ie extends te{constructor(e){super(),this.encoding=e,this.blob=new Blob([],{type:K})}async writeUint8Array(e){super.writeUint8Array(e),this.blob=new Blob([this.blob,e.buffer],{type:K})}getData(){const e=new FileReader;return new Promise(((t,n)=>{e.onload=e=>t(e.target.result),e.onerror=n,e.readAsText(this.blob,this.encoding)}))}}class re extends ee{constructor(e){super(),this.dataURI=e;let t=e.length;for(;"="==e.charAt(t-1);)t--;this.dataStart=e.indexOf(",")+1,this.size=Math.floor(.75*(t-this.dataStart))}async readUint8Array(e,t){const n=new Uint8Array(t),i=4*Math.floor(e/3),r=atob(this.dataURI.substring(i+this.dataStart,4*Math.ceil((e+t)/3)+this.dataStart)),a=e-3*Math.floor(i/4);for(let e=a;e<a+t;e++)n[e-a]=r.charCodeAt(e);return n}}class ae extends te{constructor(e){super(),this.data="data:"+(e||"")+";base64,",this.pending=[]}async writeUint8Array(e){super.writeUint8Array(e);let t=0,n=this.pending;const i=this.pending.length;for(this.pending="",t=0;t<3*Math.floor((i+e.length)/3)-i;t++)n+=String.fromCharCode(e[t]);for(;t<e.length;t++)this.pending+=String.fromCharCode(e[t]);n.length>2?this.data+=btoa(n):this.pending=n}getData(){return this.data+btoa(this.pending)}}class se extends ee{constructor(e){super(),this.blob=e,this.size=e.size}async readUint8Array(e,t){const n=new FileReader;return new Promise(((i,r)=>{n.onload=e=>i(new Uint8Array(e.target.result)),n.onerror=r,n.readAsArrayBuffer(this.blob.slice(e,e+t))}))}}class oe extends te{constructor(e){super(),this.offset=0,this.contentType=e,this.blob=new Blob([],{type:e})}async writeUint8Array(e){super.writeUint8Array(e),this.blob=new Blob([this.blob,e.buffer],{type:this.contentType}),this.offset=this.blob.size}getData(){return this.blob}}class de extends ee{constructor(e,t){super(),this.url=e,this.preventHeadRequest=t.preventHeadRequest,this.useRangeHeader=t.useRangeHeader,this.forceRangeRequests=t.forceRangeRequests,this.options=Object.assign({},t),delete this.options.preventHeadRequest,delete this.options.useRangeHeader,delete this.options.forceRangeRequests,delete this.options.useXHR}async init(){if(super.init(),xe(this.url)&&!this.preventHeadRequest){const e=await ce(X,this.url,this.options);if(this.size=Number(e.headers.get(G)),!this.forceRangeRequests&&this.useRangeHeader&&e.headers.get(Y)!=Q)throw new Error(Z);void 0===this.size&&await le(this,this.options)}else await le(this,this.options)}async readUint8Array(e,t){if(this.useRangeHeader){const n=await ce(J,this.url,this.options,Object.assign({},this.options.headers,{HEADER_RANGE:"bytes="+e+"-"+(e+t-1)}));if(206!=n.status)throw new Error(Z);return new Uint8Array(await n.arrayBuffer())}return this.data||await le(this,this.options),new Uint8Array(this.data.subarray(e,e+t))}}async function le(e,t){const n=await ce(J,e.url,t);e.data=new Uint8Array(await n.arrayBuffer()),e.size||(e.size=e.data.length)}async function ce(e,t,n,i){i=Object.assign({},n.headers,i);const r=await fetch(t,Object.assign({},n,{method:e,headers:i}));if(r.status<400)return r;throw new Error(V+(r.statusText||r.status))}class fe extends ee{constructor(e,t){super(),this.url=e,this.preventHeadRequest=t.preventHeadRequest,this.useRangeHeader=t.useRangeHeader,this.forceRangeRequests=t.forceRangeRequests}async init(){if(super.init(),xe(this.url)&&!this.preventHeadRequest)return new Promise(((e,t)=>pe(X,this.url,(n=>{this.size=Number(n.getResponseHeader(G)),this.useRangeHeader?this.forceRangeRequests||n.getResponseHeader(Y)==Q?e():t(new Error(Z)):void 0===this.size?ue(this,this.url).then((()=>e())).catch(t):e()}),t)));await ue(this,this.url)}async readUint8Array(e,t){if(!this.useRangeHeader)return this.data||await ue(this,this.url),new Uint8Array(this.data.subarray(e,e+t));if(206!=(await new Promise(((n,i)=>pe(J,this.url,(e=>n(new Uint8Array(e.response))),i,[["Range","bytes="+e+"-"+(e+t-1)]])))).status)throw new Error(Z)}}function ue(e,t){return new Promise(((n,i)=>pe(J,t,(t=>{e.data=new Uint8Array(t.response),e.size||(e.size=e.data.length),n()}),i)))}function pe(e,t,n,i,r=[]){const a=new XMLHttpRequest;return a.addEventListener("load",(()=>{a.status<400?n(a):i(V+(a.statusText||a.status))}),!1),a.addEventListener("error",i,!1),a.open(e,t),r.forEach((e=>a.setRequestHeader(e[0],e[1]))),a.responseType="arraybuffer",a.send(),a}class he extends ee{constructor(e,t={}){super(),this.url=e,t.useXHR?this.reader=new fe(e,t):this.reader=new de(e,t)}set size(e){}get size(){return this.reader.size}async init(){super.init(),await this.reader.init()}async readUint8Array(e,t){return this.reader.readUint8Array(e,t)}}class _e extends ee{constructor(e){super(),this.array=e,this.size=e.length}async readUint8Array(e,t){return this.array.slice(e,e+t)}}class me extends te{constructor(){super(),this.array=new Uint8Array(0)}async writeUint8Array(e){super.writeUint8Array(e);const t=this.array;this.array=new Uint8Array(t.length+e.length),this.array.set(t),this.array.set(e,t.length)}getData(){return this.array}}function xe(e){if("undefined"!=typeof document){const t=document.createElement("a");return t.href=e,"http:"==t.protocol||"https:"==t.protocol}return/^https?:\/\//i.test(e)}const we=4294967295,ge=65535,be=67324752,ve=134695760,ye=33639248,ke=101010256,ze=101075792,Ae=117853008,Ee=39169,Ue=2048,Re="/",De=new Date(2107,11,31),Se=new Date(1980,0,1),je="\0☺☻♥♦♣♠•◘○◙♂♀♪♫☼►◄↕‼¶§▬↨↑↓→←∟↔▲▼ !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~⌂ÇüéâäàåçêëèïîìÄÅÉæÆôöòûùÿÖÜ¢£¥₧ƒáíóúñÑªº¿⌐¬½¼¡«»░▒▓│┤╡╢╖╕╣║╗╝╜╛┐└┴┬├─┼╞╟╚╔╩╦╠═╬╧╨╤╥╙╘╒╓╫╪┘┌█▄▌▐▀αßΓπΣσµτΦΘΩδ∞φε∩≡±≥≤⌠⌡÷≈°∙·√ⁿ²■ ".split("");const Ie=[];for(let e=0;e<256;e++){let t=e;for(let e=0;e<8;e++)1&t?t=t>>>1^3988292384:t>>>=1;Ie[e]=t}class Fe{constructor(e){this.crc=e||-1}append(e){let t=0|this.crc;for(let n=0,i=0|e.length;n<i;n++)t=t>>>8^Ie[255&(t^e[n])];this.crc=t}get(){return~this.crc}}const Ce={concat(e,t){if(0===e.length||0===t.length)return e.concat(t);const n=e[e.length-1],i=Ce.getPartial(n);return 32===i?e.concat(t):Ce._shiftRight(t,i,0|n,e.slice(0,e.length-1))},bitLength(e){const t=e.length;if(0===t)return 0;const n=e[t-1];return 32*(t-1)+Ce.getPartial(n)},clamp(e,t){if(32*e.length<t)return e;const n=(e=e.slice(0,Math.ceil(t/32))).length;return t&=31,n>0&&t&&(e[n-1]=Ce.partial(t,e[n-1]&2147483648>>t-1,1)),e},partial:(e,t,n)=>32===e?t:(n?0|t:t<<32-e)+1099511627776*e,getPartial:e=>Math.round(e/1099511627776)||32,_shiftRight(e,t,n,i){for(void 0===i&&(i=[]);t>=32;t-=32)i.push(n),n=0;if(0===t)return i.concat(e);for(let r=0;r<e.length;r++)i.push(n|e[r]>>>t),n=e[r]<<32-t;const r=e.length?e[e.length-1]:0,a=Ce.getPartial(r);return i.push(Ce.partial(t+a&31,t+a>32?n:i.pop(),1)),i}},Be={bytes:{fromBits(e){const t=Ce.bitLength(e)/8,n=new Uint8Array(t);let i;for(let r=0;r<t;r++)0==(3&r)&&(i=e[r/4]),n[r]=i>>>24,i<<=8;return n},toBits(e){const t=[];let n,i=0;for(n=0;n<e.length;n++)i=i<<8|e[n],3==(3&n)&&(t.push(i),i=0);return 3&n&&t.push(Ce.partial(8*(3&n),i)),t}}},Oe={sha1:function(e){e?(this._h=e._h.slice(0),this._buffer=e._buffer.slice(0),this._length=e._length):this.reset()}};Oe.sha1.prototype={blockSize:512,reset:function(){const e=this;return e._h=this._init.slice(0),e._buffer=[],e._length=0,e},update:function(e){const t=this;"string"==typeof e&&(e=Be.utf8String.toBits(e));const n=t._buffer=Ce.concat(t._buffer,e),i=t._length,r=t._length=i+Ce.bitLength(e);if(r>9007199254740991)throw new Error("Cannot hash more than 2^53 - 1 bits");const a=new Uint32Array(n);let s=0;for(let e=t.blockSize+i-(t.blockSize+i&t.blockSize-1);e<=r;e+=t.blockSize)t._block(a.subarray(16*s,16*(s+1))),s+=1;return n.splice(0,16*s),t},finalize:function(){const e=this;let t=e._buffer;const n=e._h;t=Ce.concat(t,[Ce.partial(1,1)]);for(let e=t.length+2;15&e;e++)t.push(0);for(t.push(Math.floor(e._length/4294967296)),t.push(0|e._length);t.length;)e._block(t.splice(0,16));return e.reset(),n},_init:[1732584193,4023233417,2562383102,271733878,3285377520],_key:[1518500249,1859775393,2400959708,3395469782],_f:function(e,t,n,i){return e<=19?t&n|~t&i:e<=39?t^n^i:e<=59?t&n|t&i|n&i:e<=79?t^n^i:void 0},_S:function(e,t){return t<<e|t>>>32-e},_block:function(e){const t=this,n=t._h,i=Array(80);for(let t=0;t<16;t++)i[t]=e[t];let r=n[0],a=n[1],s=n[2],o=n[3],d=n[4];for(let e=0;e<=79;e++){e>=16&&(i[e]=t._S(1,i[e-3]^i[e-8]^i[e-14]^i[e-16]));const n=t._S(5,r)+t._f(e,a,s,o)+d+i[e]+t._key[Math.floor(e/20)]|0;d=o,o=s,s=t._S(30,a),a=r,r=n}n[0]=n[0]+r|0,n[1]=n[1]+a|0,n[2]=n[2]+s|0,n[3]=n[3]+o|0,n[4]=n[4]+d|0}};const Te={aes:class{constructor(e){const t=this;t._tables=[[[],[],[],[],[]],[[],[],[],[],[]]],t._tables[0][0][0]||t._precompute();const n=t._tables[0][4],i=t._tables[1],r=e.length;let a,s,o,d=1;if(4!==r&&6!==r&&8!==r)throw new Error("invalid aes key size");for(t._key=[s=e.slice(0),o=[]],a=r;a<4*r+28;a++){let e=s[a-1];(a%r==0||8===r&&a%r==4)&&(e=n[e>>>24]<<24^n[e>>16&255]<<16^n[e>>8&255]<<8^n[255&e],a%r==0&&(e=e<<8^e>>>24^d<<24,d=d<<1^283*(d>>7))),s[a]=s[a-r]^e}for(let e=0;a;e++,a--){const t=s[3&e?a:a-4];o[e]=a<=4||e<4?t:i[0][n[t>>>24]]^i[1][n[t>>16&255]]^i[2][n[t>>8&255]]^i[3][n[255&t]]}}encrypt(e){return this._crypt(e,0)}decrypt(e){return this._crypt(e,1)}_precompute(){const e=this._tables[0],t=this._tables[1],n=e[4],i=t[4],r=[],a=[];let s,o,d,l;for(let e=0;e<256;e++)a[(r[e]=e<<1^283*(e>>7))^e]=e;for(let c=s=0;!n[c];c^=o||1,s=a[s]||1){let a=s^s<<1^s<<2^s<<3^s<<4;a=a>>8^255&a^99,n[c]=a,i[a]=c,l=r[d=r[o=r[c]]];let f=16843009*l^65537*d^257*o^16843008*c,u=257*r[a]^16843008*a;for(let n=0;n<4;n++)e[n][c]=u=u<<24^u>>>8,t[n][a]=f=f<<24^f>>>8}for(let n=0;n<5;n++)e[n]=e[n].slice(0),t[n]=t[n].slice(0)}_crypt(e,t){if(4!==e.length)throw new Error("invalid aes block size");const n=this._key[t],i=n.length/4-2,r=[0,0,0,0],a=this._tables[t],s=a[0],o=a[1],d=a[2],l=a[3],c=a[4];let f,u,p,h=e[0]^n[0],_=e[t?3:1]^n[1],m=e[2]^n[2],x=e[t?1:3]^n[3],w=4;for(let e=0;e<i;e++)f=s[h>>>24]^o[_>>16&255]^d[m>>8&255]^l[255&x]^n[w],u=s[_>>>24]^o[m>>16&255]^d[x>>8&255]^l[255&h]^n[w+1],p=s[m>>>24]^o[x>>16&255]^d[h>>8&255]^l[255&_]^n[w+2],x=s[x>>>24]^o[h>>16&255]^d[_>>8&255]^l[255&m]^n[w+3],w+=4,h=f,_=u,m=p;for(let e=0;e<4;e++)r[t?3&-e:e]=c[h>>>24]<<24^c[_>>16&255]<<16^c[m>>8&255]<<8^c[255&x]^n[w++],f=h,h=_,_=m,m=x,x=f;return r}}},Me={ctrGladman:class{constructor(e,t){this._prf=e,this._initIv=t,this._iv=t}reset(){this._iv=this._initIv}update(e){return this.calculate(this._prf,e,this._iv)}incWord(e){if(255==(e>>24&255)){let t=e>>16&255,n=e>>8&255,i=255&e;255===t?(t=0,255===n?(n=0,255===i?i=0:++i):++n):++t,e=0,e+=t<<16,e+=n<<8,e+=i}else e+=1<<24;return e}incCounter(e){0===(e[0]=this.incWord(e[0]))&&(e[1]=this.incWord(e[1]))}calculate(e,t,n){let i;if(!(i=t.length))return[];const r=Ce.bitLength(t);for(let r=0;r<i;r+=4){this.incCounter(n);const i=e.encrypt(n);t[r]^=i[0],t[r+1]^=i[1],t[r+2]^=i[2],t[r+3]^=i[3]}return Ce.clamp(t,r)}}},We={hmacSha1:class{constructor(e){const t=this,n=t._hash=Oe.sha1,i=[[],[]],r=n.prototype.blockSize/32;t._baseHash=[new n,new n],e.length>r&&(e=n.hash(e));for(let t=0;t<r;t++)i[0][t]=909522486^e[t],i[1][t]=1549556828^e[t];t._baseHash[0].update(i[0]),t._baseHash[1].update(i[1]),t._resultHash=new n(t._baseHash[0])}reset(){const e=this;e._resultHash=new e._hash(e._baseHash[0]),e._updated=!1}update(e){this._updated=!0,this._resultHash.update(e)}digest(){const e=this,t=e._resultHash.finalize(),n=new e._hash(e._baseHash[1]).update(t).finalize();return e.reset(),n}}},qe="Invalid pasword",He=16,Pe={name:"PBKDF2"},Le=Object.assign({hash:{name:"HMAC"}},Pe),Ne=Object.assign({iterations:1e3,hash:{name:"SHA-1"}},Pe),Ve=["deriveBits"],Ze=[8,12,16],Ke=[16,24,32],Ge=10,Ye=[0,0,0,0],Xe=crypto.subtle,Je=Be.bytes,Qe=Te.aes,$e=Me.ctrGladman,et=We.hmacSha1;class tt{constructor(e,t,n){Object.assign(this,{password:e,signed:t,strength:n-1,pendingInput:new Uint8Array(0)})}async append(e){const t=this;if(t.password){const n=st(e,0,Ze[t.strength]+2);await async function(e,t,n){await rt(e,n,st(t,0,Ze[e.strength]));const i=st(t,Ze[e.strength]),r=e.keys.passwordVerification;if(r[0]!=i[0]||r[1]!=i[1])throw new Error(qe)}(t,n,t.password),t.password=null,t.aesCtrGladman=new $e(new Qe(t.keys.key),Array.from(Ye)),t.hmac=new et(t.keys.authentication),e=st(e,Ze[t.strength]+2)}return it(t,e,new Uint8Array(e.length-Ge-(e.length-Ge)%He),0,Ge,!0)}async flush(){const e=this,t=e.pendingInput,n=st(t,0,t.length-Ge),i=st(t,t.length-Ge);let r=new Uint8Array(0);if(n.length){const t=Je.toBits(n);e.hmac.update(t);const i=e.aesCtrGladman.update(t);r=Je.fromBits(i)}let a=!0;if(e.signed){const t=st(Je.fromBits(e.hmac.digest()),0,Ge);for(let e=0;e<Ge;e++)t[e]!=i[e]&&(a=!1)}return{valid:a,data:r}}}class nt{constructor(e,t){Object.assign(this,{password:e,strength:t-1,pendingInput:new Uint8Array(0)})}async append(e){const t=this;let n=new Uint8Array(0);t.password&&(n=await async function(e,t){const n=crypto.getRandomValues(new Uint8Array(Ze[e.strength]));return await rt(e,t,n),at(n,e.keys.passwordVerification)}(t,t.password),t.password=null,t.aesCtrGladman=new $e(new Qe(t.keys.key),Array.from(Ye)),t.hmac=new et(t.keys.authentication));const i=new Uint8Array(n.length+e.length-e.length%He);return i.set(n,0),it(t,e,i,n.length,0)}async flush(){const e=this;let t=new Uint8Array(0);if(e.pendingInput.length){const n=e.aesCtrGladman.update(Je.toBits(e.pendingInput));e.hmac.update(n),t=Je.fromBits(n)}const n=st(Je.fromBits(e.hmac.digest()),0,Ge);return{data:at(t,n),signature:n}}}function it(e,t,n,i,r,a){const s=t.length-r;let o;for(e.pendingInput.length&&(t=at(e.pendingInput,t),n=function(e,t){if(t&&t>e.length){const n=e;(e=new Uint8Array(t)).set(n,0)}return e}(n,s-s%He)),o=0;o<=s-He;o+=He){const r=Je.toBits(st(t,o,o+He));a&&e.hmac.update(r);const s=e.aesCtrGladman.update(r);a||e.hmac.update(s),n.set(Je.fromBits(s),o+i)}return e.pendingInput=st(t,o),n}async function rt(e,t,n){const i=(new TextEncoder).encode(t),r=await Xe.importKey("raw",i,Le,!1,Ve),a=await Xe.deriveBits(Object.assign({salt:n},Ne),r,8*(2*Ke[e.strength]+2)),s=new Uint8Array(a);e.keys={key:Je.toBits(st(s,0,Ke[e.strength])),authentication:Je.toBits(st(s,Ke[e.strength],2*Ke[e.strength])),passwordVerification:st(s,2*Ke[e.strength])}}function at(e,t){let n=e;return e.length+t.length&&(n=new Uint8Array(e.length+t.length),n.set(e,0),n.set(t,e.length)),n}function st(e,t,n){return e.subarray(t,n)}const ot=12;class dt{constructor(e,t){Object.assign(this,{password:e,passwordVerification:t}),ut(this,e)}async append(e){const t=this;if(t.password){const n=ct(t,e.subarray(0,ot));if(t.password=null,n[11]!=t.passwordVerification)throw new Error(qe);e=e.subarray(ot)}return ct(t,e)}async flush(){return{valid:!0,data:new Uint8Array(0)}}}class lt{constructor(e,t){Object.assign(this,{password:e,passwordVerification:t}),ut(this,e)}async append(e){const t=this;let n,i;if(t.password){t.password=null;const r=crypto.getRandomValues(new Uint8Array(ot));r[11]=t.passwordVerification,n=new Uint8Array(e.length+r.length),n.set(ft(t,r),0),i=ot}else n=new Uint8Array(e.length),i=0;return n.set(ft(t,e),i),n}async flush(){return{data:new Uint8Array(0)}}}function ct(e,t){const n=new Uint8Array(t.length);for(let i=0;i<t.length;i++)n[i]=ht(e)^t[i],pt(e,n[i]);return n}function ft(e,t){const n=new Uint8Array(t.length);for(let i=0;i<t.length;i++)n[i]=ht(e)^t[i],pt(e,t[i]);return n}function ut(e,t){e.keys=[305419896,591751049,878082192],e.crcKey0=new Fe(e.keys[0]),e.crcKey2=new Fe(e.keys[2]);for(let n=0;n<t.length;n++)pt(e,t.charCodeAt(n))}function pt(e,t){e.crcKey0.append([t]),e.keys[0]=~e.crcKey0.get(),e.keys[1]=mt(e.keys[1]+_t(e.keys[0])),e.keys[1]=mt(Math.imul(e.keys[1],134775813)+1),e.crcKey2.append([e.keys[1]>>>24]),e.keys[2]=~e.crcKey2.get()}function ht(e){const t=2|e.keys[2];return _t(Math.imul(t,1^t)>>>8)}function _t(e){return 255&e}function mt(e){return 4294967295&e}const xt="deflate",wt="inflate",gt="Invalid signature";class bt{constructor(e,{signature:t,password:n,signed:i,compressed:r,zipCrypto:a,passwordVerification:s,encryptionStrength:o}){const d=Boolean(n);Object.assign(this,{signature:t,encrypted:d,signed:i,compressed:r,inflate:r&&new e,crc32:i&&new Fe,zipCrypto:a,decrypt:d&&a?new dt(n,s):new tt(n,i,o)})}async append(e){const t=this;return t.encrypted&&e.length&&(e=await t.decrypt.append(e)),t.compressed&&e.length&&(e=await t.inflate.append(e)),(!t.encrypted||t.zipCrypto)&&t.signed&&e.length&&t.crc32.append(e),e}async flush(){const e=this;let t,n=new Uint8Array(0);if(e.encrypted){const t=await e.decrypt.flush();if(!t.valid)throw new Error(gt);n=t.data}if((!e.encrypted||e.zipCrypto)&&e.signed){const n=new DataView(new Uint8Array(4).buffer);if(t=e.crc32.get(),n.setUint32(0,t),e.cipher!=n.getUint32(0,!1))throw new Error(gt)}return e.compressed&&(n=await e.inflate.append(n)||new Uint8Array(0),await e.inflate.flush()),{data:n,signature:t}}}class vt{constructor(e,{encrypted:t,signed:n,compressed:i,level:r,zipCrypto:a,password:s,passwordVerification:o,encryptionStrength:d}){Object.assign(this,{encrypted:t,signed:n,compressed:i,deflate:i&&new e({level:r||5}),crc32:n&&new Fe,zipCrypto:a,encrypt:t&&a?new lt(s,o):new nt(s,d)})}async append(e){const t=this;let n=e;return t.compressed&&e.length&&(n=await t.deflate.append(e)),t.encrypted&&n.length&&(n=await t.encrypt.append(n)),(!t.encrypted||t.zipCrypto)&&t.signed&&e.length&&t.crc32.append(e),n}async flush(){const e=this;let t,n=new Uint8Array(0);if(e.compressed&&(n=await e.deflate.flush()||new Uint8Array(0)),e.encrypted){n=await e.encrypt.append(n);const i=await e.encrypt.flush();t=i.signature;const r=new Uint8Array(n.length+i.data.length);r.set(n,0),r.set(i.data,n.length),n=r}return e.encrypted&&!e.zipCrypto||!e.signed||(t=e.crc32.get()),{data:n,signature:t}}}const yt="init",kt="append",zt="flush",At="message";var Et=(e,t,n,i,r,a)=>(Object.assign(e,{busy:!0,codecConstructor:t,options:Object.assign({},n),scripts:a,webWorker:r,onTaskFinished(){e.busy=!1;i(e)&&e.worker&&e.worker.terminate()}}),r?function(e){let t;e.interface||(e.worker=new Worker(new URL(e.scripts[0],"undefined"==typeof document?new(require("url").URL)("file:"+__filename).href:document.currentScript&&document.currentScript.src||new URL("zip-fs-full.min.js",document.baseURI).href)),e.worker.addEventListener(At,r,!1),e.interface={append:e=>n({type:kt,data:e}),flush:()=>n({type:zt})});return e.interface;async function n(n){if(!t){const t=e.options,n=e.scripts.slice(1);await i({scripts:n,type:yt,options:t})}return i(n)}function i(n){const i=e.worker,r=new Promise(((e,n)=>t={resolve:e,reject:n}));try{if(n.data)try{n.data=n.data.buffer,i.postMessage(n,[n.data])}catch(e){i.postMessage(n)}else i.postMessage(n)}catch(n){t.reject(n),t=null,e.onTaskFinished()}return r}function r(n){const i=n.data;if(t){const n=i.error,r=i.type;if(n){const i=new Error(n.message);i.stack=n.stack,t.reject(i),t=null,e.onTaskFinished()}else if(r==yt||r==zt||r==kt){const n=i.data;r==zt?(t.resolve({data:new Uint8Array(n),signature:i.signature}),t=null,e.onTaskFinished()):t.resolve(n&&new Uint8Array(n))}}}}(e):function(e){const t=function(e,t){return t.codecType.startsWith(xt)?new vt(e,t):t.codecType.startsWith(wt)?new bt(e,t):void 0}(e.codecConstructor,e.options);return{async append(n){try{return await t.append(n)}catch(t){throw e.onTaskFinished(),t}},async flush(){try{return await t.flush()}finally{e.onTaskFinished()}}}}(e));let Ut=[],Rt=[];function Dt(e,t,n){const i=!(!t.compressed&&!t.signed&&!t.encrypted)&&(t.useWebWorkers||void 0===t.useWebWorkers&&n.useWebWorkers),r=i&&n.workerScripts?n.workerScripts[t.codecType]:[];if(Ut.length<n.maxWorkers){const n={};return Ut.push(n),Et(n,e,t,St,i,r)}{const n=Ut.find((e=>!e.busy));return n?Et(n,e,t,St,i,r):new Promise((n=>Rt.push({resolve:n,codecConstructor:e,options:t,webWorker:i,scripts:r})))}}function St(e){const t=!Rt.length;if(t)Ut=Ut.filter((t=>t!=e));else{const[{resolve:t,codecConstructor:n,options:i,webWorker:r,scripts:a}]=Rt.splice(0,1);t(Et(e,n,i,St,r,a))}return t}const jt="Abort error";async function It(e,t,n,i,r,a,s){const o=Math.max(a.chunkSize,64);return async function a(d=0,l=0){const c=s.signal;if(d<r){Ft(c);const f=await t.readUint8Array(d+i,Math.min(o,r-d)),u=f.length;Ft(c);const p=await e.append(f);if(Ft(c),l+=await Ct(n,p),s.onprogress)try{s.onprogress(d+u,r)}catch(e){}return a(d+o,l)}{const t=await e.flush();return l+=await Ct(n,t.data),{signature:t.signature,length:l}}}()}function Ft(e){if(e&&e.aborted)throw new Error(jt)}async function Ct(e,t){return t.length&&await e.writeUint8Array(t),t.length}const Bt=["filename","rawFilename","directory","encrypted","compressedSize","uncompressedSize","lastModDate","rawLastModDate","comment","rawComment","signature","extraField","rawExtraField","bitFlag","extraFieldZip64","extraFieldUnicodePath","extraFieldUnicodeComment","extraFieldAES","filenameUTF8","commentUTF8","offset","zip64"];class Ot{constructor(e){Bt.forEach((t=>this[t]=e[t]))}}const Tt="File format is not recognized",Mt="End of central directory not found",Wt="End of Zip64 central directory not found",qt="End of Zip64 central directory locator not found",Ht="Central directory header not found",Pt="Local file header not found",Lt="Zip64 extra field not found",Nt="File contains encrypted entry",Vt="Encryption method not supported",Zt="Compression method not supported",Kt="utf-8",Gt=["uncompressedSize","compressedSize","offset"];class Yt{constructor(e,t={}){Object.assign(this,{reader:e,options:t,config:q()})}async getEntries(e={}){const t=this,n=t.reader;if(n.initialized||await n.init(),n.size<22)throw new Error(Tt);const i=await async function(e,t,n,i,r){const a=new Uint8Array(4);!function(e,t,n){e.setUint32(t,n,!0)}(dn(a),0,t);const s=i+r;return await o(i)||await o(Math.min(s,n));async function o(t){const r=n-t,s=await ln(e,r,t);for(let e=s.length-i;e>=0;e--)if(s[e]==a[0]&&s[e+1]==a[1]&&s[e+2]==a[2]&&s[e+3]==a[3])return{offset:r+e,buffer:s.slice(e,e+i).buffer}}}(n,ke,n.size,22,1048560);if(!i)throw new Error(Mt);const r=dn(i);let a=sn(r,12),s=sn(r,16),o=an(r,8),d=0;if(s==we||o==ge){const e=dn(await ln(n,i.offset-20,20));if(sn(e,0)!=Ae)throw new Error(Wt);s=on(e,8);let t=await ln(n,s,56),r=dn(t);const l=i.offset-20-56;if(sn(r,0)!=ze&&s!=l){const e=s;s=l,d=s-e,t=await ln(n,s,56),r=dn(t)}if(sn(r,0)!=ze)throw new Error(qt);o=on(r,24),a=sn(e,4),s-=on(r,40)}if(s<0||s>=n.size)throw new Error(Tt);let l=0,c=await ln(n,s,n.size-s),f=dn(c);const u=i.offset-a;if(sn(f,l)!=ye&&s!=u){const e=s;s=u,d=s-e,c=await ln(n,s,n.size-s),f=dn(c)}if(s<0||s>=n.size)throw new Error(Tt);const p=[];for(let i=0;i<o;i++){const i=new Xt(n,t.config,t.options);if(sn(f,l)!=ye)throw new Error(Ht);Jt(i,f,l+6);const r=Boolean(i.bitFlag.languageEncodingFlag),a=l+46,s=a+i.filenameLength,o=s+i.extraFieldLength;Object.assign(i,{compressedSize:0,uncompressedSize:0,commentLength:an(f,l+32),directory:16==(16&rn(f,l+38)),offset:sn(f,l+42)+d,rawFilename:c.subarray(a,s),filenameUTF8:r,commentUTF8:r,rawExtraField:c.subarray(s,o)});const u=o+i.commentLength;i.rawComment=c.subarray(o,u),i.filename=tn(i.rawFilename,i.filenameUTF8?Kt:en(t,e,"filenameEncoding")),i.comment=tn(i.rawComment,i.commentUTF8?Kt:en(t,e,"commentEncoding")),!i.directory&&i.filename.endsWith(Re)&&(i.directory=!0),Qt(i,i,f,l+6);const h=new Ot(i);h.getData=(e,t)=>i.getData(e,t),p.push(h),l=u}return p}async close(){}}class Xt{constructor(e,t,n){Object.assign(this,{reader:e,config:t,options:n})}async getData(e,t={}){const n=this,{reader:i,offset:r,extraFieldAES:a,compressionMethod:s,config:o,bitFlag:d,signature:l,rawLastModDate:c,compressedSize:f,onprogress:u}=n,p=n.localDirectory={};i.initialized||await i.init();const h=await ln(i,r,30),_=dn(h);let m=en(n,t,"password");if(m=m&&m.length&&m,a&&99!=a.originalCompressionMethod)throw new Error(Zt);if(0!=s&&8!=s)throw new Error(Zt);if(sn(_,0)!=be)throw new Error(Pt);Jt(p,_,4);const x=r+30+p.filenameLength,w=x+p.extraFieldLength;p.rawExtraField=h.subarray(x,w),Qt(n,p,_,4);const g=n.encrypted&&p.encrypted,b=g&&!a;if(g){if(!b&&void 0===a.strength)throw new Error(Vt);if(!m)throw new Error(Nt)}const v=await Dt(o.Inflate,{codecType:wt,password:m,zipCrypto:b,encryptionStrength:a&&a.strength,signed:en(n,t,"checkSignature"),passwordVerification:b&&(d.dataDescriptor?c>>>8&255:l>>>24&255),signature:l,compressed:0!=s,encrypted:g,useWebWorkers:en(n,t,"useWebWorkers")},o);e.initialized||await e.init();const y=en(n,t,"signal");return await It(v,i,e,w,f,o,{onprogress:t.onprogress,signal:y}),e.getData()}}function Jt(e,t,n){const i=e.rawBitFlag=an(t,n+2),r=1==(1&i);Object.assign(e,{encrypted:r,version:an(t,n),bitFlag:{level:(6&i)>>1,dataDescriptor:8==(8&i),languageEncodingFlag:(i&Ue)==Ue},rawLastModDate:sn(t,n+6),lastModDate:nn(e.rawLastModDate),filenameLength:an(t,n+22),extraFieldLength:an(t,n+24)})}function Qt(e,t,n,i){const r=t.rawExtraField,a=t.extraField=new Map,s=dn(new Uint8Array(r));let o=0;try{for(;o<r.length;){const e=an(s,o),t=an(s,o+2);a.set(e,{type:e,data:r.slice(o+4,o+4+t)}),o+=4+t}}catch(e){}const d=an(n,i+4);t.signature=sn(n,i+10),t.uncompressedSize=sn(n,i+18),t.compressedSize=sn(n,i+14);const l=t.extraFieldZip64=a.get(1);l&&function(e,t){t.zip64=!0;const n=dn(e.data);e.values=[];for(let t=0;t<Math.floor(e.data.length/8);t++)e.values.push(on(n,0+8*t));const i=Gt.filter((e=>t[e]==we));for(let t=0;t<i.length;t++)e[i[t]]=e.values[t];Gt.forEach((n=>{if(t[n]==we){if(!e||void 0===e[n])throw new Error(Lt);t[n]=e[n]}}))}(l,t);const c=t.extraFieldUnicodePath=a.get(28789);c&&$t(c,"filename","rawFilename",t,e);const f=t.extraFieldUnicodeComment=a.get(25461);f&&$t(f,"comment","rawComment",t,e);const u=t.extraFieldAES=a.get(39169);u?function(e,t,n){if(e){const i=dn(e.data);e.vendorVersion=rn(i,0),e.vendorId=rn(i,2);const r=rn(i,4);e.strength=r,e.originalCompressionMethod=n,t.compressionMethod=e.compressionMethod=an(i,5)}else t.compressionMethod=n}(u,t,d):t.compressionMethod=d}function $t(e,t,n,i,r){const a=dn(e.data);e.version=rn(a,0),e.signature=sn(a,1);const s=new Fe;s.append(r[n]);const o=dn(new Uint8Array(4));o.setUint32(0,s.get(),!0),e[t]=(new TextDecoder).decode(e.data.subarray(5)),e.valid=!r.bitFlag.languageEncodingFlag&&e.signature==sn(o,0),e.valid&&(i[t]=e[t],i[t+"UTF8"]=!0)}function en(e,t,n){return void 0===t[n]?e.options[n]:t[n]}function tn(e,t){return t&&"cp437"!=t.trim().toLowerCase()?new TextDecoder(t).decode(e):(e=>{let t="";for(let n=0;n<e.length;n++)t+=je[e[n]];return t})(e)}function nn(e){const t=(4294901760&e)>>16,n=65535&e;try{return new Date(1980+((65024&t)>>9),((480&t)>>5)-1,31&t,(63488&n)>>11,(2016&n)>>5,2*(31&n),0)}catch(e){}}function rn(e,t){return e.getUint8(t)}function an(e,t){return e.getUint16(t,!0)}function sn(e,t){return e.getUint32(t,!0)}function on(e,t){return Number(e.getBigUint64(t,!0))}function dn(e){return new DataView(e.buffer)}function ln(e,t,n){return e.readUint8Array(t,n)}const cn="File already exists",fn="Zip file comment exceeds 64KB",un="File entry comment exceeds 64KB",pn="File entry name exceeds 64KB",hn="Version exceeds 65535",_n="The modification date must be between 1/1/1980 and 12/31/2107",mn="The strength must equal 1, 2, or 3",xn="Extra field type exceeds 65535",wn="Extra field data exceeds 64KB",gn=new Uint8Array([7,0,2,0,65,69,3,0,0]);class bn{constructor(e,t={}){Object.assign(this,{writer:e,options:t,config:q(),files:new Map,offset:e.size,pendingOutputSize:0})}async add(e="",t,n={}){const i=this;if(e=e.trim(),n.directory&&!e.endsWith(Re)?e+=Re:n.directory=e.endsWith(Re),i.files.has(e))throw new Error(cn);const r=(new TextEncoder).encode(e);if(r.length>ge)throw new Error(pn);const a=n.comment||"",s=(new TextEncoder).encode(a);if(s.length>ge)throw new Error(un);const o=i.options.version||n.version||0;if(o>ge)throw new Error(hn);const d=n.lastModDate||new Date;if(d<Se||d>De)throw new Error(_n);const l=vn(i,n,"password"),c=vn(i,n,"encryptionStrength")||3,f=vn(i,n,"zipCrypto");if(void 0!==l&&void 0!==c&&(c<1||c>3))throw new Error(mn);t&&!t.initialized&&await t.init();let u=new Uint8Array(0);const p=n.extraField;if(p){let e=0,t=0;p.forEach((t=>e+=4+t.length)),u=new Uint8Array(e),p.forEach(((e,n)=>{if(n>ge)throw new Error(xn);if(e.length>ge)throw new Error(wn);En(u,new Uint16Array([n]),t),En(u,new Uint16Array([e.length]),t+2),En(u,e,t+4),t+=4+e.length}))}const h=t?Math.floor(1.05*t.size):0;i.pendingOutputSize+=h,await Promise.resolve();const _=n.zip64||i.options.zip64||i.offset>=we||h>=we||i.offset+i.pendingOutputSize>=we,m=vn(i,n,"level"),x=vn(i,n,"useWebWorkers"),w=vn(i,n,"bufferedWrite");let g=vn(i,n,"keepOrder"),b=vn(i,n,"dataDescriptor");const v=vn(i,n,"signal");void 0===b&&(b=!0),void 0===g&&(g=!0);const y=await async function(e,t,n,i){const r=e.files,a=e.writer;let s,o;r.set(t,null);try{let d,l,c;try{i.keepOrder&&(d=e.lockPreviousFile,e.lockPreviousFile=new Promise((e=>o=e))),i.bufferedWrite||e.lockWrite||!i.dataDescriptor?(l=new oe,l.init()):(e.lockWrite=new Promise((e=>s=e)),a.initialized||await a.init(),l=a),c=await async function(e,t,n,i){const{rawFilename:r,lastModDate:a,password:s,level:o,zip64:d,zipCrypto:l,dataDescriptor:c,directory:f,version:u,rawComment:p,rawExtraField:h,useWebWorkers:_,onprogress:m,signal:x,encryptionStrength:w}=i,g=Boolean(s&&s.length),b=0!==o&&!f;let v;if(g&&!l){v=new Uint8Array(gn.length+2);const e=Un(v);kn(e,0,Ee),En(v,gn,2),yn(e,8,w)}else v=new Uint8Array(0);const y={version:u||20,zip64:d,directory:Boolean(f),filenameUTF8:!0,rawFilename:r,commentUTF8:!0,rawComment:p,rawExtraFieldZip64:d?new Uint8Array(28):new Uint8Array(0),rawExtraFieldAES:v,rawExtraField:h};let k=Ue;c&&(k|=8);let z=0;b&&(z=8);d&&(y.version=y.version>45?y.version:45);g&&(k|=1,l||(y.version=y.version>51?y.version:51,z=99,b&&(y.rawExtraFieldAES[9]=8)));const A=y.headerArray=new Uint8Array(26),E=Un(A);kn(E,0,y.version),kn(E,2,k),kn(E,4,z);const U=new Uint32Array(1),R=Un(U);kn(R,0,(a.getHours()<<6|a.getMinutes())<<5|a.getSeconds()/2),kn(R,2,(a.getFullYear()-1980<<4|a.getMonth()+1)<<5|a.getDate());const D=U[0];zn(E,6,D),kn(E,22,r.length),kn(E,24,0),kn(E,24,v.length+y.rawExtraField.length);const S=new Uint8Array(30+r.length+v.length+y.rawExtraField.length);let j;zn(Un(S),0,be),En(S,A,4),En(S,r,30),En(S,v,30+r.length),En(S,y.rawExtraField,30+r.length+v.length);let I=0,F=0;if(e){I=e.size;const i=await Dt(n.Deflate,{codecType:xt,level:o,password:s,encryptionStrength:w,zipCrypto:g&&l,passwordVerification:g&&l&&D>>8&255,signed:!0,compressed:b,encrypted:g,useWebWorkers:_},n);await t.writeUint8Array(S),j=await It(i,e,t,0,I,n,{onprogress:m,signal:x}),F=j.length}else await t.writeUint8Array(S);let C,B=new Uint8Array(0);c&&(B=new Uint8Array(d?24:16),C=Un(B),zn(C,0,ve));if(e){const e=j.signature;if(g&&!l||void 0===e||(zn(E,10,e),y.signature=e,c&&zn(C,4,e)),d){const e=Un(y.rawExtraFieldZip64);kn(e,0,1),kn(e,2,24),zn(E,14,we),An(e,12,BigInt(F)),zn(E,18,we),An(e,4,BigInt(I)),c&&(An(C,8,BigInt(F)),An(C,16,BigInt(I)))}else zn(E,14,F),zn(E,18,I),c&&(zn(C,8,F),zn(C,12,I))}c&&await t.writeUint8Array(B);const O=S.length+F+B.length;return Object.assign(y,{compressedSize:F,uncompressedSize:I,lastModDate:a,rawLastModDate:D,encrypted:g,length:O}),y}(n,l,e.config,i)}catch(e){throw r.delete(t),e}if(r.set(t,c),l!=a){const t=l.getData(),n=new FileReader,r=new Promise(((e,i)=>{n.onload=t=>e(t.target.result),n.onerror=i,n.readAsArrayBuffer(t)})),[s]=await Promise.all([r,e.lockWrite,d]);if(!i.dataDescriptor){const e=new DataView(s);c.encrypted&&!i.zipCrypto||zn(e,14,c.signature),c.zip64?(zn(e,18,we),zn(e,22,we)):(zn(e,18,c.compressedSize),zn(e,22,c.uncompressedSize))}await a.writeUint8Array(new Uint8Array(s))}if(c.offset=e.offset,c.zip64){An(Un(c.rawExtraFieldZip64),20,BigInt(c.offset))}return e.offset+=c.length,c}finally{o&&o(),s&&s()}}(i,e,t,Object.assign({},n,{rawFilename:r,rawComment:s,version:o,lastModDate:d,rawExtraField:u,zip64:_,password:l,level:m,useWebWorkers:x,encryptionStrength:c,zipCrypto:f,bufferedWrite:w,keepOrder:g,dataDescriptor:b,signal:v}));return i.pendingOutputSize-=h,Object.assign(y,{name:e,comment:a,extraField:p}),new Ot(y)}async close(e=new Uint8Array(0)){const t=this,n=t.writer,i=t.files;let r=0,a=0,s=t.offset,o=i.size;for(const[,e]of i)a+=46+e.rawFilename.length+e.rawComment.length+e.rawExtraFieldZip64.length+e.rawExtraFieldAES.length+e.rawExtraField.length;const d=t.options.zip64||s>=we||a>=we||o>=ge,l=new Uint8Array(a+(d?98:22)),c=Un(l);if(e.length){if(!(e.length<=ge))throw new Error(fn);kn(c,r+20,e.length)}for(const[,e]of i){const{rawFilename:t,rawExtraFieldZip64:n,rawExtraFieldAES:i,rawExtraField:a,rawComment:s,version:o,headerArray:d,directory:f,zip64:u}=e,p=n.length+i.length+a.length;zn(c,r,ye),kn(c,r+4,o),En(l,d,r+6),kn(c,r+30,p),kn(c,r+32,s.length),f&&yn(c,r+38,16),zn(c,r+42,u?we:e.offset),En(l,t,r+46),En(l,n,r+46+t.length),En(l,i,r+46+t.length+n.length),En(l,a,46+t.length+n.length+i.length),En(l,s,r+46+t.length+p),r+=46+t.length+p+s.length}return d&&(zn(c,r,ze),An(c,r+4,BigInt(44)),kn(c,r+12,45),kn(c,r+14,45),An(c,r+24,BigInt(o)),An(c,r+32,BigInt(o)),An(c,r+40,BigInt(a)),An(c,r+48,BigInt(s)),zn(c,r+56,Ae),An(c,r+64,BigInt(s)+BigInt(a)),zn(c,r+72,1),o=ge,s=we,a=we,r+=76),zn(c,r,ke),kn(c,r+8,o),kn(c,r+10,o),zn(c,r+12,a),zn(c,r+16,s),await n.writeUint8Array(l),e.length&&await n.writeUint8Array(e),n.getData()}}function vn(e,t,n){return void 0===t[n]?e.options[n]:t[n]}function yn(e,t,n){e.setUint8(t,n)}function kn(e,t,n){e.setUint16(t,n,!0)}function zn(e,t,n){e.setUint32(t,n,!0)}function An(e,t,n){e.setBigUint64(t,n,!0)}function En(e,t,n){e.set(t,n)}function Un(e){return new DataView(e.buffer)}const Rn=524288;class Dn{constructor(e,t,n,i){const r=this;if(e.root&&i&&i.getChildByName(t))throw new Error("Entry filename already exists");n||(n={}),Object.assign(r,{fs:e,name:t,data:n.data,id:e.entries.length,parent:i,children:[],uncompressedSize:0}),e.entries.push(r),i&&r.parent.children.push(r)}moveTo(e){this.fs.move(this,e)}getFullname(){return this.getRelativeName()}getRelativeName(e=this.fs.root){let t=this.name,n=this.parent;for(;n&&n!=e;)t=(n.name?n.name+"/":"")+t,n=n.parent;return t}isDescendantOf(e){let t=this.parent;for(;t&&t.id!=e.id;)t=t.parent;return Boolean(t)}}class Sn extends Dn{constructor(e,t,n,i){super(e,t,n,i);const r=this;r.Reader=n.Reader,r.Writer=n.Writer,n.getData&&(r.getData=n.getData)}async getData(e,t={}){const n=this;return!e||e.constructor==n.Writer&&n.data?n.data:(n.reader=new n.Reader(n.data,t),await n.reader.init(),e.initialized||await e.init(),n.uncompressedSize=n.reader.size,async function(e,t){return n();async function n(i=0){const r=i*Rn;if(r<e.size){const a=await e.readUint8Array(r,Math.min(Rn,e.size-r));return await t.writeUint8Array(a),n(i+1)}return t.getData()}}(n.reader,e))}getText(e,t){return this.getData(new ie(e),t)}getBlob(e,t){return this.getData(new oe(e),t)}getData64URI(e,t){return this.getData(new ae(e),t)}getUint8Array(e){return this.getData(new me,e)}replaceBlob(e){Object.assign(this,{data:e,Reader:se,Writer:oe,reader:null})}replaceText(e){Object.assign(this,{data:e,Reader:ne,Writer:ie,reader:null})}replaceData64URI(e){Object.assign(this,{data:e,Reader:re,Writer:ae,reader:null})}replaceUint8Array(e){Object.assign(this,{data:e,Reader:_e,Writer:me,reader:null})}}class jn extends Dn{constructor(e,t,n,i){super(e,t,n,i),this.directory=!0}addDirectory(e){return Tn(this,e,null,!0)}addText(e,t){return Tn(this,e,{data:t,Reader:ne,Writer:ie})}addBlob(e,t){return Tn(this,e,{data:t,Reader:se,Writer:oe})}addData64URI(e,t){return Tn(this,e,{data:t,Reader:re,Writer:ae})}addUint8Array(e,t){return Tn(this,e,{data:t,Reader:_e,Writer:me})}addHttpContent(e,t,n={}){return Tn(this,e,{data:t,Reader:class extends he{constructor(e){super(e,n)}}})}async addFileSystemEntry(e){return async function(e,t){if(t.isDirectory){const i=e.addDirectory(t.name);return await n(i,t),i}return new Promise(((n,i)=>t.file((i=>n(e.addBlob(t.name,i))),i)));async function n(e,t){const r=await i(t);for(const t of r)t.isDirectory?await n(e.addDirectory(t.name),t):await new Promise(((n,i)=>{t.file((i=>{const r=e.addBlob(t.name,i);r.uncompressedSize=i.size,n(r)}),i)}))}function i(e){return new Promise(((t,n)=>{let i=[];function r(e){e.readEntries((n=>{n.length?(i=i.concat(n),r(e)):t(i)}),n)}e.isDirectory&&r(e.createReader()),e.isFile&&t(i)}))}}(this,e)}async addData(e,t){return Tn(this,e,t)}async importBlob(e,t={}){await this.importZip(new se(e),t)}async importData64URI(e,t={}){await this.importZip(new re(e),t)}async importUint8Array(e,t={}){await this.importZip(new _e(e),t)}async importHttpContent(e,t={}){await this.importZip(new he(e,t),t)}async exportBlob(e={}){return this.exportZip(new oe("application/zip"),e)}async exportData64URI(e={}){return this.exportZip(new ae("application/zip"),e)}async exportUint8Array(e={}){return this.exportZip(new me,e)}async importZip(e,t){e.initialized||await e.init();const n=new Yt(e,t);(await n.getEntries()).forEach((e=>{let n=this;const i=e.filename.split("/"),r=i.pop();i.forEach((e=>n=n.getChildByName(e)||new jn(this.fs,e,null,n))),e.directory||Tn(n,r,{data:e,Reader:Fn(Object.assign({},t))})}))}async exportZip(e,t){const n=this;await Cn(n),await e.init();const i=new bn(e,t);return await async function(e,t,n,i){const r=t,a=new Map;async function s(e,t){async function o(){if(i.bufferedWrite)await Promise.all(t.children.map(d));else for(const e of t.children)await d(e)}async function d(t){const o=i.relativePath?t.getRelativeName(r):t.getFullname();await e.add(o,t.reader,Object.assign({directory:t.directory},Object.assign({},i,{onprogress:e=>{if(i.onprogress){a.set(o,e);try{i.onprogress(Array.from(a.values()).reduce(((e,t)=>e+t)),n)}catch(e){}}}}))),await s(e,t)}await o()}await s(e,t)}(i,n,function(e,t){let n=0;return e.forEach(i),n;function i(e){n+=e[t],e.children&&e.children.forEach(i)}}([n],"uncompressedSize"),t),await i.close(),e.getData()}getChildByName(e){const t=this.children;for(let n=0;n<t.length;n++){const i=t[n];if(i.name==e)return i}}}const In={FS:class{constructor(){On(this)}get children(){return this.root.children}remove(e){Bn(e),this.entries[e.id]=null}move(e,t){if(e==this.root)throw new Error("Root directory cannot be moved");if(!t.directory)throw new Error("Target entry is not a directory");if(t.isDescendantOf(e))throw new Error("Entry is a ancestor of target entry");if(e!=t){if(t.getChildByName(e.name))throw new Error("Entry filename already exists");Bn(e),e.parent=t,t.children.push(e)}}find(e){const t=e.split("/");let n=this.root;for(let e=0;n&&e<t.length;e++)n=n.getChildByName(t[e]);return n}getById(e){return this.entries[e]}getChildByName(e){return this.root.getChildByName(e)}addDirectory(e){return this.root.addDirectory(e)}addText(e,t){return this.root.addText(e,t)}addBlob(e,t){return this.root.addBlob(e,t)}addData64URI(e,t){return this.root.addData64URI(e,t)}addHttpContent(e,t,n){return this.root.addHttpContent(e,t,n)}async addFileSystemEntry(e){return this.root.addFileSystemEntry(e)}async addData(e,t){return this.root.addData(e,t)}async importBlob(e,t){On(this),await this.root.importBlob(e,t)}async importData64URI(e,t){On(this),await this.root.importData64URI(e,t)}async importHttpContent(e,t){On(this),await this.root.importHttpContent(e,t)}async exportBlob(e){return this.root.exportBlob(e)}async exportData64URI(e){return this.root.exportData64URI(e)}},ZipDirectoryEntry:jn,ZipFileEntry:Sn};function Fn(e){return class extends ee{constructor(e,t={}){super(),this.entry=e,this.options=t}async init(){const t=this;t.size=t.entry.uncompressedSize;const n=await t.entry.getData(new oe,Object.assign({},t.options,e));t.data=n,t.blobReader=new se(n)}async readUint8Array(e,t){return this.blobReader.readUint8Array(e,t)}}}async function Cn(e){if(e.children.length)for(const t of e.children)t.directory?await Cn(t):(t.reader=new t.Reader(t.data),await t.reader.init(),t.uncompressedSize=t.reader.size)}function Bn(e){const t=e.parent.children;t.forEach(((n,i)=>{n.id==e.id&&t.splice(i,1)}))}function On(e){e.entries=[],e.root=new jn(e)}function Tn(e,t,n,i){if(e.directory)return i?new jn(e.fs,t,n,e):new Sn(e.fs,t,n,e);throw new Error("Parent entry is not a directory")}(()=>{if("function"==typeof URL.createObjectURL){const e=(()=>{const e=[];for(let t=0;t<256;t++){let n=t;for(let e=0;e<8;e++)1&n?n=n>>>1^3988292384:n>>>=1;e[t]=n}class t{constructor(e){this.crc=e||-1}append(t){let n=0|this.crc;for(let i=0,r=0|t.length;i<r;i++)n=n>>>8^e[255&(n^t[i])];this.crc=n}get(){return~this.crc}}const n={concat(e,t){if(0===e.length||0===t.length)return e.concat(t);const i=e[e.length-1],r=n.getPartial(i);return 32===r?e.concat(t):n._shiftRight(t,r,0|i,e.slice(0,e.length-1))},bitLength(e){const t=e.length;if(0===t)return 0;const i=e[t-1];return 32*(t-1)+n.getPartial(i)},clamp(e,t){if(32*e.length<t)return e;const i=(e=e.slice(0,Math.ceil(t/32))).length;return t&=31,i>0&&t&&(e[i-1]=n.partial(t,e[i-1]&2147483648>>t-1,1)),e},partial:(e,t,n)=>32===e?t:(n?0|t:t<<32-e)+1099511627776*e,getPartial:e=>Math.round(e/1099511627776)||32,_shiftRight(e,t,i,r){for(void 0===r&&(r=[]);t>=32;t-=32)r.push(i),i=0;if(0===t)return r.concat(e);for(let n=0;n<e.length;n++)r.push(i|e[n]>>>t),i=e[n]<<32-t;const a=e.length?e[e.length-1]:0,s=n.getPartial(a);return r.push(n.partial(t+s&31,t+s>32?i:r.pop(),1)),r}},i={bytes:{fromBits(e){const t=n.bitLength(e)/8,i=new Uint8Array(t);let r;for(let n=0;n<t;n++)0==(3&n)&&(r=e[n/4]),i[n]=r>>>24,r<<=8;return i},toBits(e){const t=[];let i,r=0;for(i=0;i<e.length;i++)r=r<<8|e[i],3==(3&i)&&(t.push(r),r=0);return 3&i&&t.push(n.partial(8*(3&i),r)),t}}},r={sha1:function(e){e?(this._h=e._h.slice(0),this._buffer=e._buffer.slice(0),this._length=e._length):this.reset()}};r.sha1.prototype={blockSize:512,reset:function(){const e=this;return e._h=this._init.slice(0),e._buffer=[],e._length=0,e},update:function(e){const t=this;"string"==typeof e&&(e=i.utf8String.toBits(e));const r=t._buffer=n.concat(t._buffer,e),a=t._length,s=t._length=a+n.bitLength(e);if(s>9007199254740991)throw new Error("Cannot hash more than 2^53 - 1 bits");const o=new Uint32Array(r);let d=0;for(let e=t.blockSize+a-(t.blockSize+a&t.blockSize-1);e<=s;e+=t.blockSize)t._block(o.subarray(16*d,16*(d+1))),d+=1;return r.splice(0,16*d),t},finalize:function(){const e=this;let t=e._buffer;const i=e._h;t=n.concat(t,[n.partial(1,1)]);for(let e=t.length+2;15&e;e++)t.push(0);for(t.push(Math.floor(e._length/4294967296)),t.push(0|e._length);t.length;)e._block(t.splice(0,16));return e.reset(),i},_init:[1732584193,4023233417,2562383102,271733878,3285377520],_key:[1518500249,1859775393,2400959708,3395469782],_f:function(e,t,n,i){return e<=19?t&n|~t&i:e<=39?t^n^i:e<=59?t&n|t&i|n&i:e<=79?t^n^i:void 0},_S:function(e,t){return t<<e|t>>>32-e},_block:function(e){const t=this,n=t._h,i=Array(80);for(let t=0;t<16;t++)i[t]=e[t];let r=n[0],a=n[1],s=n[2],o=n[3],d=n[4];for(let e=0;e<=79;e++){e>=16&&(i[e]=t._S(1,i[e-3]^i[e-8]^i[e-14]^i[e-16]));const n=t._S(5,r)+t._f(e,a,s,o)+d+i[e]+t._key[Math.floor(e/20)]|0;d=o,o=s,s=t._S(30,a),a=r,r=n}n[0]=n[0]+r|0,n[1]=n[1]+a|0,n[2]=n[2]+s|0,n[3]=n[3]+o|0,n[4]=n[4]+d|0}};const a={name:"PBKDF2"},s=Object.assign({hash:{name:"HMAC"}},a),o=Object.assign({iterations:1e3,hash:{name:"SHA-1"}},a),d=["deriveBits"],l=[8,12,16],c=[16,24,32],f=[0,0,0,0],u=crypto.subtle,p=i.bytes,h=class{constructor(e){const t=this;t._tables=[[[],[],[],[],[]],[[],[],[],[],[]]],t._tables[0][0][0]||t._precompute();const n=t._tables[0][4],i=t._tables[1],r=e.length;let a,s,o,d=1;if(4!==r&&6!==r&&8!==r)throw new Error("invalid aes key size");for(t._key=[s=e.slice(0),o=[]],a=r;a<4*r+28;a++){let e=s[a-1];(a%r==0||8===r&&a%r==4)&&(e=n[e>>>24]<<24^n[e>>16&255]<<16^n[e>>8&255]<<8^n[255&e],a%r==0&&(e=e<<8^e>>>24^d<<24,d=d<<1^283*(d>>7))),s[a]=s[a-r]^e}for(let e=0;a;e++,a--){const t=s[3&e?a:a-4];o[e]=a<=4||e<4?t:i[0][n[t>>>24]]^i[1][n[t>>16&255]]^i[2][n[t>>8&255]]^i[3][n[255&t]]}}encrypt(e){return this._crypt(e,0)}decrypt(e){return this._crypt(e,1)}_precompute(){const e=this._tables[0],t=this._tables[1],n=e[4],i=t[4],r=[],a=[];let s,o,d,l;for(let e=0;e<256;e++)a[(r[e]=e<<1^283*(e>>7))^e]=e;for(let c=s=0;!n[c];c^=o||1,s=a[s]||1){let a=s^s<<1^s<<2^s<<3^s<<4;a=a>>8^255&a^99,n[c]=a,i[a]=c,l=r[d=r[o=r[c]]];let f=16843009*l^65537*d^257*o^16843008*c,u=257*r[a]^16843008*a;for(let n=0;n<4;n++)e[n][c]=u=u<<24^u>>>8,t[n][a]=f=f<<24^f>>>8}for(let n=0;n<5;n++)e[n]=e[n].slice(0),t[n]=t[n].slice(0)}_crypt(e,t){if(4!==e.length)throw new Error("invalid aes block size");const n=this._key[t],i=n.length/4-2,r=[0,0,0,0],a=this._tables[t],s=a[0],o=a[1],d=a[2],l=a[3],c=a[4];let f,u,p,h=e[0]^n[0],_=e[t?3:1]^n[1],m=e[2]^n[2],x=e[t?1:3]^n[3],w=4;for(let e=0;e<i;e++)f=s[h>>>24]^o[_>>16&255]^d[m>>8&255]^l[255&x]^n[w],u=s[_>>>24]^o[m>>16&255]^d[x>>8&255]^l[255&h]^n[w+1],p=s[m>>>24]^o[x>>16&255]^d[h>>8&255]^l[255&_]^n[w+2],x=s[x>>>24]^o[h>>16&255]^d[_>>8&255]^l[255&m]^n[w+3],w+=4,h=f,_=u,m=p;for(let e=0;e<4;e++)r[t?3&-e:e]=c[h>>>24]<<24^c[_>>16&255]<<16^c[m>>8&255]<<8^c[255&x]^n[w++],f=h,h=_,_=m,m=x,x=f;return r}},_=class{constructor(e,t){this._prf=e,this._initIv=t,this._iv=t}reset(){this._iv=this._initIv}update(e){return this.calculate(this._prf,e,this._iv)}incWord(e){if(255==(e>>24&255)){let t=e>>16&255,n=e>>8&255,i=255&e;255===t?(t=0,255===n?(n=0,255===i?i=0:++i):++n):++t,e=0,e+=t<<16,e+=n<<8,e+=i}else e+=1<<24;return e}incCounter(e){0===(e[0]=this.incWord(e[0]))&&(e[1]=this.incWord(e[1]))}calculate(e,t,i){let r;if(!(r=t.length))return[];const a=n.bitLength(t);for(let n=0;n<r;n+=4){this.incCounter(i);const r=e.encrypt(i);t[n]^=r[0],t[n+1]^=r[1],t[n+2]^=r[2],t[n+3]^=r[3]}return n.clamp(t,a)}},m=class{constructor(e){const t=this,n=t._hash=r.sha1,i=[[],[]],a=n.prototype.blockSize/32;t._baseHash=[new n,new n],e.length>a&&(e=n.hash(e));for(let t=0;t<a;t++)i[0][t]=909522486^e[t],i[1][t]=1549556828^e[t];t._baseHash[0].update(i[0]),t._baseHash[1].update(i[1]),t._resultHash=new n(t._baseHash[0])}reset(){const e=this;e._resultHash=new e._hash(e._baseHash[0]),e._updated=!1}update(e){this._updated=!0,this._resultHash.update(e)}digest(){const e=this,t=e._resultHash.finalize(),n=new e._hash(e._baseHash[1]).update(t).finalize();return e.reset(),n}};class x{constructor(e,t,n){Object.assign(this,{password:e,signed:t,strength:n-1,pendingInput:new Uint8Array(0)})}async append(e){const t=this;if(t.password){const n=y(e,0,l[t.strength]+2);await async function(e,t,n){await b(e,n,y(t,0,l[e.strength]));const i=y(t,l[e.strength]),r=e.keys.passwordVerification;if(r[0]!=i[0]||r[1]!=i[1])throw new Error("Invalid pasword")}(t,n,t.password),t.password=null,t.aesCtrGladman=new _(new h(t.keys.key),Array.from(f)),t.hmac=new m(t.keys.authentication),e=y(e,l[t.strength]+2)}return g(t,e,new Uint8Array(e.length-10-(e.length-10)%16),0,10,!0)}async flush(){const e=this,t=e.pendingInput,n=y(t,0,t.length-10),i=y(t,t.length-10);let r=new Uint8Array(0);if(n.length){const t=p.toBits(n);e.hmac.update(t);const i=e.aesCtrGladman.update(t);r=p.fromBits(i)}let a=!0;if(e.signed){const t=y(p.fromBits(e.hmac.digest()),0,10);for(let e=0;e<10;e++)t[e]!=i[e]&&(a=!1)}return{valid:a,data:r}}}class w{constructor(e,t){Object.assign(this,{password:e,strength:t-1,pendingInput:new Uint8Array(0)})}async append(e){const t=this;let n=new Uint8Array(0);t.password&&(n=await async function(e,t){const n=crypto.getRandomValues(new Uint8Array(l[e.strength]));return await b(e,t,n),v(n,e.keys.passwordVerification)}(t,t.password),t.password=null,t.aesCtrGladman=new _(new h(t.keys.key),Array.from(f)),t.hmac=new m(t.keys.authentication));const i=new Uint8Array(n.length+e.length-e.length%16);return i.set(n,0),g(t,e,i,n.length,0)}async flush(){const e=this;let t=new Uint8Array(0);if(e.pendingInput.length){const n=e.aesCtrGladman.update(p.toBits(e.pendingInput));e.hmac.update(n),t=p.fromBits(n)}const n=y(p.fromBits(e.hmac.digest()),0,10);return{data:v(t,n),signature:n}}}function g(e,t,n,i,r,a){const s=t.length-r;let o;for(e.pendingInput.length&&(t=v(e.pendingInput,t),n=function(e,t){if(t&&t>e.length){const n=e;(e=new Uint8Array(t)).set(n,0)}return e}(n,s-s%16)),o=0;o<=s-16;o+=16){const r=p.toBits(y(t,o,o+16));a&&e.hmac.update(r);const s=e.aesCtrGladman.update(r);a||e.hmac.update(s),n.set(p.fromBits(s),o+i)}return e.pendingInput=y(t,o),n}async function b(e,t,n){const i=(new TextEncoder).encode(t),r=await u.importKey("raw",i,s,!1,d),a=await u.deriveBits(Object.assign({salt:n},o),r,8*(2*c[e.strength]+2)),l=new Uint8Array(a);e.keys={key:p.toBits(y(l,0,c[e.strength])),authentication:p.toBits(y(l,c[e.strength],2*c[e.strength])),passwordVerification:y(l,2*c[e.strength])}}function v(e,t){let n=e;return e.length+t.length&&(n=new Uint8Array(e.length+t.length),n.set(e,0),n.set(t,e.length)),n}function y(e,t,n){return e.subarray(t,n)}class k{constructor(e,t){Object.assign(this,{password:e,passwordVerification:t}),U(this,e)}async append(e){const t=this;if(t.password){const n=A(t,e.subarray(0,12));if(t.password=null,n[11]!=t.passwordVerification)throw new Error("Invalid pasword");e=e.subarray(12)}return A(t,e)}async flush(){return{valid:!0,data:new Uint8Array(0)}}}class z{constructor(e,t){Object.assign(this,{password:e,passwordVerification:t}),U(this,e)}async append(e){const t=this;let n,i;if(t.password){t.password=null;const r=crypto.getRandomValues(new Uint8Array(12));r[11]=t.passwordVerification,n=new Uint8Array(e.length+r.length),n.set(E(t,r),0),i=12}else n=new Uint8Array(e.length),i=0;return n.set(E(t,e),i),n}async flush(){return{data:new Uint8Array(0)}}}function A(e,t){const n=new Uint8Array(t.length);for(let i=0;i<t.length;i++)n[i]=D(e)^t[i],R(e,n[i]);return n}function E(e,t){const n=new Uint8Array(t.length);for(let i=0;i<t.length;i++)n[i]=D(e)^t[i],R(e,t[i]);return n}function U(e,n){e.keys=[305419896,591751049,878082192],e.crcKey0=new t(e.keys[0]),e.crcKey2=new t(e.keys[2]);for(let t=0;t<n.length;t++)R(e,n.charCodeAt(t))}function R(e,t){e.crcKey0.append([t]),e.keys[0]=~e.crcKey0.get(),e.keys[1]=j(e.keys[1]+S(e.keys[0])),e.keys[1]=j(Math.imul(e.keys[1],134775813)+1),e.crcKey2.append([e.keys[1]>>>24]),e.keys[2]=~e.crcKey2.get()}function D(e){const t=2|e.keys[2];return S(Math.imul(t,1^t)>>>8)}function S(e){return 255&e}function j(e){return 4294967295&e}class I{constructor(e,{signature:n,password:i,signed:r,compressed:a,zipCrypto:s,passwordVerification:o,encryptionStrength:d}){const l=Boolean(i);Object.assign(this,{signature:n,encrypted:l,signed:r,compressed:a,inflate:a&&new e,crc32:r&&new t,zipCrypto:s,decrypt:l&&s?new k(i,o):new x(i,r,d)})}async append(e){const t=this;return t.encrypted&&e.length&&(e=await t.decrypt.append(e)),t.compressed&&e.length&&(e=await t.inflate.append(e)),(!t.encrypted||t.zipCrypto)&&t.signed&&e.length&&t.crc32.append(e),e}async flush(){const e=this;let t,n=new Uint8Array(0);if(e.encrypted){const t=await e.decrypt.flush();if(!t.valid)throw new Error("Invalid signature");n=t.data}if((!e.encrypted||e.zipCrypto)&&e.signed){const n=new DataView(new Uint8Array(4).buffer);if(t=e.crc32.get(),n.setUint32(0,t),e.cipher!=n.getUint32(0,!1))throw new Error("Invalid signature")}return e.compressed&&(n=await e.inflate.append(n)||new Uint8Array(0),await e.inflate.flush()),{data:n,signature:t}}}class F{constructor(e,{encrypted:n,signed:i,compressed:r,level:a,zipCrypto:s,password:o,passwordVerification:d,encryptionStrength:l}){Object.assign(this,{encrypted:n,signed:i,compressed:r,deflate:r&&new e({level:a||5}),crc32:i&&new t,zipCrypto:s,encrypt:n&&s?new z(o,d):new w(o,l)})}async append(e){const t=this;let n=e;return t.compressed&&e.length&&(n=await t.deflate.append(e)),t.encrypted&&n.length&&(n=await t.encrypt.append(n)),(!t.encrypted||t.zipCrypto)&&t.signed&&e.length&&t.crc32.append(e),n}async flush(){const e=this;let t,n=new Uint8Array(0);if(e.compressed&&(n=await e.deflate.flush()||new Uint8Array(0)),e.encrypted){n=await e.encrypt.append(n);const i=await e.encrypt.flush();t=i.signature;const r=new Uint8Array(n.length+i.data.length);r.set(n,0),r.set(i.data,n.length),n=r}return e.encrypted&&!e.zipCrypto||!e.signed||(t=e.crc32.get()),{data:n,signature:t}}}const C={init(e){e.scripts&&e.scripts.length&&importScripts.apply(void 0,e.scripts);const t=e.options;let n;self.initCodec&&self.initCodec(),t.codecType.startsWith("deflate")?n=self.Deflate:t.codecType.startsWith("inflate")&&(n=self.Inflate),B=function(e,t){return t.codecType.startsWith("deflate")?new F(e,t):t.codecType.startsWith("inflate")?new I(e,t):void 0}(n,t)},append:async e=>({data:await B.append(e.data)}),flush:()=>B.flush()};let B;function O(e){return e.map((([e,t])=>new Array(e).fill(t,0,e))).flat()}addEventListener("message",(async e=>{const t=e.data,n=t.type,i=C[n];if(i)try{t.data&&(t.data=new Uint8Array(t.data));const e=await i(t)||{};if(e.type=n,e.data)try{e.data=e.data.buffer,postMessage(e,[e.data])}catch(t){postMessage(e)}else postMessage(e)}catch(e){postMessage({type:n,error:{message:e.message,stack:e.stack}})}}));const T=[0,1,2,3].concat(...O([[2,4],[2,5],[4,6],[4,7],[8,8],[8,9],[16,10],[16,11],[32,12],[32,13],[64,14],[64,15],[2,0],[1,16],[1,17],[2,18],[2,19],[4,20],[4,21],[8,22],[8,23],[16,24],[16,25],[32,26],[32,27],[64,28],[64,29]]));function M(){const e=this;function t(e,t){let n=0;do{n|=1&e,e>>>=1,n<<=1}while(--t>0);return n>>>1}e.build_tree=function(n){const i=e.dyn_tree,r=e.stat_desc.static_tree,a=e.stat_desc.elems;let s,o,d,l=-1;for(n.heap_len=0,n.heap_max=573,s=0;s<a;s++)0!==i[2*s]?(n.heap[++n.heap_len]=l=s,n.depth[s]=0):i[2*s+1]=0;for(;n.heap_len<2;)d=n.heap[++n.heap_len]=l<2?++l:0,i[2*d]=1,n.depth[d]=0,n.opt_len--,r&&(n.static_len-=r[2*d+1]);for(e.max_code=l,s=Math.floor(n.heap_len/2);s>=1;s--)n.pqdownheap(i,s);d=a;do{s=n.heap[1],n.heap[1]=n.heap[n.heap_len--],n.pqdownheap(i,1),o=n.heap[1],n.heap[--n.heap_max]=s,n.heap[--n.heap_max]=o,i[2*d]=i[2*s]+i[2*o],n.depth[d]=Math.max(n.depth[s],n.depth[o])+1,i[2*s+1]=i[2*o+1]=d,n.heap[1]=d++,n.pqdownheap(i,1)}while(n.heap_len>=2);n.heap[--n.heap_max]=n.heap[1],function(t){const n=e.dyn_tree,i=e.stat_desc.static_tree,r=e.stat_desc.extra_bits,a=e.stat_desc.extra_base,s=e.stat_desc.max_length;let o,d,l,c,f,u,p=0;for(c=0;c<=15;c++)t.bl_count[c]=0;for(n[2*t.heap[t.heap_max]+1]=0,o=t.heap_max+1;o<573;o++)d=t.heap[o],c=n[2*n[2*d+1]+1]+1,c>s&&(c=s,p++),n[2*d+1]=c,d>e.max_code||(t.bl_count[c]++,f=0,d>=a&&(f=r[d-a]),u=n[2*d],t.opt_len+=u*(c+f),i&&(t.static_len+=u*(i[2*d+1]+f)));if(0!==p){do{for(c=s-1;0===t.bl_count[c];)c--;t.bl_count[c]--,t.bl_count[c+1]+=2,t.bl_count[s]--,p-=2}while(p>0);for(c=s;0!==c;c--)for(d=t.bl_count[c];0!==d;)l=t.heap[--o],l>e.max_code||(n[2*l+1]!=c&&(t.opt_len+=(c-n[2*l+1])*n[2*l],n[2*l+1]=c),d--)}}(n),function(e,n,i){const r=[];let a,s,o,d=0;for(a=1;a<=15;a++)r[a]=d=d+i[a-1]<<1;for(s=0;s<=n;s++)o=e[2*s+1],0!==o&&(e[2*s]=t(r[o]++,o))}(i,e.max_code,n.bl_count)}}function W(e,t,n,i,r){const a=this;a.static_tree=e,a.extra_bits=t,a.extra_base=n,a.elems=i,a.max_length=r}function q(e,t,n,i,r){const a=this;a.good_length=e,a.max_lazy=t,a.nice_length=n,a.max_chain=i,a.func=r}M._length_code=[0,1,2,3,4,5,6,7].concat(...O([[2,8],[2,9],[2,10],[2,11],[4,12],[4,13],[4,14],[4,15],[8,16],[8,17],[8,18],[8,19],[16,20],[16,21],[16,22],[16,23],[32,24],[32,25],[32,26],[31,27],[1,28]])),M.base_length=[0,1,2,3,4,5,6,7,8,10,12,14,16,20,24,28,32,40,48,56,64,80,96,112,128,160,192,224,0],M.base_dist=[0,1,2,3,4,6,8,12,16,24,32,48,64,96,128,192,256,384,512,768,1024,1536,2048,3072,4096,6144,8192,12288,16384,24576],M.d_code=function(e){return e<256?T[e]:T[256+(e>>>7)]},M.extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],M.extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],M.extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],M.bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],W.static_ltree=[12,8,140,8,76,8,204,8,44,8,172,8,108,8,236,8,28,8,156,8,92,8,220,8,60,8,188,8,124,8,252,8,2,8,130,8,66,8,194,8,34,8,162,8,98,8,226,8,18,8,146,8,82,8,210,8,50,8,178,8,114,8,242,8,10,8,138,8,74,8,202,8,42,8,170,8,106,8,234,8,26,8,154,8,90,8,218,8,58,8,186,8,122,8,250,8,6,8,134,8,70,8,198,8,38,8,166,8,102,8,230,8,22,8,150,8,86,8,214,8,54,8,182,8,118,8,246,8,14,8,142,8,78,8,206,8,46,8,174,8,110,8,238,8,30,8,158,8,94,8,222,8,62,8,190,8,126,8,254,8,1,8,129,8,65,8,193,8,33,8,161,8,97,8,225,8,17,8,145,8,81,8,209,8,49,8,177,8,113,8,241,8,9,8,137,8,73,8,201,8,41,8,169,8,105,8,233,8,25,8,153,8,89,8,217,8,57,8,185,8,121,8,249,8,5,8,133,8,69,8,197,8,37,8,165,8,101,8,229,8,21,8,149,8,85,8,213,8,53,8,181,8,117,8,245,8,13,8,141,8,77,8,205,8,45,8,173,8,109,8,237,8,29,8,157,8,93,8,221,8,61,8,189,8,125,8,253,8,19,9,275,9,147,9,403,9,83,9,339,9,211,9,467,9,51,9,307,9,179,9,435,9,115,9,371,9,243,9,499,9,11,9,267,9,139,9,395,9,75,9,331,9,203,9,459,9,43,9,299,9,171,9,427,9,107,9,363,9,235,9,491,9,27,9,283,9,155,9,411,9,91,9,347,9,219,9,475,9,59,9,315,9,187,9,443,9,123,9,379,9,251,9,507,9,7,9,263,9,135,9,391,9,71,9,327,9,199,9,455,9,39,9,295,9,167,9,423,9,103,9,359,9,231,9,487,9,23,9,279,9,151,9,407,9,87,9,343,9,215,9,471,9,55,9,311,9,183,9,439,9,119,9,375,9,247,9,503,9,15,9,271,9,143,9,399,9,79,9,335,9,207,9,463,9,47,9,303,9,175,9,431,9,111,9,367,9,239,9,495,9,31,9,287,9,159,9,415,9,95,9,351,9,223,9,479,9,63,9,319,9,191,9,447,9,127,9,383,9,255,9,511,9,0,7,64,7,32,7,96,7,16,7,80,7,48,7,112,7,8,7,72,7,40,7,104,7,24,7,88,7,56,7,120,7,4,7,68,7,36,7,100,7,20,7,84,7,52,7,116,7,3,8,131,8,67,8,195,8,35,8,163,8,99,8,227,8],W.static_dtree=[0,5,16,5,8,5,24,5,4,5,20,5,12,5,28,5,2,5,18,5,10,5,26,5,6,5,22,5,14,5,30,5,1,5,17,5,9,5,25,5,5,5,21,5,13,5,29,5,3,5,19,5,11,5,27,5,7,5,23,5],W.static_l_desc=new W(W.static_ltree,M.extra_lbits,257,286,15),W.static_d_desc=new W(W.static_dtree,M.extra_dbits,0,30,15),W.static_bl_desc=new W(null,M.extra_blbits,0,19,7);const H=[new q(0,0,0,0,0),new q(4,4,8,4,1),new q(4,5,16,8,1),new q(4,6,32,32,1),new q(4,4,16,16,2),new q(8,16,32,32,2),new q(8,16,128,128,2),new q(8,32,128,256,2),new q(32,128,258,1024,2),new q(32,258,258,4096,2)],P=["need dictionary","stream end","","","stream error","data error","","buffer error","",""];function L(e,t,n,i){const r=e[2*t],a=e[2*n];return r<a||r==a&&i[t]<=i[n]}function N(){const e=this;let t,n,i,r,a,s,o,d,l,c,f,u,p,h,_,m,x,w,g,b,v,y,k,z,A,E,U,R,D,S,j,I,F;const C=new M,B=new M,O=new M;let T,q,N,V,Z,K,G,Y;function X(){let t;for(t=0;t<286;t++)j[2*t]=0;for(t=0;t<30;t++)I[2*t]=0;for(t=0;t<19;t++)F[2*t]=0;j[512]=1,e.opt_len=e.static_len=0,N=Z=0}function J(e,t){let n,i=-1,r=e[1],a=0,s=7,o=4;0===r&&(s=138,o=3),e[2*(t+1)+1]=65535;for(let d=0;d<=t;d++)n=r,r=e[2*(d+1)+1],++a<s&&n==r||(a<o?F[2*n]+=a:0!==n?(n!=i&&F[2*n]++,F[32]++):a<=10?F[34]++:F[36]++,a=0,i=n,0===r?(s=138,o=3):n==r?(s=6,o=3):(s=7,o=4))}function Q(t){e.pending_buf[e.pending++]=t}function $(e){Q(255&e),Q(e>>>8&255)}function ee(e,t){let n;const i=t;Y>16-i?(n=e,G|=n<<Y&65535,$(G),G=n>>>16-Y,Y+=i-16):(G|=e<<Y&65535,Y+=i)}function te(e,t){const n=2*e;ee(65535&t[n],65535&t[n+1])}function ne(e,t){let n,i,r=-1,a=e[1],s=0,o=7,d=4;for(0===a&&(o=138,d=3),n=0;n<=t;n++)if(i=a,a=e[2*(n+1)+1],!(++s<o&&i==a)){if(s<d)do{te(i,F)}while(0!=--s);else 0!==i?(i!=r&&(te(i,F),s--),te(16,F),ee(s-3,2)):s<=10?(te(17,F),ee(s-3,3)):(te(18,F),ee(s-11,7));s=0,r=i,0===a?(o=138,d=3):i==a?(o=6,d=3):(o=7,d=4)}}function ie(){16==Y?($(G),G=0,Y=0):Y>=8&&(Q(255&G),G>>>=8,Y-=8)}function re(t,n){let i,r,a;if(e.pending_buf[V+2*N]=t>>>8&255,e.pending_buf[V+2*N+1]=255&t,e.pending_buf[T+N]=255&n,N++,0===t?j[2*n]++:(Z++,t--,j[2*(M._length_code[n]+256+1)]++,I[2*M.d_code(t)]++),0==(8191&N)&&U>2){for(i=8*N,r=v-x,a=0;a<30;a++)i+=I[2*a]*(5+M.extra_dbits[a]);if(i>>>=3,Z<Math.floor(N/2)&&i<Math.floor(r/2))return!0}return N==q-1}function ae(t,n){let i,r,a,s,o=0;if(0!==N)do{i=e.pending_buf[V+2*o]<<8&65280|255&e.pending_buf[V+2*o+1],r=255&e.pending_buf[T+o],o++,0===i?te(r,t):(a=M._length_code[r],te(a+256+1,t),s=M.extra_lbits[a],0!==s&&(r-=M.base_length[a],ee(r,s)),i--,a=M.d_code(i),te(a,n),s=M.extra_dbits[a],0!==s&&(i-=M.base_dist[a],ee(i,s)))}while(o<N);te(256,t),K=t[513]}function se(){Y>8?$(G):Y>0&&Q(255&G),G=0,Y=0}function oe(t,n,i){ee(0+(i?1:0),3),function(t,n,i){se(),K=8,$(n),$(~n),e.pending_buf.set(d.subarray(t,t+n),e.pending),e.pending+=n}(t,n)}function de(t,n,i){let r,a,s=0;U>0?(C.build_tree(e),B.build_tree(e),s=function(){let t;for(J(j,C.max_code),J(I,B.max_code),O.build_tree(e),t=18;t>=3&&0===F[2*M.bl_order[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}(),r=e.opt_len+3+7>>>3,a=e.static_len+3+7>>>3,a<=r&&(r=a)):r=a=n+5,n+4<=r&&-1!=t?oe(t,n,i):a==r?(ee(2+(i?1:0),3),ae(W.static_ltree,W.static_dtree)):(ee(4+(i?1:0),3),function(e,t,n){let i;for(ee(e-257,5),ee(t-1,5),ee(n-4,4),i=0;i<n;i++)ee(F[2*M.bl_order[i]+1],3);ne(j,e-1),ne(I,t-1)}(C.max_code+1,B.max_code+1,s+1),ae(j,I)),X(),i&&se()}function le(e){de(x>=0?x:-1,v-x,e),x=v,t.flush_pending()}function ce(){let e,n,i,r;do{if(r=l-k-v,0===r&&0===v&&0===k)r=a;else if(-1==r)r--;else if(v>=a+a-262){d.set(d.subarray(a,a+a),0),y-=a,v-=a,x-=a,e=p,i=e;do{n=65535&f[--i],f[i]=n>=a?n-a:0}while(0!=--e);e=a,i=e;do{n=65535&c[--i],c[i]=n>=a?n-a:0}while(0!=--e);r+=a}if(0===t.avail_in)return;e=t.read_buf(d,v+k,r),k+=e,k>=3&&(u=255&d[v],u=(u<<m^255&d[v+1])&_)}while(k<262&&0!==t.avail_in)}function fe(e){let t,n,i=A,r=v,s=z;const l=v>a-262?v-(a-262):0;let f=S;const u=o,p=v+258;let h=d[r+s-1],_=d[r+s];z>=D&&(i>>=2),f>k&&(f=k);do{if(t=e,d[t+s]==_&&d[t+s-1]==h&&d[t]==d[r]&&d[++t]==d[r+1]){r+=2,t++;do{}while(d[++r]==d[++t]&&d[++r]==d[++t]&&d[++r]==d[++t]&&d[++r]==d[++t]&&d[++r]==d[++t]&&d[++r]==d[++t]&&d[++r]==d[++t]&&d[++r]==d[++t]&&r<p);if(n=258-(p-r),r=p-258,n>s){if(y=e,s=n,n>=f)break;h=d[r+s-1],_=d[r+s]}}}while((e=65535&c[e&u])>l&&0!=--i);return s<=k?s:k}function ue(t){return t.total_in=t.total_out=0,t.msg=null,e.pending=0,e.pending_out=0,n=113,r=0,C.dyn_tree=j,C.stat_desc=W.static_l_desc,B.dyn_tree=I,B.stat_desc=W.static_d_desc,O.dyn_tree=F,O.stat_desc=W.static_bl_desc,G=0,Y=0,K=8,X(),function(){l=2*a,f[p-1]=0;for(let e=0;e<p-1;e++)f[e]=0;E=H[U].max_lazy,D=H[U].good_length,S=H[U].nice_length,A=H[U].max_chain,v=0,x=0,k=0,w=z=2,b=0,u=0}(),0}e.depth=[],e.bl_count=[],e.heap=[],j=[],I=[],F=[],e.pqdownheap=function(t,n){const i=e.heap,r=i[n];let a=n<<1;for(;a<=e.heap_len&&(a<e.heap_len&&L(t,i[a+1],i[a],e.depth)&&a++,!L(t,r,i[a],e.depth));)i[n]=i[a],n=a,a<<=1;i[n]=r},e.deflateInit=function(t,n,r,l,u,x){return l||(l=8),u||(u=8),x||(x=0),t.msg=null,-1==n&&(n=6),u<1||u>9||8!=l||r<9||r>15||n<0||n>9||x<0||x>2?-2:(t.dstate=e,s=r,a=1<<s,o=a-1,h=u+7,p=1<<h,_=p-1,m=Math.floor((h+3-1)/3),d=new Uint8Array(2*a),c=[],f=[],q=1<<u+6,e.pending_buf=new Uint8Array(4*q),i=4*q,V=Math.floor(q/2),T=3*q,U=n,R=x,ue(t))},e.deflateEnd=function(){return 42!=n&&113!=n&&666!=n?-2:(e.pending_buf=null,f=null,c=null,d=null,e.dstate=null,113==n?-3:0)},e.deflateParams=function(e,t,n){let i=0;return-1==t&&(t=6),t<0||t>9||n<0||n>2?-2:(H[U].func!=H[t].func&&0!==e.total_in&&(i=e.deflate(1)),U!=t&&(U=t,E=H[U].max_lazy,D=H[U].good_length,S=H[U].nice_length,A=H[U].max_chain),R=n,i)},e.deflateSetDictionary=function(e,t,i){let r,s=i,l=0;if(!t||42!=n)return-2;if(s<3)return 0;for(s>a-262&&(s=a-262,l=i-s),d.set(t.subarray(l,l+s),0),v=s,x=s,u=255&d[0],u=(u<<m^255&d[1])&_,r=0;r<=s-3;r++)u=(u<<m^255&d[r+2])&_,c[r&o]=f[u],f[u]=r;return 0},e.deflate=function(l,h){let A,D,S,j,I;if(h>4||h<0)return-2;if(!l.next_out||!l.next_in&&0!==l.avail_in||666==n&&4!=h)return l.msg=P[4],-2;if(0===l.avail_out)return l.msg=P[7],-5;var F;if(t=l,j=r,r=h,42==n&&(D=8+(s-8<<4)<<8,S=(U-1&255)>>1,S>3&&(S=3),D|=S<<6,0!==v&&(D|=32),D+=31-D%31,n=113,Q((F=D)>>8&255),Q(255&F)),0!==e.pending){if(t.flush_pending(),0===t.avail_out)return r=-1,0}else if(0===t.avail_in&&h<=j&&4!=h)return t.msg=P[7],-5;if(666==n&&0!==t.avail_in)return l.msg=P[7],-5;if(0!==t.avail_in||0!==k||0!=h&&666!=n){switch(I=-1,H[U].func){case 0:I=function(e){let n,r=65535;for(r>i-5&&(r=i-5);;){if(k<=1){if(ce(),0===k&&0==e)return 0;if(0===k)break}if(v+=k,k=0,n=x+r,(0===v||v>=n)&&(k=v-n,v=n,le(!1),0===t.avail_out))return 0;if(v-x>=a-262&&(le(!1),0===t.avail_out))return 0}return le(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(h);break;case 1:I=function(e){let n,i=0;for(;;){if(k<262){if(ce(),k<262&&0==e)return 0;if(0===k)break}if(k>=3&&(u=(u<<m^255&d[v+2])&_,i=65535&f[u],c[v&o]=f[u],f[u]=v),0!==i&&(v-i&65535)<=a-262&&2!=R&&(w=fe(i)),w>=3)if(n=re(v-y,w-3),k-=w,w<=E&&k>=3){w--;do{v++,u=(u<<m^255&d[v+2])&_,i=65535&f[u],c[v&o]=f[u],f[u]=v}while(0!=--w);v++}else v+=w,w=0,u=255&d[v],u=(u<<m^255&d[v+1])&_;else n=re(0,255&d[v]),k--,v++;if(n&&(le(!1),0===t.avail_out))return 0}return le(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(h);break;case 2:I=function(e){let n,i,r=0;for(;;){if(k<262){if(ce(),k<262&&0==e)return 0;if(0===k)break}if(k>=3&&(u=(u<<m^255&d[v+2])&_,r=65535&f[u],c[v&o]=f[u],f[u]=v),z=w,g=y,w=2,0!==r&&z<E&&(v-r&65535)<=a-262&&(2!=R&&(w=fe(r)),w<=5&&(1==R||3==w&&v-y>4096)&&(w=2)),z>=3&&w<=z){i=v+k-3,n=re(v-1-g,z-3),k-=z-1,z-=2;do{++v<=i&&(u=(u<<m^255&d[v+2])&_,r=65535&f[u],c[v&o]=f[u],f[u]=v)}while(0!=--z);if(b=0,w=2,v++,n&&(le(!1),0===t.avail_out))return 0}else if(0!==b){if(n=re(0,255&d[v-1]),n&&le(!1),v++,k--,0===t.avail_out)return 0}else b=1,v++,k--}return 0!==b&&(n=re(0,255&d[v-1]),b=0),le(4==e),0===t.avail_out?4==e?2:0:4==e?3:1}(h)}if(2!=I&&3!=I||(n=666),0==I||2==I)return 0===t.avail_out&&(r=-1),0;if(1==I){if(1==h)ee(2,3),te(256,W.static_ltree),ie(),1+K+10-Y<9&&(ee(2,3),te(256,W.static_ltree),ie()),K=7;else if(oe(0,0,!1),3==h)for(A=0;A<p;A++)f[A]=0;if(t.flush_pending(),0===t.avail_out)return r=-1,0}}return 4!=h?0:1}}function V(){const e=this;e.next_in_index=0,e.next_out_index=0,e.avail_in=0,e.total_in=0,e.avail_out=0,e.total_out=0}function Z(e){const t=new V,n=512,i=new Uint8Array(n);let r=e?e.level:-1;void 0===r&&(r=-1),t.deflateInit(r),t.next_out=i,this.append=function(e,r){let a,s,o=0,d=0,l=0;const c=[];if(e.length){t.next_in_index=0,t.next_in=e,t.avail_in=e.length;do{if(t.next_out_index=0,t.avail_out=n,a=t.deflate(0),0!=a)throw new Error("deflating: "+t.msg);t.next_out_index&&(t.next_out_index==n?c.push(new Uint8Array(i)):c.push(new Uint8Array(i.subarray(0,t.next_out_index)))),l+=t.next_out_index,r&&t.next_in_index>0&&t.next_in_index!=o&&(r(t.next_in_index),o=t.next_in_index)}while(t.avail_in>0||0===t.avail_out);return s=new Uint8Array(l),c.forEach((function(e){s.set(e,d),d+=e.length})),s}},this.flush=function(){let e,r,a=0,s=0;const o=[];do{if(t.next_out_index=0,t.avail_out=n,e=t.deflate(4),1!=e&&0!=e)throw new Error("deflating: "+t.msg);n-t.avail_out>0&&o.push(new Uint8Array(i.subarray(0,t.next_out_index))),s+=t.next_out_index}while(t.avail_in>0||0===t.avail_out);return t.deflateEnd(),r=new Uint8Array(s),o.forEach((function(e){r.set(e,a),a+=e.length})),r}}V.prototype={deflateInit:function(e,t){const n=this;return n.dstate=new N,t||(t=15),n.dstate.deflateInit(n,e,t)},deflate:function(e){const t=this;return t.dstate?t.dstate.deflate(t,e):-2},deflateEnd:function(){const e=this;if(!e.dstate)return-2;const t=e.dstate.deflateEnd();return e.dstate=null,t},deflateParams:function(e,t){const n=this;return n.dstate?n.dstate.deflateParams(n,e,t):-2},deflateSetDictionary:function(e,t){const n=this;return n.dstate?n.dstate.deflateSetDictionary(n,e,t):-2},read_buf:function(e,t,n){const i=this;let r=i.avail_in;return r>n&&(r=n),0===r?0:(i.avail_in-=r,e.set(i.next_in.subarray(i.next_in_index,i.next_in_index+r),t),i.next_in_index+=r,i.total_in+=r,r)},flush_pending:function(){const e=this;let t=e.dstate.pending;t>e.avail_out&&(t=e.avail_out),0!==t&&(e.next_out.set(e.dstate.pending_buf.subarray(e.dstate.pending_out,e.dstate.pending_out+t),e.next_out_index),e.next_out_index+=t,e.dstate.pending_out+=t,e.total_out+=t,e.avail_out-=t,e.dstate.pending-=t,0===e.dstate.pending&&(e.dstate.pending_out=0))}};const K=[0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535],G=[96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,192,80,7,10,0,8,96,0,8,32,0,9,160,0,8,0,0,8,128,0,8,64,0,9,224,80,7,6,0,8,88,0,8,24,0,9,144,83,7,59,0,8,120,0,8,56,0,9,208,81,7,17,0,8,104,0,8,40,0,9,176,0,8,8,0,8,136,0,8,72,0,9,240,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,200,81,7,13,0,8,100,0,8,36,0,9,168,0,8,4,0,8,132,0,8,68,0,9,232,80,7,8,0,8,92,0,8,28,0,9,152,84,7,83,0,8,124,0,8,60,0,9,216,82,7,23,0,8,108,0,8,44,0,9,184,0,8,12,0,8,140,0,8,76,0,9,248,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,196,81,7,11,0,8,98,0,8,34,0,9,164,0,8,2,0,8,130,0,8,66,0,9,228,80,7,7,0,8,90,0,8,26,0,9,148,84,7,67,0,8,122,0,8,58,0,9,212,82,7,19,0,8,106,0,8,42,0,9,180,0,8,10,0,8,138,0,8,74,0,9,244,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,204,81,7,15,0,8,102,0,8,38,0,9,172,0,8,6,0,8,134,0,8,70,0,9,236,80,7,9,0,8,94,0,8,30,0,9,156,84,7,99,0,8,126,0,8,62,0,9,220,82,7,27,0,8,110,0,8,46,0,9,188,0,8,14,0,8,142,0,8,78,0,9,252,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,194,80,7,10,0,8,97,0,8,33,0,9,162,0,8,1,0,8,129,0,8,65,0,9,226,80,7,6,0,8,89,0,8,25,0,9,146,83,7,59,0,8,121,0,8,57,0,9,210,81,7,17,0,8,105,0,8,41,0,9,178,0,8,9,0,8,137,0,8,73,0,9,242,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,202,81,7,13,0,8,101,0,8,37,0,9,170,0,8,5,0,8,133,0,8,69,0,9,234,80,7,8,0,8,93,0,8,29,0,9,154,84,7,83,0,8,125,0,8,61,0,9,218,82,7,23,0,8,109,0,8,45,0,9,186,0,8,13,0,8,141,0,8,77,0,9,250,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,198,81,7,11,0,8,99,0,8,35,0,9,166,0,8,3,0,8,131,0,8,67,0,9,230,80,7,7,0,8,91,0,8,27,0,9,150,84,7,67,0,8,123,0,8,59,0,9,214,82,7,19,0,8,107,0,8,43,0,9,182,0,8,11,0,8,139,0,8,75,0,9,246,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,206,81,7,15,0,8,103,0,8,39,0,9,174,0,8,7,0,8,135,0,8,71,0,9,238,80,7,9,0,8,95,0,8,31,0,9,158,84,7,99,0,8,127,0,8,63,0,9,222,82,7,27,0,8,111,0,8,47,0,9,190,0,8,15,0,8,143,0,8,79,0,9,254,96,7,256,0,8,80,0,8,16,84,8,115,82,7,31,0,8,112,0,8,48,0,9,193,80,7,10,0,8,96,0,8,32,0,9,161,0,8,0,0,8,128,0,8,64,0,9,225,80,7,6,0,8,88,0,8,24,0,9,145,83,7,59,0,8,120,0,8,56,0,9,209,81,7,17,0,8,104,0,8,40,0,9,177,0,8,8,0,8,136,0,8,72,0,9,241,80,7,4,0,8,84,0,8,20,85,8,227,83,7,43,0,8,116,0,8,52,0,9,201,81,7,13,0,8,100,0,8,36,0,9,169,0,8,4,0,8,132,0,8,68,0,9,233,80,7,8,0,8,92,0,8,28,0,9,153,84,7,83,0,8,124,0,8,60,0,9,217,82,7,23,0,8,108,0,8,44,0,9,185,0,8,12,0,8,140,0,8,76,0,9,249,80,7,3,0,8,82,0,8,18,85,8,163,83,7,35,0,8,114,0,8,50,0,9,197,81,7,11,0,8,98,0,8,34,0,9,165,0,8,2,0,8,130,0,8,66,0,9,229,80,7,7,0,8,90,0,8,26,0,9,149,84,7,67,0,8,122,0,8,58,0,9,213,82,7,19,0,8,106,0,8,42,0,9,181,0,8,10,0,8,138,0,8,74,0,9,245,80,7,5,0,8,86,0,8,22,192,8,0,83,7,51,0,8,118,0,8,54,0,9,205,81,7,15,0,8,102,0,8,38,0,9,173,0,8,6,0,8,134,0,8,70,0,9,237,80,7,9,0,8,94,0,8,30,0,9,157,84,7,99,0,8,126,0,8,62,0,9,221,82,7,27,0,8,110,0,8,46,0,9,189,0,8,14,0,8,142,0,8,78,0,9,253,96,7,256,0,8,81,0,8,17,85,8,131,82,7,31,0,8,113,0,8,49,0,9,195,80,7,10,0,8,97,0,8,33,0,9,163,0,8,1,0,8,129,0,8,65,0,9,227,80,7,6,0,8,89,0,8,25,0,9,147,83,7,59,0,8,121,0,8,57,0,9,211,81,7,17,0,8,105,0,8,41,0,9,179,0,8,9,0,8,137,0,8,73,0,9,243,80,7,4,0,8,85,0,8,21,80,8,258,83,7,43,0,8,117,0,8,53,0,9,203,81,7,13,0,8,101,0,8,37,0,9,171,0,8,5,0,8,133,0,8,69,0,9,235,80,7,8,0,8,93,0,8,29,0,9,155,84,7,83,0,8,125,0,8,61,0,9,219,82,7,23,0,8,109,0,8,45,0,9,187,0,8,13,0,8,141,0,8,77,0,9,251,80,7,3,0,8,83,0,8,19,85,8,195,83,7,35,0,8,115,0,8,51,0,9,199,81,7,11,0,8,99,0,8,35,0,9,167,0,8,3,0,8,131,0,8,67,0,9,231,80,7,7,0,8,91,0,8,27,0,9,151,84,7,67,0,8,123,0,8,59,0,9,215,82,7,19,0,8,107,0,8,43,0,9,183,0,8,11,0,8,139,0,8,75,0,9,247,80,7,5,0,8,87,0,8,23,192,8,0,83,7,51,0,8,119,0,8,55,0,9,207,81,7,15,0,8,103,0,8,39,0,9,175,0,8,7,0,8,135,0,8,71,0,9,239,80,7,9,0,8,95,0,8,31,0,9,159,84,7,99,0,8,127,0,8,63,0,9,223,82,7,27,0,8,111,0,8,47,0,9,191,0,8,15,0,8,143,0,8,79,0,9,255],Y=[80,5,1,87,5,257,83,5,17,91,5,4097,81,5,5,89,5,1025,85,5,65,93,5,16385,80,5,3,88,5,513,84,5,33,92,5,8193,82,5,9,90,5,2049,86,5,129,192,5,24577,80,5,2,87,5,385,83,5,25,91,5,6145,81,5,7,89,5,1537,85,5,97,93,5,24577,80,5,4,88,5,769,84,5,49,92,5,12289,82,5,13,90,5,3073,86,5,193,192,5,24577],X=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],J=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,112,112],Q=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577],$=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];function ee(){let e,t,n,i,r,a;function s(e,t,s,o,d,l,c,f,u,p,h){let _,m,x,w,g,b,v,y,k,z,A,E,U,R,D;z=0,g=s;do{n[e[t+z]]++,z++,g--}while(0!==g);if(n[0]==s)return c[0]=-1,f[0]=0,0;for(y=f[0],b=1;b<=15&&0===n[b];b++);for(v=b,y<b&&(y=b),g=15;0!==g&&0===n[g];g--);for(x=g,y>g&&(y=g),f[0]=y,R=1<<b;b<g;b++,R<<=1)if((R-=n[b])<0)return-3;if((R-=n[g])<0)return-3;for(n[g]+=R,a[1]=b=0,z=1,U=2;0!=--g;)a[U]=b+=n[z],U++,z++;g=0,z=0;do{0!==(b=e[t+z])&&(h[a[b]++]=g),z++}while(++g<s);for(s=a[x],a[0]=g=0,z=0,w=-1,E=-y,r[0]=0,A=0,D=0;v<=x;v++)for(_=n[v];0!=_--;){for(;v>E+y;){if(w++,E+=y,D=x-E,D=D>y?y:D,(m=1<<(b=v-E))>_+1&&(m-=_+1,U=v,b<D))for(;++b<D&&!((m<<=1)<=n[++U]);)m-=n[U];if(D=1<<b,p[0]+D>1440)return-3;r[w]=A=p[0],p[0]+=D,0!==w?(a[w]=g,i[0]=b,i[1]=y,b=g>>>E-y,i[2]=A-r[w-1]-b,u.set(i,3*(r[w-1]+b))):c[0]=A}for(i[1]=v-E,z>=s?i[0]=192:h[z]<o?(i[0]=h[z]<256?0:96,i[2]=h[z++]):(i[0]=l[h[z]-o]+16+64,i[2]=d[h[z++]-o]),m=1<<v-E,b=g>>>E;b<D;b+=m)u.set(i,3*(A+b));for(b=1<<v-1;0!=(g&b);b>>>=1)g^=b;for(g^=b,k=(1<<E)-1;(g&k)!=a[w];)w--,E-=y,k=(1<<E)-1}return 0!==R&&1!=x?-5:0}function o(s){let o;for(e||(e=[],t=[],n=new Int32Array(16),i=[],r=new Int32Array(15),a=new Int32Array(16)),t.length<s&&(t=[]),o=0;o<s;o++)t[o]=0;for(o=0;o<16;o++)n[o]=0;for(o=0;o<3;o++)i[o]=0;r.set(n.subarray(0,15),0),a.set(n.subarray(0,16),0)}this.inflate_trees_bits=function(n,i,r,a,d){let l;return o(19),e[0]=0,l=s(n,0,19,19,null,null,r,i,a,e,t),-3==l?d.msg="oversubscribed dynamic bit lengths tree":-5!=l&&0!==i[0]||(d.msg="incomplete dynamic bit lengths tree",l=-3),l},this.inflate_trees_dynamic=function(n,i,r,a,d,l,c,f,u){let p;return o(288),e[0]=0,p=s(r,0,n,257,X,J,l,a,f,e,t),0!=p||0===a[0]?(-3==p?u.msg="oversubscribed literal/length tree":-4!=p&&(u.msg="incomplete literal/length tree",p=-3),p):(o(288),p=s(r,n,i,0,Q,$,c,d,f,e,t),0!=p||0===d[0]&&n>257?(-3==p?u.msg="oversubscribed distance tree":-5==p?(u.msg="incomplete distance tree",p=-3):-4!=p&&(u.msg="empty distance tree with lengths",p=-3),p):0)}}function te(){const e=this;let t,n,i,r,a=0,s=0,o=0,d=0,l=0,c=0,f=0,u=0,p=0,h=0;function _(e,t,n,i,r,a,s,o){let d,l,c,f,u,p,h,_,m,x,w,g,b,v,y,k;h=o.next_in_index,_=o.avail_in,u=s.bitb,p=s.bitk,m=s.write,x=m<s.read?s.read-m-1:s.end-m,w=K[e],g=K[t];do{for(;p<20;)_--,u|=(255&o.read_byte(h++))<<p,p+=8;if(d=u&w,l=n,c=i,k=3*(c+d),0!==(f=l[k]))for(;;){if(u>>=l[k+1],p-=l[k+1],0!=(16&f)){for(f&=15,b=l[k+2]+(u&K[f]),u>>=f,p-=f;p<15;)_--,u|=(255&o.read_byte(h++))<<p,p+=8;for(d=u&g,l=r,c=a,k=3*(c+d),f=l[k];;){if(u>>=l[k+1],p-=l[k+1],0!=(16&f)){for(f&=15;p<f;)_--,u|=(255&o.read_byte(h++))<<p,p+=8;if(v=l[k+2]+(u&K[f]),u>>=f,p-=f,x-=b,m>=v)y=m-v,m-y>0&&2>m-y?(s.window[m++]=s.window[y++],s.window[m++]=s.window[y++],b-=2):(s.window.set(s.window.subarray(y,y+2),m),m+=2,y+=2,b-=2);else{y=m-v;do{y+=s.end}while(y<0);if(f=s.end-y,b>f){if(b-=f,m-y>0&&f>m-y)do{s.window[m++]=s.window[y++]}while(0!=--f);else s.window.set(s.window.subarray(y,y+f),m),m+=f,y+=f,f=0;y=0}}if(m-y>0&&b>m-y)do{s.window[m++]=s.window[y++]}while(0!=--b);else s.window.set(s.window.subarray(y,y+b),m),m+=b,y+=b,b=0;break}if(0!=(64&f))return o.msg="invalid distance code",b=o.avail_in-_,b=p>>3<b?p>>3:b,_+=b,h-=b,p-=b<<3,s.bitb=u,s.bitk=p,o.avail_in=_,o.total_in+=h-o.next_in_index,o.next_in_index=h,s.write=m,-3;d+=l[k+2],d+=u&K[f],k=3*(c+d),f=l[k]}break}if(0!=(64&f))return 0!=(32&f)?(b=o.avail_in-_,b=p>>3<b?p>>3:b,_+=b,h-=b,p-=b<<3,s.bitb=u,s.bitk=p,o.avail_in=_,o.total_in+=h-o.next_in_index,o.next_in_index=h,s.write=m,1):(o.msg="invalid literal/length code",b=o.avail_in-_,b=p>>3<b?p>>3:b,_+=b,h-=b,p-=b<<3,s.bitb=u,s.bitk=p,o.avail_in=_,o.total_in+=h-o.next_in_index,o.next_in_index=h,s.write=m,-3);if(d+=l[k+2],d+=u&K[f],k=3*(c+d),0===(f=l[k])){u>>=l[k+1],p-=l[k+1],s.window[m++]=l[k+2],x--;break}}else u>>=l[k+1],p-=l[k+1],s.window[m++]=l[k+2],x--}while(x>=258&&_>=10);return b=o.avail_in-_,b=p>>3<b?p>>3:b,_+=b,h-=b,p-=b<<3,s.bitb=u,s.bitk=p,o.avail_in=_,o.total_in+=h-o.next_in_index,o.next_in_index=h,s.write=m,0}e.init=function(e,a,s,o,d,l){t=0,f=e,u=a,i=s,p=o,r=d,h=l,n=null},e.proc=function(e,m,x){let w,g,b,v,y,k,z,A=0,E=0,U=0;for(U=m.next_in_index,v=m.avail_in,A=e.bitb,E=e.bitk,y=e.write,k=y<e.read?e.read-y-1:e.end-y;;)switch(t){case 0:if(k>=258&&v>=10&&(e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,x=_(f,u,i,p,r,h,e,m),U=m.next_in_index,v=m.avail_in,A=e.bitb,E=e.bitk,y=e.write,k=y<e.read?e.read-y-1:e.end-y,0!=x)){t=1==x?7:9;break}o=f,n=i,s=p,t=1;case 1:for(w=o;E<w;){if(0===v)return e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);x=0,v--,A|=(255&m.read_byte(U++))<<E,E+=8}if(g=3*(s+(A&K[w])),A>>>=n[g+1],E-=n[g+1],b=n[g],0===b){d=n[g+2],t=6;break}if(0!=(16&b)){l=15&b,a=n[g+2],t=2;break}if(0==(64&b)){o=b,s=g/3+n[g+2];break}if(0!=(32&b)){t=7;break}return t=9,m.msg="invalid literal/length code",x=-3,e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);case 2:for(w=l;E<w;){if(0===v)return e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);x=0,v--,A|=(255&m.read_byte(U++))<<E,E+=8}a+=A&K[w],A>>=w,E-=w,o=u,n=r,s=h,t=3;case 3:for(w=o;E<w;){if(0===v)return e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);x=0,v--,A|=(255&m.read_byte(U++))<<E,E+=8}if(g=3*(s+(A&K[w])),A>>=n[g+1],E-=n[g+1],b=n[g],0!=(16&b)){l=15&b,c=n[g+2],t=4;break}if(0==(64&b)){o=b,s=g/3+n[g+2];break}return t=9,m.msg="invalid distance code",x=-3,e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);case 4:for(w=l;E<w;){if(0===v)return e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);x=0,v--,A|=(255&m.read_byte(U++))<<E,E+=8}c+=A&K[w],A>>=w,E-=w,t=5;case 5:for(z=y-c;z<0;)z+=e.end;for(;0!==a;){if(0===k&&(y==e.end&&0!==e.read&&(y=0,k=y<e.read?e.read-y-1:e.end-y),0===k&&(e.write=y,x=e.inflate_flush(m,x),y=e.write,k=y<e.read?e.read-y-1:e.end-y,y==e.end&&0!==e.read&&(y=0,k=y<e.read?e.read-y-1:e.end-y),0===k)))return e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);e.window[y++]=e.window[z++],k--,z==e.end&&(z=0),a--}t=0;break;case 6:if(0===k&&(y==e.end&&0!==e.read&&(y=0,k=y<e.read?e.read-y-1:e.end-y),0===k&&(e.write=y,x=e.inflate_flush(m,x),y=e.write,k=y<e.read?e.read-y-1:e.end-y,y==e.end&&0!==e.read&&(y=0,k=y<e.read?e.read-y-1:e.end-y),0===k)))return e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);x=0,e.window[y++]=d,k--,t=0;break;case 7:if(E>7&&(E-=8,v++,U--),e.write=y,x=e.inflate_flush(m,x),y=e.write,k=y<e.read?e.read-y-1:e.end-y,e.read!=e.write)return e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);t=8;case 8:return x=1,e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);case 9:return x=-3,e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x);default:return x=-2,e.bitb=A,e.bitk=E,m.avail_in=v,m.total_in+=U-m.next_in_index,m.next_in_index=U,e.write=y,e.inflate_flush(m,x)}},e.free=function(){}}ee.inflate_trees_fixed=function(e,t,n,i){return e[0]=9,t[0]=5,n[0]=G,i[0]=Y,0};const ne=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];function ie(e,t){const n=this;let i,r=0,a=0,s=0,o=0;const d=[0],l=[0],c=new te;let f=0,u=new Int32Array(4320);const p=new ee;n.bitk=0,n.bitb=0,n.window=new Uint8Array(t),n.end=t,n.read=0,n.write=0,n.reset=function(e,t){t&&(t[0]=0),6==r&&c.free(e),r=0,n.bitk=0,n.bitb=0,n.read=n.write=0},n.reset(e,null),n.inflate_flush=function(e,t){let i,r,a;return r=e.next_out_index,a=n.read,i=(a<=n.write?n.write:n.end)-a,i>e.avail_out&&(i=e.avail_out),0!==i&&-5==t&&(t=0),e.avail_out-=i,e.total_out+=i,e.next_out.set(n.window.subarray(a,a+i),r),r+=i,a+=i,a==n.end&&(a=0,n.write==n.end&&(n.write=0),i=n.write-a,i>e.avail_out&&(i=e.avail_out),0!==i&&-5==t&&(t=0),e.avail_out-=i,e.total_out+=i,e.next_out.set(n.window.subarray(a,a+i),r),r+=i,a+=i),e.next_out_index=r,n.read=a,t},n.proc=function(e,t){let h,_,m,x,w,g,b,v;for(x=e.next_in_index,w=e.avail_in,_=n.bitb,m=n.bitk,g=n.write,b=g<n.read?n.read-g-1:n.end-g;;){let y,k,z,A,E,U,R,D;switch(r){case 0:for(;m<3;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}switch(h=7&_,f=1&h,h>>>1){case 0:_>>>=3,m-=3,h=7&m,_>>>=h,m-=h,r=1;break;case 1:y=[],k=[],z=[[]],A=[[]],ee.inflate_trees_fixed(y,k,z,A),c.init(y[0],k[0],z[0],0,A[0],0),_>>>=3,m-=3,r=6;break;case 2:_>>>=3,m-=3,r=3;break;case 3:return _>>>=3,m-=3,r=9,e.msg="invalid block type",t=-3,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t)}break;case 1:for(;m<32;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}if((~_>>>16&65535)!=(65535&_))return r=9,e.msg="invalid stored block lengths",t=-3,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);a=65535&_,_=m=0,r=0!==a?2:0!==f?7:0;break;case 2:if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);if(0===b&&(g==n.end&&0!==n.read&&(g=0,b=g<n.read?n.read-g-1:n.end-g),0===b&&(n.write=g,t=n.inflate_flush(e,t),g=n.write,b=g<n.read?n.read-g-1:n.end-g,g==n.end&&0!==n.read&&(g=0,b=g<n.read?n.read-g-1:n.end-g),0===b)))return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);if(t=0,h=a,h>w&&(h=w),h>b&&(h=b),n.window.set(e.read_buf(x,h),g),x+=h,w-=h,g+=h,b-=h,0!=(a-=h))break;r=0!==f?7:0;break;case 3:for(;m<14;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}if(s=h=16383&_,(31&h)>29||(h>>5&31)>29)return r=9,e.msg="too many length or distance symbols",t=-3,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);if(h=258+(31&h)+(h>>5&31),!i||i.length<h)i=[];else for(v=0;v<h;v++)i[v]=0;_>>>=14,m-=14,o=0,r=4;case 4:for(;o<4+(s>>>10);){for(;m<3;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}i[ne[o++]]=7&_,_>>>=3,m-=3}for(;o<19;)i[ne[o++]]=0;if(d[0]=7,h=p.inflate_trees_bits(i,d,l,u,e),0!=h)return-3==(t=h)&&(i=null,r=9),n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);o=0,r=5;case 5:for(;h=s,!(o>=258+(31&h)+(h>>5&31));){let a,c;for(h=d[0];m<h;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}if(h=u[3*(l[0]+(_&K[h]))+1],c=u[3*(l[0]+(_&K[h]))+2],c<16)_>>>=h,m-=h,i[o++]=c;else{for(v=18==c?7:c-14,a=18==c?11:3;m<h+v;){if(0===w)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);t=0,w--,_|=(255&e.read_byte(x++))<<m,m+=8}if(_>>>=h,m-=h,a+=_&K[v],_>>>=v,m-=v,v=o,h=s,v+a>258+(31&h)+(h>>5&31)||16==c&&v<1)return i=null,r=9,e.msg="invalid bit length repeat",t=-3,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);c=16==c?i[v-1]:0;do{i[v++]=c}while(0!=--a);o=v}}if(l[0]=-1,E=[],U=[],R=[],D=[],E[0]=9,U[0]=6,h=s,h=p.inflate_trees_dynamic(257+(31&h),1+(h>>5&31),i,E,U,R,D,u,e),0!=h)return-3==h&&(i=null,r=9),t=h,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);c.init(E[0],U[0],u,R[0],u,D[0]),r=6;case 6:if(n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,1!=(t=c.proc(n,e,t)))return n.inflate_flush(e,t);if(t=0,c.free(e),x=e.next_in_index,w=e.avail_in,_=n.bitb,m=n.bitk,g=n.write,b=g<n.read?n.read-g-1:n.end-g,0===f){r=0;break}r=7;case 7:if(n.write=g,t=n.inflate_flush(e,t),g=n.write,b=g<n.read?n.read-g-1:n.end-g,n.read!=n.write)return n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);r=8;case 8:return t=1,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);case 9:return t=-3,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t);default:return t=-2,n.bitb=_,n.bitk=m,e.avail_in=w,e.total_in+=x-e.next_in_index,e.next_in_index=x,n.write=g,n.inflate_flush(e,t)}}},n.free=function(e){n.reset(e,null),n.window=null,u=null},n.set_dictionary=function(e,t,i){n.window.set(e.subarray(t,t+i),0),n.read=n.write=i},n.sync_point=function(){return 1==r?1:0}}const re=[0,0,255,255];function ae(){const e=this;function t(e){return e&&e.istate?(e.total_in=e.total_out=0,e.msg=null,e.istate.mode=7,e.istate.blocks.reset(e,null),0):-2}e.mode=0,e.method=0,e.was=[0],e.need=0,e.marker=0,e.wbits=0,e.inflateEnd=function(t){return e.blocks&&e.blocks.free(t),e.blocks=null,0},e.inflateInit=function(n,i){return n.msg=null,e.blocks=null,i<8||i>15?(e.inflateEnd(n),-2):(e.wbits=i,n.istate.blocks=new ie(n,1<<i),t(n),0)},e.inflate=function(e,t){let n,i;if(!e||!e.istate||!e.next_in)return-2;const r=e.istate;for(t=4==t?-5:0,n=-5;;)switch(r.mode){case 0:if(0===e.avail_in)return n;if(n=t,e.avail_in--,e.total_in++,8!=(15&(r.method=e.read_byte(e.next_in_index++)))){r.mode=13,e.msg="unknown compression method",r.marker=5;break}if(8+(r.method>>4)>r.wbits){r.mode=13,e.msg="invalid window size",r.marker=5;break}r.mode=1;case 1:if(0===e.avail_in)return n;if(n=t,e.avail_in--,e.total_in++,i=255&e.read_byte(e.next_in_index++),((r.method<<8)+i)%31!=0){r.mode=13,e.msg="incorrect header check",r.marker=5;break}if(0==(32&i)){r.mode=7;break}r.mode=2;case 2:if(0===e.avail_in)return n;n=t,e.avail_in--,e.total_in++,r.need=(255&e.read_byte(e.next_in_index++))<<24&4278190080,r.mode=3;case 3:if(0===e.avail_in)return n;n=t,e.avail_in--,e.total_in++,r.need+=(255&e.read_byte(e.next_in_index++))<<16&16711680,r.mode=4;case 4:if(0===e.avail_in)return n;n=t,e.avail_in--,e.total_in++,r.need+=(255&e.read_byte(e.next_in_index++))<<8&65280,r.mode=5;case 5:return 0===e.avail_in?n:(n=t,e.avail_in--,e.total_in++,r.need+=255&e.read_byte(e.next_in_index++),r.mode=6,2);case 6:return r.mode=13,e.msg="need dictionary",r.marker=0,-2;case 7:if(n=r.blocks.proc(e,n),-3==n){r.mode=13,r.marker=0;break}if(0==n&&(n=t),1!=n)return n;n=t,r.blocks.reset(e,r.was),r.mode=12;case 12:return 1;case 13:return-3;default:return-2}},e.inflateSetDictionary=function(e,t,n){let i=0,r=n;if(!e||!e.istate||6!=e.istate.mode)return-2;const a=e.istate;return r>=1<<a.wbits&&(r=(1<<a.wbits)-1,i=n-r),a.blocks.set_dictionary(t,i,r),a.mode=7,0},e.inflateSync=function(e){let n,i,r,a,s;if(!e||!e.istate)return-2;const o=e.istate;if(13!=o.mode&&(o.mode=13,o.marker=0),0===(n=e.avail_in))return-5;for(i=e.next_in_index,r=o.marker;0!==n&&r<4;)e.read_byte(i)==re[r]?r++:r=0!==e.read_byte(i)?0:4-r,i++,n--;return e.total_in+=i-e.next_in_index,e.next_in_index=i,e.avail_in=n,o.marker=r,4!=r?-3:(a=e.total_in,s=e.total_out,t(e),e.total_in=a,e.total_out=s,o.mode=7,0)},e.inflateSyncPoint=function(e){return e&&e.istate&&e.istate.blocks?e.istate.blocks.sync_point():-2}}function se(){}function oe(){const e=new se,t=new Uint8Array(512);let n=!1;e.inflateInit(),e.next_out=t,this.append=function(i,r){const a=[];let s,o,d=0,l=0,c=0;if(0!==i.length){e.next_in_index=0,e.next_in=i,e.avail_in=i.length;do{if(e.next_out_index=0,e.avail_out=512,0!==e.avail_in||n||(e.next_in_index=0,n=!0),s=e.inflate(0),n&&-5===s){if(0!==e.avail_in)throw new Error("inflating: bad input")}else if(0!==s&&1!==s)throw new Error("inflating: "+e.msg);if((n||1===s)&&e.avail_in===i.length)throw new Error("inflating: bad input");e.next_out_index&&(512===e.next_out_index?a.push(new Uint8Array(t)):a.push(new Uint8Array(t.subarray(0,e.next_out_index)))),c+=e.next_out_index,r&&e.next_in_index>0&&e.next_in_index!=d&&(r(e.next_in_index),d=e.next_in_index)}while(e.avail_in>0||0===e.avail_out);return o=new Uint8Array(c),a.forEach((function(e){o.set(e,l),l+=e.length})),o}},this.flush=function(){e.inflateEnd()}}se.prototype={inflateInit:function(e){const t=this;return t.istate=new ae,e||(e=15),t.istate.inflateInit(t,e)},inflate:function(e){const t=this;return t.istate?t.istate.inflate(t,e):-2},inflateEnd:function(){const e=this;if(!e.istate)return-2;const t=e.istate.inflateEnd(e);return e.istate=null,t},inflateSync:function(){const e=this;return e.istate?e.istate.inflateSync(e):-2},inflateSetDictionary:function(e,t){const n=this;return n.istate?n.istate.inflateSetDictionary(n,e,t):-2},read_byte:function(e){return this.next_in.subarray(e,e+1)[0]},read_buf:function(e,t){return this.next_in.subarray(e,e+t)}},self.initCodec=()=>{self.Deflate=Z,self.Inflate=oe}}).toString(),t=URL.createObjectURL(new Blob(["("+e+")()"],{type:"text/javascript"}));H({workerScripts:{inflate:[t],deflate:[t]}})}})(),H({Deflate:function(e){const t=new w,n=512,i=new Uint8Array(n);let r=e?e.level:-1;void 0===r&&(r=-1),t.deflateInit(r),t.next_out=i,this.append=function(e,r){let a,s,o=0,d=0,l=0;const c=[];if(e.length){t.next_in_index=0,t.next_in=e,t.avail_in=e.length;do{if(t.next_out_index=0,t.avail_out=n,a=t.deflate(0),0!=a)throw new Error("deflating: "+t.msg);t.next_out_index&&(t.next_out_index==n?c.push(new Uint8Array(i)):c.push(new Uint8Array(i.subarray(0,t.next_out_index)))),l+=t.next_out_index,r&&t.next_in_index>0&&t.next_in_index!=o&&(r(t.next_in_index),o=t.next_in_index)}while(t.avail_in>0||0===t.avail_out);return s=new Uint8Array(l),c.forEach((function(e){s.set(e,d),d+=e.length})),s}},this.flush=function(){let e,r,a=0,s=0;const o=[];do{if(t.next_out_index=0,t.avail_out=n,e=t.deflate(4),1!=e&&0!=e)throw new Error("deflating: "+t.msg);n-t.avail_out>0&&o.push(new Uint8Array(i.subarray(0,t.next_out_index))),s+=t.next_out_index}while(t.avail_in>0||0===t.avail_out);return t.deflateEnd(),r=new Uint8Array(s),o.forEach((function(e){r.set(e,a),a+=e.length})),r}},Inflate:function(){const e=new T,t=new Uint8Array(512);let n=!1;e.inflateInit(),e.next_out=t,this.append=function(i,r){const a=[];let s,o,d=0,l=0,c=0;if(0!==i.length){e.next_in_index=0,e.next_in=i,e.avail_in=i.length;do{if(e.next_out_index=0,e.avail_out=512,0!==e.avail_in||n||(e.next_in_index=0,n=!0),s=e.inflate(0),n&&s===v){if(0!==e.avail_in)throw new Error("inflating: bad input")}else if(0!==s&&1!==s)throw new Error("inflating: "+e.msg);if((n||1===s)&&e.avail_in===i.length)throw new Error("inflating: bad input");e.next_out_index&&(512===e.next_out_index?a.push(new Uint8Array(t)):a.push(new Uint8Array(t.subarray(0,e.next_out_index)))),c+=e.next_out_index,r&&e.next_in_index>0&&e.next_in_index!=d&&(r(e.next_in_index),d=e.next_in_index)}while(e.avail_in>0||0===e.avail_out);return o=new Uint8Array(c),a.forEach((function(e){o.set(e,l),l+=e.length})),o}},this.flush=function(){e.inflateEnd()}}}),e.BlobReader=se,e.BlobWriter=oe,e.Data64URIReader=re,e.Data64URIWriter=ae,e.ERR_ABORT=jt,e.ERR_BAD_FORMAT=Tt,e.ERR_CENTRAL_DIRECTORY_NOT_FOUND=Ht,e.ERR_DUPLICATED_NAME=cn,e.ERR_ENCRYPTED=Nt,e.ERR_EOCDR_LOCATOR_ZIP64_NOT_FOUND=qt,e.ERR_EOCDR_NOT_FOUND=Mt,e.ERR_EOCDR_ZIP64_NOT_FOUND=Wt,e.ERR_EXTRAFIELD_ZIP64_NOT_FOUND=Lt,e.ERR_HTTP_RANGE=Z,e.ERR_INVALID_COMMENT=fn,e.ERR_INVALID_DATE=_n,e.ERR_INVALID_ENCRYPTION_STRENGTH=mn,e.ERR_INVALID_ENTRY_COMMENT=un,e.ERR_INVALID_ENTRY_NAME=pn,e.ERR_INVALID_EXTRAFIELD_DATA=wn,e.ERR_INVALID_EXTRAFIELD_TYPE=xn,e.ERR_INVALID_PASSWORD=qe,e.ERR_INVALID_SIGNATURE=gt,e.ERR_INVALID_VERSION=hn,e.ERR_LOCAL_FILE_HEADER_NOT_FOUND=Pt,e.ERR_UNSUPPORTED_COMPRESSION=Zt,e.ERR_UNSUPPORTED_ENCRYPTION=Vt,e.HttpRangeReader=class extends he{constructor(e,t={}){t.useRangeHeader=!0,super(e,t)}},e.HttpReader=he,e.Reader=ee,e.TextReader=ne,e.TextWriter=ie,e.Uint8ArrayReader=_e,e.Uint8ArrayWriter=me,e.Writer=te,e.ZipReader=Yt,e.ZipWriter=bn,e.configure=H,e.fs=In,e.getMimeType=function(e){return e&&L[e.split(".").pop().toLowerCase()]||"application/octet-stream"},e.initShimAsyncCodec=(e,t={},n)=>({Deflate:N(e.Deflate,t.deflate,n),Inflate:N(e.Inflate,t.inflate,n)}),Object.defineProperty(e,"__esModule",{value:!0})}));

}).call(this)}).call(this,"/lib/zip-fs-full.min.js")
},{"url":64}],2:[function(require,module,exports){
/*!
 * /**
 * * @name JSON Editor
 * * @description JSON Schema Based Editor
 * * This library is the continuation of jdorn's great work (see also https://github.com/jdorn/json-editor/issues/800)
 * * @version "2.5.3"
 * * @author Jeremy Dorn
 * * @see https://github.com/jdorn/json-editor/
 * * @see https://github.com/json-editor/json-editor
 * * @license MIT
 * * @example see README.md and docs/ for requirements, examples and usage info
 * * /
 */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var n=e();for(var r in n)("object"==typeof exports?exports:t)[r]=n[r]}}(window,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/dist/",n(n.s=166)}([function(t,e,n){var r=n(34),i=n(94),o=n(70),a=n(63),s=n(121),l=a.set,c=a.getterFor("Array Iterator");t.exports=s(Array,"Array",(function(t,e){l(this,{type:"Array Iterator",target:r(t),index:0,kind:e})}),(function(){var t=c(this),e=t.target,n=t.kind,r=t.index++;return!e||r>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}}),"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},function(t,e,n){var r=n(14),i=n(22),o=n(54),a=n(64),s=n(23),l=n(90),c=n(112),u=n(17),h=n(27),p=n(66),d=n(26),f=n(28),y=n(32),m=n(34),b=n(62),v=n(60),g=n(55),_=n(67),w=n(65),k=n(141),x=n(88),j=n(47),O=n(30),C=n(74),E=n(40),S=n(45),R=n(83),P=n(75),L=n(76),T=n(84),A=n(19),I=n(114),D=n(115),N=n(91),B=n(63),F=n(51).forEach,V=P("hidden"),H=A("toPrimitive"),z=B.set,M=B.getterFor("Symbol"),q=Object.prototype,U=i.Symbol,G=o("JSON","stringify"),$=j.f,W=O.f,J=k.f,Z=C.f,Q=R("symbols"),Y=R("op-symbols"),X=R("string-to-symbol-registry"),K=R("symbol-to-string-registry"),tt=R("wks"),et=i.QObject,nt=!et||!et.prototype||!et.prototype.findChild,rt=s&&u((function(){return 7!=g(W({},"a",{get:function(){return W(this,"a",{value:7}).a}})).a}))?function(t,e,n){var r=$(q,e);r&&delete q[e],W(t,e,n),r&&t!==q&&W(q,e,r)}:W,it=function(t,e){var n=Q[t]=g(U.prototype);return z(n,{type:"Symbol",tag:t,description:e}),s||(n.description=e),n},ot=c?function(t){return"symbol"==typeof t}:function(t){return Object(t)instanceof U},at=function(t,e,n){t===q&&at(Y,e,n),f(t);var r=b(e,!0);return f(n),h(Q,r)?(n.enumerable?(h(t,V)&&t[V][r]&&(t[V][r]=!1),n=g(n,{enumerable:v(0,!1)})):(h(t,V)||W(t,V,v(1,{})),t[V][r]=!0),rt(t,r,n)):W(t,r,n)},st=function(t,e){f(t);var n=m(e),r=_(n).concat(ht(n));return F(r,(function(e){s&&!lt.call(n,e)||at(t,e,n[e])})),t},lt=function(t){var e=b(t,!0),n=Z.call(this,e);return!(this===q&&h(Q,e)&&!h(Y,e))&&(!(n||!h(this,e)||!h(Q,e)||h(this,V)&&this[V][e])||n)},ct=function(t,e){var n=m(t),r=b(e,!0);if(n!==q||!h(Q,r)||h(Y,r)){var i=$(n,r);return!i||!h(Q,r)||h(n,V)&&n[V][r]||(i.enumerable=!0),i}},ut=function(t){var e=J(m(t)),n=[];return F(e,(function(t){h(Q,t)||h(L,t)||n.push(t)})),n},ht=function(t){var e=t===q,n=J(e?Y:m(t)),r=[];return F(n,(function(t){!h(Q,t)||e&&!h(q,t)||r.push(Q[t])})),r};(l||(S((U=function(){if(this instanceof U)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=T(t),n=function(t){this===q&&n.call(Y,t),h(this,V)&&h(this[V],e)&&(this[V][e]=!1),rt(this,e,v(1,t))};return s&&nt&&rt(q,e,{configurable:!0,set:n}),it(e,t)}).prototype,"toString",(function(){return M(this).tag})),S(U,"withoutSetter",(function(t){return it(T(t),t)})),C.f=lt,O.f=at,j.f=ct,w.f=k.f=ut,x.f=ht,I.f=function(t){return it(A(t),t)},s&&(W(U.prototype,"description",{configurable:!0,get:function(){return M(this).description}}),a||S(q,"propertyIsEnumerable",lt,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!l,sham:!l},{Symbol:U}),F(_(tt),(function(t){D(t)})),r({target:"Symbol",stat:!0,forced:!l},{for:function(t){var e=String(t);if(h(X,e))return X[e];var n=U(e);return X[e]=n,K[n]=e,n},keyFor:function(t){if(!ot(t))throw TypeError(t+" is not a symbol");if(h(K,t))return K[t]},useSetter:function(){nt=!0},useSimple:function(){nt=!1}}),r({target:"Object",stat:!0,forced:!l,sham:!s},{create:function(t,e){return void 0===e?g(t):st(g(t),e)},defineProperty:at,defineProperties:st,getOwnPropertyDescriptor:ct}),r({target:"Object",stat:!0,forced:!l},{getOwnPropertyNames:ut,getOwnPropertySymbols:ht}),r({target:"Object",stat:!0,forced:u((function(){x.f(1)}))},{getOwnPropertySymbols:function(t){return x.f(y(t))}}),G)&&r({target:"JSON",stat:!0,forced:!l||u((function(){var t=U();return"[null]"!=G([t])||"{}"!=G({a:t})||"{}"!=G(Object(t))}))},{stringify:function(t,e,n){for(var r,i=[t],o=1;arguments.length>o;)i.push(arguments[o++]);if(r=e,(d(e)||void 0!==t)&&!ot(t))return p(e)||(e=function(t,e){if("function"==typeof r&&(e=r.call(this,t,e)),!ot(e))return e}),i[1]=e,G.apply(null,i)}});U.prototype[H]||E(U.prototype,H,U.prototype.valueOf),N(U,"Symbol"),L[V]=!0},function(t,e,n){var r=n(14),i=n(23),o=n(22),a=n(27),s=n(26),l=n(30).f,c=n(108),u=o.Symbol;if(i&&"function"==typeof u&&(!("description"in u.prototype)||void 0!==u().description)){var h={},p=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof p?new u(t):void 0===t?u():u(t);return""===t&&(h[e]=!0),e};c(p,u);var d=p.prototype=u.prototype;d.constructor=p;var f=d.toString,y="Symbol(test)"==String(u("test")),m=/^Symbol\((.*)\)[^)]+$/;l(d,"description",{configurable:!0,get:function(){var t=s(this)?this.valueOf():this,e=f.call(t);if(a(h,t))return"";var n=y?e.slice(7,-1):e.replace(m,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:p})}},function(t,e,n){n(115)("iterator")},function(t,e,n){var r=n(45),i=Date.prototype,o=i.toString,a=i.getTime;new Date(NaN)+""!="Invalid Date"&&r(i,"toString",(function(){var t=a.call(this);return t==t?o.call(this):"Invalid Date"}))},function(t,e,n){var r=n(95),i=n(45),o=n(152);r||i(Object.prototype,"toString",o,{unsafe:!0})},function(t,e,n){var r=n(45),i=n(28),o=n(17),a=n(97),s=RegExp.prototype,l=s.toString,c=o((function(){return"/a/b"!=l.call({source:"a",flags:"b"})})),u="toString"!=l.name;(c||u)&&r(RegExp.prototype,"toString",(function(){var t=i(this),e=String(t.source),n=t.flags;return"/"+e+"/"+String(void 0===n&&t instanceof RegExp&&!("flags"in s)?a.call(t):n)}),{unsafe:!0})},function(t,e,n){var r=n(125).charAt,i=n(63),o=n(121),a=i.set,s=i.getterFor("String Iterator");o(String,"String",(function(t){a(this,{type:"String Iterator",string:String(t),index:0})}),(function(){var t,e=s(this),n=e.string,i=e.index;return i>=n.length?{value:void 0,done:!0}:(t=r(n,i),e.index+=t.length,{value:t,done:!1})}))},function(t,e,n){var r=n(22),i=n(126),o=n(0),a=n(40),s=n(19),l=s("iterator"),c=s("toStringTag"),u=o.values;for(var h in i){var p=r[h],d=p&&p.prototype;if(d){if(d[l]!==u)try{a(d,l,u)}catch(t){d[l]=u}if(d[c]||a(d,c,h),i[h])for(var f in o)if(d[f]!==o[f])try{a(d,f,o[f])}catch(t){d[f]=o[f]}}}},function(t,e,n){n(14)({target:"Object",stat:!0,sham:!n(23)},{create:n(55)})},function(t,e,n){var r=n(14),i=n(17),o=n(32),a=n(77),s=n(123);r({target:"Object",stat:!0,forced:i((function(){a(1)})),sham:!s},{getPrototypeOf:function(t){return a(o(t))}})},function(t,e,n){n(14)({target:"Object",stat:!0},{setPrototypeOf:n(96)})},function(t,e,n){var r=n(14),i=n(54),o=n(56),a=n(28),s=n(26),l=n(55),c=n(131),u=n(17),h=i("Reflect","construct"),p=u((function(){function t(){}return!(h((function(){}),[],t)instanceof t)})),d=!u((function(){h((function(){}))})),f=p||d;r({target:"Reflect",stat:!0,forced:f,sham:f},{construct:function(t,e){o(t),a(e);var n=arguments.length<3?t:o(arguments[2]);if(d&&!p)return h(t,e,n);if(t==n){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var r=[null];return r.push.apply(r,e),new(c.apply(t,r))}var i=n.prototype,u=l(s(i)?i:Object.prototype),f=Function.apply.call(t,u,e);return s(f)?f:u}})},function(t,e,n){var r=n(14),i=n(23);r({target:"Object",stat:!0,forced:!i,sham:!i},{defineProperty:n(30).f})},function(t,e,n){var r=n(22),i=n(47).f,o=n(40),a=n(45),s=n(82),l=n(108),c=n(89);t.exports=function(t,e){var n,u,h,p,d,f=t.target,y=t.global,m=t.stat;if(n=y?r:m?r[f]||s(f,{}):(r[f]||{}).prototype)for(u in e){if(p=e[u],h=t.noTargetGet?(d=i(n,u))&&d.value:n[u],!c(y?u:f+(m?".":"#")+u,t.forced)&&void 0!==h){if(typeof p==typeof h)continue;l(p,h)}(t.sham||h&&h.sham)&&o(p,"sham",!0),a(n,u,p,t)}}},function(t,e,n){var r=n(14),i=n(17),o=n(34),a=n(47).f,s=n(23),l=i((function(){a(1)}));r({target:"Object",stat:!0,forced:!s||l,sham:!s},{getOwnPropertyDescriptor:function(t,e){return a(o(t),e)}})},function(t,e,n){var r=n(14),i=n(26),o=n(28),a=n(27),s=n(47),l=n(77);r({target:"Reflect",stat:!0},{get:function t(e,n){var r,c,u=arguments.length<3?e:arguments[2];return o(e)===u?e[n]:(r=s.f(e,n))?a(r,"value")?r.value:void 0===r.get?void 0:r.get.call(u):i(c=l(e))?t(c,n,u):void 0}})},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){var r=n(14),i=n(17),o=n(66),a=n(26),s=n(32),l=n(35),c=n(68),u=n(92),h=n(69),p=n(19),d=n(117),f=p("isConcatSpreadable"),y=d>=51||!i((function(){var t=[];return t[f]=!1,t.concat()[0]!==t})),m=h("concat"),b=function(t){if(!a(t))return!1;var e=t[f];return void 0!==e?!!e:o(t)};r({target:"Array",proto:!0,forced:!y||!m},{concat:function(t){var e,n,r,i,o,a=s(this),h=u(a,0),p=0;for(e=-1,r=arguments.length;e<r;e++)if(o=-1===e?a:arguments[e],b(o)){if(p+(i=l(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<i;n++,p++)n in o&&c(h,p,o[n])}else{if(p>=9007199254740991)throw TypeError("Maximum allowed index exceeded");c(h,p++,o)}return h.length=p,h}})},function(t,e,n){var r=n(22),i=n(83),o=n(27),a=n(84),s=n(90),l=n(112),c=i("wks"),u=r.Symbol,h=l?u:u&&u.withoutSetter||a;t.exports=function(t){return o(c,t)||(s&&o(u,t)?c[t]=u[t]:c[t]=h("Symbol."+t)),c[t]}},function(t,e,n){var r=n(14),i=n(119);r({target:"Array",proto:!0,forced:[].forEach!=i},{forEach:i})},function(t,e,n){var r=n(22),i=n(126),o=n(119),a=n(40);for(var s in i){var l=r[s],c=l&&l.prototype;if(c&&c.forEach!==o)try{a(c,"forEach",o)}catch(t){c.forEach=o}}},function(t,e,n){(function(e){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof e&&e)||Function("return this")()}).call(this,n(138))},function(t,e,n){var r=n(17);t.exports=!r((function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]}))},function(t,e,n){var r=n(14),i=n(78);r({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},function(t,e,n){n(14)({target:"Array",stat:!0},{isArray:n(66)})},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){var r=n(26);t.exports=function(t){if(!r(t))throw TypeError(String(t)+" is not an object");return t}},function(t,e,n){var r=n(14),i=n(85).includes,o=n(94);r({target:"Array",proto:!0,forced:!n(36)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}}),o("includes")},function(t,e,n){var r=n(23),i=n(104),o=n(28),a=n(62),s=Object.defineProperty;e.f=r?s:function(t,e,n){if(o(t),e=a(e,!0),o(n),i)try{return s(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){var r=n(14),i=n(26),o=n(66),a=n(86),s=n(35),l=n(34),c=n(68),u=n(19),h=n(69),p=n(36),d=h("slice"),f=p("slice",{ACCESSORS:!0,0:0,1:2}),y=u("species"),m=[].slice,b=Math.max;r({target:"Array",proto:!0,forced:!d||!f},{slice:function(t,e){var n,r,u,h=l(this),p=s(h.length),d=a(t,p),f=a(void 0===e?p:e,p);if(o(h)&&("function"!=typeof(n=h.constructor)||n!==Array&&!o(n.prototype)?i(n)&&null===(n=n[y])&&(n=void 0):n=void 0,n===Array||void 0===n))return m.call(h,d,f);for(r=new(void 0===n?Array:n)(b(f-d,0)),u=0;d<f;d++,u++)d in h&&c(r,u,h[d]);return r.length=u,r}})},function(t,e,n){var r=n(39);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(23),i=n(30).f,o=Function.prototype,a=o.toString,s=/^\s*function ([^ (]*)/;r&&!("name"in o)&&i(o,"name",{configurable:!0,get:function(){try{return a.call(this).match(s)[1]}catch(t){return""}}})},function(t,e,n){var r=n(61),i=n(39);t.exports=function(t){return r(i(t))}},function(t,e,n){var r=n(50),i=Math.min;t.exports=function(t){return t>0?i(r(t),9007199254740991):0}},function(t,e,n){var r=n(23),i=n(17),o=n(27),a=Object.defineProperty,s={},l=function(t){throw t};t.exports=function(t,e){if(o(s,t))return s[t];e||(e={});var n=[][t],c=!!o(e,"ACCESSORS")&&e.ACCESSORS,u=o(e,0)?e[0]:l,h=o(e,1)?e[1]:void 0;return s[t]=!!n&&!i((function(){if(c&&!r)return!0;var t={length:-1};c?a(t,1,{enumerable:!0,get:l}):t[1]=1,n.call(t,u,h)}))}},function(t,e,n){var r=n(14),i=n(142);r({target:"Array",stat:!0,forced:!n(146)((function(t){Array.from(t)}))},{from:i})},function(t,e,n){var r=n(14),i=n(129),o=n(39);r({target:"String",proto:!0,forced:!n(130)("includes")},{includes:function(t){return!!~String(o(this)).indexOf(i(t),arguments.length>1?arguments[1]:void 0)}})},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t}},function(t,e,n){var r=n(23),i=n(30),o=n(60);t.exports=r?function(t,e,n){return i.f(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var r=n(14),i=n(149).left,o=n(52),a=n(36),s=o("reduce"),l=a("reduce",{1:0});r({target:"Array",proto:!0,forced:!s||!l},{reduce:function(t){return i(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(14),i=n(32),o=n(67);r({target:"Object",stat:!0,forced:n(17)((function(){o(1)}))},{keys:function(t){return o(i(t))}})},function(t,e,n){var r=n(99),i=n(28),o=n(32),a=n(35),s=n(50),l=n(39),c=n(100),u=n(101),h=Math.max,p=Math.min,d=Math.floor,f=/\$([$&'`]|\d\d?|<[^>]*>)/g,y=/\$([$&'`]|\d\d?)/g;r("replace",2,(function(t,e,n,r){var m=r.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE,b=r.REPLACE_KEEPS_$0,v=m?"$":"$0";return[function(n,r){var i=l(this),o=null==n?void 0:n[t];return void 0!==o?o.call(n,i,r):e.call(String(i),n,r)},function(t,r){if(!m&&b||"string"==typeof r&&-1===r.indexOf(v)){var o=n(e,t,this,r);if(o.done)return o.value}var l=i(t),d=String(this),f="function"==typeof r;f||(r=String(r));var y=l.global;if(y){var _=l.unicode;l.lastIndex=0}for(var w=[];;){var k=u(l,d);if(null===k)break;if(w.push(k),!y)break;""===String(k[0])&&(l.lastIndex=c(d,a(l.lastIndex),_))}for(var x,j="",O=0,C=0;C<w.length;C++){k=w[C];for(var E=String(k[0]),S=h(p(s(k.index),d.length),0),R=[],P=1;P<k.length;P++)R.push(void 0===(x=k[P])?x:String(x));var L=k.groups;if(f){var T=[E].concat(R,S,d);void 0!==L&&T.push(L);var A=String(r.apply(void 0,T))}else A=g(E,d,S,R,L,r);S>=O&&(j+=d.slice(O,S)+A,O=S+E.length)}return j+d.slice(O)}];function g(t,n,r,i,a,s){var l=r+t.length,c=i.length,u=y;return void 0!==a&&(a=o(a),u=f),e.call(s,u,(function(e,o){var s;switch(o.charAt(0)){case"$":return"$";case"&":return t;case"`":return n.slice(0,r);case"'":return n.slice(l);case"<":s=a[o.slice(1,-1)];break;default:var u=+o;if(0===u)return e;if(u>c){var h=d(u/10);return 0===h?e:h<=c?void 0===i[h-1]?o.charAt(1):i[h-1]+o.charAt(1):e}s=i[u-1]}return void 0===s?"":s}))}}))},function(t,e,n){var r=n(14),i=n(51).map,o=n(69),a=n(36),s=o("map"),l=a("map");r({target:"Array",proto:!0,forced:!s||!l},{map:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(22),i=n(40),o=n(27),a=n(82),s=n(106),l=n(63),c=l.get,u=l.enforce,h=String(String).split("String");(t.exports=function(t,e,n,s){var l=!!s&&!!s.unsafe,c=!!s&&!!s.enumerable,p=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof e||o(n,"name")||i(n,"name",e),u(n).source=h.join("string"==typeof e?e:"")),t!==r?(l?!p&&t[e]&&(c=!0):delete t[e],c?t[e]=n:i(t,e,n)):c?t[e]=n:a(e,n)})(Function.prototype,"toString",(function(){return"function"==typeof this&&c(this).source||s(this)}))},function(t,e,n){var r=n(99),i=n(28),o=n(35),a=n(39),s=n(100),l=n(101);r("match",1,(function(t,e,n){return[function(e){var n=a(this),r=null==e?void 0:e[t];return void 0!==r?r.call(e,n):new RegExp(e)[t](String(n))},function(t){var r=n(e,t,this);if(r.done)return r.value;var a=i(t),c=String(this);if(!a.global)return l(a,c);var u=a.unicode;a.lastIndex=0;for(var h,p=[],d=0;null!==(h=l(a,c));){var f=String(h[0]);p[d]=f,""===f&&(a.lastIndex=s(c,o(a.lastIndex),u)),d++}return 0===d?null:p}]}))},function(t,e,n){var r=n(23),i=n(74),o=n(60),a=n(34),s=n(62),l=n(27),c=n(104),u=Object.getOwnPropertyDescriptor;e.f=r?u:function(t,e){if(t=a(t),e=s(e,!0),c)try{return u(t,e)}catch(t){}if(l(t,e))return o(!i.f.call(t,e),t[e])}},function(t,e,n){var r=n(14),i=n(61),o=n(34),a=n(52),s=[].join,l=i!=Object,c=a("join",",");r({target:"Array",proto:!0,forced:l||!c},{join:function(t){return s.call(o(this),void 0===t?",":t)}})},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e,n){var r=n(116),i=n(61),o=n(32),a=n(35),s=n(92),l=[].push,c=function(t){var e=1==t,n=2==t,c=3==t,u=4==t,h=6==t,p=5==t||h;return function(d,f,y,m){for(var b,v,g=o(d),_=i(g),w=r(f,y,3),k=a(_.length),x=0,j=m||s,O=e?j(d,k):n?j(d,0):void 0;k>x;x++)if((p||x in _)&&(v=w(b=_[x],x,g),t))if(e)O[x]=v;else if(v)switch(t){case 3:return!0;case 5:return b;case 6:return x;case 2:l.call(O,b)}else if(u)return!1;return h?-1:c||u?u:O}};t.exports={forEach:c(0),map:c(1),filter:c(2),some:c(3),every:c(4),find:c(5),findIndex:c(6)}},function(t,e,n){var r=n(17);t.exports=function(t,e){var n=[][t];return!!n&&r((function(){n.call(null,e||function(){throw 1},1)}))}},function(t,e,n){var r=n(99),i=n(98),o=n(28),a=n(39),s=n(156),l=n(100),c=n(35),u=n(101),h=n(78),p=n(17),d=[].push,f=Math.min,y=!p((function(){return!RegExp(4294967295,"y")}));r("split",2,(function(t,e,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,n){var r=String(a(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return[];if(void 0===t)return[r];if(!i(t))return e.call(r,t,o);for(var s,l,c,u=[],p=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),f=0,y=new RegExp(t.source,p+"g");(s=h.call(y,r))&&!((l=y.lastIndex)>f&&(u.push(r.slice(f,s.index)),s.length>1&&s.index<r.length&&d.apply(u,s.slice(1)),c=s[0].length,f=l,u.length>=o));)y.lastIndex===s.index&&y.lastIndex++;return f===r.length?!c&&y.test("")||u.push(""):u.push(r.slice(f)),u.length>o?u.slice(0,o):u}:"0".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:e.call(this,t,n)}:e,[function(e,n){var i=a(this),o=null==e?void 0:e[t];return void 0!==o?o.call(e,i,n):r.call(String(i),e,n)},function(t,i){var a=n(r,t,this,i,r!==e);if(a.done)return a.value;var h=o(t),p=String(this),d=s(h,RegExp),m=h.unicode,b=(h.ignoreCase?"i":"")+(h.multiline?"m":"")+(h.unicode?"u":"")+(y?"y":"g"),v=new d(y?h:"^(?:"+h.source+")",b),g=void 0===i?4294967295:i>>>0;if(0===g)return[];if(0===p.length)return null===u(v,p)?[p]:[];for(var _=0,w=0,k=[];w<p.length;){v.lastIndex=y?w:0;var x,j=u(v,y?p:p.slice(w));if(null===j||(x=f(c(v.lastIndex+(y?0:w)),p.length))===_)w=l(p,w,m);else{if(k.push(p.slice(_,w)),k.length===g)return k;for(var O=1;O<=j.length-1;O++)if(k.push(j[O]),k.length===g)return k;w=_=x}}return k.push(p.slice(_)),k}]}),!y)},function(t,e,n){var r=n(110),i=n(22),o=function(t){return"function"==typeof t?t:void 0};t.exports=function(t,e){return arguments.length<2?o(r[t])||o(i[t]):r[t]&&r[t][e]||i[t]&&i[t][e]}},function(t,e,n){var r,i=n(28),o=n(113),a=n(87),s=n(76),l=n(140),c=n(105),u=n(75),h=u("IE_PROTO"),p=function(){},d=function(t){return"<script>"+t+"<\/script>"},f=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(t){}var t,e;f=r?function(t){t.write(d("")),t.close();var e=t.parentWindow.Object;return t=null,e}(r):((e=c("iframe")).style.display="none",l.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(d("document.F=Object")),t.close(),t.F);for(var n=a.length;n--;)delete f.prototype[a[n]];return f()};s[h]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(p.prototype=i(t),n=new p,p.prototype=null,n[h]=t):n=f(),void 0===e?n:o(n,e)}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t}},function(t,e,n){var r=n(14),i=n(124).values;r({target:"Object",stat:!0},{values:function(t){return i(t)}})},function(t,e,n){var r=n(14),i=n(124).entries;r({target:"Object",stat:!0},{entries:function(t){return i(t)}})},function(t,e,n){var r=n(23),i=n(22),o=n(89),a=n(127),s=n(30).f,l=n(65).f,c=n(98),u=n(97),h=n(128),p=n(45),d=n(17),f=n(63).set,y=n(153),m=n(19)("match"),b=i.RegExp,v=b.prototype,g=/a/g,_=/a/g,w=new b(g)!==g,k=h.UNSUPPORTED_Y;if(r&&o("RegExp",!w||k||d((function(){return _[m]=!1,b(g)!=g||b(_)==_||"/a/i"!=b(g,"i")})))){for(var x=function(t,e){var n,r=this instanceof x,i=c(t),o=void 0===e;if(!r&&i&&t.constructor===x&&o)return t;w?i&&!o&&(t=t.source):t instanceof x&&(o&&(e=u.call(t)),t=t.source),k&&(n=!!e&&e.indexOf("y")>-1)&&(e=e.replace(/y/g,""));var s=a(w?new b(t,e):b(t,e),r?this:v,x);return k&&n&&f(s,{sticky:n}),s},j=function(t){t in x||s(x,t,{configurable:!0,get:function(){return b[t]},set:function(e){b[t]=e}})},O=l(b),C=0;O.length>C;)j(O[C++]);v.constructor=x,x.prototype=v,p(i,"RegExp",x)}y("RegExp")},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e,n){var r=n(17),i=n(49),o="".split;t.exports=r((function(){return!Object("z").propertyIsEnumerable(0)}))?function(t){return"String"==i(t)?o.call(t,""):Object(t)}:Object},function(t,e,n){var r=n(26);t.exports=function(t,e){if(!r(t))return t;var n,i;if(e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;if("function"==typeof(n=t.valueOf)&&!r(i=n.call(t)))return i;if(!e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;throw TypeError("Can't convert object to primitive value")}},function(t,e,n){var r,i,o,a=n(139),s=n(22),l=n(26),c=n(40),u=n(27),h=n(75),p=n(76),d=s.WeakMap;if(a){var f=new d,y=f.get,m=f.has,b=f.set;r=function(t,e){return b.call(f,t,e),e},i=function(t){return y.call(f,t)||{}},o=function(t){return m.call(f,t)}}else{var v=h("state");p[v]=!0,r=function(t,e){return c(t,v,e),e},i=function(t){return u(t,v)?t[v]:{}},o=function(t){return u(t,v)}}t.exports={set:r,get:i,has:o,enforce:function(t){return o(t)?i(t):r(t,{})},getterFor:function(t){return function(e){var n;if(!l(e)||(n=i(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}}},function(t,e){t.exports=!1},function(t,e,n){var r=n(111),i=n(87).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,i)}},function(t,e,n){var r=n(49);t.exports=Array.isArray||function(t){return"Array"==r(t)}},function(t,e,n){var r=n(111),i=n(87);t.exports=Object.keys||function(t){return r(t,i)}},function(t,e,n){var r=n(62),i=n(30),o=n(60);t.exports=function(t,e,n){var a=r(e);a in t?i.f(t,a,o(0,n)):t[a]=n}},function(t,e,n){var r=n(17),i=n(19),o=n(117),a=i("species");t.exports=function(t){return o>=51||!r((function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo}))}},function(t,e){t.exports={}},function(t,e,n){var r=n(14),i=n(155);r({global:!0,forced:parseInt!=i},{parseInt:i})},function(t,e,n){var r=n(14),i=n(51).filter,o=n(69),a=n(36),s=o("filter"),l=a("filter");r({target:"Array",proto:!0,forced:!s||!l},{filter:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(14),i=n(85).indexOf,o=n(52),a=n(36),s=[].indexOf,l=!!s&&1/[1].indexOf(1,-0)<0,c=o("indexOf"),u=a("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:l||!c||!u},{indexOf:function(t){return l?s.apply(this,arguments)||0:i(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,o=i&&!r.call({1:2},1);e.f=o?function(t){var e=i(this,t);return!!e&&e.enumerable}:r},function(t,e,n){var r=n(83),i=n(84),o=r("keys");t.exports=function(t){return o[t]||(o[t]=i(t))}},function(t,e){t.exports={}},function(t,e,n){var r=n(27),i=n(32),o=n(75),a=n(123),s=o("IE_PROTO"),l=Object.prototype;t.exports=a?Object.getPrototypeOf:function(t){return t=i(t),r(t,s)?t[s]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?l:null}},function(t,e,n){var r,i,o=n(97),a=n(128),s=RegExp.prototype.exec,l=String.prototype.replace,c=s,u=(r=/a/,i=/b*/g,s.call(r,"a"),s.call(i,"a"),0!==r.lastIndex||0!==i.lastIndex),h=a.UNSUPPORTED_Y||a.BROKEN_CARET,p=void 0!==/()??/.exec("")[1];(u||p||h)&&(c=function(t){var e,n,r,i,a=this,c=h&&a.sticky,d=o.call(a),f=a.source,y=0,m=t;return c&&(-1===(d=d.replace("y","")).indexOf("g")&&(d+="g"),m=String(t).slice(a.lastIndex),a.lastIndex>0&&(!a.multiline||a.multiline&&"\n"!==t[a.lastIndex-1])&&(f="(?: "+f+")",m=" "+m,y++),n=new RegExp("^(?:"+f+")",d)),p&&(n=new RegExp("^"+f+"$(?!\\s)",d)),u&&(e=a.lastIndex),r=s.call(c?n:a,m),c?r?(r.input=r.input.slice(y),r[0]=r[0].slice(y),r.index=a.lastIndex,a.lastIndex+=r[0].length):a.lastIndex=0:u&&r&&(a.lastIndex=a.global?r.index+r[0].length:e),p&&r&&r.length>1&&l.call(r[0],n,(function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(r[i]=void 0)})),r}),t.exports=c},function(t,e,n){var r=n(14),i=n(51).some,o=n(52),a=n(36),s=o("some"),l=a("some");r({target:"Array",proto:!0,forced:!s||!l},{some:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(39),i="["+n(81)+"]",o=RegExp("^"+i+i+"*"),a=RegExp(i+i+"*$"),s=function(t){return function(e){var n=String(r(e));return 1&t&&(n=n.replace(o,"")),2&t&&(n=n.replace(a,"")),n}};t.exports={start:s(1),end:s(2),trim:s(3)}},function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(t,e,n){var r=n(22),i=n(40);t.exports=function(t,e){try{i(r,t,e)}catch(n){r[t]=e}return e}},function(t,e,n){var r=n(64),i=n(107);(t.exports=function(t,e){return i[t]||(i[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.6.5",mode:r?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++n+r).toString(36)}},function(t,e,n){var r=n(34),i=n(35),o=n(86),a=function(t){return function(e,n,a){var s,l=r(e),c=i(l.length),u=o(a,c);if(t&&n!=n){for(;c>u;)if((s=l[u++])!=s)return!0}else for(;c>u;u++)if((t||u in l)&&l[u]===n)return t||u||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},function(t,e,n){var r=n(50),i=Math.max,o=Math.min;t.exports=function(t,e){var n=r(t);return n<0?i(n+e,0):o(n,e)}},function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){var r=n(17),i=/#|\.prototype\./,o=function(t,e){var n=s[a(t)];return n==c||n!=l&&("function"==typeof e?r(e):!!e)},a=o.normalize=function(t){return String(t).replace(i,".").toLowerCase()},s=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";t.exports=o},function(t,e,n){var r=n(17);t.exports=!!Object.getOwnPropertySymbols&&!r((function(){return!String(Symbol())}))},function(t,e,n){var r=n(30).f,i=n(27),o=n(19)("toStringTag");t.exports=function(t,e,n){t&&!i(t=n?t:t.prototype,o)&&r(t,o,{configurable:!0,value:e})}},function(t,e,n){var r=n(26),i=n(66),o=n(19)("species");t.exports=function(t,e){var n;return i(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!i(n.prototype)?r(n)&&null===(n=n[o])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===e?0:e)}},function(t,e,n){var r=n(14),i=n(51).find,o=n(94),a=n(36),s=!0,l=a("find");"find"in[]&&Array(1).find((function(){s=!1})),r({target:"Array",proto:!0,forced:s||!l},{find:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}}),o("find")},function(t,e,n){var r=n(19),i=n(55),o=n(30),a=r("unscopables"),s=Array.prototype;null==s[a]&&o.f(s,a,{configurable:!0,value:i(null)}),t.exports=function(t){s[a][t]=!0}},function(t,e,n){var r={};r[n(19)("toStringTag")]="z",t.exports="[object z]"===String(r)},function(t,e,n){var r=n(28),i=n(148);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,n={};try{(t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),e=n instanceof Array}catch(t){}return function(n,o){return r(n),i(o),e?t.call(n,o):n.__proto__=o,n}}():void 0)},function(t,e,n){var r=n(28);t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e,n){var r=n(26),i=n(49),o=n(19)("match");t.exports=function(t){var e;return r(t)&&(void 0!==(e=t[o])?!!e:"RegExp"==i(t))}},function(t,e,n){n(24);var r=n(45),i=n(17),o=n(19),a=n(78),s=n(40),l=o("species"),c=!i((function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")})),u="$0"==="a".replace(/./,"$0"),h=o("replace"),p=!!/./[h]&&""===/./[h]("a","$0"),d=!i((function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2!==n.length||"a"!==n[0]||"b"!==n[1]}));t.exports=function(t,e,n,h){var f=o(t),y=!i((function(){var e={};return e[f]=function(){return 7},7!=""[t](e)})),m=y&&!i((function(){var e=!1,n=/a/;return"split"===t&&((n={}).constructor={},n.constructor[l]=function(){return n},n.flags="",n[f]=/./[f]),n.exec=function(){return e=!0,null},n[f](""),!e}));if(!y||!m||"replace"===t&&(!c||!u||p)||"split"===t&&!d){var b=/./[f],v=n(f,""[t],(function(t,e,n,r,i){return e.exec===a?y&&!i?{done:!0,value:b.call(e,n,r)}:{done:!0,value:t.call(n,e,r)}:{done:!1}}),{REPLACE_KEEPS_$0:u,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:p}),g=v[0],_=v[1];r(String.prototype,t,g),r(RegExp.prototype,f,2==e?function(t,e){return _.call(t,this,e)}:function(t){return _.call(t,this)})}h&&s(RegExp.prototype[f],"sham",!0)}},function(t,e,n){var r=n(125).charAt;t.exports=function(t,e,n){return e+(n?r(t,e).length:1)}},function(t,e,n){var r=n(49),i=n(78);t.exports=function(t,e){var n=t.exec;if("function"==typeof n){var o=n.call(t,e);if("object"!=typeof o)throw TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==r(t))throw TypeError("RegExp#exec called on incompatible receiver");return i.call(t,e)}},function(t,e,n){var r=n(14),i=n(157);r({global:!0,forced:parseFloat!=i},{parseFloat:i})},function(t,e,n){var r,i=n(14),o=n(47).f,a=n(35),s=n(129),l=n(39),c=n(130),u=n(64),h="".startsWith,p=Math.min,d=c("startsWith");i({target:"String",proto:!0,forced:!!(u||d||(r=o(String.prototype,"startsWith"),!r||r.writable))&&!d},{startsWith:function(t){var e=String(l(this));s(t);var n=a(p(arguments.length>1?arguments[1]:void 0,e.length)),r=String(t);return h?h.call(e,r,n):e.slice(n,n+r.length)===r}})},function(t,e,n){var r=n(23),i=n(17),o=n(105);t.exports=!r&&!i((function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a}))},function(t,e,n){var r=n(22),i=n(26),o=r.document,a=i(o)&&i(o.createElement);t.exports=function(t){return a?o.createElement(t):{}}},function(t,e,n){var r=n(107),i=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(t){return i.call(t)}),t.exports=r.inspectSource},function(t,e,n){var r=n(22),i=n(82),o=r["__core-js_shared__"]||i("__core-js_shared__",{});t.exports=o},function(t,e,n){var r=n(27),i=n(109),o=n(47),a=n(30);t.exports=function(t,e){for(var n=i(e),s=a.f,l=o.f,c=0;c<n.length;c++){var u=n[c];r(t,u)||s(t,u,l(e,u))}}},function(t,e,n){var r=n(54),i=n(65),o=n(88),a=n(28);t.exports=r("Reflect","ownKeys")||function(t){var e=i.f(a(t)),n=o.f;return n?e.concat(n(t)):e}},function(t,e,n){var r=n(22);t.exports=r},function(t,e,n){var r=n(27),i=n(34),o=n(85).indexOf,a=n(76);t.exports=function(t,e){var n,s=i(t),l=0,c=[];for(n in s)!r(a,n)&&r(s,n)&&c.push(n);for(;e.length>l;)r(s,n=e[l++])&&(~o(c,n)||c.push(n));return c}},function(t,e,n){var r=n(90);t.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(t,e,n){var r=n(23),i=n(30),o=n(28),a=n(67);t.exports=r?Object.defineProperties:function(t,e){o(t);for(var n,r=a(e),s=r.length,l=0;s>l;)i.f(t,n=r[l++],e[n]);return t}},function(t,e,n){var r=n(19);e.f=r},function(t,e,n){var r=n(110),i=n(27),o=n(114),a=n(30).f;t.exports=function(t){var e=r.Symbol||(r.Symbol={});i(e,t)||a(e,t,{value:o.f(t)})}},function(t,e,n){var r=n(56);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,i){return t.call(e,n,r,i)}}return function(){return t.apply(e,arguments)}}},function(t,e,n){var r,i,o=n(22),a=n(118),s=o.process,l=s&&s.versions,c=l&&l.v8;c?i=(r=c.split("."))[0]+r[1]:a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(i=r[1]),t.exports=i&&+i},function(t,e,n){var r=n(54);t.exports=r("navigator","userAgent")||""},function(t,e,n){var r=n(51).forEach,i=n(52),o=n(36),a=i("forEach"),s=o("forEach");t.exports=a&&s?[].forEach:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}},function(t,e,n){var r=n(95),i=n(49),o=n(19)("toStringTag"),a="Arguments"==i(function(){return arguments}());t.exports=r?i:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),o))?n:a?i(e):"Object"==(r=i(e))&&"function"==typeof e.callee?"Arguments":r}},function(t,e,n){var r=n(14),i=n(147),o=n(77),a=n(96),s=n(91),l=n(40),c=n(45),u=n(19),h=n(64),p=n(70),d=n(122),f=d.IteratorPrototype,y=d.BUGGY_SAFARI_ITERATORS,m=u("iterator"),b=function(){return this};t.exports=function(t,e,n,u,d,v,g){i(n,e,u);var _,w,k,x=function(t){if(t===d&&S)return S;if(!y&&t in C)return C[t];switch(t){case"keys":case"values":case"entries":return function(){return new n(this,t)}}return function(){return new n(this)}},j=e+" Iterator",O=!1,C=t.prototype,E=C[m]||C["@@iterator"]||d&&C[d],S=!y&&E||x(d),R="Array"==e&&C.entries||E;if(R&&(_=o(R.call(new t)),f!==Object.prototype&&_.next&&(h||o(_)===f||(a?a(_,f):"function"!=typeof _[m]&&l(_,m,b)),s(_,j,!0,!0),h&&(p[j]=b))),"values"==d&&E&&"values"!==E.name&&(O=!0,S=function(){return E.call(this)}),h&&!g||C[m]===S||l(C,m,S),p[e]=S,d)if(w={values:x("values"),keys:v?S:x("keys"),entries:x("entries")},g)for(k in w)(y||O||!(k in C))&&c(C,k,w[k]);else r({target:e,proto:!0,forced:y||O},w);return w}},function(t,e,n){var r,i,o,a=n(77),s=n(40),l=n(27),c=n(19),u=n(64),h=c("iterator"),p=!1;[].keys&&("next"in(o=[].keys())?(i=a(a(o)))!==Object.prototype&&(r=i):p=!0),null==r&&(r={}),u||l(r,h)||s(r,h,(function(){return this})),t.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:p}},function(t,e,n){var r=n(17);t.exports=!r((function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype}))},function(t,e,n){var r=n(23),i=n(67),o=n(34),a=n(74).f,s=function(t){return function(e){for(var n,s=o(e),l=i(s),c=l.length,u=0,h=[];c>u;)n=l[u++],r&&!a.call(s,n)||h.push(t?[n,s[n]]:s[n]);return h}};t.exports={entries:s(!0),values:s(!1)}},function(t,e,n){var r=n(50),i=n(39),o=function(t){return function(e,n){var o,a,s=String(i(e)),l=r(n),c=s.length;return l<0||l>=c?t?"":void 0:(o=s.charCodeAt(l))<55296||o>56319||l+1===c||(a=s.charCodeAt(l+1))<56320||a>57343?t?s.charAt(l):o:t?s.slice(l,l+2):a-56320+(o-55296<<10)+65536}};t.exports={codeAt:o(!1),charAt:o(!0)}},function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(t,e,n){var r=n(26),i=n(96);t.exports=function(t,e,n){var o,a;return i&&"function"==typeof(o=e.constructor)&&o!==n&&r(a=o.prototype)&&a!==n.prototype&&i(t,a),t}},function(t,e,n){var r=n(17);function i(t,e){return RegExp(t,e)}e.UNSUPPORTED_Y=r((function(){var t=i("a","y");return t.lastIndex=2,null!=t.exec("abcd")})),e.BROKEN_CARET=r((function(){var t=i("^r","gy");return t.lastIndex=2,null!=t.exec("str")}))},function(t,e,n){var r=n(98);t.exports=function(t){if(r(t))throw TypeError("The method doesn't accept regular expressions");return t}},function(t,e,n){var r=n(19)("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(n){try{return e[r]=!1,"/./"[t](e)}catch(t){}}return!1}},function(t,e,n){var r=n(56),i=n(26),o=[].slice,a={},s=function(t,e,n){if(!(e in a)){for(var r=[],i=0;i<e;i++)r[i]="a["+i+"]";a[e]=Function("C,a","return new C("+r.join(",")+")")}return a[e](t,n)};t.exports=Function.bind||function(t){var e=r(this),n=o.call(arguments,1),a=function(){var r=n.concat(o.call(arguments));return this instanceof a?s(e,r.length,r):e.apply(t,r)};return i(e.prototype)&&(a.prototype=e.prototype),a}},function(t,e,n){n(14)({target:"Function",proto:!0},{bind:n(131)})},function(t,e,n){var r=n(14),i=n(86),o=n(50),a=n(35),s=n(32),l=n(92),c=n(68),u=n(69),h=n(36),p=u("splice"),d=h("splice",{ACCESSORS:!0,0:0,1:2}),f=Math.max,y=Math.min;r({target:"Array",proto:!0,forced:!p||!d},{splice:function(t,e){var n,r,u,h,p,d,m=s(this),b=a(m.length),v=i(t,b),g=arguments.length;if(0===g?n=r=0:1===g?(n=0,r=b-v):(n=g-2,r=y(f(o(e),0),b-v)),b+n-r>9007199254740991)throw TypeError("Maximum allowed length exceeded");for(u=l(m,r),h=0;h<r;h++)(p=v+h)in m&&c(u,h,m[p]);if(u.length=r,n<r){for(h=v;h<b-r;h++)d=h+n,(p=h+r)in m?m[d]=m[p]:delete m[d];for(h=b;h>b-r+n;h--)delete m[h-1]}else if(n>r)for(h=b-r;h>v;h--)d=h+n-1,(p=h+r-1)in m?m[d]=m[p]:delete m[d];for(h=0;h<n;h++)m[h+v]=arguments[h+2];return m.length=b-r+n,u}})},function(t,e,n){var r=n(14),i=n(56),o=n(32),a=n(17),s=n(52),l=[],c=l.sort,u=a((function(){l.sort(void 0)})),h=a((function(){l.sort(null)})),p=s("sort");r({target:"Array",proto:!0,forced:u||!h||!p},{sort:function(t){return void 0===t?c.call(o(this)):c.call(o(this),i(t))}})},function(t,e,n){var r=n(14),i=n(50),o=n(161),a=n(162),s=n(17),l=1..toFixed,c=Math.floor,u=function(t,e,n){return 0===e?n:e%2==1?u(t,e-1,n*t):u(t*t,e/2,n)};r({target:"Number",proto:!0,forced:l&&("0.000"!==8e-5.toFixed(3)||"1"!==.9.toFixed(0)||"1.25"!==1.255.toFixed(2)||"1000000000000000128"!==(0xde0b6b3a7640080).toFixed(0))||!s((function(){l.call({})}))},{toFixed:function(t){var e,n,r,s,l=o(this),h=i(t),p=[0,0,0,0,0,0],d="",f="0",y=function(t,e){for(var n=-1,r=e;++n<6;)r+=t*p[n],p[n]=r%1e7,r=c(r/1e7)},m=function(t){for(var e=6,n=0;--e>=0;)n+=p[e],p[e]=c(n/t),n=n%t*1e7},b=function(){for(var t=6,e="";--t>=0;)if(""!==e||0===t||0!==p[t]){var n=String(p[t]);e=""===e?n:e+a.call("0",7-n.length)+n}return e};if(h<0||h>20)throw RangeError("Incorrect fraction digits");if(l!=l)return"NaN";if(l<=-1e21||l>=1e21)return String(l);if(l<0&&(d="-",l=-l),l>1e-21)if(n=(e=function(t){for(var e=0,n=t;n>=4096;)e+=12,n/=4096;for(;n>=2;)e+=1,n/=2;return e}(l*u(2,69,1))-69)<0?l*u(2,-e,1):l/u(2,e,1),n*=4503599627370496,(e=52-e)>0){for(y(0,n),r=h;r>=7;)y(1e7,0),r-=7;for(y(u(10,r,1),0),r=e-1;r>=23;)m(1<<23),r-=23;m(1<<r),y(1,1),m(2),f=b()}else y(0,n),y(1<<-e,0),f=b()+a.call("0",h);return f=h>0?d+((s=f.length)<=h?"0."+a.call("0",h-s)+f:f.slice(0,s-h)+"."+f.slice(s-h)):d+f}})},function(t,e,n){var r=n(23),i=n(22),o=n(89),a=n(45),s=n(27),l=n(49),c=n(127),u=n(62),h=n(17),p=n(55),d=n(65).f,f=n(47).f,y=n(30).f,m=n(80).trim,b=i.Number,v=b.prototype,g="Number"==l(p(v)),_=function(t){var e,n,r,i,o,a,s,l,c=u(t,!1);if("string"==typeof c&&c.length>2)if(43===(e=(c=m(c)).charCodeAt(0))||45===e){if(88===(n=c.charCodeAt(2))||120===n)return NaN}else if(48===e){switch(c.charCodeAt(1)){case 66:case 98:r=2,i=49;break;case 79:case 111:r=8,i=55;break;default:return+c}for(a=(o=c.slice(2)).length,s=0;s<a;s++)if((l=o.charCodeAt(s))<48||l>i)return NaN;return parseInt(o,r)}return+c};if(o("Number",!b(" 0o1")||!b("0b1")||b("+0x1"))){for(var w,k=function(t){var e=arguments.length<1?0:t,n=this;return n instanceof k&&(g?h((function(){v.valueOf.call(n)})):"Number"!=l(n))?c(new b(_(e)),n,k):_(e)},x=r?d(b):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),j=0;x.length>j;j++)s(b,w=x[j])&&!s(k,w)&&y(k,w,f(b,w));k.prototype=v,v.constructor=k,a(i,"Number",k)}},function(t,e){},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){var r=n(22),i=n(106),o=r.WeakMap;t.exports="function"==typeof o&&/native code/.test(i(o))},function(t,e,n){var r=n(54);t.exports=r("document","documentElement")},function(t,e,n){var r=n(34),i=n(65).f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return a&&"[object Window]"==o.call(t)?function(t){try{return i(t)}catch(t){return a.slice()}}(t):i(r(t))}},function(t,e,n){var r=n(116),i=n(32),o=n(143),a=n(144),s=n(35),l=n(68),c=n(145);t.exports=function(t){var e,n,u,h,p,d,f=i(t),y="function"==typeof this?this:Array,m=arguments.length,b=m>1?arguments[1]:void 0,v=void 0!==b,g=c(f),_=0;if(v&&(b=r(b,m>2?arguments[2]:void 0,2)),null==g||y==Array&&a(g))for(n=new y(e=s(f.length));e>_;_++)d=v?b(f[_],_):f[_],l(n,_,d);else for(p=(h=g.call(f)).next,n=new y;!(u=p.call(h)).done;_++)d=v?o(h,b,[u.value,_],!0):u.value,l(n,_,d);return n.length=_,n}},function(t,e,n){var r=n(28);t.exports=function(t,e,n,i){try{return i?e(r(n)[0],n[1]):e(n)}catch(e){var o=t.return;throw void 0!==o&&r(o.call(t)),e}}},function(t,e,n){var r=n(19),i=n(70),o=r("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(i.Array===t||a[o]===t)}},function(t,e,n){var r=n(120),i=n(70),o=n(19)("iterator");t.exports=function(t){if(null!=t)return t[o]||t["@@iterator"]||i[r(t)]}},function(t,e,n){var r=n(19)("iterator"),i=!1;try{var o=0,a={next:function(){return{done:!!o++}},return:function(){i=!0}};a[r]=function(){return this},Array.from(a,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!i)return!1;var n=!1;try{var o={};o[r]=function(){return{next:function(){return{done:n=!0}}}},t(o)}catch(t){}return n}},function(t,e,n){var r=n(122).IteratorPrototype,i=n(55),o=n(60),a=n(91),s=n(70),l=function(){return this};t.exports=function(t,e,n){var c=e+" Iterator";return t.prototype=i(r,{next:o(1,n)}),a(t,c,!1,!0),s[c]=l,t}},function(t,e,n){var r=n(26);t.exports=function(t){if(!r(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype");return t}},function(t,e,n){var r=n(56),i=n(32),o=n(61),a=n(35),s=function(t){return function(e,n,s,l){r(n);var c=i(e),u=o(c),h=a(c.length),p=t?h-1:0,d=t?-1:1;if(s<2)for(;;){if(p in u){l=u[p],p+=d;break}if(p+=d,t?p<0:h<=p)throw TypeError("Reduce of empty array with no initial value")}for(;t?p>=0:h>p;p+=d)p in u&&(l=n(l,u[p],p,c));return l}};t.exports={left:s(!1),right:s(!0)}},function(t,e,n){var r=n(14),i=n(151);r({target:"Object",stat:!0,forced:Object.assign!==i},{assign:i})},function(t,e,n){var r=n(23),i=n(17),o=n(67),a=n(88),s=n(74),l=n(32),c=n(61),u=Object.assign,h=Object.defineProperty;t.exports=!u||i((function(){if(r&&1!==u({b:1},u(h({},"a",{enumerable:!0,get:function(){h(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},n=Symbol();return t[n]=7,"abcdefghijklmnopqrst".split("").forEach((function(t){e[t]=t})),7!=u({},t)[n]||"abcdefghijklmnopqrst"!=o(u({},e)).join("")}))?function(t,e){for(var n=l(t),i=arguments.length,u=1,h=a.f,p=s.f;i>u;)for(var d,f=c(arguments[u++]),y=h?o(f).concat(h(f)):o(f),m=y.length,b=0;m>b;)d=y[b++],r&&!p.call(f,d)||(n[d]=f[d]);return n}:u},function(t,e,n){var r=n(95),i=n(120);t.exports=r?{}.toString:function(){return"[object "+i(this)+"]"}},function(t,e,n){var r=n(54),i=n(30),o=n(19),a=n(23),s=o("species");t.exports=function(t){var e=r(t),n=i.f;a&&e&&!e[s]&&n(e,s,{configurable:!0,get:function(){return this}})}},function(t,e,n){var r=n(14),i=n(51).every,o=n(52),a=n(36),s=o("every"),l=a("every");r({target:"Array",proto:!0,forced:!s||!l},{every:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(22),i=n(80).trim,o=n(81),a=r.parseInt,s=/^[+-]?0[Xx]/,l=8!==a(o+"08")||22!==a(o+"0x16");t.exports=l?function(t,e){var n=i(String(t));return a(n,e>>>0||(s.test(n)?16:10))}:a},function(t,e,n){var r=n(28),i=n(56),o=n(19)("species");t.exports=function(t,e){var n,a=r(t).constructor;return void 0===a||null==(n=r(a)[o])?e:i(n)}},function(t,e,n){var r=n(22),i=n(80).trim,o=n(81),a=r.parseFloat,s=1/a(o+"-0")!=-1/0;t.exports=s?function(t){var e=i(String(t)),n=a(e);return 0===n&&"-"==e.charAt(0)?-0:n}:a},function(t,e,n){var r=n(14),i=n(23);r({target:"Object",stat:!0,forced:!i,sham:!i},{defineProperties:n(113)})},function(t,e,n){var r=n(14),i=n(23),o=n(109),a=n(34),s=n(47),l=n(68);r({target:"Object",stat:!0,sham:!i},{getOwnPropertyDescriptors:function(t){for(var e,n,r=a(t),i=s.f,c=o(r),u={},h=0;c.length>h;)void 0!==(n=i(r,e=c[h++]))&&l(u,e,n);return u}})},function(t,e,n){var r=n(14),i=n(22),o=n(118),a=[].slice,s=function(t){return function(e,n){var r=arguments.length>2,i=r?a.call(arguments,2):void 0;return t(r?function(){("function"==typeof e?e:Function(e)).apply(this,i)}:e,n)}};r({global:!0,bind:!0,forced:/MSIE .\./.test(o)},{setTimeout:s(i.setTimeout),setInterval:s(i.setInterval)})},function(t,e,n){var r=n(49);t.exports=function(t){if("number"!=typeof t&&"Number"!=r(t))throw TypeError("Incorrect invocation");return+t}},function(t,e,n){var r=n(50),i=n(39);t.exports="".repeat||function(t){var e=String(i(this)),n="",o=r(t);if(o<0||o==1/0)throw RangeError("Wrong number of repetitions");for(;o>0;(o>>>=1)&&(e+=e))1&o&&(n+=e);return n}},function(t,e,n){var r=n(14),i=n(80).trim;r({target:"String",proto:!0,forced:n(164)("trim")},{trim:function(){return i(this)}})},function(t,e,n){var r=n(17),i=n(81);t.exports=function(t){return r((function(){return!!i[t]()||"​᠎"!="​᠎"[t]()||i[t].name!==t}))}},function(t,e,n){n(14)({target:"Date",stat:!0},{now:function(){return(new Date).getTime()}})},function(t,e,n){n.r(e),n.d(e,"JSONEditor",(function(){return cl}));n(1),n(2),n(3),n(18),n(93),n(20),n(37),n(25),n(0),n(41),n(31),n(4),n(33),n(150),n(13),n(42),n(5),n(57),n(6),n(7),n(21),n(8),n(58),n(59),n(24),n(43),n(29);var r=["actionscript","batchfile","c","c++","cpp","coffee","csharp","css","dart","django","ejs","erlang","golang","groovy","handlebars","haskell","haxe","html","ini","jade","java","javascript","json","less","lisp","lua","makefile","matlab","mysql","objectivec","pascal","perl","pgsql","php","python","r","ruby","sass","scala","scss","smarty","sql","sqlserver","stylus","svg","twig","vbscript","xml","yaml"],i=[function(t){return"string"===t.type&&"color"===t.format&&"colorpicker"},function(t){return"string"===t.type&&["ip","ipv4","ipv6","hostname"].includes(t.format)&&"ip"},function(t){return"string"===t.type&&r.includes(t.format)&&"ace"},function(t){return"string"===t.type&&["xhtml","bbcode"].includes(t.format)&&"sceditor"},function(t){return"string"===t.type&&"markdown"===t.format&&"simplemde"},function(t){return"string"===t.type&&"jodit"===t.format&&"jodit"},function(t){return"string"===t.type&&"autocomplete"===t.format&&"autocomplete"},function(t){return"string"===t.type&&"uuid"===t.format&&"uuid"},function(t){return"info"===t.format&&"info"},function(t){return"button"===t.format&&"button"},function(t){if(("integer"===t.type||"number"===t.type)&&"stepper"===t.format)return"stepper"},function(t){if(t.links)for(var e=0;e<t.links.length;e++)if(t.links[e].rel&&"describedby"===t.links[e].rel.toLowerCase())return"describedBy"},function(t){return["string","integer"].includes(t.type)&&["starrating","rating"].includes(t.format)&&"starrating"},function(t){return["string","integer"].includes(t.type)&&["date","time","datetime-local"].includes(t.format)&&"datetime"},function(t){return(t.oneOf||t.anyOf)&&"multiple"},function(t){if("array"===t.type&&t.items&&!Array.isArray(t.items)&&["string","number","integer"].includes(t.items.type)){if("choices"===t.format)return"arrayChoices";if(t.uniqueItems){if("selectize"===t.format)return"arraySelectize";if("select2"===t.format)return"arraySelect2";if(t.items.enum)return"multiselect"}}},function(t){if(t.enum){if("array"===t.type||"object"===t.type)return"enum";if("number"===t.type||"integer"===t.type||"string"===t.type)return"radio"===t.format?"radio":"select2"===t.format?"select2":"selectize"===t.format?"selectize":"choices"===t.format?"choices":"select"}},function(t){if(t.enumSource)return"radio"===t.format?"radio":"select2"===t.format?"select2":"selectize"===t.format?"selectize":"choices"===t.format?"choices":"select"},function(t){return"array"===t.type&&"table"===t.format&&"table"},function(t){return"string"===t.type&&"url"===t.format&&window.FileReader&&t.options&&t.options.upload===Object(t.options.upload)&&"upload"},function(t){return"string"===t.type&&t.media&&"base64"===t.media.binaryEncoding&&"base64"},function(t){return"any"===t.type&&"multiple"},function(t){if("boolean"===t.type)return"checkbox"===t.format||t.options&&t.options.checkbox?"checkbox":"select2"===t.format?"select2":"selectize"===t.format?"selectize":"choices"===t.format?"choices":"select"},function(t){return"string"===t.type&&"signature"===t.format&&"signature"},function(t){return"string"==typeof t.type&&t.type},function(t){return!t.type&&t.properties&&"object"},function(t){return"string"!=typeof t.type&&"multiple"}];function o(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return a(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return a(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function a(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var s={},l={};l.en={error_notset:"Property must be set",error_notempty:"Value required",error_enum:"Value must be one of the enumerated values",error_anyOf:"Value must validate against at least one of the provided schemas",error_oneOf:"Value must validate against exactly one of the provided schemas. It currently validates against {{0}} of the schemas.",error_not:"Value must not validate against the provided schema",error_type_union:"Value must be one of the provided types",error_type:"Value must be of type {{0}}",error_disallow_union:"Value must not be one of the provided disallowed types",error_disallow:"Value must not be of type {{0}}",error_multipleOf:"Value must be a multiple of {{0}}",error_maximum_excl:"Value must be less than {{0}}",error_maximum_incl:"Value must be at most {{0}}",error_minimum_excl:"Value must be greater than {{0}}",error_minimum_incl:"Value must be at least {{0}}",error_maxLength:"Value must be at most {{0}} characters long",error_minLength:"Value must be at least {{0}} characters long",error_pattern:"Value must match the pattern {{0}}",error_additionalItems:"No additional items allowed in this array",error_maxItems:"Value must have at most {{0}} items",error_minItems:"Value must have at least {{0}} items",error_uniqueItems:"Array must have unique items",error_maxProperties:"Object must have at most {{0}} properties",error_minProperties:"Object must have at least {{0}} properties",error_required:"Object is missing the required property '{{0}}'",error_additional_properties:"No additional properties allowed, but property {{0}} is set",error_property_names_exceeds_maxlength:"Property name {{0}} exceeds maxLength",error_property_names_enum_mismatch:"Property name {{0}} does not match any enum values",error_property_names_pattern_mismatch:"Property name {{0}} does not match pattern",error_property_names_false:"Property name {{0}} fails when propertyName is false",error_property_names_maxlength:"Property name {{0}} cannot match invalid maxLength",error_property_names_enum:"Property name {{0}} cannot match invalid enum",error_property_names_pattern:"Property name {{0}} cannot match invalid pattern",error_property_names_unsupported:"Unsupported propertyName {{0}}",error_dependency:"Must have property {{0}}",error_date:"Date must be in the format {{0}}",error_time:"Time must be in the format {{0}}",error_datetime_local:"Datetime must be in the format {{0}}",error_invalid_epoch:"Date must be greater than 1 January 1970",error_ipv4:"Value must be a valid IPv4 address in the form of 4 numbers between 0 and 255, separated by dots",error_ipv6:"Value must be a valid IPv6 address",error_hostname:"The hostname has the wrong format",button_save:"Save",button_copy:"Copy",button_cancel:"Cancel",button_add:"Add",button_delete_all:"All",button_delete_all_title:"Delete All",button_delete_last:"Last {{0}}",button_delete_last_title:"Delete Last {{0}}",button_add_row_title:"Add {{0}}",button_move_down_title:"Move down",button_move_up_title:"Move up",button_properties:"Properties",button_object_properties:"Object Properties",button_copy_row_title:"Copy {{0}}",button_delete_row_title:"Delete {{0}}",button_delete_row_title_short:"Delete",button_copy_row_title_short:"Copy",button_collapse:"Collapse",button_expand:"Expand",button_edit_json:"Edit JSON",button_upload:"Upload",flatpickr_toggle_button:"Toggle",flatpickr_clear_button:"Clear",choices_placeholder_text:"Start typing to add value",default_array_item_title:"item",button_delete_node_warning:"Are you sure you want to remove this node?"},Object.entries(s).forEach((function(t){var e=o(t,2),n=e[0],r=e[1];s[n].options=r.options||{}}));var c={options:{upload:function(t,e,n){console.log("Upload handler required for upload editor")},prompt_before_delete:!0,use_default_values:!0,max_depth:0},theme:"html",template:"default",themes:{},callbacks:{},templates:{},iconlibs:{},editors:s,languages:l,resolvers:i,custom_validators:[],default_language:"en",language:"en",translate:function(t,e){var n=c.languages[c.language];if(!n)throw new Error("Unknown language ".concat(c.language));var r=n[t]||c.languages.en[t]||t;if(e)for(var i=0;i<e.length;i++)r=r.replace(new RegExp("\\{\\{".concat(i,"}}"),"g"),e[i]);return r}};n(154),n(48),n(44),n(79),n(71),n(46),n(53);function u(t,e,n,r){try{switch(t.format){case"ipv4":!function(t){var e=t.split(".");if(4!==e.length)throw new Error("error_ipv4");e.forEach((function(t){if(isNaN(+t)||+t<0||+t>255)throw new Error("error_ipv4")}))}(e);break;case"ipv6":!function(t){if(!t.match("^(?:(?:(?:[a-fA-F0-9]{1,4}:){6}|(?=(?:[a-fA-F0-9]{0,4}:){2,6}(?:[0-9]{1,3}.){3}[0-9]{1,3}$)(([0-9a-fA-F]{1,4}:){1,5}|:)((:[0-9a-fA-F]{1,4}){1,5}:|:)|::(?:[a-fA-F0-9]{1,4}:){5})(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]).){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])|(?:[a-fA-F0-9]{1,4}:){7}[a-fA-F0-9]{1,4}|(?=(?:[a-fA-F0-9]{0,4}:){0,7}[a-fA-F0-9]{0,4}$)(([0-9a-fA-F]{1,4}:){1,7}|:)((:[0-9a-fA-F]{1,4}){1,7}|:)|(?:[a-fA-F0-9]{1,4}:){7}:|:(:[a-fA-F0-9]{1,4}){7})$"))throw new Error("error_ipv6")}(e);break;case"hostname":!function(t){if(!t.match("(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9].)+[a-zA-Z]{2,63}$)"))throw new Error("error_hostname")}(e)}return[]}catch(t){return[{path:n,property:"format",message:r(t.message)}]}}n(102);function h(t){return(h="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function p(t){return null!==t&&("object"===h(t)&&!t.nodeType&&t!==t.window&&!(t.constructor&&!b(t.constructor.prototype,"isPrototypeOf")))}function d(t){return p(t)?f({},t):Array.isArray(t)?t.map(d):t}function f(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return n.forEach((function(e){e&&Object.keys(e).forEach((function(n){e[n]&&p(e[n])?(b(t,n)||(t[n]={}),f(t[n],e[n])):Array.isArray(e[n])?t[n]=d(e[n]):t[n]=e[n]}))})),t}function y(t,e){var n=document.createEvent("HTMLEvents");n.initEvent(e,!0,!0),t.dispatchEvent(n)}function m(t){return t&&("[object ShadowRoot]"===t.toString()?t:m(t.parentNode))}function b(t,e){return t&&Object.prototype.hasOwnProperty.call(t,e)}var v=/^\s*(-|\+)?(\d+|(\d*(\.\d*)))([eE][+-]?\d+)?\s*$/;var g=/^\s*(-|\+)?(\d+)\s*$/;function _(t){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function w(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(t,e)||x(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(t){return function(t){if(Array.isArray(t))return j(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||x(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(t,e){if(t){if("string"==typeof t)return j(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?j(t,e):void 0}}function j(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function O(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var C=function(){function t(e,n,r,i){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.jsoneditor=e,this.schema=n||this.jsoneditor.schema,this.options=r||{},this.translate=this.jsoneditor.translate||i.translate,this.defaults=i,this._validateSubSchema={enum:function(t,e,n){var r=JSON.stringify(e);return t.enum.some((function(t){return r===JSON.stringify(t)}))?[]:[{path:n,property:"enum",message:this.translate("error_enum")}]},extends:function(t,e,n){var r=this;return t.extends.reduce((function(t,i){return t.push.apply(t,k(r._validateSchema(i,e,n))),t}),[])},allOf:function(t,e,n){var r=this;return t.allOf.reduce((function(t,i){return t.push.apply(t,k(r._validateSchema(i,e,n))),t}),[])},anyOf:function(t,e,n){var r=this;return t.anyOf.some((function(t){return!r._validateSchema(t,e,n).length}))?[]:[{path:n,property:"anyOf",message:this.translate("error_anyOf")}]},oneOf:function(t,e,n){var r=this,i=0,o=[];t.oneOf.forEach((function(t,a){var s=r._validateSchema(t,e,n);s.length||i++,s.forEach((function(t){t.path="".concat(n,".oneOf[").concat(a,"]").concat(t.path.substr(n.length))})),o.push.apply(o,k(s))}));var a=[];return 1!==i&&(a.push({path:n,property:"oneOf",message:this.translate("error_oneOf",[i])}),a.push.apply(a,o)),a},not:function(t,e,n){return this._validateSchema(t.not,e,n).length?[]:[{path:n,property:"not",message:this.translate("error_not")}]},type:function(t,e,n){var r=this;if(Array.isArray(t.type)){if(!t.type.some((function(t){return r._checkType(t,e)})))return[{path:n,property:"type",message:this.translate("error_type_union")}]}else if(["date","time","datetime-local"].includes(t.format)&&"integer"===t.type){if(!this._checkType("string","".concat(e)))return[{path:n,property:"type",message:this.translate("error_type",[t.format])}]}else if(!this._checkType(t.type,e))return[{path:n,property:"type",message:this.translate("error_type",[t.type])}];return[]},disallow:function(t,e,n){var r=this;if(Array.isArray(t.disallow)){if(t.disallow.some((function(t){return r._checkType(t,e)})))return[{path:n,property:"disallow",message:this.translate("error_disallow_union")}]}else if(this._checkType(t.disallow,e))return[{path:n,property:"disallow",message:this.translate("error_disallow",[t.disallow])}];return[]}},this._validateNumberSubSchema={multipleOf:function(t,e,n){return this._validateNumberSubSchemaMultipleDivisible(t,e,n)},divisibleBy:function(t,e,n){return this._validateNumberSubSchemaMultipleDivisible(t,e,n)},maximum:function(t,e,n){var r=t.exclusiveMaximum?e<t.maximum:e<=t.maximum;return window.math?r=window.math[t.exclusiveMaximum?"smaller":"smallerEq"](window.math.bignumber(e),window.math.bignumber(t.maximum)):window.Decimal&&(r=new window.Decimal(e)[t.exclusiveMaximum?"lt":"lte"](new window.Decimal(t.maximum))),r?[]:[{path:n,property:"maximum",message:this.translate(t.exclusiveMaximum?"error_maximum_excl":"error_maximum_incl",[t.maximum])}]},minimum:function(t,e,n){var r=t.exclusiveMinimum?e>t.minimum:e>=t.minimum;return window.math?r=window.math[t.exclusiveMinimum?"larger":"largerEq"](window.math.bignumber(e),window.math.bignumber(t.minimum)):window.Decimal&&(r=new window.Decimal(e)[t.exclusiveMinimum?"gt":"gte"](new window.Decimal(t.minimum))),r?[]:[{path:n,property:"minimum",message:this.translate(t.exclusiveMinimum?"error_minimum_excl":"error_minimum_incl",[t.minimum])}]}},this._validateStringSubSchema={maxLength:function(t,e,n){var r=[];return"".concat(e).length>t.maxLength&&r.push({path:n,property:"maxLength",message:this.translate("error_maxLength",[t.maxLength])}),r},minLength:function(t,e,n){return"".concat(e).length<t.minLength?[{path:n,property:"minLength",message:this.translate(1===t.minLength?"error_notempty":"error_minLength",[t.minLength])}]:[]},pattern:function(t,e,n){return new RegExp(t.pattern).test(e)?[]:[{path:n,property:"pattern",message:t.options&&t.options.patternmessage?t.options.patternmessage:this.translate("error_pattern",[t.pattern])}]}},this._validateArraySubSchema={items:function(t,e,n){var r=this,i=[];if(Array.isArray(t.items))for(var o=0;o<e.length;o++)if(t.items[o])console.log("--\x3e"),i.push.apply(i,k(this._validateSchema(t.items[o],e[o],"".concat(n,".").concat(o))));else{if(!0===t.additionalItems)break;if(!t.additionalItems){if(!1===t.additionalItems){i.push({path:n,property:"additionalItems",message:this.translate("error_additionalItems")});break}break}i.push.apply(i,k(this._validateSchema(t.additionalItems,e[o],"".concat(n,".").concat(o))))}else e.forEach((function(e,o){i.push.apply(i,k(r._validateSchema(t.items,e,"".concat(n,".").concat(o))))}));return i},maxItems:function(t,e,n){return e.length>t.maxItems?[{path:n,property:"maxItems",message:this.translate("error_maxItems",[t.maxItems])}]:[]},minItems:function(t,e,n){return e.length<t.minItems?[{path:n,property:"minItems",message:this.translate("error_minItems",[t.minItems])}]:[]},uniqueItems:function(t,e,n){for(var r={},i=0;i<e.length;i++){var o=JSON.stringify(e[i]);if(r[o])return[{path:n,property:"uniqueItems",message:this.translate("error_uniqueItems")}];r[o]=!0}return[]}},this._validateObjectSubSchema={maxProperties:function(t,e,n){return Object.keys(e).length>t.maxProperties?[{path:n,property:"maxProperties",message:this.translate("error_maxProperties",[t.maxProperties])}]:[]},minProperties:function(t,e,n){return Object.keys(e).length<t.minProperties?[{path:n,property:"minProperties",message:this.translate("error_minProperties",[t.minProperties])}]:[]},required:function(t,e,n){var r=this,i=[];return Array.isArray(t.required)&&t.required.forEach((function(t){if(void 0===e[t]){var o=r.jsoneditor.getEditor("".concat(n,".").concat(t));o&&["button","info"].includes(o.schema.format||o.schema.type)||i.push({path:n,property:"required",message:r.translate("error_required",[t])})}})),i},properties:function(t,e,n,r){var i=this,o=[];return Object.entries(t.properties).forEach((function(t){var a=w(t,2),s=a[0],l=a[1];r[s]=!0,o.push.apply(o,k(i._validateSchema(l,e[s],"".concat(n,".").concat(s))))})),o},patternProperties:function(t,e,n,r){var i=this,o=[];return Object.entries(t.patternProperties).forEach((function(t){var a=w(t,2),s=a[0],l=a[1],c=new RegExp(s);Object.entries(e).forEach((function(t){var e=w(t,2),a=e[0],s=e[1];c.test(a)&&(r[a]=!0,o.push.apply(o,k(i._validateSchema(l,s,"".concat(n,".").concat(a)))))}))})),o}},this._validateObjectSubSchema2={propertyNames:function(t,e,n,r){var i=this,o=[],a=Object.keys(e),s=null,l=function(e){var r="";return s=a[e],"boolean"==typeof t.propertyNames?(console.log(t.propertyNames?"TRUE":"FALSE"),console.log("*"+s+"*"),!0===t.propertyNames?"continue":(o.push({path:n,property:"propertyNames",message:i.translate("error_property_names_false",[s])}),"break")):Object.entries(t.propertyNames).every((function(t){var e=w(t,2),a=e[0],l=e[1],c=!1;switch(a){case"maxLength":if("number"!=typeof l){r="error_property_names_maxlength";break}if(s.length>l){r="error_property_names_exceeds_maxlength";break}return!0;case"enum":if(!Array.isArray(l)){r="error_property_names_enum";break}if(l.forEach((function(t){t===s&&(c=!0)})),!c){r="error_property_names_enum_mismatch";break}return!0;case"pattern":if("string"!=typeof l){r="error_property_names_pattern";break}if(!new RegExp(l).test(s)){r="error_property_names_pattern_mismatch";break}return!0;default:return o.push({path:n,property:"propertyNames",message:i.translate("error_property_names_unsupported",[a])}),!1}return o.push({path:n,property:"propertyNames",message:i.translate(r,[s])}),!1}))?void 0:"break"};t:for(var c=0;c<a.length;c++){switch(l(c)){case"continue":continue;case"break":break t}}return o},additionalProperties:function(t,e,n,r){for(var i=[],o=Object.keys(e),a=0;a<o.length;a++){var s=o[a];if(!r[s]){if(!t.additionalProperties){i.push({path:n,property:"additionalProperties",message:this.translate("error_additional_properties",[s])});break}if(!0===t.additionalProperties)break;i.push.apply(i,k(this._validateSchema(t.additionalProperties,e[s],"".concat(n,".").concat(s))))}}return i},dependencies:function(t,e,n){var r=this,i=[];return Object.entries(t.dependencies).forEach((function(t){var o=w(t,2),a=o[0],s=o[1];void 0!==e[a]&&(Array.isArray(s)?s.forEach((function(t){void 0===e[t]&&i.push({path:n,property:"dependencies",message:r.translate("error_dependency",[t])})})):i.push.apply(i,k(r._validateSchema(s,e,n))))})),i}}}var e,n,r;return e=t,(n=[{key:"fitTest",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e7,r={match:0,extra:0};if("object"===_(t)&&null!==t){var i=this._getSchema(e).properties;for(var o in i)if(b(i,o)){if("object"===_(t[o])&&"object"===_(i[o])&&"object"===_(i[o].properties)){var a=this.fitTest(t[o],i[o],n/100);r.match+=a.match,r.extra+=a.extra}void 0!==t[o]&&(r.match+=n)}else r.extra+=n}return r}},{key:"_getSchema",value:function(t){return void 0===t?f({},this.jsoneditor.expandRefs(this.schema)):t}},{key:"validate",value:function(t){return this._validateSchema(this.schema,t)}},{key:"_validateSchema",value:function(t,e,n){var r=this,i=[];return n=n||this.jsoneditor.root.formname,t=f({},this.jsoneditor.expandRefs(t)),void 0===e?this._validateV3Required(t,e,n):(Object.keys(t).forEach((function(o){r._validateSubSchema[o]&&i.push.apply(i,k(r._validateSubSchema[o].call(r,t,e,n)))})),i.push.apply(i,k(this._validateByValueType(t,e,n))),t.links&&t.links.forEach((function(o,a){o.rel&&"describedby"===o.rel.toLowerCase()&&(t=r._expandSchemaLink(t,a),i.push.apply(i,k(r._validateSchema(t,e,n,r.translate))))})),["date","time","datetime-local"].includes(t.format)&&i.push.apply(i,k(this._validateDateTimeSubSchema(t,e,n))),["uuid"].includes(t.format)&&i.push.apply(i,k(this._validateUUIDSchema(t,e,n))),i.push.apply(i,k(this._validateCustomValidator(t,e,n))),this._removeDuplicateErrors(i))}},{key:"_expandSchemaLink",value:function(t,e){var n=t.links[e].href,r=this.jsoneditor.root.getValue(),i=this.jsoneditor.compileTemplate(n,this.jsoneditor.template),o=document.location.origin+document.location.pathname+i(r);return t.links=t.links.slice(0,e).concat(t.links.slice(e+1)),f({},t,this.jsoneditor.refs[o])}},{key:"_validateV3Required",value:function(t,e,n){return void 0!==t.required&&!0===t.required||void 0===t.required&&!0===this.jsoneditor.options.required_by_default?[{path:n,property:"required",message:this.translate("error_notset")}]:[]}},{key:"_validateByValueType",value:function(t,e,n){var r=this,i=[];if(null===e)return i;if("number"==typeof e)Object.keys(t).forEach((function(o){r._validateNumberSubSchema[o]&&i.push.apply(i,k(r._validateNumberSubSchema[o].call(r,t,e,n)))}));else if("string"==typeof e)Object.keys(t).forEach((function(o){r._validateStringSubSchema[o]&&i.push.apply(i,k(r._validateStringSubSchema[o].call(r,t,e,n)))}));else if(Array.isArray(e))Object.keys(t).forEach((function(o){r._validateArraySubSchema[o]&&i.push.apply(i,k(r._validateArraySubSchema[o].call(r,t,e,n)))}));else if("object"===_(e)){var o={};Object.keys(t).forEach((function(a){r._validateObjectSubSchema[a]&&i.push.apply(i,k(r._validateObjectSubSchema[a].call(r,t,e,n,o)))})),void 0!==t.additionalProperties||!this.jsoneditor.options.no_additional_properties||t.oneOf||t.anyOf||t.allOf||(t.additionalProperties=!1),Object.keys(t).forEach((function(a){void 0!==r._validateObjectSubSchema2[a]&&i.push.apply(i,k(r._validateObjectSubSchema2[a].call(r,t,e,n,o)))}))}return i}},{key:"_validateUUIDSchema",value:function(t,e,n){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e)?[]:[{path:n,property:"format",message:this.translate("error_pattern",["^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}$"])}]}},{key:"_validateNumberSubSchemaMultipleDivisible",value:function(t,e,n){var r=t.multipleOf||t.divisibleBy,i=e/r===Math.floor(e/r);return window.math?i=window.math.mod(window.math.bignumber(e),window.math.bignumber(r)).equals(0):window.Decimal&&(i=new window.Decimal(e).mod(new window.Decimal(r)).equals(0)),i?[]:[{path:n,property:t.multipleOf?"multipleOf":"divisibleBy",message:this.translate("error_multipleOf",[r])}]}},{key:"_validateDateTimeSubSchema",value:function(t,e,n){var r=this,i=this.jsoneditor.getEditor(n),o=i&&i.flatpickr?i.flatpickr.config.dateFormat:{date:'"YYYY-MM-DD"',time:'"HH:MM"',"datetime-local":'"YYYY-MM-DD HH:MM"'}[t.format];if("integer"===t.type)return function(t,e,n){return 1*e<1?[{path:n,property:"format",message:r.translate("error_invalid_epoch")}]:e!==Math.abs(parseInt(e))?[{path:n,property:"format",message:r.translate("error_".concat(t.format.replace(/-/g,"_")),[o])}]:[]}(t,e,n);if(i&&i.flatpickr){if(i)return function(t,e,n,i){if(""!==e){var o;if("single"!==i.flatpickr.config.mode){var a="range"===i.flatpickr.config.mode?i.flatpickr.l10n.rangeSeparator:", ";o=i.flatpickr.selectedDates.map((function(t){return i.flatpickr.formatDate(t,i.flatpickr.config.dateFormat)})).join(a)}try{if(o){if(o!==e)throw new Error("".concat(i.flatpickr.config.mode," mismatch"))}else if(i.flatpickr.formatDate(i.flatpickr.parseDate(e,i.flatpickr.config.dateFormat),i.flatpickr.config.dateFormat)!==e)throw new Error("mismatch")}catch(t){var s=void 0!==i.flatpickr.config.errorDateFormat?i.flatpickr.config.errorDateFormat:i.flatpickr.config.dateFormat;return[{path:n,property:"format",message:r.translate("error_".concat(i.format.replace(/-/g,"_")),[s])}]}}return[]}(0,e,n,i)}else if(!{date:/^(\d{4}\D\d{2}\D\d{2})?$/,time:/^(\d{2}:\d{2}(?::\d{2})?)?$/,"datetime-local":/^(\d{4}\D\d{2}\D\d{2}[ T]\d{2}:\d{2}(?::\d{2})?)?$/}[t.format].test(e))return[{path:n,property:"format",message:this.translate("error_".concat(t.format.replace(/-/g,"_")),[o])}];return[]}},{key:"_validateCustomValidator",value:function(t,e,n){var r=this,i=[];i.push.apply(i,k(u.call(this,t,e,n,this.translate)));var o=function(o){i.push.apply(i,k(o.call(r,t,e,n)))};return this.defaults.custom_validators.forEach(o),this.options.custom_validators&&this.options.custom_validators.forEach(o),i}},{key:"_removeDuplicateErrors",value:function(t){return t.reduce((function(t,e){var n=!0;return t||(t=[]),t.forEach((function(t){t.message===e.message&&t.path===e.path&&t.property===e.property&&(t.errorcount++,n=!1)})),n&&(e.errorcount=1,t.push(e)),t}),[])}},{key:"_checkType",value:function(t,e){var n={string:function(t){return"string"==typeof t},number:function(t){return"number"==typeof t},integer:function(t){return"number"==typeof t&&t===Math.floor(t)},boolean:function(t){return"boolean"==typeof t},array:function(t){return Array.isArray(t)},object:function(t){return null!==t&&!Array.isArray(t)&&"object"===_(t)},null:function(t){return null===t}};return"string"==typeof t?!n[t]||n[t](e):!this._validateSchema(t,e).length}}])&&O(e.prototype,n),r&&O(e,r),t}();n(72),n(73),n(38),n(103);function E(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return S(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return S(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function S(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function R(t){return(R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var L=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.options=e||{},this.refs=this.options.refs||{},this.refs_with_info={},this.refs_prefix="#/counter/",this.refs_counter=1,this._subSchema1={type:function(t){"object"===R(t.type)&&(t.type=this._expandSubSchema(t.type))},disallow:function(t){"object"===R(t.disallow)&&(t.disallow=this._expandSubSchema(t.disallow))},anyOf:function(t){var e=this;Object.entries(t.anyOf).forEach((function(n){var r=E(n,2),i=r[0],o=r[1];t.anyOf[i]=e.expandSchema(o)}))},dependencies:function(t){var e=this;Object.entries(t.dependencies).forEach((function(n){var r=E(n,2),i=r[0],o=r[1];"object"!==R(o)||Array.isArray(o)||(t.dependencies[i]=e.expandSchema(o))}))},not:function(t){t.not=this.expandSchema(t.not)}},this._subSchema2={allOf:function(t,e){var n=this,r=f({},e);return Object.entries(t.allOf).forEach((function(e){var i=E(e,2),o=i[0],a=i[1];t.allOf[o]=n.expandRefs(a,!0),r=n.extendSchemas(r,n.expandSchema(a))})),delete r.allOf,r},extends:function(t,e){var n,r=this;return delete(n=Array.isArray(t.extends)?t.extends.reduce((function(t,e,n){return r.extendSchemas(t,r.expandSchema(e))}),e):this.extendSchemas(e,this.expandSchema(t.extends))).extends,n},oneOf:function(t,e){var n=this,r=f({},e);return delete r.oneOf,t.oneOf.reduce((function(t,e,i){return t.oneOf[i]=n.extendSchemas(n.expandSchema(e),r),t}),e),e}}}var e,n,r;return e=t,(n=[{key:"load",value:function(t,e,n,r){var i=this;this._loadExternalRefs(t,(function(){i._getDefinitions(t,"".concat(n,"#/definitions/")),e(i.expandRefs(t))}),n,this._getFileBase(r))}},{key:"expandRefs",value:function(t,e){var n=this,r=f({},t);if(!r.$ref)return r;var i=this.refs_with_info[r.$ref];delete r.$ref;var o=i.$ref.startsWith("#")?i.fetchUrl:"",a=this._getRef(o,i);if(this.refs[a]){if(e&&b(this.refs[a],"allOf")){var s=this.refs[a].allOf;Object.keys(s).forEach((function(t){s[t]=n.expandRefs(s[t],!0)}))}}else console.warn("reference:'".concat(a,"' not found!"));return this.extendSchemas(r,this.expandSchema(this.refs[a]))}},{key:"expandSchema",value:function(t,e){var n=this;Object.entries(this._subSchema1).forEach((function(e){var r=E(e,2),i=r[0],o=r[1];t[i]&&o.call(n,t)}));var r=f({},t);return Object.entries(this._subSchema2).forEach((function(e){var i=E(e,2),o=i[0],a=i[1];t[o]&&(r=a.call(n,t,r))})),this.expandRefs(r)}},{key:"_getRef",value:function(t,e){var n=t+e;return this.refs[n]?n:t+decodeURIComponent(e.$ref)}},{key:"_expandSubSchema",value:function(t){var e=this;return Array.isArray(t)?t.map((function(t){return"object"===("undefined"==typeof value?"undefined":R(value))?e.expandSchema(t):t})):this.expandSchema(t)}},{key:"_getDefinitions",value:function(t,e){var n=this;t.definitions&&Object.keys(t.definitions).forEach((function(r){n.refs[e+r]=t.definitions[r],t.definitions[r].definitions&&n._getDefinitions(t.definitions[r],"".concat(e+r,"/definitions/"))}))}},{key:"_getExternalRefs",value:function(t,e){var n=this,r={},i=function(t){return Object.keys(t).forEach((function(t){r[t]=!0}))};if(t.$ref&&"object"!==R(t.$ref)){var o=this.refs_prefix+this.refs_counter++;"#"===t.$ref.substr(0,1)||this.refs[t.$ref]||(r[t.$ref]=!0),this.refs_with_info[o]={fetchUrl:e,$ref:t.$ref},t.$ref=o}return Object.values(t).forEach((function(t){t&&"object"===R(t)&&(Array.isArray(t)?Object.values(t).forEach((function(t){t&&"object"===R(t)&&i(n._getExternalRefs(t,e))})):i(n._getExternalRefs(t,e)))})),r}},{key:"_getFileBase",value:function(t){var e=this.options.ajaxBase;return void 0===e?this._getFileBaseFromFileLocation(t):e}},{key:"_getFileBaseFromFileLocation",value:function(t){var e=t.split("/");return e.pop(),"".concat(e.join("/"),"/")}},{key:"_isLocalUrl",value:function(t,e){return e!==t.substr(0,e.length)&&"http"!==t.substr(0,4)&&"blob:"!==t.substr(0,5)&&"data:"!==t.substr(0,5)&&"/"!==t.substr(0,1)}},{key:"_loadExternalRefs",value:function(t,e,n,r){var i=this,o=this._getExternalRefs(t,n),a=0,s=0,l=!1;Object.keys(o).forEach((function(t){if(!i.refs[t]){if(!i.options.ajax)throw new Error("Must set ajax option to true to load external ref ".concat(t));i.refs[t]="loading",s++;var n=i._isLocalUrl(t,r)?r+t:t;n.indexOf("#")>0&&(n=n.substr(0,n.indexOf("#")));var o=new XMLHttpRequest;o.overrideMimeType("application/json"),o.open("GET",n,!0),i.options.ajaxCredentials&&(o.withCredentials=i.options.ajaxCredentials),o.onreadystatechange=function(){if(4===o.readyState){if(200!==o.status)throw window.console.log(o),new Error("Failed to fetch ref via ajax- ".concat(t));var r;try{r=JSON.parse(o.responseText)}catch(t){throw window.console.log(t),new Error("Failed to parse external ref ".concat(n))}if("boolean"!=typeof r&&"object"!==R(r)||null===r||Array.isArray(r))throw new Error("External ref does not contain a valid schema - ".concat(n));i.refs[t]=r;var c=i._getFileBaseFromFileLocation(n);i._getDefinitions(r,"".concat(n,"#/definitions/")),i._loadExternalRefs(r,(function(){++a>=s&&!l&&(l=!0,e())}),n,c)}},o.send()}})),s||e()}},{key:"extendSchemas",value:function(t,e){var n=this;t=f({},t),e=f({},e);var r={},i=function(t,i){!function(t,e){return("required"===t||"defaultProperties"===t)&&"object"===R(e)&&Array.isArray(e)}(t,i)?"type"!==t||"string"!=typeof i&&!Array.isArray(i)?"object"!==R(i)||Array.isArray(i)||null===i?r[t]=i:r[t]=n.extendSchemas(i,e[t]):o(i):r[t]=i.concat(e[t]).reduce((function(t,e){return t.includes(e)||t.push(e),t}),[])},o=function(t){"string"==typeof t&&(t=[t]),"string"==typeof e.type&&(e.type=[e.type]),e.type&&e.type.length?r.type=t.filter((function(t){return e.type.includes(t)})):r.type=t,1===r.type.length&&"string"==typeof r.type[0]?r.type=r.type[0]:0===r.type.length&&delete r.type};return Object.entries(t).forEach((function(t){var n=E(t,2),o=n[0],a=n[1];void 0!==e[o]?i(o,a):r[o]=a})),Object.entries(e).forEach((function(e){var n=E(e,2),i=n[0],o=n[1];void 0===t[i]&&(r[i]=o)})),r}}])&&P(e.prototype,n),r&&P(e,r),t}();n(9),n(15),n(10),n(11),n(12),n(16),n(132);function T(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return A(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return A(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function A(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function I(t){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function D(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var N=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.defaults=n,this.jsoneditor=e.jsoneditor,this.theme=this.jsoneditor.theme,this.template_engine=this.jsoneditor.template,this.iconlib=this.jsoneditor.iconlib,this.translate=this.jsoneditor.translate||this.defaults.translate,this.original_schema=e.schema,this.schema=this.jsoneditor.expandSchema(this.original_schema),this.active=!0,this.options=f({},this.options||{},this.schema.options||{},e.schema.options||{},e),this.formname=this.jsoneditor.options.form_name_root||"root",e.path||this.schema.id||(this.schema.id=this.formname),this.path=e.path||this.formname,this.formname=e.formname||this.path.replace(/\.([^.]+)/g,"[$1]"),this.parent=e.parent,this.key=void 0!==this.parent?this.path.split(".").slice(this.parent.path.split(".").length).join("."):this.path,this.link_watchers=[],this.watchLoop=!1,e.container&&this.setContainer(e.container),this.registerDependencies()}var e,n,r;return e=t,(n=[{key:"onChildEditorChange",value:function(t){this.onChange(!0)}},{key:"notify",value:function(){this.path&&this.jsoneditor.notifyWatchers(this.path)}},{key:"change",value:function(){this.parent?this.parent.onChildEditorChange(this):this.jsoneditor&&this.jsoneditor.onChange()}},{key:"onChange",value:function(t){this.notify(),this.watch_listener&&this.watch_listener(),t&&this.change()}},{key:"register",value:function(){this.jsoneditor.registerEditor(this),this.onChange()}},{key:"unregister",value:function(){this.jsoneditor&&this.jsoneditor.unregisterEditor(this)}},{key:"getNumColumns",value:function(){return 12}},{key:"isActive",value:function(){return this.active}},{key:"activate",value:function(){this.active=!0,this.optInCheckbox.checked=!0,this.enable(),this.change()}},{key:"deactivate",value:function(){this.isRequired()||(this.active=!1,this.optInCheckbox.checked=!1,this.disable(),this.change())}},{key:"registerDependencies",value:function(){var t=this;this.dependenciesFulfilled=!0;var e=this.options.dependencies;e&&Object.keys(e).forEach((function(e){var n=t.path.split(".");n[n.length-1]=e,n=n.join("."),t.jsoneditor.watch(n,(function(){t.evaluateDependencies()}))}))}},{key:"evaluateDependencies",value:function(){var t=this,e=this.container||this.control;if(e&&null!==this.jsoneditor){var n=this.options.dependencies;if(n){var r=this.dependenciesFulfilled;this.dependenciesFulfilled=!0,Object.keys(n).forEach((function(e){var r=t.path.split(".");r[r.length-1]=e,r=r.join(".");var i=n[e];t.checkDependency(r,i)})),this.dependenciesFulfilled!==r&&this.notify();var i=this.dependenciesFulfilled?"block":"none";"TD"===e.tagName?Object.keys(e.childNodes).forEach((function(t){return e.childNodes[t].style.display=i})):e.style.display=i}}}},{key:"checkDependency",value:function(t,e){var n=this;if(this.path!==t&&null!==this.jsoneditor){var r=this.jsoneditor.getEditor(t),i=r?r.getValue():void 0;r&&r.dependenciesFulfilled?Array.isArray(e)?e.some((function(t){if(i===t)return n.dependenciesFulfilled=!0,!0})):"object"===I(e)?"object"!==I(i)?this.dependenciesFulfilled=e===i:Object.keys(e).some((function(t){return!!b(e,t)&&(b(i,t)&&e[t]===i[t]?void 0:(n.dependenciesFulfilled=!1,!0))})):"string"==typeof e||"number"==typeof e?this.dependenciesFulfilled=this.dependenciesFulfilled&&i===e:"boolean"==typeof e&&(this.dependenciesFulfilled=e?this.dependenciesFulfilled&&(i||i.length>0):this.dependenciesFulfilled&&(!i||0===i.length)):this.dependenciesFulfilled=!1}}},{key:"setContainer",value:function(t){this.container=t,this.schema.id&&this.container.setAttribute("data-schemaid",this.schema.id),this.schema.type&&"string"==typeof this.schema.type&&this.container.setAttribute("data-schematype",this.schema.type),this.container.setAttribute("data-schemapath",this.path)}},{key:"setOptInCheckbox",value:function(t){var e=this;this.optInCheckbox=document.createElement("input"),this.optInCheckbox.setAttribute("type","checkbox"),this.optInCheckbox.setAttribute("style","margin: 0 10px 0 0;"),this.optInCheckbox.classList.add("json-editor-opt-in"),this.optInCheckbox.addEventListener("click",(function(){e.isActive()?e.deactivate():e.activate()})),(this.jsoneditor.options.show_opt_in||this.options.show_opt_in)&&this.parent&&"object"===this.parent.schema.type&&!this.isRequired()&&this.header&&(this.header.appendChild(this.optInCheckbox),this.header.insertBefore(this.optInCheckbox,this.header.firstChild))}},{key:"preBuild",value:function(){}},{key:"build",value:function(){}},{key:"postBuild",value:function(){this.setupWatchListeners(),this.addLinks(),this.setValue(this.getDefault(),!0),this.updateHeaderText(),this.register(),this.onWatchedFieldChange()}},{key:"setupWatchListeners",value:function(){var t=this;if(this.watched={},this.schema.vars&&(this.schema.watch=this.schema.vars),this.watched_values={},this.watch_listener=function(){t.refreshWatchedFieldValues()&&t.onWatchedFieldChange()},b(this.schema,"watch")){var e,n,r,i,o,a=this.container.getAttribute("data-schemapath");Object.keys(this.schema.watch).forEach((function(s){if(e=t.schema.watch[s],Array.isArray(e)){if(e.length<2)return;n=[e[0]].concat(e[1].split("."))}else n=e.split("."),t.theme.closest(t.container,'[data-schemaid="'.concat(n[0],'"]'))||n.unshift("#");if("#"===(r=n.shift())&&(r=t.jsoneditor.schema.id||t.jsoneditor.root.formname),!(i=t.theme.closest(t.container,'[data-schemaid="'.concat(r,'"]'))))throw new Error("Could not find ancestor node with id ".concat(r));o="".concat(i.getAttribute("data-schemapath"),".").concat(n.join(".")),a.startsWith(o)&&(t.watchLoop=!0),t.jsoneditor.watch(o,t.watch_listener),t.watched[s]=o}))}this.schema.headerTemplate&&(this.header_template=this.jsoneditor.compileTemplate(this.schema.headerTemplate,this.template_engine))}},{key:"addLinks",value:function(){if(!this.no_link_holder&&(this.link_holder=this.theme.getLinksHolder(),void 0!==this.description?this.description.parentNode.insertBefore(this.link_holder,this.description):this.container.appendChild(this.link_holder),this.schema.links))for(var t=0;t<this.schema.links.length;t++)this.addLink(this.getLink(this.schema.links[t]))}},{key:"onMove",value:function(){}},{key:"getButton",value:function(t,e,n){var r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],i="json-editor-btn-".concat(e);e=this.iconlib?this.iconlib.getIcon(e):null,t=this.translate(t,r),n=this.translate(n,r),!e&&n&&(t=n,n=null);var o=this.theme.getButton(t,e,n);return o.classList.add(i),o}},{key:"setButtonText",value:function(t,e,n,r){var i=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];return n=this.iconlib?this.iconlib.getIcon(n):null,e=this.translate(e,i),r=this.translate(r,i),!n&&r&&(e=r,r=null),this.theme.setButtonText(t,e,n,r)}},{key:"addLink",value:function(t){this.link_holder&&this.link_holder.appendChild(t)}},{key:"getLink",value:function(t){var e,n,r=(t.mediaType||"application/javascript").split("/")[0],i=this.jsoneditor.compileTemplate(t.href,this.template_engine),o=this.jsoneditor.compileTemplate(t.rel?t.rel:t.href,this.template_engine),a=null;if(t.download&&(a=t.download),a&&!0!==a&&(a=this.jsoneditor.compileTemplate(a,this.template_engine)),"image"===r){e=this.theme.getBlockLinkHolder(),(n=document.createElement("a")).setAttribute("target","_blank");var s=document.createElement("img");this.theme.createImageLink(e,n,s),this.link_watchers.push((function(t){var e=i(t),r=o(t);n.setAttribute("href",e),n.setAttribute("title",r||e),s.setAttribute("src",e)}))}else if(["audio","video"].includes(r)){e=this.theme.getBlockLinkHolder(),(n=this.theme.getBlockLink()).setAttribute("target","_blank");var l=document.createElement(r);l.setAttribute("controls","controls"),this.theme.createMediaLink(e,n,l),this.link_watchers.push((function(t){var e=i(t),r=o(t);n.setAttribute("href",e),n.textContent=r||e,l.setAttribute("src",e)}))}else n=e=this.theme.getBlockLink(),e.setAttribute("target","_blank"),e.textContent=t.rel,e.style.display="none",this.link_watchers.push((function(t){var n=i(t),r=o(t);n&&(e.style.display=""),e.setAttribute("href",n),e.textContent=r||n}));return a&&n&&(!0===a?n.setAttribute("download",""):this.link_watchers.push((function(t){n.setAttribute("download",a(t))}))),t.class&&n.classList.add(t.class),e}},{key:"refreshWatchedFieldValues",value:function(){var t=this;if(this.watched_values){var e={},n=!1;return this.watched&&Object.keys(this.watched).forEach((function(r){var i=t.jsoneditor.getEditor(t.watched[r]),o=i?i.getValue():null;t.watched_values[r]!==o&&(n=!0),e[r]=o})),e.self=this.getValue(),this.watched_values.self!==e.self&&(n=!0),this.watched_values=e,n}}},{key:"getWatchedFieldValues",value:function(){return this.watched_values}},{key:"updateHeaderText",value:function(){if(this.header){var t=this.getHeaderText();if(this.header.children.length){for(var e=0;e<this.header.childNodes.length;e++)if(3===this.header.childNodes[e].nodeType){this.header.childNodes[e].nodeValue=this.cleanText(t);break}}else window.DOMPurify?this.header.innerHTML=window.DOMPurify.sanitize(t):this.header.textContent=this.cleanText(t)}}},{key:"getHeaderText",value:function(t){return this.header_text?this.header_text:t?this.schema.title:this.getTitle()}},{key:"cleanText",value:function(t){var e=document.createElement("div");return e.innerHTML=t,e.textContent||e.innerText}},{key:"onWatchedFieldChange",value:function(){var t;if(this.header_template){t=f(this.getWatchedFieldValues(),{key:this.key,i:this.key,i0:1*this.key,i1:1*this.key+1,title:this.getTitle()});var e=this.header_template(t);e!==this.header_text&&(this.header_text=e,this.updateHeaderText(),this.notify())}if(this.link_watchers.length){t=this.getWatchedFieldValues();for(var n=0;n<this.link_watchers.length;n++)this.link_watchers[n](t)}}},{key:"setValue",value:function(t){this.value=t}},{key:"getValue",value:function(){if(this.dependenciesFulfilled)return this.value}},{key:"refreshValue",value:function(){}},{key:"getChildEditors",value:function(){return!1}},{key:"destroy",value:function(){var t=this;this.unregister(this),this.watched&&Object.values(this.watched).forEach((function(e){return t.jsoneditor.unwatch(e,t.watch_listener)})),this.watched=null,this.watched_values=null,this.watch_listener=null,this.header_text=null,this.header_template=null,this.value=null,this.container&&this.container.parentNode&&this.container.parentNode.removeChild(this.container),this.container=null,this.jsoneditor=null,this.schema=null,this.path=null,this.key=null,this.parent=null}},{key:"isDefaultRequired",value:function(){return this.isRequired()||!!this.jsoneditor.options.use_default_values}},{key:"getDefault",value:function(){if(void 0!==this.schema.default)return this.schema.default;if(void 0!==this.schema.enum)return this.schema.enum[0];var t=this.schema.type||this.schema.oneOf;if(t&&Array.isArray(t)&&(t=t[0]),t&&"object"===I(t)&&(t=t.type),t&&Array.isArray(t)&&(t=t[0]),"string"==typeof t){if("number"===t)return this.isDefaultRequired()?0:void 0;if("boolean"===t)return!this.isDefaultRequired()&&void 0;if("integer"===t)return this.isDefaultRequired()?0:void 0;if("string"===t)return"";if("object"===t)return{};if("array"===t)return[]}return null}},{key:"getTitle",value:function(){return this.schema.title||this.key}},{key:"enable",value:function(){this.disabled=!1}},{key:"disable",value:function(){this.disabled=!0}},{key:"isEnabled",value:function(){return!this.disabled}},{key:"isRequired",value:function(){return"boolean"==typeof this.schema.required?this.schema.required:this.parent&&this.parent.schema&&Array.isArray(this.parent.schema.required)?this.parent.schema.required.includes(this.key):!!this.jsoneditor.options.required_by_default}},{key:"getDisplayText",value:function(t){var e=[],n={};t.forEach((function(t){t.title&&(n[t.title]=n[t.title]||0,n[t.title]++),t.description&&(n[t.description]=n[t.description]||0,n[t.description]++),t.format&&(n[t.format]=n[t.format]||0,n[t.format]++),t.type&&(n[t.type]=n[t.type]||0,n[t.type]++)})),t.forEach((function(t){var r;r="string"==typeof t?t:t.title&&n[t.title]<=1?t.title:t.format&&n[t.format]<=1?t.format:t.type&&n[t.type]<=1?t.type:t.description&&n[t.description]<=1?t.descripton:t.title?t.title:t.format?t.format:t.type?t.type:t.description?t.description:JSON.stringify(t).length<500?JSON.stringify(t):"type",e.push(r)}));var r={};return e.forEach((function(t,i){r[t]=r[t]||0,r[t]++,n[t]>1&&(e[i]="".concat(t," ").concat(r[t]))})),e}},{key:"getValidId",value:function(t){return(t=void 0===t?"":t.toString()).replace(/\s+/g,"-")}},{key:"setInputAttributes",value:function(t){var e=this;if(this.schema.options&&this.schema.options.inputAttributes){var n=this.schema.options.inputAttributes,r=["name","type"].concat(t);Object.keys(n).forEach((function(t){r.includes(t.toLowerCase())||e.input.setAttribute(t,n[t])}))}}},{key:"expandCallbacks",value:function(t,e){var n=this,r=this.defaults.callbacks[t];return Object.entries(e).forEach((function(i){var o=T(i,2),a=o[0],s=o[1];s===Object(s)?e[a]=n.expandCallbacks(t,s):"string"==typeof s&&"object"===I(r)&&"function"==typeof r[s]&&(e[a]=r[s].bind(null,n))})),e}},{key:"showValidationErrors",value:function(t){}}])&&D(e.prototype,n),r&&D(e,r),t}();function B(t){return(B="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function F(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function V(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function H(t,e,n){return(H="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=U(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function z(t,e){return(z=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function M(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=U(t);if(e){var i=U(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return q(this,n)}}function q(t,e){return!e||"object"!==B(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function U(t){return(U=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var G=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&z(t,e)}(o,t);var e,n,r,i=M(o);function o(){return F(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"register",value:function(){H(U(o.prototype),"register",this).call(this),this.input&&this.input.setAttribute("name",this.formname)}},{key:"unregister",value:function(){H(U(o.prototype),"unregister",this).call(this),this.input&&this.input.removeAttribute("name")}},{key:"setValue",value:function(t,e,n){if((!this.template||n)&&(this.shouldBeUnset()||null!=t?"object"===B(t)?t=JSON.stringify(t):this.shouldBeUnset()||"string"==typeof t||(t="".concat(t)):t="",t!==this.serialized)){var r=this.sanitize(t);if(this.input.value!==r){if(this.setValueToInputField(r),"range"===this.format){var i=this.control.querySelector("output");i&&(i.value=r)}var o=n||this.getValue()!==t;return this.refreshValue(),e?this.is_dirty=!1:"change"===this.jsoneditor.options.show_errors&&(this.is_dirty=!0),this.adjust_height&&this.adjust_height(this.input),this.onChange(o),{changed:o,value:r}}}}},{key:"setValueToInputField",value:function(t){this.input.value=void 0===t?"":t}},{key:"getNumColumns",value:function(){var t,e=Math.ceil(Math.max(this.getTitle().length,this.schema.maxLength||0,this.schema.minLength||0)/5);return t="textarea"===this.input_type?6:["text","email"].includes(this.input_type)?4:2,Math.min(12,Math.max(e,t))}},{key:"build",value:function(){var t=this;if(this.options.compact||(this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired())),this.schema.description&&(this.description=this.theme.getFormInputDescription(this.schema.description)),this.options.infoText&&(this.infoButton=this.theme.getInfoButton(this.options.infoText)),this.format=this.schema.format,!this.format&&this.schema.media&&this.schema.media.type&&(this.format=this.schema.media.type.replace(/(^(application|text)\/(x-)?(script\.)?)|(-source$)/g,"")),!this.format&&this.options.default_format&&(this.format=this.options.default_format),this.options.format&&(this.format=this.options.format),this.format)if("textarea"===this.format)this.input_type="textarea",this.input=this.theme.getTextareaInput();else if("range"===this.format){this.input_type="range";var e=this.schema.minimum||0,n=this.schema.maximum||Math.max(100,e+1),r=1;this.schema.multipleOf&&(e%this.schema.multipleOf&&(e=Math.ceil(e/this.schema.multipleOf)*this.schema.multipleOf),n%this.schema.multipleOf&&(n=Math.floor(n/this.schema.multipleOf)*this.schema.multipleOf),r=this.schema.multipleOf),this.input=this.theme.getRangeInput(e,n,r)}else this.input_type="text",["button","checkbox","color","date","datetime-local","email","file","hidden","image","month","number","password","radio","reset","search","submit","tel","text","time","url","week"].includes(this.format)&&(this.input_type=this.format),this.input=this.theme.getFormInputField(this.input_type);else this.input_type="text",this.input=this.theme.getFormInputField(this.input_type);void 0!==this.schema.maxLength&&this.input.setAttribute("maxlength",this.schema.maxLength),void 0!==this.schema.pattern?this.input.setAttribute("pattern",this.schema.pattern):void 0!==this.schema.minLength&&this.input.setAttribute("pattern",".{".concat(this.schema.minLength,",}")),this.options.compact?this.container.classList.add("compact"):this.options.input_width&&(this.input.style.width=this.options.input_width),(this.schema.readOnly||this.schema.readonly||this.schema.template)&&this.disable(!0),this.setInputAttributes(["maxlength","pattern","readonly","min","max","step"]),this.input.addEventListener("change",(function(e){if(e.preventDefault(),e.stopPropagation(),t.schema.template)e.currentTarget.value=t.value;else{var n=e.currentTarget.value,r=t.sanitize(n);n!==r&&(e.currentTarget.value=r),t.is_dirty=!0,t.refreshValue(),t.onChange(!0)}})),this.options.input_height&&(this.input.style.height=this.options.input_height),this.options.expand_height&&(this.adjust_height=function(t){if(t){var e,n=t.offsetHeight;if(t.offsetHeight<t.scrollHeight)for(e=0;t.offsetHeight<t.scrollHeight+3&&!(e>100);)e++,n++,t.style.height="".concat(n,"px");else{for(e=0;t.offsetHeight>=t.scrollHeight+3&&!(e>100);)e++,n--,t.style.height="".concat(n,"px");t.style.height="".concat(n+1,"px")}}},this.input.addEventListener("keyup",(function(e){t.adjust_height(e.currentTarget)})),this.input.addEventListener("change",(function(e){t.adjust_height(e.currentTarget)})),this.adjust_height()),this.format&&this.input.setAttribute("data-schemaformat",this.format);var i=this.input;if("range"===this.format&&(i=this.theme.getRangeControl(this.input,this.theme.getRangeOutput(this.input,this.schema.default||Math.max(this.schema.minimum||0,0)))),this.control=this.theme.getFormControl(this.label,i,this.description,this.infoButton),this.container.appendChild(this.control),window.requestAnimationFrame((function(){t.input.parentNode&&t.afterInputReady(),t.adjust_height&&t.adjust_height(t.input)})),this.schema.template){var o=this.expandCallbacks("template",{template:this.schema.template});"function"==typeof o.template?this.template=o.template:this.template=this.jsoneditor.compileTemplate(this.schema.template,this.template_engine),this.refreshValue()}else this.refreshValue()}},{key:"setupCleave",value:function(t){var e=this.expandCallbacks("cleave",f({},this.defaults.options.cleave||{},this.options.cleave||{}));"object"===B(e)&&Object.keys(e).length>0&&(this.cleave_instance=new window.Cleave(t,e))}},{key:"setupImask",value:function(t){var e=this.expandCallbacks("imask",f({},this.defaults.options.imask||{},this.options.imask||{}));"object"===B(e)&&Object.keys(e).length>0&&(this.imask_instance=window.IMask(t,this.ajustIMaskOptions(e)))}},{key:"ajustIMaskOptions",value:function(t){var e=this;return Object.keys(t).forEach((function(n){if(t[n]===Object(t[n]))t[n]=e.ajustIMaskOptions(t[n]);else if("mask"===n)if("regex:"===t[n].substr(0,6)){var r=t[n].match(/^regex:\/(.*)\/([gimsuy]*)$/);if(null!==r)try{t[n]=new RegExp(r[1],r[2])}catch(t){}}else t[n]=e.getGlobalPropertyFromString(t[n])})),t}},{key:"getGlobalPropertyFromString",value:function(t){if(t.includes(".")){var e=t.split("."),n=e[0],r=e[1];if(void 0!==window[n]&&void 0!==window[n][r])return window[n][r]}else if(void 0!==window[t])return window[t];return t}},{key:"shouldBeUnset",value:function(){return!this.jsoneditor.options.use_default_values&&!this.is_dirty}},{key:"getValue",value:function(){var t=!(!this.input||!this.input.value);if(!this.shouldBeUnset()||t)return this.imask_instance&&this.dependenciesFulfilled&&this.options.imask.returnUnmasked?this.imask_instance.unmaskedValue:H(U(o.prototype),"getValue",this).call(this)}},{key:"enable",value:function(){this.always_disabled||(this.input.disabled=!1,H(U(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){t&&(this.always_disabled=!0),this.input.disabled=!0,this.input.setAttribute("readonly","true"),H(U(o.prototype),"disable",this).call(this)}},{key:"afterInputReady",value:function(){this.theme.afterInputReady(this.input),window.Cleave&&!this.cleave_instance?this.setupCleave(this.input):window.IMask&&!this.imask_instance&&this.setupImask(this.input)}},{key:"refreshValue",value:function(){this.value=this.input.value,"string"==typeof this.value||this.shouldBeUnset()||(this.value=""),this.serialized=this.value}},{key:"destroy",value:function(){this.cleave_instance&&this.cleave_instance.destroy(),this.imask_instance&&this.imask_instance.destroy(),this.template=null,this.input&&this.input.parentNode&&this.input.parentNode.removeChild(this.input),this.label&&this.label.parentNode&&this.label.parentNode.removeChild(this.label),this.description&&this.description.parentNode&&this.description.parentNode.removeChild(this.description),H(U(o.prototype),"destroy",this).call(this)}},{key:"sanitize",value:function(t){return t}},{key:"onWatchedFieldChange",value:function(){var t;this.template&&(t=this.getWatchedFieldValues(),this.setValue(this.template(t),!1,!0)),H(U(o.prototype),"onWatchedFieldChange",this).call(this)}},{key:"showValidationErrors",value:function(t){var e=this;if("always"===this.jsoneditor.options.show_errors);else if(!this.is_dirty&&this.previous_error_setting===this.jsoneditor.options.show_errors)return;this.previous_error_setting=this.jsoneditor.options.show_errors;var n=t.reduce((function(t,n){return n.path===e.path&&t.push(n.message),t}),[]);n.length?this.theme.addInputError(this.input,"".concat(n.join(". "),".")):this.theme.removeInputError(this.input)}}])&&V(e.prototype,n),r&&V(e,r),o}(N);function $(t){return($="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function W(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function J(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Z(t,e,n){return(Z="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=K(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Q(t,e){return(Q=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Y(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=K(t);if(e){var i=K(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return X(this,n)}}function X(t,e){return!e||"object"!==$(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function K(t){return(K=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var tt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Q(t,e)}(o,t);var e,n,r,i=Y(o);function o(){return W(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e,n){var r=Z(K(o.prototype),"setValue",this).call(this,t,e,n);void 0!==r&&r.changed&&this.ace_editor_instance&&(this.ace_editor_instance.setValue(r.value),this.ace_editor_instance.session.getSelection().clearSelection(),this.ace_editor_instance.resize())}},{key:"build",value:function(){this.options.format="textarea",Z(K(o.prototype),"build",this).call(this),this.input_type=this.schema.format,this.input.setAttribute("data-schemaformat",this.input_type)}},{key:"afterInputReady",value:function(){var t,e=this;if(window.ace){var n=this.input_type;"cpp"!==n&&"c++"!==n&&"c"!==n||(n="c_cpp"),t=this.expandCallbacks("ace",f({},{selectionStyle:"text",minLines:30,maxLines:30},this.defaults.options.ace||{},this.options.ace||{},{mode:"ace/mode/".concat(n)})),this.ace_container=document.createElement("div"),this.ace_container.style.width="100%",this.ace_container.style.position="relative",this.input.parentNode.insertBefore(this.ace_container,this.input),this.input.style.display="none",this.ace_editor_instance=window.ace.edit(this.ace_container,t),this.ace_editor_instance.setValue(this.getValue()),this.ace_editor_instance.session.getSelection().clearSelection(),this.ace_editor_instance.resize(),(this.schema.readOnly||this.schema.readonly||this.schema.template)&&this.ace_editor_instance.setReadOnly(!0),this.ace_editor_instance.on("change",(function(){e.input.value=e.ace_editor_instance.getValue(),e.refreshValue(),e.is_dirty=!0,e.onChange(!0)})),this.theme.afterInputReady(this.input)}else Z(K(o.prototype),"afterInputReady",this).call(this)}},{key:"getNumColumns",value:function(){return 6}},{key:"enable",value:function(){!this.always_disabled&&this.ace_editor_instance&&this.ace_editor_instance.setReadOnly(!1),Z(K(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.ace_editor_instance&&this.ace_editor_instance.setReadOnly(!0),Z(K(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.ace_editor_instance&&(this.ace_editor_instance.destroy(),this.ace_editor_instance=null),Z(K(o.prototype),"destroy",this).call(this)}}])&&J(e.prototype,n),r&&J(e,r),o}(G);function et(t){return(et="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function nt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function rt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function it(t,e,n){return(it="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=lt(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function ot(t,e){return(ot=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function at(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=lt(t);if(e){var i=lt(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return st(this,n)}}function st(t,e){return!e||"object"!==et(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function lt(t){return(lt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var ct=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ot(t,e)}(o,t);var e,n,r,i=at(o);function o(){return nt(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"askConfirmation",value:function(){return!0!==this.jsoneditor.options.prompt_before_delete||!1!==window.confirm(this.translate("button_delete_node_warning"))}},{key:"getDefault",value:function(){return this.schema.default||[]}},{key:"register",value:function(){it(lt(o.prototype),"register",this).call(this),this.rows&&this.rows.forEach((function(t){return t.register()}))}},{key:"unregister",value:function(){it(lt(o.prototype),"unregister",this).call(this),this.rows&&this.rows.forEach((function(t){return t.unregister()}))}},{key:"getNumColumns",value:function(){var t=this.getItemInfo(0);return this.tabs_holder&&"tabs-top"!==this.schema.format?Math.max(Math.min(12,t.width+2),4):t.width}},{key:"enable",value:function(){var t=this;this.always_disabled||(this.setAvailability(this,!1),this.rows&&this.rows.forEach((function(e){e.enable(),t.setAvailability(e,!1)})),it(lt(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){var e=this;t&&(this.always_disabled=!0),this.setAvailability(this,!0),this.rows&&this.rows.forEach((function(n){n.disable(t),e.setAvailability(n,!0)})),it(lt(o.prototype),"disable",this).call(this)}},{key:"setAvailability",value:function(t,e){t.add_row_button&&(t.add_row_button.disabled=e),t.remove_all_rows_button&&(t.remove_all_rows_button.disabled=e),t.delete_last_row_button&&(t.delete_last_row_button.disabled=e),t.copy_button&&(t.copy_button.disabled=e),t.delete_button&&(t.delete_button.disabled=e),t.moveup_button&&(t.moveup_button.disabled=e),t.movedown_button&&(t.movedown_button.disabled=e)}},{key:"preBuild",value:function(){it(lt(o.prototype),"preBuild",this).call(this),this.rows=[],this.row_cache=[],this.hide_delete_buttons=this.options.disable_array_delete||this.jsoneditor.options.disable_array_delete,this.hide_delete_all_rows_buttons=this.hide_delete_buttons||this.options.disable_array_delete_all_rows||this.jsoneditor.options.disable_array_delete_all_rows,this.hide_delete_last_row_buttons=this.hide_delete_buttons||this.options.disable_array_delete_last_row||this.jsoneditor.options.disable_array_delete_last_row,this.hide_move_buttons=this.options.disable_array_reorder||this.jsoneditor.options.disable_array_reorder,this.hide_add_button=this.options.disable_array_add||this.jsoneditor.options.disable_array_add,this.show_copy_button=this.options.enable_array_copy||this.jsoneditor.options.enable_array_copy,this.array_controls_top=this.options.array_controls_top||this.jsoneditor.options.array_controls_top}},{key:"build",value:function(){this.options.compact?(this.title=this.theme.getHeader(""),this.container.appendChild(this.title),this.panel=this.theme.getIndentedPanel(),this.container.appendChild(this.panel),this.title_controls=this.theme.getHeaderButtonHolder(),this.title.appendChild(this.title_controls),this.controls=this.theme.getHeaderButtonHolder(),this.title.appendChild(this.controls),this.row_holder=document.createElement("div"),this.panel.appendChild(this.row_holder)):(this.header=document.createElement("label"),this.header.textContent=this.getTitle(),this.title=this.theme.getHeader(this.header),this.container.appendChild(this.title),this.title_controls=this.theme.getHeaderButtonHolder(),this.title.appendChild(this.title_controls),this.schema.description&&(this.description=this.theme.getDescription(this.schema.description),this.container.appendChild(this.description)),this.error_holder=document.createElement("div"),this.container.appendChild(this.error_holder),"tabs-top"===this.schema.format?(this.controls=this.theme.getHeaderButtonHolder(),this.title.appendChild(this.controls),this.tabs_holder=this.theme.getTopTabHolder(this.getValidId(this.getItemTitle())),this.container.appendChild(this.tabs_holder),this.row_holder=this.theme.getTopTabContentHolder(this.tabs_holder),this.active_tab=null):"tabs"===this.schema.format?(this.controls=this.theme.getHeaderButtonHolder(),this.title.appendChild(this.controls),this.tabs_holder=this.theme.getTabHolder(this.getValidId(this.getItemTitle())),this.container.appendChild(this.tabs_holder),this.row_holder=this.theme.getTabContentHolder(this.tabs_holder),this.active_tab=null):(this.panel=this.theme.getIndentedPanel(),this.container.appendChild(this.panel),this.row_holder=document.createElement("div"),this.panel.appendChild(this.row_holder),this.controls=this.theme.getButtonHolder(),this.array_controls_top?this.title.appendChild(this.controls):this.panel.appendChild(this.controls))),this.addControls()}},{key:"onChildEditorChange",value:function(t){this.refreshValue(),this.refreshTabs(!0),it(lt(o.prototype),"onChildEditorChange",this).call(this,t)}},{key:"getItemTitle",value:function(){if(!this.item_title)if(this.schema.items&&!Array.isArray(this.schema.items)){var t=this.jsoneditor.expandRefs(this.schema.items);this.item_title=t.title||this.translate("default_array_item_title")}else this.item_title=this.translate("default_array_item_title");return this.cleanText(this.item_title)}},{key:"getItemSchema",value:function(t){return Array.isArray(this.schema.items)?t>=this.schema.items.length?!0===this.schema.additionalItems?{}:this.schema.additionalItems?f({},this.schema.additionalItems):void 0:f({},this.schema.items[t]):this.schema.items?f({},this.schema.items):{}}},{key:"getItemInfo",value:function(t){var e=this.getItemSchema(t);this.item_info=this.item_info||{};var n=JSON.stringify(e);return void 0!==this.item_info[n]||(e=this.jsoneditor.expandRefs(e),this.item_info[n]={title:e.title||this.translate("default_array_item_title"),default:e.default,width:12,child_editors:e.properties||e.items}),this.item_info[n]}},{key:"getElementEditor",value:function(t){var e=this.getItemInfo(t),n=this.getItemSchema(t);(n=this.jsoneditor.expandRefs(n)).title="".concat(e.title," ").concat(t+1);var r,i=this.jsoneditor.getEditorClass(n);this.tabs_holder?(r="tabs-top"===this.schema.format?this.theme.getTopTabContent():this.theme.getTabContent()).id="".concat(this.path,".").concat(t):r=e.child_editors?this.theme.getChildEditorHolder():this.theme.getIndentedPanel(),this.row_holder.appendChild(r);var o=this.jsoneditor.createEditor(i,{jsoneditor:this.jsoneditor,schema:n,container:r,path:"".concat(this.path,".").concat(t),parent:this,required:!0});return o.preBuild(),o.build(),o.postBuild(),o.title_controls||(o.array_controls=this.theme.getButtonHolder(),r.appendChild(o.array_controls)),o}},{key:"checkParent",value:function(t){return t&&t.parentNode}},{key:"destroy",value:function(){this.empty(!0),this.checkParent(this.title)&&this.title.parentNode.removeChild(this.title),this.checkParent(this.description)&&this.description.parentNode.removeChild(this.description),this.checkParent(this.row_holder)&&this.row_holder.parentNode.removeChild(this.row_holder),this.checkParent(this.controls)&&this.controls.parentNode.removeChild(this.controls),this.checkParent(this.panel)&&this.panel.parentNode.removeChild(this.panel),this.rows=this.row_cache=this.title=this.description=this.row_holder=this.panel=this.controls=null,it(lt(o.prototype),"destroy",this).call(this)}},{key:"empty",value:function(t){var e=this;this.rows&&(this.rows.forEach((function(n,r){t&&(e.checkParent(n.tab)&&n.tab.parentNode.removeChild(n.tab),e.destroyRow(n,!0),e.row_cache[r]=null),e.rows[r]=null})),this.rows=[],t&&(this.row_cache=[]))}},{key:"destroyRow",value:function(t,e){var n=t.container;e?(t.destroy(),n.parentNode&&n.parentNode.removeChild(n),this.checkParent(t.tab)&&t.tab.parentNode.removeChild(t.tab)):(t.tab&&(t.tab.style.display="none"),n.style.display="none",t.unregister())}},{key:"getMax",value:function(){return Array.isArray(this.schema.items)&&!1===this.schema.additionalItems?Math.min(this.schema.items.length,this.schema.maxItems||1/0):this.schema.maxItems||1/0}},{key:"refreshTabs",value:function(t){var e=this;this.rows.forEach((function(n){n.tab&&(t?n.tab_text.textContent=n.getHeaderText():n.tab===e.active_tab?e.theme.markTabActive(n):e.theme.markTabInactive(n))}))}},{key:"ensureArraySize",value:function(t){if(Array.isArray(t)||(t=[t]),this.schema.minItems)for(;t.length<this.schema.minItems;)t.push(this.getItemInfo(t.length).default);return this.getMax()&&t.length>this.getMax()&&(t=t.slice(0,this.getMax())),t}},{key:"setValue",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1?arguments[1]:void 0;e=this.ensureArraySize(e);var r=JSON.stringify(e);if(r!==this.serialized){e.forEach((function(e,r){if(t.rows[r])t.rows[r].setValue(e,n);else if(t.row_cache[r])t.rows[r]=t.row_cache[r],t.rows[r].setValue(e,n),t.rows[r].container.style.display="",t.rows[r].tab&&(t.rows[r].tab.style.display=""),t.rows[r].register(),t.jsoneditor.trigger("addRow",t.rows[r]);else{var i=t.addRow(e,n);t.jsoneditor.trigger("addRow",i)}}));for(var i=e.length;i<this.rows.length;i++)this.destroyRow(this.rows[i]),this.rows[i]=null;this.rows=this.rows.slice(0,e.length);var o=this.rows.find((function(e){return e.tab===t.active_tab})),a=void 0!==o?o.tab:null;!a&&this.rows.length&&(a=this.rows[0].tab),this.active_tab=a,this.refreshValue(n),this.refreshTabs(!0),this.refreshTabs(),this.onChange()}}},{key:"setVisibility",value:function(t,e){t.style.display=e?"":"none"}},{key:"setupButtons",value:function(t){var e=[];if(this.value.length)if(1===this.value.length){this.remove_all_rows_button.style.display="none";var n=!(t||this.hide_delete_last_row_buttons);this.setVisibility(this.delete_last_row_button,n),e.push(n)}else{var r=!(t||this.hide_delete_last_row_buttons);this.setVisibility(this.delete_last_row_button,r),e.push(r);var i=!(t||this.hide_delete_all_rows_buttons);this.setVisibility(this.remove_all_rows_button,i),e.push(i)}else this.delete_last_row_button.style.display="none",this.remove_all_rows_button.style.display="none";var o=!(this.getMax()&&this.getMax()<=this.rows.length||this.hide_add_button);return this.setVisibility(this.add_row_button,o),e.push(o),e.some((function(t){return t}))}},{key:"refreshValue",value:function(t){var e=this,n=this.value?this.value.length:0;if(this.value=this.rows.map((function(t){return t.getValue()})),n!==this.value.length||t){var r=this.schema.minItems&&this.schema.minItems>=this.rows.length;this.rows.forEach((function(t,n){if(t.movedown_button){var i=n!==e.rows.length-1;e.setVisibility(t.movedown_button,i)}t.delete_button&&e.setVisibility(t.delete_button,!r),e.value[n]=t.getValue()})),!this.collapsed&&this.setupButtons(r)?this.controls.style.display="inline-block":this.controls.style.display="none"}this.serialized=JSON.stringify(this.value)}},{key:"addRow",value:function(t,e){var n=this,r=this.rows.length;this.rows[r]=this.getElementEditor(r),this.row_cache[r]=this.rows[r],this.tabs_holder&&(this.rows[r].tab_text=document.createElement("span"),this.rows[r].tab_text.textContent=this.rows[r].getHeaderText(),"tabs-top"===this.schema.format?(this.rows[r].tab=this.theme.getTopTab(this.rows[r].tab_text,this.getValidId(this.rows[r].path)),this.theme.addTopTab(this.tabs_holder,this.rows[r].tab)):(this.rows[r].tab=this.theme.getTab(this.rows[r].tab_text,this.getValidId(this.rows[r].path)),this.theme.addTab(this.tabs_holder,this.rows[r].tab)),this.rows[r].tab.addEventListener("click",(function(t){n.active_tab=n.rows[r].tab,n.refreshTabs(),t.preventDefault(),t.stopPropagation()})));var i=this.rows[r].title_controls||this.rows[r].array_controls;return this.hide_delete_buttons||(this.rows[r].delete_button=this._createDeleteButton(r,i)),this.show_copy_button&&(this.rows[r].copy_button=this._createCopyButton(r,i)),r&&!this.hide_move_buttons&&(this.rows[r].moveup_button=this._createMoveUpButton(r,i)),this.hide_move_buttons||(this.rows[r].movedown_button=this._createMoveDownButton(r,i)),void 0!==t&&this.rows[r].setValue(t,e),this.refreshTabs(),this.rows[r]}},{key:"_createDeleteButton",value:function(t,e){var n=this,r=this.getButton(this.getItemTitle(),"delete","button_delete_row_title",[this.getItemTitle()]);return r.classList.add("delete","json-editor-btntype-delete"),r.setAttribute("data-i",t),r.addEventListener("click",(function(t){if(t.preventDefault(),t.stopPropagation(),!n.askConfirmation())return!1;var e=1*t.currentTarget.getAttribute("data-i"),r=n.getValue().filter((function(t,n){return n!==e})),i=null,o=n.rows[e];n.setValue(r),n.rows[e]?i=n.rows[e].tab:n.rows[e-1]&&(i=n.rows[e-1].tab),i&&(n.active_tab=i,n.refreshTabs()),n.onChange(!0),n.jsoneditor.trigger("deleteRow",o)})),e&&e.appendChild(r),r}},{key:"_createCopyButton",value:function(t,e){var n=this,r=this.getButton(this.getItemTitle(),"copy","button_copy_row_title",[this.getItemTitle()]);return r.classList.add("copy","json-editor-btntype-copy"),r.setAttribute("data-i",t),r.addEventListener("click",(function(t){var e=n.getValue();t.preventDefault(),t.stopPropagation();var r=1*t.currentTarget.getAttribute("data-i");e.forEach((function(t,n){n===r&&e.push(t)})),n.setValue(e),n.refreshValue(!0),n.onChange(!0)})),e.appendChild(r),r}},{key:"_createMoveUpButton",value:function(t,e){var n=this,r=this.getButton("","tabs-top"===this.schema.format?"moveleft":"moveup","button_move_up_title");return r.classList.add("moveup","json-editor-btntype-move"),r.setAttribute("data-i",t),r.addEventListener("click",(function(t){t.preventDefault(),t.stopPropagation();var e=1*t.currentTarget.getAttribute("data-i");if(!(e<=0)){var r=n.getValue(),i=r[e-1];r[e-1]=r[e],r[e]=i,n.setValue(r),n.active_tab=n.rows[e-1].tab,n.refreshTabs(),n.onChange(!0),n.jsoneditor.trigger("moveRow",n.rows[e-1])}})),e&&e.appendChild(r),r}},{key:"_createMoveDownButton",value:function(t,e){var n=this,r=this.getButton("","tabs-top"===this.schema.format?"moveright":"movedown","button_move_down_title");return r.classList.add("movedown","json-editor-btntype-move"),r.setAttribute("data-i",t),r.addEventListener("click",(function(t){t.preventDefault(),t.stopPropagation();var e=1*t.currentTarget.getAttribute("data-i"),r=n.getValue();if(!(e>=r.length-1)){var i=r[e+1];r[e+1]=r[e],r[e]=i,n.setValue(r),n.active_tab=n.rows[e+1].tab,n.refreshTabs(),n.onChange(!0),n.jsoneditor.trigger("moveRow",n.rows[e+1])}})),e&&e.appendChild(r),r}},{key:"addControls",value:function(){this.collapsed=!1,this.toggle_button=this._createToggleButton(),this.options.collapsed&&y(this.toggle_button,"click"),this.schema.options&&void 0!==this.schema.options.disable_collapse?this.schema.options.disable_collapse&&(this.toggle_button.style.display="none"):this.jsoneditor.options.disable_collapse&&(this.toggle_button.style.display="none"),this.add_row_button=this._createAddRowButton(),this.delete_last_row_button=this._createDeleteLastRowButton(),this.remove_all_rows_button=this._createRemoveAllRowsButton(),this.tabs&&(this.add_row_button.classList.add("je-array-control-btn"),this.delete_last_row_button.classList.add("je-array-control-btn"),this.remove_all_rows_button.classList.add("je-array-control-btn"))}},{key:"_createToggleButton",value:function(){var t=this,e=this.getButton("","collapse","button_collapse");e.classList.add("json-editor-btntype-toggle"),this.title.insertBefore(e,this.title.childNodes[0]);var n=this.row_holder.style.display,r=this.controls.style.display;return e.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.panel&&t.setVisibility(t.panel,t.collapsed),t.tabs_holder&&t.setVisibility(t.tabs_holder,t.collapsed),t.collapsed?(t.collapsed=!1,t.row_holder.style.display=n,t.controls.style.display=r,t.setButtonText(e.currentTarget,"","collapse","button_collapse")):(t.collapsed=!0,t.row_holder.style.display="none",t.controls.style.display="none",t.setButtonText(e.currentTarget,"","expand","button_expand"))})),e}},{key:"_createAddRowButton",value:function(){var t=this,e=this.getButton(this.getItemTitle(),"add","button_add_row_title",[this.getItemTitle()]);return e.classList.add("json-editor-btntype-add"),e.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation();var n,r=t.rows.length;t.row_cache[r]?(n=t.rows[r]=t.row_cache[r],t.rows[r].setValue(t.rows[r].getDefault(),!0),t.rows[r].container.style.display="",t.rows[r].tab&&(t.rows[r].tab.style.display=""),t.rows[r].register()):n=t.addRow(),t.active_tab=t.rows[r].tab,t.refreshTabs(),t.refreshValue(),t.onChange(!0),t.jsoneditor.trigger("addRow",n)})),this.controls.appendChild(e),e}},{key:"_createDeleteLastRowButton",value:function(){var t=this,e=this.getButton("button_delete_last","subtract","button_delete_last_title",[this.getItemTitle()]);return e.classList.add("json-editor-btntype-deletelast"),e.addEventListener("click",(function(e){if(e.preventDefault(),e.stopPropagation(),!t.askConfirmation())return!1;var n=t.getValue(),r=null,i=n.pop();t.setValue(n),t.rows[t.rows.length-1]&&(r=t.rows[t.rows.length-1].tab),r&&(t.active_tab=r,t.refreshTabs()),t.onChange(!0),t.jsoneditor.trigger("deleteRow",i)})),this.controls.appendChild(e),e}},{key:"_createRemoveAllRowsButton",value:function(){var t=this,e=this.getButton("button_delete_all","delete","button_delete_all_title");return e.classList.add("json-editor-btntype-deleteall"),e.addEventListener("click",(function(e){if(e.preventDefault(),e.stopPropagation(),!t.askConfirmation())return!1;t.empty(!0),t.setValue([]),t.onChange(!0),t.jsoneditor.trigger("deleteAllRows")})),this.controls.appendChild(e),e}},{key:"showValidationErrors",value:function(t){var e=this,n=[],r=[];t.forEach((function(t){t.path===e.path?n.push(t):r.push(t)})),this.error_holder&&(n.length?(this.error_holder.innerHTML="",this.error_holder.style.display="",n.forEach((function(t){e.error_holder.appendChild(e.theme.getErrorMessage(t.message))}))):this.error_holder.style.display="none"),this.rows.forEach((function(t){return t.showValidationErrors(r)}))}}])&&rt(e.prototype,n),r&&rt(e,r),o}(N);function ut(t){return(ut="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ht(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function pt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function dt(t,e,n){return(dt="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=bt(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function ft(t,e){return(ft=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function yt(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=bt(t);if(e){var i=bt(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return mt(this,n)}}function mt(t,e){return!e||"object"!==ut(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function bt(t){return(bt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}ct.rules={".json-editor-btntype-toggle":"margin:0%2010px%200%200",".je-array-control-btn":"width:100%25;text-align:left;margin-bottom:3px"};var vt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ft(t,e)}(o,t);var e,n,r,i=yt(o);function o(){return ht(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"onInputChange",value:function(){this.value=this.input.value,this.onChange(!0)}},{key:"register",value:function(){dt(bt(o.prototype),"register",this).call(this),this.input&&this.input.setAttribute("name",this.formname)}},{key:"unregister",value:function(){dt(bt(o.prototype),"unregister",this).call(this),this.input&&this.input.removeAttribute("name")}},{key:"getNumColumns",value:function(){var t=this,e=this.getTitle().length;return Object.keys(this.select_values).forEach((function(n){return e=Math.max(e,"".concat(t.select_values[n]).length+4)})),Math.min(12,Math.max(e/7,2))}},{key:"preBuild",value:function(){var t;dt(bt(o.prototype),"preBuild",this).call(this),this.select_options={},this.select_values={},this.option_keys=[],this.option_titles=[];var e=this.jsoneditor.expandRefs(this.schema.items||{}),n=e.enum||[],r=e.options&&e.options.enum_titles||[];for(t=0;t<n.length;t++)this.sanitize(n[t])===n[t]&&(this.option_keys.push("".concat(n[t])),this.option_titles.push("".concat(r[t]||n[t])),this.select_values["".concat(n[t])]=n[t])}},{key:"build",value:function(){var t,e=this;if(this.options.compact||(this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired())),this.schema.description&&(this.description=this.theme.getFormInputDescription(this.schema.description)),this.options.infoText&&(this.infoButton=this.theme.getInfoButton(this.options.infoText)),this.options.compact&&this.container.classList.add("compact"),!this.schema.format&&this.option_keys.length<8||"checkbox"===this.schema.format){for(this.input_type="checkboxes",this.inputs={},this.controls={},t=0;t<this.option_keys.length;t++){var n=this.formname+t.toString();this.inputs[this.option_keys[t]]=this.theme.getCheckbox(),this.inputs[this.option_keys[t]].id=n,this.select_options[this.option_keys[t]]=this.inputs[this.option_keys[t]];var r=this.theme.getCheckboxLabel(this.option_titles[t]);r.htmlFor=n,this.controls[this.option_keys[t]]=this.theme.getFormControl(r,this.inputs[this.option_keys[t]])}this.control=this.theme.getMultiCheckboxHolder(this.controls,this.label,this.description,this.infoButton),this.inputs.controlgroup=this.inputs.controls=this.control}else{for(this.input_type="select",this.input=this.theme.getSelectInput(this.option_keys,!0),this.theme.setSelectOptions(this.input,this.option_keys,this.option_titles),this.input.setAttribute("multiple","multiple"),this.input.size=Math.min(10,this.option_keys.length),t=0;t<this.option_keys.length;t++)this.select_options[this.option_keys[t]]=this.input.children[t];this.control=this.theme.getFormControl(this.label,this.input,this.description,this.infoButton)}(this.schema.readOnly||this.schema.readonly)&&this.disable(!0),this.container.appendChild(this.control),this.multiselectChangeHandler=function(n){var r=[];for(t=0;t<e.option_keys.length;t++)e.select_options[e.option_keys[t]]&&(e.select_options[e.option_keys[t]].selected||e.select_options[e.option_keys[t]].checked)&&r.push(e.select_values[e.option_keys[t]]);e.updateValue(r),e.onChange(!0)},this.control.addEventListener("change",this.multiselectChangeHandler,!1),window.requestAnimationFrame((function(){e.afterInputReady()}))}},{key:"postBuild",value:function(){dt(bt(o.prototype),"postBuild",this).call(this)}},{key:"afterInputReady",value:function(){this.theme.afterInputReady(this.input||this.inputs)}},{key:"setValue",value:function(t,e){var n=this;t=t||[],Array.isArray(t)||(t=[t]),t=t.map((function(t){return"".concat(t)})),Object.keys(this.select_options).forEach((function(e){n.select_options[e]["select"===n.input_type?"selected":"checked"]=t.includes(e)})),this.updateValue(t),this.onChange(!0)}},{key:"removeValue",value:function(t){t=[].concat(t),this.setValue(this.getValue().filter((function(e){return!t.includes(e)})))}},{key:"addValue",value:function(t){this.setValue(this.getValue().concat(t))}},{key:"updateValue",value:function(t){for(var e=!1,n=[],r=0;r<t.length;r++)if(this.select_options["".concat(t[r])]){var i=this.sanitize(this.select_values[t[r]]);n.push(i),i!==t[r]&&(e=!0)}else e=!0;return this.value=n,e}},{key:"sanitize",value:function(t){return"boolean"===this.schema.items.type?!!t:"number"===this.schema.items.type?1*t||0:"integer"===this.schema.items.type?Math.floor(1*t||0):"".concat(t)}},{key:"enable",value:function(){var t=this;this.always_disabled||(this.input?this.input.disabled=!1:this.inputs&&Object.keys(this.inputs).forEach((function(e){return t.inputs[e].disabled=!1})),dt(bt(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){var e=this;t&&(this.always_disabled=!0),this.input?this.input.disabled=!0:this.inputs&&Object.keys(this.inputs).forEach((function(t){return e.inputs[t].disabled=!0})),dt(bt(o.prototype),"disable",this).call(this)}},{key:"destroy",value:function(){dt(bt(o.prototype),"destroy",this).call(this)}},{key:"escapeRegExp",value:function(t){return t.replace(/[.*+?^${}()|[\]\\]/g,"\\$&")}},{key:"showValidationErrors",value:function(t){var e=new RegExp("^".concat(this.escapeRegExp(this.path),"(\\.\\d+)?$")),n=t.reduce((function(t,n){return n.path.match(e)&&t.push(n.message),t}),[]);n.length?this.theme.addInputError(this.input||this.inputs,"".concat(n.join(". "),".")):this.theme.removeInputError(this.input||this.inputs)}}])&&pt(e.prototype,n),r&&pt(e,r),o}(N);function gt(t){return(gt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _t(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function wt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function kt(t,e,n){return(kt="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Ct(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function xt(t,e){return(xt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function jt(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ct(t);if(e){var i=Ct(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ot(this,n)}}function Ot(t,e){return!e||"object"!==gt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ct(t){return(Ct=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Et=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&xt(t,e)}(o,t);var e,n,r,i=jt(o);function o(){return _t(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e){this.choices_instance?(t=[].concat(t).map((function(t){return"".concat(t)})),this.updateValue(t),this.choices_instance.removeActiveItems(),this.choices_instance.setChoiceByValue(this.value),this.onChange(!0)):kt(Ct(o.prototype),"setValue",this).call(this,t,e)}},{key:"afterInputReady",value:function(){var t=this;if(window.Choices&&!this.choices_instance){var e=this.expandCallbacks("choices",f({},{removeItems:!0,removeItemButton:!0},this.defaults.options.choices||{},this.options.choices||{},{addItems:!0,editItems:!1,duplicateItemsAllowed:!1}));this.newEnumAllowed=!1,this.choices_instance=new window.Choices(this.input,e),this.control.removeEventListener("change",this.multiselectChangeHandler),this.multiselectChangeHandler=function(e){var n=t.choices_instance.getValue(!0);t.updateValue(n),t.onChange(!0)},this.control.addEventListener("change",this.multiselectChangeHandler,!1)}kt(Ct(o.prototype),"afterInputReady",this).call(this)}},{key:"updateValue",value:function(t){t=[].concat(t);for(var e=!1,n=[],r=0;r<t.length;r++){if(!this.select_values["".concat(t[r])]){if(e=!0,!this.newEnumAllowed)continue;if(!this.addNewOption(t[r]))continue}var i=this.sanitize(this.select_values[t[r]]);n.push(i),i!==t[r]&&(e=!0)}return this.value=n,e}},{key:"addNewOption",value:function(t){return this.option_keys.push("".concat(t)),this.option_titles.push("".concat(t)),this.select_values["".concat(t)]=t,this.schema.items.enum.push(t),this.choices_instance.setChoices([{value:"".concat(t),label:"".concat(t)}],"value","label",!1),!0}},{key:"enable",value:function(){!this.always_disabled&&this.choices_instance&&this.choices_instance.enable(),kt(Ct(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.choices_instance&&this.choices_instance.disable(),kt(Ct(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.choices_instance&&(this.choices_instance.destroy(),this.choices_instance=null),kt(Ct(o.prototype),"destroy",this).call(this)}}])&&wt(e.prototype,n),r&&wt(e,r),o}(vt);function St(t){return(St="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Rt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Pt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Lt(t,e,n){return(Lt="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Dt(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Tt(t,e){return(Tt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function At(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Dt(t);if(e){var i=Dt(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return It(this,n)}}function It(t,e){return!e||"object"!==St(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Dt(t){return(Dt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Nt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Tt(t,e)}(o,t);var e,n,r,i=At(o);function o(){return Rt(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e){this.select2_instance?(t=[].concat(t).map((function(t){return"".concat(t)})),this.updateValue(t),this.select2v4?this.select2_instance.val(this.value).change():this.select2_instance.select2("val",this.value),this.onChange(!0)):Lt(Dt(o.prototype),"setValue",this).call(this,t,e)}},{key:"afterInputReady",value:function(){var t,e=this;window.jQuery&&window.jQuery.fn&&window.jQuery.fn.select2&&!this.select2_instance&&(t=this.expandCallbacks("select2",f({},{tags:!0,width:"100%"},this.defaults.options.select2||{},this.options.select2||{})),this.newEnumAllowed=t.tags=!!t.tags&&this.schema.items&&"string"===this.schema.items.type,this.select2_instance=window.jQuery(this.input).select2(t),this.select2v4=b(this.select2_instance.select2,"amd"),this.selectChangeHandler=function(){var t=e.select2v4?e.select2_instance.val():e.select2_instance.select2("val");e.updateValue(t),e.onChange(!0)},this.select2_instance.on("select2-blur",this.selectChangeHandler),this.select2_instance.on("change",this.selectChangeHandler)),Lt(Dt(o.prototype),"afterInputReady",this).call(this)}},{key:"updateValue",value:function(t){t=[].concat(t);for(var e=!1,n=[],r=0;r<t.length;r++){if(!this.select_values["".concat(t[r])]){if(e=!0,!this.newEnumAllowed)continue;if(!this.addNewOption(t[r]))continue}var i=this.sanitize(this.select_values[t[r]]);n.push(i),i!==t[r]&&(e=!0)}return this.value=n,e}},{key:"addNewOption",value:function(t){this.option_keys.push("".concat(t)),this.option_titles.push("".concat(t)),this.select_values["".concat(t)]=t,this.schema.items.enum.push(t);var e=this.input.querySelector('option[value="'.concat(t,'"]'));return e?e.removeAttribute("data-select2-tag"):this.input.appendChild(new Option(t,t,!1,!1)).trigger("change"),!0}},{key:"enable",value:function(){!this.always_disabled&&this.select2_instance&&(this.select2v4?this.select2_instance.prop("disabled",!1):this.select2_instance.select2("enable",!0)),Lt(Dt(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.select2_instance&&(this.select2v4?this.select2_instance.prop("disabled",!0):this.select2_instance.select2("enable",!1)),Lt(Dt(o.prototype),"disable",this).call(this)}},{key:"destroy",value:function(){this.select2_instance&&(this.select2_instance.select2("destroy"),this.select2_instance=null),Lt(Dt(o.prototype),"destroy",this).call(this)}}])&&Pt(e.prototype,n),r&&Pt(e,r),o}(vt);function Bt(t){return(Bt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ft(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Vt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ht(t,e,n){return(Ht="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Ut(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function zt(t,e){return(zt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Mt(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ut(t);if(e){var i=Ut(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return qt(this,n)}}function qt(t,e){return!e||"object"!==Bt(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ut(t){return(Ut=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Gt=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&zt(t,e)}(o,t);var e,n,r,i=Mt(o);function o(){return Ft(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e){this.selectize_instance?(t=[].concat(t).map((function(t){return"".concat(t)})),this.updateValue(t),this.selectize_instance.setValue(this.value),this.onChange(!0)):Ht(Ut(o.prototype),"setValue",this).call(this,t,e)}},{key:"afterInputReady",value:function(){var t,e=this;window.jQuery&&window.jQuery.fn&&window.jQuery.fn.selectize&&!this.selectize_instance&&(t=this.expandCallbacks("selectize",f({},{plugins:["remove_button"],delimiter:!1,createOnBlur:!0,create:!0},this.defaults.options.selectize||{},this.options.selectize||{})),this.newEnumAllowed=t.create=!!t.create&&this.schema.items&&"string"===this.schema.items.type,this.selectize_instance=window.jQuery(this.input).selectize(t)[0].selectize,this.control.removeEventListener("change",this.multiselectChangeHandler),this.multiselectChangeHandler=function(t){var n=e.selectize_instance.getValue();e.updateValue(n),e.onChange(!0)},this.selectize_instance.on("change",this.multiselectChangeHandler)),Ht(Ut(o.prototype),"afterInputReady",this).call(this)}},{key:"updateValue",value:function(t){t=[].concat(t);for(var e=!1,n=[],r=0;r<t.length;r++){if(!this.select_values["".concat(t[r])]){if(e=!0,!this.newEnumAllowed)continue;if(!this.addNewOption(t[r]))continue}var i=this.sanitize(this.select_values[t[r]]);n.push(i),i!==t[r]&&(e=!0)}return this.value=n,e}},{key:"addNewOption",value:function(t){return this.option_keys.push("".concat(t)),this.option_titles.push("".concat(t)),this.select_values["".concat(t)]=t,this.schema.items.enum.push(t),this.selectize_instance.addOption({text:t,value:t}),!0}},{key:"enable",value:function(){!this.always_disabled&&this.selectize_instance&&this.selectize_instance.unlock(),Ht(Ut(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.selectize_instance&&this.selectize_instance.lock(),Ht(Ut(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.selectize_instance&&(this.selectize_instance.destroy(),this.selectize_instance=null),Ht(Ut(o.prototype),"destroy",this).call(this)}}])&&Vt(e.prototype,n),r&&Vt(e,r),o}(vt);function $t(t){return($t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Wt(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Jt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Zt(t,e,n){return(Zt="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Kt(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Qt(t,e){return(Qt=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Yt(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Kt(t);if(e){var i=Kt(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Xt(this,n)}}function Xt(t,e){return!e||"object"!==$t(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Kt(t){return(Kt=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var te=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Qt(t,e)}(o,t);var e,n,r,i=Yt(o);function o(){return Wt(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"postBuild",value:function(){window.Autocomplete&&(this.autocomplete_wrapper=document.createElement("div"),this.input.parentNode.insertBefore(this.autocomplete_wrapper,this.input.nextSibling),this.autocomplete_wrapper.appendChild(this.input),this.autocomplete_dropdown=document.createElement("ul"),this.input.parentNode.insertBefore(this.autocomplete_dropdown,this.input.nextSibling)),Zt(Kt(o.prototype),"postBuild",this).call(this)}},{key:"afterInputReady",value:function(){var t;window.Autocomplete&&!this.autocomplete_instance&&(t=this.expandCallbacks("autocomplete",f({},{search:function(t,e){return console.log('No "search" callback defined for autocomplete in property "'.concat(t.key,'"')),[]},baseClass:"autocomplete"},this.defaults.options.autocomplete||{},this.options.autocomplete||{})),this.autocomplete_wrapper.classList.add(t.baseClass),this.autocomplete_dropdown.classList.add("".concat(t.baseClass,"-result-list")),this.autocomplete_instance=new window.Autocomplete(this.autocomplete_wrapper,t)),Zt(Kt(o.prototype),"afterInputReady",this).call(this)}},{key:"destroy",value:function(){this.autocomplete_instance&&(this.input&&this.input.parentNode&&this.input.parentNode.removeChild(this.input),this.autocomplete_dropdown&&this.autocomplete_dropdown.parentNode&&this.autocomplete_dropdown.parentNode.removeChild(this.autocomplete_dropdown),this.autocomplete_wrapper&&this.autocomplete_wrapper.parentNode&&this.autocomplete_wrapper.parentNode.removeChild(this.autocomplete_wrapper),this.autocomplete_instance=null),Zt(Kt(o.prototype),"destroy",this).call(this)}}])&&Jt(e.prototype,n),r&&Jt(e,r),o}(G);n(133);function ee(t){return(ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ne(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function re(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ie(t,e,n){return(ie="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=le(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function oe(t,e){return(oe=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ae(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=le(t);if(e){var i=le(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return se(this,n)}}function se(t,e){return!e||"object"!==ee(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function le(t){return(le=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var ce=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&oe(t,e)}(o,t);var e,n,r,i=ae(o);function o(){return ne(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"getNumColumns",value:function(){return 4}},{key:"setFileReaderListener",value:function(t){var e=this;t.addEventListener("load",(function(t){if(e.count===e.current_item_index)e.value[e.count][e.key]=t.target.result;else{var n={};for(var r in e.parent.schema.properties)n[r]="";n[e.key]=t.target.result,e.value.splice(e.count,0,n)}e.count+=1,e.count===e.total+e.current_item_index&&e.arrayEditor.setValue(e.value)}))}},{key:"build",value:function(){var t=this;if(this.title=this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired()),this.options.infoText&&(this.infoButton=this.theme.getInfoButton(this.options.infoText)),this.input=this.theme.getFormInputField("hidden"),this.container.appendChild(this.input),!this.schema.readOnly&&!this.schema.readonly){if(!window.FileReader)throw new Error("FileReader required for base64 editor");this.uploader=this.theme.getFormInputField("file"),this.schema.options&&this.schema.options.multiple&&!0===this.schema.options.multiple&&this.parent&&"object"===this.parent.schema.type&&this.parent.parent&&"array"===this.parent.parent.schema.type&&this.uploader.setAttribute("multiple",""),this.uploader.addEventListener("change",(function(e){if(e.preventDefault(),e.stopPropagation(),e.currentTarget.files&&e.currentTarget.files.length)if(e.currentTarget.files.length>1&&t.schema.options&&t.schema.options.multiple&&!0===t.schema.options.multiple&&t.parent&&"object"===t.parent.schema.type&&t.parent.parent&&"array"===t.parent.parent.schema.type){t.arrayEditor=t.jsoneditor.getEditor(t.parent.parent.path),t.value=t.arrayEditor.getValue(),t.total=e.currentTarget.files.length,t.current_item_index=parseInt(t.parent.key),t.count=t.current_item_index;for(var n=0;n<t.total;n++){var r=new FileReader;t.setFileReaderListener(r),r.readAsDataURL(e.currentTarget.files[n])}}else{var i=new FileReader;i.onload=function(e){t.value=e.target.result,t.refreshPreview(),t.onChange(!0),i=null},i.readAsDataURL(e.currentTarget.files[0])}}))}this.preview=this.theme.getFormInputDescription(this.schema.description),this.container.appendChild(this.preview),this.control=this.theme.getFormControl(this.label,this.uploader||this.input,this.preview,this.infoButton),this.container.appendChild(this.control)}},{key:"refreshPreview",value:function(){if(this.last_preview!==this.value&&(this.last_preview=this.value,this.preview.innerHTML="",this.value)){var t=this.value.match(/^data:([^;,]+)[;,]/);if(t&&(t=t[1]),t){if(this.preview.innerHTML="<strong>Type:</strong> ".concat(t,", <strong>Size:</strong> ").concat(Math.floor((this.value.length-this.value.split(",")[0].length-1)/1.33333)," bytes"),"image"===t.substr(0,5)){this.preview.innerHTML+="<br>";var e=document.createElement("img");e.style.maxWidth="100%",e.style.maxHeight="100px",e.src=this.value,this.preview.appendChild(e)}}else this.preview.innerHTML="<em>Invalid data URI</em>"}}},{key:"enable",value:function(){this.always_disabled||(this.uploader&&(this.uploader.disabled=!1),ie(le(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){t&&(this.always_disabled=!0),this.uploader&&(this.uploader.disabled=!0),ie(le(o.prototype),"disable",this).call(this)}},{key:"setValue",value:function(t){this.value!==t&&(this.value=t,this.input.value=this.value,this.refreshPreview(),this.onChange())}},{key:"destroy",value:function(){this.preview&&this.preview.parentNode&&this.preview.parentNode.removeChild(this.preview),this.title&&this.title.parentNode&&this.title.parentNode.removeChild(this.title),this.input&&this.input.parentNode&&this.input.parentNode.removeChild(this.input),this.uploader&&this.uploader.parentNode&&this.uploader.parentNode.removeChild(this.uploader),ie(le(o.prototype),"destroy",this).call(this)}}])&&re(e.prototype,n),r&&re(e,r),o}(N);function ue(t){return(ue="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function he(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function pe(t,e,n){return(pe="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=me(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function de(t,e){return(de=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function fe(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=me(t);if(e){var i=me(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return ye(this,n)}}function ye(t,e){return!e||"object"!==ue(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function me(t){return(me=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var be=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&de(t,e)}(o,t);var e,n,r,i=fe(o);function o(t,e){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),(n=i.call(this,t,e)).active=!1,n.parent&&n.parent.schema&&(Array.isArray(n.parent.schema.required)?n.parent.schema.required.includes(n.key)||n.parent.schema.required.push(n.key):n.parent.schema.required=[n.key]),n}return e=o,(n=[{key:"build",value:function(){var t=this;this.options.compact=!0;var e=this.schema.title||this.key,n=this.expandCallbacks("button",f({},{icon:"",validated:!1,align:"left",action:function(t,e){window.alert('No button action defined for "'.concat(t.path,'"'))}},this.defaults.options.button||{},this.options.button||{}));this.input=this.theme.getFormButton(e,n.icon,e),this.input.addEventListener("click",n.action,!1),(this.schema.readOnly||this.schema.readonly||this.schema.template)&&this.disable(!0),this.setInputAttributes(["readonly"]),this.control=this.theme.getFormButtonHolder(n.align),this.control.appendChild(this.input),this.container.appendChild(this.control),this.changeHandler=function(){t.jsoneditor.validate(t.jsoneditor.getValue()).length>0?t.disable():t.enable()},n.validated&&this.jsoneditor.on("change",this.changeHandler)}},{key:"enable",value:function(){this.always_disabled||(this.input.disabled=!1,pe(me(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){t&&(this.always_disabled=!0),this.input.disabled=!0,pe(me(o.prototype),"disable",this).call(this)}},{key:"getNumColumns",value:function(){return 2}},{key:"activate",value:function(){this.active=!1,this.enable()}},{key:"deactivate",value:function(){this.isRequired()||(this.active=!1,this.disable())}},{key:"destroy",value:function(){this.jsoneditor.off("change",this.changeHandler),this.changeHandler=null,pe(me(o.prototype),"destroy",this).call(this)}}])&&he(e.prototype,n),r&&he(e,r),o}(N);function ve(t){return(ve="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ge(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _e(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function we(t,e,n){return(we="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Oe(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function ke(t,e){return(ke=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function xe(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Oe(t);if(e){var i=Oe(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return je(this,n)}}function je(t,e){return!e||"object"!==ve(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Oe(t){return(Oe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Ce=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ke(t,e)}(o,t);var e,n,r,i=xe(o);function o(){return ge(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e){t=!!t;var n=this.getValue()!==t;this.value=t,this.input.checked=this.value,this.onChange(n)}},{key:"register",value:function(){we(Oe(o.prototype),"register",this).call(this),this.input&&this.input.setAttribute("name",this.formname)}},{key:"unregister",value:function(){we(Oe(o.prototype),"unregister",this).call(this),this.input&&this.input.removeAttribute("name")}},{key:"getNumColumns",value:function(){return Math.min(12,Math.max(this.getTitle().length/7,2))}},{key:"build",value:function(){var t=this;this.parent.options.table_row||(this.label=this.header=this.theme.getCheckboxLabel(this.getTitle(),this.isRequired()),this.label.htmlFor=this.formname),this.schema.description&&(this.description=this.theme.getFormInputDescription(this.schema.description)),this.options.infoText&&!this.options.compact&&(this.infoButton=this.theme.getInfoButton(this.options.infoText)),this.options.compact&&this.container.classList.add("compact"),this.input=this.theme.getCheckbox(),this.input.id=this.formname,this.control=this.theme.getFormControl(this.label,this.input,this.description,this.infoButton),(this.schema.readOnly||this.schema.readonly)&&this.disable(!0),this.input.addEventListener("change",(function(e){e.preventDefault(),e.stopPropagation(),t.value=e.currentTarget.checked,t.onChange(!0)})),this.container.appendChild(this.control)}},{key:"enable",value:function(){this.always_disabled||(this.input.disabled=!1,we(Oe(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){t&&(this.always_disabled=!0),this.input.disabled=!0,we(Oe(o.prototype),"disable",this).call(this)}},{key:"destroy",value:function(){this.label&&this.label.parentNode&&this.label.parentNode.removeChild(this.label),this.description&&this.description.parentNode&&this.description.parentNode.removeChild(this.description),this.input&&this.input.parentNode&&this.input.parentNode.removeChild(this.input),we(Oe(o.prototype),"destroy",this).call(this)}},{key:"showValidationErrors",value:function(t){var e=this;this.previous_error_setting=this.jsoneditor.options.show_errors;var n=t.reduce((function(t,n){return n.path===e.path&&t.push(n.message),t}),[]);this.input.controlgroup=this.control,n.length?this.theme.addInputError(this.input,"".concat(n.join(". "),".")):this.theme.removeInputError(this.input)}}])&&_e(e.prototype,n),r&&_e(e,r),o}(N);n(134);function Ee(t){return(Ee="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Se(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Re(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Pe(t,e,n){return(Pe="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Ie(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Le(t,e){return(Le=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Te(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ie(t);if(e){var i=Ie(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ae(this,n)}}function Ae(t,e){return!e||"object"!==Ee(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ie(t){return(Ie=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var De=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Le(t,e)}(o,t);var e,n,r,i=Te(o);function o(){return Se(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e){var n=this.typecast(t),r=!!this.jsoneditor.options.use_default_values||void 0!==this.schema.default;this.enum_values.includes(n)&&(!e||this.isRequired()||r)||(n=this.enum_values[0]),this.value!==n&&(e?this.is_dirty=!1:"change"===this.jsoneditor.options.show_errors&&(this.is_dirty=!0),this.input.value=this.enum_options[this.enum_values.indexOf(n)],this.value=n,this.onChange(),this.change())}},{key:"register",value:function(){Pe(Ie(o.prototype),"register",this).call(this),this.input&&this.input.setAttribute("name",this.formname)}},{key:"unregister",value:function(){Pe(Ie(o.prototype),"unregister",this).call(this),this.input&&this.input.removeAttribute("name")}},{key:"getNumColumns",value:function(){if(!this.enum_options)return 3;for(var t=this.getTitle().length,e=0;e<this.enum_options.length;e++)t=Math.max(t,this.enum_options[e].length+4);return Math.min(12,Math.max(t/7,2))}},{key:"typecast",value:function(t){return"boolean"===this.schema.type?"undefined"===t||void 0===t?void 0:!!t:"number"===this.schema.type?1*t||0:"integer"===this.schema.type?Math.floor(1*t||0):this.schema.enum&&void 0===t?void 0:"".concat(t)}},{key:"getValue",value:function(){if(this.dependenciesFulfilled)return this.typecast(this.value)}},{key:"preBuild",value:function(){var t,e,n=this;if(this.input_type="select",this.enum_options=[],this.enum_values=[],this.enum_display=[],this.schema.enum){var r=this.schema.options&&this.schema.options.enum_titles||[];this.schema.enum.forEach((function(t,e){n.enum_options[e]="".concat(t),n.enum_display[e]="".concat(r[e]||t),n.enum_values[e]=n.typecast(t)})),this.isRequired()||(this.enum_display.unshift(" "),this.enum_options.unshift("undefined"),this.enum_values.unshift(void 0))}else if("boolean"===this.schema.type)this.enum_display=this.schema.options&&this.schema.options.enum_titles||["true","false"],this.enum_options=["1",""],this.enum_values=[!0,!1],this.isRequired()||(this.enum_display.unshift(" "),this.enum_options.unshift("undefined"),this.enum_values.unshift(void 0));else{if(!this.schema.enumSource)throw new Error("'select' editor requires the enum property to be set.");if(this.enumSource=[],this.enum_display=[],this.enum_options=[],this.enum_values=[],Array.isArray(this.schema.enumSource))for(t=0;t<this.schema.enumSource.length;t++)"string"==typeof this.schema.enumSource[t]?this.enumSource[t]={source:this.schema.enumSource[t]}:Array.isArray(this.schema.enumSource[t])?this.enumSource[t]=this.schema.enumSource[t]:this.enumSource[t]=f({},this.schema.enumSource[t]);else this.schema.enumValue?this.enumSource=[{source:this.schema.enumSource,value:this.schema.enumValue}]:this.enumSource=[{source:this.schema.enumSource}];for(t=0;t<this.enumSource.length;t++)this.enumSource[t].value&&("function"==typeof(e=this.expandCallbacks("template",{template:this.enumSource[t].value})).template?this.enumSource[t].value=e.template:this.enumSource[t].value=this.jsoneditor.compileTemplate(this.enumSource[t].value,this.template_engine)),this.enumSource[t].title&&("function"==typeof(e=this.expandCallbacks("template",{template:this.enumSource[t].title})).template?this.enumSource[t].title=e.template:this.enumSource[t].title=this.jsoneditor.compileTemplate(this.enumSource[t].title,this.template_engine)),this.enumSource[t].filter&&this.enumSource[t].value&&("function"==typeof(e=this.expandCallbacks("template",{template:this.enumSource[t].filter})).template?this.enumSource[t].filter=e.template:this.enumSource[t].filter=this.jsoneditor.compileTemplate(this.enumSource[t].filter,this.template_engine))}}},{key:"build",value:function(){var t=this;this.options.compact||(this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired())),this.schema.description&&(this.description=this.theme.getFormInputDescription(this.schema.description)),this.options.infoText&&(this.infoButton=this.theme.getInfoButton(this.options.infoText)),this.options.compact&&this.container.classList.add("compact"),this.input=this.theme.getSelectInput(this.enum_options,!1),this.theme.setSelectOptions(this.input,this.enum_options,this.enum_display),(this.schema.readOnly||this.schema.readonly)&&this.disable(!0),this.setInputAttributes([]),this.input.addEventListener("change",(function(e){e.preventDefault(),e.stopPropagation(),t.onInputChange()})),this.control=this.theme.getFormControl(this.label,this.input,this.description,this.infoButton),this.container.appendChild(this.control),this.value=this.enum_values[0],window.requestAnimationFrame((function(){t.input.parentNode&&t.afterInputReady()}))}},{key:"afterInputReady",value:function(){this.theme.afterInputReady(this.input)}},{key:"onInputChange",value:function(){var t,e=this.typecast(this.input.value);(t=this.enum_values.includes(e)?this.enum_values[this.enum_values.indexOf(e)]:this.enum_values[0])!==this.value&&(this.is_dirty=!0,this.value=t,this.onChange(!0))}},{key:"onWatchedFieldChange",value:function(){var t,e,n=[],r=[];if(this.enumSource){t=this.getWatchedFieldValues();for(var i=0;i<this.enumSource.length;i++)if(Array.isArray(this.enumSource[i]))n=n.concat(this.enumSource[i]),r=r.concat(this.enumSource[i]);else{var a=[];if(a=Array.isArray(this.enumSource[i].source)?this.enumSource[i].source:t[this.enumSource[i].source]){if(this.enumSource[i].slice&&(a=Array.prototype.slice.apply(a,this.enumSource[i].slice)),this.enumSource[i].filter){var s=[];for(e=0;e<a.length;e++)this.enumSource[i].filter({i:e,item:a[e],watched:t})&&s.push(a[e]);a=s}var l=[],c=[];for(e=0;e<a.length;e++){var u=a[e];this.enumSource[i].value?c[e]=this.typecast(this.enumSource[i].value({i:e,item:u})):c[e]=a[e],this.enumSource[i].title?l[e]=this.enumSource[i].title({i:e,item:u}):l[e]=c[e]}this.enumSource[i].sort&&function(t,e,n){t.map((function(t,n){return{v:t,t:e[n]}})).sort((function(t,e){return t.v<e.v?-n:t.v===e.v?0:n})).forEach((function(n,r){t[r]=n.v,e[r]=n.t}))}.bind(null,c,l,"desc"===this.enumSource[i].sort?1:-1)(),n=n.concat(c),r=r.concat(l)}}var h=this.value;this.theme.setSelectOptions(this.input,n,r),this.enum_options=n,this.enum_display=r,this.enum_values=n,n.includes(h)||!1!==this.jsoneditor.options.enum_source_value_auto_select?(this.input.value=h,this.value=h):(this.input.value=n[0],this.value=this.typecast(n[0]||""),this.parent&&!this.watchLoop?this.parent.onChildEditorChange(this):this.jsoneditor.onChange(),this.jsoneditor.notifyWatchers(this.path))}Pe(Ie(o.prototype),"onWatchedFieldChange",this).call(this)}},{key:"enable",value:function(){this.always_disabled||(this.input.disabled=!1,Pe(Ie(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){t&&(this.always_disabled=!0),this.input.disabled=!0,Pe(Ie(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.label&&this.label.parentNode&&this.label.parentNode.removeChild(this.label),this.description&&this.description.parentNode&&this.description.parentNode.removeChild(this.description),this.input&&this.input.parentNode&&this.input.parentNode.removeChild(this.input),Pe(Ie(o.prototype),"destroy",this).call(this)}},{key:"showValidationErrors",value:function(t){var e=this;this.previous_error_setting=this.jsoneditor.options.show_errors;var n=t.reduce((function(t,n){return n.path===e.path&&t.push(n.message),t}),[]);n.length?this.theme.addInputError(this.input,"".concat(n.join(". "),".")):this.theme.removeInputError(this.input)}}])&&Re(e.prototype,n),r&&Re(e,r),o}(N);function Ne(t){return(Ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Be(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Fe(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ve(t,e,n){return(Ve="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=qe(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function He(t,e){return(He=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ze(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=qe(t);if(e){var i=qe(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Me(this,n)}}function Me(t,e){return!e||"object"!==Ne(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function qe(t){return(qe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Ue=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&He(t,e)}(o,t);var e,n,r,i=ze(o);function o(){return Be(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e){if(this.choices_instance){var n=this.typecast(t||"");if(this.enum_values.includes(n)||(n=this.enum_values[0]),this.value===n)return;e?this.is_dirty=!1:"change"===this.jsoneditor.options.show_errors&&(this.is_dirty=!0),this.input.value=this.enum_options[this.enum_values.indexOf(n)],this.choices_instance.setChoiceByValue(this.input.value),this.value=n,this.onChange()}else Ve(qe(o.prototype),"setValue",this).call(this,t,e)}},{key:"afterInputReady",value:function(){if(window.Choices&&!this.choices_instance){var t=this.expandCallbacks("choices",f({},this.defaults.options.choices||{},this.options.choices||{}));this.choices_instance=new window.Choices(this.input,t)}Ve(qe(o.prototype),"afterInputReady",this).call(this)}},{key:"onWatchedFieldChange",value:function(){var t=this;if(Ve(qe(o.prototype),"onWatchedFieldChange",this).call(this),this.choices_instance){var e=this.enum_options.map((function(e,n){return{value:e,label:t.enum_display[n]}}));this.choices_instance.setChoices(e,"value","label",!0),this.choices_instance.setChoiceByValue("".concat(this.value))}}},{key:"enable",value:function(){!this.always_disabled&&this.choices_instance&&this.choices_instance.enable(),Ve(qe(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.choices_instance&&this.choices_instance.disable(),Ve(qe(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.choices_instance&&(this.choices_instance.destroy(),this.choices_instance=null),Ve(qe(o.prototype),"destroy",this).call(this)}}])&&Fe(e.prototype,n),r&&Fe(e,r),o}(De);function Ge(t){return(Ge="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function $e(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function We(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Je(t,e,n){return(Je="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Xe(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Ze(t,e){return(Ze=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Qe(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Xe(t);if(e){var i=Xe(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ye(this,n)}}function Ye(t,e){return!e||"object"!==Ge(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Xe(t){return(Xe=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Ue.rules={".choices > *":"box-sizing:border-box"};var Ke=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ze(t,e)}(o,t);var e,n,r,i=Qe(o);function o(){return $e(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"build",value:function(){if(Je(Xe(o.prototype),"build",this).call(this),this.input&&(this.schema.max&&"string"==typeof this.schema.max&&this.input.setAttribute("max",this.schema.max),this.schema.min&&"string"==typeof this.schema.max&&this.input.setAttribute("min",this.schema.min),window.flatpickr&&"object"===Ge(this.options.flatpickr))){this.options.flatpickr.enableTime="date"!==this.schema.format,this.options.flatpickr.noCalendar="time"===this.schema.format,"integer"===this.schema.type&&(this.options.flatpickr.mode="single"),this.input.setAttribute("data-input","");var t=this.input;if(!0===this.options.flatpickr.wrap){var e=[];if(!1!==this.options.flatpickr.showToggleButton){var n=this.getButton("","time"===this.schema.format?"time":"calendar","flatpickr_toggle_button");n.setAttribute("data-toggle",""),e.push(n)}if(!1!==this.options.flatpickr.showClearButton){var r=this.getButton("","clear","flatpickr_clear_button");r.setAttribute("data-clear",""),e.push(r)}var i=this.input.parentNode,a=this.input.nextSibling,s=this.theme.getInputGroup(this.input,e);void 0!==s?(this.options.flatpickr.inline=!1,i.insertBefore(s,a),t=s):this.options.flatpickr.wrap=!1}this.flatpickr=window.flatpickr(t,this.options.flatpickr),!0===this.options.flatpickr.inline&&!0===this.options.flatpickr.inlineHideInput&&this.input.setAttribute("type","hidden")}}},{key:"getValue",value:function(){if(this.dependenciesFulfilled){if("string"===this.schema.type)return this.value;if(""!==this.value&&void 0!==this.value){var t="time"===this.schema.format?"1970-01-01 ".concat(this.value):this.value;return parseInt(new Date(t).getTime()/1e3)}}}},{key:"setValue",value:function(t,e,n){if("string"===this.schema.type)Je(Xe(o.prototype),"setValue",this).call(this,t,e,n),this.flatpickr&&this.flatpickr.setDate(t);else if(t>0){var r=new Date(1e3*t),i=r.getFullYear(),a=this.zeroPad(r.getMonth()+1),s=this.zeroPad(r.getDate()),l=this.zeroPad(r.getHours()),c=this.zeroPad(r.getMinutes()),u=this.zeroPad(r.getSeconds()),h=[i,a,s].join("-"),p=[l,c,u].join(":"),d="".concat(h,"T").concat(p);"date"===this.schema.format?d=h:"time"===this.schema.format&&(d=p),this.input.value=d,this.refreshValue(),this.flatpickr&&this.flatpickr.setDate(d)}}},{key:"destroy",value:function(){this.flatpickr&&this.flatpickr.destroy(),this.flatpickr=null,Je(Xe(o.prototype),"destroy",this).call(this)}},{key:"zeroPad",value:function(t){return"0".concat(t).slice(-2)}}])&&We(e.prototype,n),r&&We(e,r),o}(G);function tn(t){return(tn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function en(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function nn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function rn(t,e,n){return(rn="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=ln(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function on(t,e){return(on=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function an(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ln(t);if(e){var i=ln(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return sn(this,n)}}function sn(t,e){return!e||"object"!==tn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ln(t){return(ln=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var cn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&on(t,e)}(o,t);var e,n,r,i=an(o);function o(){return en(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"register",value:function(){if(this.editors){for(var t=0;t<this.editors.length;t++)this.editors[t]&&this.editors[t].unregister();this.editors[this.currentEditor]&&this.editors[this.currentEditor].register()}rn(ln(o.prototype),"register",this).call(this)}},{key:"unregister",value:function(){if(rn(ln(o.prototype),"unregister",this).call(this),this.editors)for(var t=0;t<this.editors.length;t++)this.editors[t]&&this.editors[t].unregister()}},{key:"getNumColumns",value:function(){return this.editors[this.currentEditor]?Math.max(this.editors[this.currentEditor].getNumColumns(),4):4}},{key:"enable",value:function(){if(this.editors)for(var t=0;t<this.editors.length;t++)this.editors[t]&&this.editors[t].enable();rn(ln(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(){if(this.editors)for(var t=0;t<this.editors.length;t++)this.editors[t]&&this.editors[t].disable();rn(ln(o.prototype),"disable",this).call(this)}},{key:"switchEditor",value:function(){var t=this,e=this.getWatchedFieldValues();if(e){var n=document.location.origin+document.location.pathname+this.template(e);this.editors[this.refs[n]]||this.buildChildEditor(n),this.currentEditor=this.refs[n],this.register(),this.editors.forEach((function(e,n){e&&(t.currentEditor===n?e.container.style.display="":e.container.style.display="none")})),this.refreshValue(),this.onChange(!0)}}},{key:"buildChildEditor",value:function(t){this.refs[t]=this.editors.length;var e=this.theme.getChildEditorHolder();this.editor_holder.appendChild(e);var n=f({},this.schema,this.jsoneditor.refs[t]),r=this.jsoneditor.getEditorClass(n,this.jsoneditor),i=this.jsoneditor.createEditor(r,{jsoneditor:this.jsoneditor,schema:n,container:e,path:this.path,parent:this,required:!0});this.editors.push(i),i.preBuild(),i.build(),i.postBuild()}},{key:"preBuild",value:function(){var t;for(this.refs={},this.editors=[],this.currentEditor="",t=0;t<this.schema.links.length;t++)if("describedby"===this.schema.links[t].rel.toLowerCase()){this.template=this.jsoneditor.compileTemplate(this.schema.links[t].href,this.template_engine);break}this.schema.links=this.schema.links.slice(0,t).concat(this.schema.links.slice(t+1)),0===this.schema.links.length&&delete this.schema.links,this.baseSchema=f({},this.schema)}},{key:"build",value:function(){this.editor_holder=document.createElement("div"),this.container.appendChild(this.editor_holder),this.switchEditor()}},{key:"onWatchedFieldChange",value:function(){this.switchEditor()}},{key:"onChildEditorChange",value:function(t){this.editors[this.currentEditor]&&this.refreshValue(),rn(ln(o.prototype),"onChildEditorChange",this).call(this,t)}},{key:"refreshValue",value:function(){this.editors[this.currentEditor]&&(this.value=this.editors[this.currentEditor].getValue())}},{key:"setValue",value:function(t,e){this.editors[this.currentEditor]&&(this.editors[this.currentEditor].setValue(t,e),this.refreshValue(),this.onChange())}},{key:"destroy",value:function(){this.editors.forEach((function(t){t&&t.destroy()})),this.editor_holder&&this.editor_holder.parentNode&&this.editor_holder.parentNode.removeChild(this.editor_holder),rn(ln(o.prototype),"destroy",this).call(this)}},{key:"showValidationErrors",value:function(t){this.editors.forEach((function(e){e&&e.showValidationErrors(t)}))}}])&&nn(e.prototype,n),r&&nn(e,r),o}(N);function un(t){return(un="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function hn(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return pn(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return pn(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function pn(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function dn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function fn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function yn(t,e,n){return(yn="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=gn(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function mn(t,e){return(mn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function bn(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=gn(t);if(e){var i=gn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return vn(this,n)}}function vn(t,e){return!e||"object"!==un(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function gn(t){return(gn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var _n=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&mn(t,e)}(o,t);var e,n,r,i=bn(o);function o(){return dn(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"getNumColumns",value:function(){return 4}},{key:"build",value:function(){var t=this;this.title=this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired()),this.container.appendChild(this.title),this.options.enum_titles=this.options.enum_titles||[],this.enum=this.schema.enum,this.selected=0,this.select_options=[],this.html_values=[];for(var e=0;e<this.enum.length;e++)this.select_options[e]=this.options.enum_titles[e]||"Value ".concat(e+1),this.html_values[e]=this.getHTML(this.enum[e]);this.switcher=this.theme.getSwitcher(this.select_options),this.container.appendChild(this.switcher),this.display_area=this.theme.getIndentedPanel(),this.container.appendChild(this.display_area),this.options.hide_display&&(this.display_area.style.display="none"),this.switcher.addEventListener("change",(function(e){t.selected=t.select_options.indexOf(e.currentTarget.value),t.value=t.enum[t.selected],t.refreshValue(),t.onChange(!0)})),this.value=this.enum[0],this.refreshValue(),1===this.enum.length&&(this.switcher.style.display="none")}},{key:"refreshValue",value:function(){var t=this;this.selected=-1;var e=JSON.stringify(this.value);this.enum.forEach((function(n,r){if(e===JSON.stringify(n))return t.selected=r,!1})),this.selected<0?this.setValue(this.enum[0]):(this.switcher.value=this.select_options[this.selected],this.display_area.innerHTML=this.html_values[this.selected])}},{key:"enable",value:function(){this.always_disabled||(this.switcher.disabled=!1,yn(gn(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){t&&(this.always_disabled=!0),this.switcher.disabled=!0,yn(gn(o.prototype),"disable",this).call(this)}},{key:"getHTML",value:function(t){var e=this;if(null===t)return"<em>null</em>";if("object"===un(t)){var n="";return function(t,e){Array.isArray(t)||"number"==typeof t.length&&t.length>0&&t.length-1 in t?Array.from(t).forEach((function(t,n){return e(n,t)})):Object.entries(t).forEach((function(t){var n=hn(t,2),r=n[0],i=n[1];return e(r,i)}))}(t,(function(r,i){var o=e.getHTML(i);Array.isArray(t)||(o="<div><em>".concat(r,"</em>: ").concat(o,"</div>")),n+="<li>".concat(o,"</li>")})),n=Array.isArray(t)?"<ol>".concat(n,"</ol>"):"<ul style='margin-top:0;margin-bottom:0;padding-top:0;padding-bottom:0;'>".concat(n,"</ul>")}return"boolean"==typeof t?t?"true":"false":"string"==typeof t?t.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;"):t}},{key:"setValue",value:function(t){this.value!==t&&(this.value=t,this.refreshValue(),this.onChange())}},{key:"destroy",value:function(){this.display_area&&this.display_area.parentNode&&this.display_area.parentNode.removeChild(this.display_area),this.title&&this.title.parentNode&&this.title.parentNode.removeChild(this.title),this.switcher&&this.switcher.parentNode&&this.switcher.parentNode.removeChild(this.switcher),yn(gn(o.prototype),"destroy",this).call(this)}}])&&fn(e.prototype,n),r&&fn(e,r),o}(N);function wn(t){return(wn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function kn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function xn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function jn(t,e,n){return(jn="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Sn(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function On(t,e){return(On=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Cn(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Sn(t);if(e){var i=Sn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return En(this,n)}}function En(t,e){return!e||"object"!==wn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Sn(t){return(Sn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Rn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&On(t,e)}(o,t);var e,n,r,i=Cn(o);function o(){return kn(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"register",value:function(){jn(Sn(o.prototype),"register",this).call(this),this.input&&this.input.setAttribute("name",this.formname)}},{key:"unregister",value:function(){jn(Sn(o.prototype),"unregister",this).call(this),this.input&&this.input.removeAttribute("name")}},{key:"setValue",value:function(t,e,n){if((!this.template||n)&&(null==t?t="":"object"===wn(t)?t=JSON.stringify(t):"string"!=typeof t&&(t="".concat(t)),t!==this.serialized)){var r=this.sanitize(t);if(this.input.value!==r){this.input.value=r;var i=n||this.getValue()!==t;this.refreshValue(),e?this.is_dirty=!1:"change"===this.jsoneditor.options.show_errors&&(this.is_dirty=!0),this.adjust_height&&this.adjust_height(this.input),this.onChange(i)}}}},{key:"getNumColumns",value:function(){return 2}},{key:"enable",value:function(){jn(Sn(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(){jn(Sn(o.prototype),"disable",this).call(this)}},{key:"refreshValue",value:function(){this.value=this.input.value,"string"!=typeof this.value&&(this.value=""),this.serialized=this.value}},{key:"destroy",value:function(){this.template=null,this.input&&this.input.parentNode&&this.input.parentNode.removeChild(this.input),this.label&&this.label.parentNode&&this.label.parentNode.removeChild(this.label),this.description&&this.description.parentNode&&this.description.parentNode.removeChild(this.description),jn(Sn(o.prototype),"destroy",this).call(this)}},{key:"sanitize",value:function(t){return t}},{key:"onWatchedFieldChange",value:function(){var t;this.template&&(t=this.getWatchedFieldValues(),this.setValue(this.template(t),!1,!0)),jn(Sn(o.prototype),"onWatchedFieldChange",this).call(this)}},{key:"build",value:function(){if(this.format=this.schema.format,!this.format&&this.options.default_format&&(this.format=this.options.default_format),this.options.format&&(this.format=this.options.format),this.input_type="hidden",this.input=this.theme.getFormInputField(this.input_type),this.format&&this.input.setAttribute("data-schemaformat",this.format),this.container.appendChild(this.input),this.schema.template){var t=this.expandCallbacks("template",{template:this.schema.template});"function"==typeof t.template?this.template=t.template:this.template=this.jsoneditor.compileTemplate(this.schema.template,this.template_engine),this.refreshValue()}else this.refreshValue()}}])&&xn(e.prototype,n),r&&xn(e,r),o}(N);function Pn(t){return(Pn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ln(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Tn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function An(t,e){return(An=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function In(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Nn(t);if(e){var i=Nn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Dn(this,n)}}function Dn(t,e){return!e||"object"!==Pn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Nn(t){return(Nn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Bn=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&An(t,e)}(o,t);var e,n,r,i=In(o);function o(){return Ln(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"build",value:function(){this.options.compact=!1,this.header=this.label=this.theme.getFormInputLabel(this.getTitle()),this.description=this.theme.getDescription(this.schema.description||""),this.control=this.theme.getFormControl(this.label,this.description,null),this.container.appendChild(this.control)}},{key:"getTitle",value:function(){return this.schema.title}},{key:"getNumColumns",value:function(){return 12}}])&&Tn(e.prototype,n),r&&Tn(e,r),o}(be);function Fn(t){return(Fn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Vn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Hn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function zn(t,e,n){return(zn="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Gn(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Mn(t,e){return(Mn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function qn(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Gn(t);if(e){var i=Gn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Un(this,n)}}function Un(t,e){return!e||"object"!==Fn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Gn(t){return(Gn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var $n=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Mn(t,e)}(o,t);var e,n,r,i=qn(o);function o(){return Vn(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"build",value:function(){if(zn(Gn(o.prototype),"build",this).call(this),void 0!==this.schema.minimum){var t=this.schema.minimum;void 0!==this.schema.exclusiveMinimum&&(t+=1),this.input.setAttribute("min",t)}if(void 0!==this.schema.maximum){var e=this.schema.maximum;void 0!==this.schema.exclusiveMaximum&&(e-=1),this.input.setAttribute("max",e)}if(void 0!==this.schema.step){var n=this.schema.step||1;this.input.setAttribute("step",n)}this.setInputAttributes(["maxlength","pattern","readonly","min","max","step"])}},{key:"getNumColumns",value:function(){return 2}},{key:"getValue",value:function(){if(this.dependenciesFulfilled){var t=function(t){if(null==t)return!1;var e=t.match(v),n=parseFloat(t);return null!==e&&!isNaN(n)&&isFinite(n)}(this.value)?parseFloat(this.value):this.value;if(this.jsoneditor.options.use_default_values||""!==t)return t}}}])&&Hn(e.prototype,n),r&&Hn(e,r),o}(G);function Wn(t){return(Wn="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Jn(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Zn(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Qn(t,e){return(Qn=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Yn(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Kn(t);if(e){var i=Kn(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Xn(this,n)}}function Xn(t,e){return!e||"object"!==Wn(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Kn(t){return(Kn=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var tr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Qn(t,e)}(o,t);var e,n,r,i=Yn(o);function o(){return Jn(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"getNumColumns",value:function(){return 2}},{key:"getValue",value:function(){if(this.dependenciesFulfilled){var t=function(t){if(null==t)return!1;var e=t.match(g),n=parseInt(t);return null!==e&&!isNaN(n)&&isFinite(n)}(this.value)?parseInt(this.value):this.value;if(this.jsoneditor.options.use_default_values||""!==t)return t}}}])&&Zn(e.prototype,n),r&&Zn(e,r),o}($n);function er(t){return(er="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function nr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function rr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ir(t,e,n){return(ir="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=lr(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function or(t,e){return(or=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ar(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=lr(t);if(e){var i=lr(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return sr(this,n)}}function sr(t,e){return!e||"object"!==er(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function lr(t){return(lr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var cr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&or(t,e)}(o,t);var e,n,r,i=ar(o);function o(){return nr(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"preBuild",value:function(){if(ir(lr(o.prototype),"preBuild",this).call(this),this.schema.options||(this.schema.options={}),!this.schema.options.cleave)switch(this.format){case"ipv6":this.schema.options.cleave={delimiters:[":"],blocks:[4,4,4,4,4,4,4,4],uppercase:!0};break;case"ipv4":this.schema.options.cleave={delimiters:["."],blocks:[3,3,3,3],numericOnly:!0}}this.options=f(this.options,this.schema.options||{})}}])&&rr(e.prototype,n),r&&rr(e,r),o}(G);function ur(t){return(ur="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function hr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function pr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function dr(t,e,n){return(dr="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=br(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function fr(t,e){return(fr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function yr(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=br(t);if(e){var i=br(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return mr(this,n)}}function mr(t,e){return!e||"object"!==ur(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function br(t){return(br=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var vr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&fr(t,e)}(o,t);var e,n,r,i=yr(o);function o(){return hr(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e,n){var r=dr(br(o.prototype),"setValue",this).call(this,t,e,n);void 0!==r&&r.changed&&this.jodit_instance&&this.jodit_instance.setEditorValue(r.value)}},{key:"build",value:function(){this.options.format="textarea",dr(br(o.prototype),"build",this).call(this),this.input_type=this.schema.format,this.input.setAttribute("data-schemaformat",this.input_type)}},{key:"afterInputReady",value:function(){var t,e=this;window.Jodit?(t=this.expandCallbacks("jodit",f({},{height:300},this.defaults.options.jodit||{},this.options.jodit||{})),this.jodit_instance=new window.Jodit(this.input,t),(this.schema.readOnly||this.schema.readonly||this.schema.template)&&this.jodit_instance.setReadOnly(!0),this.jodit_instance.events.on("change",(function(){e.value=e.jodit_instance.getEditorValue(),e.is_dirty=!0,e.onChange(!0)})),this.theme.afterInputReady(this.input)):dr(br(o.prototype),"afterInputReady",this).call(this)}},{key:"getNumColumns",value:function(){return 6}},{key:"enable",value:function(){!this.always_disabled&&this.jodit_instance&&this.jodit_instance.setReadOnly(!1),dr(br(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.jodit_instance&&this.jodit_instance.setReadOnly(!0),dr(br(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.jodit_instance&&(this.jodit_instance.destruct(),this.jodit_instance=null),dr(br(o.prototype),"destroy",this).call(this)}}])&&pr(e.prototype,n),r&&pr(e,r),o}(G);function gr(t){return(gr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _r(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function wr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function kr(t,e,n){return(kr="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Cr(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function xr(t,e){return(xr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function jr(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Cr(t);if(e){var i=Cr(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Or(this,n)}}function Or(t,e){return!e||"object"!==gr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Cr(t){return(Cr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Er=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&xr(t,e)}(o,t);var e,n,r,i=jr(o);function o(){return _r(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"register",value:function(){if(this.editors){for(var t=0;t<this.editors.length;t++)this.editors[t]&&this.editors[t].unregister();this.editors[this.type]&&this.editors[this.type].register()}kr(Cr(o.prototype),"register",this).call(this)}},{key:"unregister",value:function(){if(kr(Cr(o.prototype),"unregister",this).call(this),this.editors)for(var t=0;t<this.editors.length;t++)this.editors[t]&&this.editors[t].unregister()}},{key:"getNumColumns",value:function(){return this.editors[this.type]?Math.max(this.editors[this.type].getNumColumns(),4):4}},{key:"enable",value:function(){if(!this.always_disabled){if(this.editors)for(var t=0;t<this.editors.length;t++)this.editors[t]&&this.editors[t].enable();this.switcher.disabled=!1,kr(Cr(o.prototype),"enable",this).call(this)}}},{key:"disable",value:function(t){if(t&&(this.always_disabled=!0),this.editors)for(var e=0;e<this.editors.length;e++)this.editors[e]&&this.editors[e].disable(t);this.switcher.disabled=!0,kr(Cr(o.prototype),"disable",this).call(this)}},{key:"switchEditor",value:function(t){var e=this;this.editors[t]||this.buildChildEditor(t);var n=this.getValue();this.type=t,this.register(),this.editors.forEach((function(t,r){t&&(e.type===r?(e.keep_values&&t.setValue(n,!0),t.container.style.display=""):t.container.style.display="none")})),this.refreshValue(),this.refreshHeaderText()}},{key:"buildChildEditor",value:function(t){var e,n=this,r=this.types[t],i=this.theme.getChildEditorHolder();this.editor_holder.appendChild(i),"string"==typeof r?(e=f({},this.schema)).type=r:(e=f({},this.schema,r),e=this.jsoneditor.expandRefs(e),r&&r.required&&Array.isArray(r.required)&&this.schema.required&&Array.isArray(this.schema.required)&&(e.required=this.schema.required.concat(r.required)));var o=this.jsoneditor.getEditorClass(e);this.editors[t]=this.jsoneditor.createEditor(o,{jsoneditor:this.jsoneditor,schema:e,container:i,path:this.path,parent:this,required:!0}),this.editors[t].preBuild(),this.editors[t].build(),this.editors[t].postBuild(),this.editors[t].header&&(this.editors[t].header.style.display="none"),this.editors[t].option=this.switcher_options[t],i.addEventListener("change_header_text",(function(){n.refreshHeaderText()})),t!==this.type&&(i.style.display="none")}},{key:"preBuild",value:function(){if(this.types=[],this.type=0,this.editors=[],this.validators=[],this.keep_values=!0,void 0!==this.jsoneditor.options.keep_oneof_values&&(this.keep_values=this.jsoneditor.options.keep_oneof_values),void 0!==this.options.keep_oneof_values&&(this.keep_values=this.options.keep_oneof_values),this.schema.oneOf)this.oneOf=!0,this.types=this.schema.oneOf,delete this.schema.oneOf;else if(this.schema.anyOf)this.anyOf=!0,this.types=this.schema.anyOf,delete this.schema.anyOf;else{if(this.schema.type&&"any"!==this.schema.type)Array.isArray(this.schema.type)?this.types=this.schema.type:this.types=[this.schema.type];else if(this.types=["string","number","integer","boolean","object","array","null"],this.schema.disallow){var t=this.schema.disallow;"object"===gr(t)&&Array.isArray(t)||(t=[t]);var e=[];this.types.forEach((function(n){t.includes(n)||e.push(n)})),this.types=e}delete this.schema.type}this.display_text=this.getDisplayText(this.types)}},{key:"build",value:function(){var t=this,e=this.container;this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired()),this.container.appendChild(this.header),this.switcher=this.theme.getSwitcher(this.display_text),e.appendChild(this.switcher),this.switcher.addEventListener("change",(function(e){e.preventDefault(),e.stopPropagation(),t.switchEditor(t.display_text.indexOf(e.currentTarget.value)),t.onChange(!0)})),this.editor_holder=document.createElement("div"),e.appendChild(this.editor_holder);var n={};this.jsoneditor.options.custom_validators&&(n.custom_validators=this.jsoneditor.options.custom_validators),this.switcher_options=this.theme.getSwitcherOptions(this.switcher),this.types.forEach((function(e,r){var i;t.editors[r]=!1,"string"==typeof e?(i=f({},t.schema)).type=e:(i=f({},t.schema,e),e.required&&Array.isArray(e.required)&&t.schema.required&&Array.isArray(t.schema.required)&&(i.required=t.schema.required.concat(e.required))),t.validators[r]=new C(t.jsoneditor,i,n,t.defaults)})),this.switchEditor(0)}},{key:"onChildEditorChange",value:function(t){this.editors[this.type]&&(this.refreshValue(),this.refreshHeaderText()),kr(Cr(o.prototype),"onChildEditorChange",this).call(this)}},{key:"refreshHeaderText",value:function(){var t=this.getDisplayText(this.types);Array.from(this.switcher_options).forEach((function(e,n){e.textContent=t[n]}))}},{key:"refreshValue",value:function(){this.value=this.editors[this.type].getValue()}},{key:"setValue",value:function(t,e){var n=this,r=this.type,i={match:0,extra:0,i:this.type},o={match:0,i:null};this.validators.forEach((function(e,r){var a=null;void 0!==n.anyOf&&n.anyOf&&(a=e.fitTest(t),(i.match<a.match||i.match===a.match&&i.extra>a.extra)&&((i=a).i=r)),e.validate(t).length||null!==o.i||(o.i=r,null!==a&&(o.match=a.match))}));var a=o.i;void 0!==this.anyOf&&this.anyOf&&o.match<i.match&&(a=i.i),null===a&&(a=this.type),this.type=a,this.switcher.value=this.display_text[a];var s=this.type!==r;s&&this.switchEditor(this.type),this.editors[this.type].setValue(t,e),this.refreshValue(),this.onChange(s)}},{key:"destroy",value:function(){this.editors.forEach((function(t){t&&t.destroy()})),this.editor_holder&&this.editor_holder.parentNode&&this.editor_holder.parentNode.removeChild(this.editor_holder),this.switcher&&this.switcher.parentNode&&this.switcher.parentNode.removeChild(this.switcher),kr(Cr(o.prototype),"destroy",this).call(this)}},{key:"showValidationErrors",value:function(t){var e=this;if(this.oneOf||this.anyOf){var n=this.oneOf?"oneOf":"anyOf";this.editors.forEach((function(r,i){if(r){var o="".concat(e.path,".").concat(n,"[").concat(i,"]");r.showValidationErrors(t.reduce((function(t,n){if(n.path.startsWith(o)||n.path===o.substr(0,n.path.length)){var r=f({},n);r.path=e.path+r.path.substr(o.length),t.push(r)}return t}),[]))}}))}else this.editors.forEach((function(e){e&&e.showValidationErrors(t)}))}},{key:"addLinks",value:function(){}}])&&wr(e.prototype,n),r&&wr(e,r),o}(N);function Sr(t){return(Sr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Rr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Pr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Lr(t,e){return(Lr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Tr(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ir(t);if(e){var i=Ir(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ar(this,n)}}function Ar(t,e){return!e||"object"!==Sr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ir(t){return(Ir=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Dr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Lr(t,e)}(o,t);var e,n,r,i=Tr(o);function o(){return Rr(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"getValue",value:function(){if(this.dependenciesFulfilled)return null}},{key:"setValue",value:function(){this.onChange()}},{key:"getNumColumns",value:function(){return 2}}])&&Pr(e.prototype,n),r&&Pr(e,r),o}(N);n(158),n(159);function Nr(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function Br(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?Nr(Object(n),!0).forEach((function(e){Fr(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):Nr(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function Fr(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function Vr(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if("undefined"==typeof Symbol||!(Symbol.iterator in Object(t)))return;var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}(t,e)||function(t,e){if(!t)return;if("string"==typeof t)return Hr(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Hr(t,e)}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Hr(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function zr(t){return(zr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Mr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function qr(t,e,n){return(qr="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Wr(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Ur(t,e){return(Ur=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Gr(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Wr(t);if(e){var i=Wr(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return $r(this,n)}}function $r(t,e){return!e||"object"!==zr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Wr(t){return(Wr=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Jr=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ur(t,e)}(o,t);var e,n,r,i=Gr(o);function o(t,e,n){var r;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),(r=i.call(this,t,e)).currentDepth=n,r}return e=o,(n=[{key:"getDefault",value:function(){return f({},this.schema.default||{})}},{key:"getChildEditors",value:function(){return this.editors}},{key:"register",value:function(){qr(Wr(o.prototype),"register",this).call(this),this.editors&&Object.values(this.editors).forEach((function(t){return t.register()}))}},{key:"unregister",value:function(){qr(Wr(o.prototype),"unregister",this).call(this),this.editors&&Object.values(this.editors).forEach((function(t){return t.unregister()}))}},{key:"getNumColumns",value:function(){return Math.max(Math.min(12,this.maxwidth),3)}},{key:"enable",value:function(){this.always_disabled||(this.editjson_control&&(this.editjson_control.disabled=!1),this.addproperty_button&&(this.addproperty_button.disabled=!1),qr(Wr(o.prototype),"enable",this).call(this),this.editors&&Object.values(this.editors).forEach((function(t){t.isActive()&&t.enable(),t.optInCheckbox.disabled=!1})))}},{key:"disable",value:function(t){t&&(this.always_disabled=!0),this.editjson_control&&(this.editjson_control.disabled=!0),this.addproperty_button&&(this.addproperty_button.disabled=!0),this.hideEditJSON(),qr(Wr(o.prototype),"disable",this).call(this),this.editors&&Object.values(this.editors).forEach((function(e){e.isActive()&&e.disable(t),e.optInCheckbox.disabled=!0}))}},{key:"layoutEditors",value:function(){var t,e,n=this;if(this.row_container){var r;this.property_order=Object.keys(this.editors),this.property_order=this.property_order.sort((function(t,e){var r=n.editors[t].schema.propertyOrder,i=n.editors[e].schema.propertyOrder;return"number"!=typeof r&&(r=1e3),"number"!=typeof i&&(i=1e3),r-i}));var i,o="categories"===this.format,a=[],s=null,l=null;if("grid-strict"===this.format){var c=0;if(i=[],this.property_order.forEach((function(t){var e=n.editors[t];if(!e.property_removed){var r=e.options.hidden?0:e.options.grid_columns||e.getNumColumns(),o=e.options.hidden?0:e.options.grid_offset||0,s=!e.options.hidden&&(e.options.grid_break||!1),l={key:t,width:r,offset:o,height:e.options.hidden?0:e.container.offsetHeight};i.push(l),a[c]=i,s&&(c++,i=[])}})),this.layout===JSON.stringify(a))return!1;for(this.layout=JSON.stringify(a),r=document.createElement("div"),t=0;t<a.length;t++)for(i=this.theme.getGridRow(),r.appendChild(i),e=0;e<a[t].length;e++)s=a[t][e].key,(l=this.editors[s]).options.hidden?l.container.style.display="none":this.theme.setGridColumnSize(l.container,a[t][e].width,a[t][e].offset),i.appendChild(l.container)}else if("grid"===this.format){for(this.property_order.forEach((function(t){var e=n.editors[t];if(!e.property_removed){for(var r=!1,i=e.options.hidden?0:e.options.grid_columns||e.getNumColumns(),o=e.options.hidden?0:e.container.offsetHeight,s=0;s<a.length;s++)a[s].width+i<=12&&(!o||.5*a[s].minh<o&&2*a[s].maxh>o)&&(r=s);!1===r&&(a.push({width:0,minh:999999,maxh:0,editors:[]}),r=a.length-1),a[r].editors.push({key:t,width:i,height:o}),a[r].width+=i,a[r].minh=Math.min(a[r].minh,o),a[r].maxh=Math.max(a[r].maxh,o)}})),t=0;t<a.length;t++)if(a[t].width<12){var u=!1,h=0;for(e=0;e<a[t].editors.length;e++)(!1===u||a[t].editors[e].width>a[t].editors[u].width)&&(u=e),a[t].editors[e].width*=12/a[t].width,a[t].editors[e].width=Math.floor(a[t].editors[e].width),h+=a[t].editors[e].width;h<12&&(a[t].editors[u].width+=12-h),a[t].width=12}if(this.layout===JSON.stringify(a))return!1;for(this.layout=JSON.stringify(a),r=document.createElement("div"),t=0;t<a.length;t++)for(i=this.theme.getGridRow(),r.appendChild(i),e=0;e<a[t].editors.length;e++)s=a[t].editors[e].key,(l=this.editors[s]).options.hidden?l.container.style.display="none":this.theme.setGridColumnSize(l.container,a[t].editors[e].width),i.appendChild(l.container)}else{if(r=document.createElement("div"),o){var p=document.createElement("div"),d=this.theme.getTopTabHolder(this.schema.title),f=this.theme.getTopTabContentHolder(d);for(this.property_order.forEach((function(t){var e=n.editors[t];if(!e.property_removed){var r=n.theme.getTabContent(),i=e.schema&&("object"===e.schema.type||"array"===e.schema.type);r.isObjOrArray=i;var o=n.theme.getGridRow();e.tab||(void 0===n.basicPane?n.addRow(e,d,r):n.addRow(e,d,n.basicPane)),r.id=n.getValidId(e.tab_text.textContent),i?(r.appendChild(o),f.appendChild(r),n.theme.addTopTab(d,e.tab)):(p.appendChild(o),f.childElementCount>0?f.firstChild.isObjOrArray&&(r.appendChild(p),f.insertBefore(r,f.firstChild),n.theme.insertBasicTopTab(e.tab,d),e.basicPane=r):(r.appendChild(p),f.appendChild(r),n.theme.addTopTab(d,e.tab),e.basicPane=r)),e.options.hidden?e.container.style.display="none":n.theme.setGridColumnSize(e.container,12),o.appendChild(e.container),e.rowPane=r}}));this.tabPanesContainer.firstChild;)this.tabPanesContainer.removeChild(this.tabPanesContainer.firstChild);var m=this.tabs_holder.parentNode;m.removeChild(m.firstChild),m.appendChild(d),this.tabPanesContainer=f,this.tabs_holder=d;var b=this.theme.getFirstTab(this.tabs_holder);return void(b&&y(b,"click"))}this.property_order.forEach((function(t){var e=n.editors[t];e.property_removed||(i=n.theme.getGridRow(),r.appendChild(i),e.options.hidden?e.container.style.display="none":n.theme.setGridColumnSize(e.container,12),i.appendChild(e.container))}))}for(;this.row_container.firstChild;)this.row_container.removeChild(this.row_container.firstChild);this.row_container.appendChild(r)}}},{key:"getPropertySchema",value:function(t){var e=this,n=this.schema.properties[t]||{};n=f({},n);var r=!!this.schema.properties[t];return this.schema.patternProperties&&Object.keys(this.schema.patternProperties).forEach((function(i){new RegExp(i).test(t)&&(n.allOf=n.allOf||[],n.allOf.push(e.schema.patternProperties[i]),r=!0)})),!r&&this.schema.additionalProperties&&"object"===zr(this.schema.additionalProperties)&&(n=f({},this.schema.additionalProperties)),n}},{key:"preBuild",value:function(){var t=this;if(qr(Wr(o.prototype),"preBuild",this).call(this),this.editors={},this.cached_editors={},this.format=this.options.layout||this.options.object_layout||this.schema.format||this.jsoneditor.options.object_layout||"normal",this.schema.properties=this.schema.properties||{},this.minwidth=0,this.maxwidth=0,this.options.table_row)Object.entries(this.schema.properties).forEach((function(e){var n=Vr(e,2),r=n[0],i=n[1],o=t.jsoneditor.getEditorClass(i);t.editors[r]=t.jsoneditor.createEditor(o,{jsoneditor:t.jsoneditor,schema:i,path:"".concat(t.path,".").concat(r),parent:t,compact:!0,required:!0},t.currentDepth+1),t.editors[r].preBuild();var a=t.editors[r].options.hidden?0:t.editors[r].options.grid_columns||t.editors[r].getNumColumns();t.minwidth+=a,t.maxwidth+=a})),this.no_link_holder=!0;else{if(this.options.table)throw new Error("Not supported yet");this.schema.defaultProperties||(this.jsoneditor.options.display_required_only||this.options.display_required_only?this.schema.defaultProperties=Object.keys(this.schema.properties).filter((function(e){return t.isRequiredObject({key:e,schema:t.schema.properties[e]})})):this.schema.defaultProperties=Object.keys(this.schema.properties)),this.maxwidth+=1,Array.isArray(this.schema.defaultProperties)&&this.schema.defaultProperties.forEach((function(e){t.addObjectProperty(e,!0),t.editors[e]&&(t.minwidth=Math.max(t.minwidth,t.editors[e].options.grid_columns||t.editors[e].getNumColumns()),t.maxwidth+=t.editors[e].options.grid_columns||t.editors[e].getNumColumns())}))}this.property_order=Object.keys(this.editors),this.property_order=this.property_order.sort((function(e,n){var r=t.editors[e].schema.propertyOrder,i=t.editors[n].schema.propertyOrder;return"number"!=typeof r&&(r=1e3),"number"!=typeof i&&(i=1e3),r-i}))}},{key:"addTab",value:function(t){var e=this,n=this.rows[t].schema&&("object"===this.rows[t].schema.type||"array"===this.rows[t].schema.type);this.tabs_holder&&(this.rows[t].tab_text=document.createElement("span"),this.rows[t].tab_text.textContent=n?this.rows[t].getHeaderText():void 0===this.schema.basicCategoryTitle?"Basic":this.schema.basicCategoryTitle,this.rows[t].tab=this.theme.getTopTab(this.rows[t].tab_text,this.getValidId(this.rows[t].tab_text.textContent)),this.rows[t].tab.addEventListener("click",(function(n){e.active_tab=e.rows[t].tab,e.refreshTabs(),n.preventDefault(),n.stopPropagation()})))}},{key:"addRow",value:function(t,e,n){var r=this.rows.length,i="object"===t.schema.type||"array"===t.schema.type;this.rows[r]=t,this.rows[r].rowPane=n,i?(this.addTab(r),this.theme.addTopTab(e,this.rows[r].tab)):void 0===this.basicTab?(this.addTab(r),this.basicTab=r,this.basicPane=n,this.theme.addTopTab(e,this.rows[r].tab)):(this.rows[r].tab=this.rows[this.basicTab].tab,this.rows[r].tab_text=this.rows[this.basicTab].tab_text,this.rows[r].rowPane=this.rows[this.basicTab].rowPane)}},{key:"refreshTabs",value:function(t){var e=this,n=void 0!==this.basicTab,r=!1;this.rows.forEach((function(i){i.tab&&i.rowPane&&i.rowPane.parentNode&&(n&&i.tab===e.rows[e.basicTab].tab&&r||(t?i.tab_text.textContent=i.getHeaderText():(n&&i.tab===e.rows[e.basicTab].tab&&(r=!0),i.tab===e.active_tab?e.theme.markTabActive(i):e.theme.markTabInactive(i))))}))}},{key:"build",value:function(){var t=this,e="categories"===this.format;if(this.rows=[],this.active_tab=null,this.options.table_row)this.editor_holder=this.container,Object.entries(this.editors).forEach((function(e){var n=Vr(e,2),r=n[0],i=n[1],o=t.theme.getTableCell();t.editor_holder.appendChild(o),i.setContainer(o),i.build(),i.postBuild(),i.setOptInCheckbox(i.header),t.editors[r].options.hidden&&(o.style.display="none"),t.editors[r].options.input_width&&(o.style.width=t.editors[r].options.input_width)}));else{if(this.options.table)throw new Error("Not supported yet");this.header="",this.options.compact||(this.header=document.createElement("label"),this.header.textContent=this.getTitle()),this.title=this.theme.getHeader(this.header),this.title.classList.add("je-object__title"),this.controls=this.theme.getButtonHolder(),this.controls.classList.add("je-object__controls"),this.container.appendChild(this.title),this.container.appendChild(this.controls),this.container.classList.add("je-object__container"),this.editjson_holder=this.theme.getModal(),this.editjson_textarea=this.theme.getTextareaInput(),this.editjson_textarea.classList.add("je-edit-json--textarea"),this.editjson_save=this.getButton("button_save","save","button_save"),this.editjson_save.classList.add("json-editor-btntype-save"),this.editjson_save.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.saveJSON()})),this.editjson_copy=this.getButton("button_copy","copy","button_copy"),this.editjson_copy.classList.add("json-editor-btntype-copy"),this.editjson_copy.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.copyJSON()})),this.editjson_cancel=this.getButton("button_cancel","cancel","button_cancel"),this.editjson_cancel.classList.add("json-editor-btntype-cancel"),this.editjson_cancel.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.hideEditJSON()})),this.editjson_holder.appendChild(this.editjson_textarea),this.editjson_holder.appendChild(this.editjson_save),this.editjson_holder.appendChild(this.editjson_copy),this.editjson_holder.appendChild(this.editjson_cancel),this.addproperty_holder=this.theme.getModal(),this.addproperty_list=document.createElement("div"),this.addproperty_list.classList.add("property-selector"),this.addproperty_add=this.getButton("button_add","add","button_add"),this.addproperty_add.classList.add("json-editor-btntype-add"),this.addproperty_input=this.theme.getFormInputField("text"),this.addproperty_input.setAttribute("placeholder","Property name..."),this.addproperty_input.classList.add("property-selector-input"),this.addproperty_add.addEventListener("click",(function(e){if(e.preventDefault(),e.stopPropagation(),t.addproperty_input.value){if(t.editors[t.addproperty_input.value])return void window.alert("there is already a property with that name");t.addObjectProperty(t.addproperty_input.value),t.editors[t.addproperty_input.value]&&t.editors[t.addproperty_input.value].disable(),t.onChange(!0)}})),this.addproperty_input.addEventListener("input",(function(t){t.target.previousSibling.childNodes.forEach((function(e){e.innerText.includes(t.target.value)?e.style.display="":e.style.display="none"}))})),this.addproperty_holder.appendChild(this.addproperty_list),this.addproperty_holder.appendChild(this.addproperty_input),this.addproperty_holder.appendChild(this.addproperty_add);var n=document.createElement("div");n.style.clear="both",this.addproperty_holder.appendChild(n),document.addEventListener("click",this.onOutsideModalClick),this.schema.description&&(this.description=this.theme.getDescription(this.schema.description),this.container.appendChild(this.description)),this.error_holder=document.createElement("div"),this.container.appendChild(this.error_holder),this.editor_holder=this.theme.getIndentedPanel(),this.container.appendChild(this.editor_holder),this.row_container=this.theme.getGridContainer(),e?(this.tabs_holder=this.theme.getTopTabHolder(this.getValidId(this.schema.title)),this.tabPanesContainer=this.theme.getTopTabContentHolder(this.tabs_holder),this.editor_holder.appendChild(this.tabs_holder)):(this.tabs_holder=this.theme.getTabHolder(this.getValidId(this.schema.title)),this.tabPanesContainer=this.theme.getTabContentHolder(this.tabs_holder),this.editor_holder.appendChild(this.row_container)),Object.values(this.editors).forEach((function(n){var r=t.theme.getTabContent(),i=t.theme.getGridColumn(),o=!(!n.schema||"object"!==n.schema.type&&"array"!==n.schema.type);if(r.isObjOrArray=o,e){if(o){var a=t.theme.getGridContainer();a.appendChild(i),r.appendChild(a),t.tabPanesContainer.appendChild(r),t.row_container=a}else void 0===t.row_container_basic&&(t.row_container_basic=t.theme.getGridContainer(),r.appendChild(t.row_container_basic),0===t.tabPanesContainer.childElementCount?t.tabPanesContainer.appendChild(r):t.tabPanesContainer.insertBefore(r,t.tabPanesContainer.childNodes[1])),t.row_container_basic.appendChild(i);t.addRow(n,t.tabs_holder,r),r.id=t.getValidId(n.schema.title)}else t.row_container.appendChild(i);n.setContainer(i),n.build(),n.postBuild(),n.setOptInCheckbox(n.header)})),this.rows[0]&&y(this.rows[0].tab,"click"),this.collapsed=!1,this.collapse_control=this.getButton("","collapse","button_collapse"),this.collapse_control.classList.add("json-editor-btntype-toggle"),this.title.insertBefore(this.collapse_control,this.title.childNodes[0]),this.collapse_control.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.collapsed?(t.editor_holder.style.display="",t.collapsed=!1,t.setButtonText(t.collapse_control,"","collapse","button_collapse")):(t.editor_holder.style.display="none",t.collapsed=!0,t.setButtonText(t.collapse_control,"","expand","button_expand"))})),this.options.collapsed&&y(this.collapse_control,"click"),this.schema.options&&void 0!==this.schema.options.disable_collapse?this.schema.options.disable_collapse&&(this.collapse_control.style.display="none"):this.jsoneditor.options.disable_collapse&&(this.collapse_control.style.display="none"),this.editjson_control=this.getButton("JSON","edit","button_edit_json"),this.editjson_control.classList.add("json-editor-btntype-editjson"),this.editjson_control.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.toggleEditJSON()})),this.controls.appendChild(this.editjson_control),this.controls.insertBefore(this.editjson_holder,this.controls.childNodes[0]),this.schema.options&&void 0!==this.schema.options.disable_edit_json?this.schema.options.disable_edit_json&&(this.editjson_control.style.display="none"):this.jsoneditor.options.disable_edit_json&&(this.editjson_control.style.display="none"),this.addproperty_button=this.getButton("properties","edit_properties","button_object_properties"),this.addproperty_button.classList.add("json-editor-btntype-properties"),this.addproperty_button.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.toggleAddProperty()})),this.controls.appendChild(this.addproperty_button),this.controls.insertBefore(this.addproperty_holder,this.controls.childNodes[1]),this.refreshAddProperties(),this.deactivateNonRequiredProperties()}this.options.table_row?(this.editor_holder=this.container,this.property_order.forEach((function(e){t.editor_holder.appendChild(t.editors[e].container)}))):(this.layoutEditors(),this.layoutEditors())}},{key:"deactivateNonRequiredProperties",value:function(){var t=this;(this.jsoneditor.options.show_opt_in||this.options.show_opt_in)&&Object.entries(this.editors).forEach((function(e){var n=Vr(e,2),r=n[0],i=n[1];t.isRequiredObject(i)||t.editors[r].deactivate()}))}},{key:"showEditJSON",value:function(){this.editjson_holder&&(this.hideAddProperty(),this.editjson_holder.style.left="".concat(this.editjson_control.offsetLeft,"px"),this.editjson_holder.style.top="".concat(this.editjson_control.offsetTop+this.editjson_control.offsetHeight,"px"),this.editjson_textarea.value=JSON.stringify(this.getValue(),null,2),this.disable(),this.editjson_holder.style.display="",this.editjson_control.disabled=!1,this.editing_json=!0)}},{key:"hideEditJSON",value:function(){this.editjson_holder&&this.editing_json&&(this.editjson_holder.style.display="none",this.enable(),this.editing_json=!1)}},{key:"copyJSON",value:function(){if(this.editjson_holder){var t=document.createElement("textarea");t.value=this.editjson_textarea.value,t.setAttribute("readonly",""),t.style.position="absolute",t.style.left="-9999px",document.body.appendChild(t),t.select(),document.execCommand("copy"),document.body.removeChild(t)}}},{key:"saveJSON",value:function(){if(this.editjson_holder)try{var t=JSON.parse(this.editjson_textarea.value);this.setValue(t),this.hideEditJSON(),this.onChange(!0)}catch(t){throw window.alert("invalid JSON"),t}}},{key:"toggleEditJSON",value:function(){this.editing_json?this.hideEditJSON():this.showEditJSON()}},{key:"insertPropertyControlUsingPropertyOrder",value:function(t,e,n){var r;this.schema.properties[t]&&(r=this.schema.properties[t].propertyOrder),"number"!=typeof r&&(r=1e3),e.propertyOrder=r;for(var i=0;i<n.childNodes.length;i++){var o=n.childNodes[i];if(e.propertyOrder<o.propertyOrder){this.addproperty_list.insertBefore(e,o),e=null;break}}e&&this.addproperty_list.appendChild(e)}},{key:"addPropertyCheckbox",value:function(t){var e,n=this,r=this.theme.getCheckbox();r.style.width="auto",e=this.schema.properties[t]&&this.schema.properties[t].title?this.schema.properties[t].title:t;var i=this.theme.getCheckboxLabel(e),o=this.theme.getFormControl(i,r);return o.style.paddingBottom=o.style.marginBottom=o.style.paddingTop=o.style.marginTop=0,o.style.height="auto",this.insertPropertyControlUsingPropertyOrder(t,o,this.addproperty_list),r.checked=t in this.editors,r.addEventListener("change",(function(){r.checked?n.addObjectProperty(t):n.removeObjectProperty(t),n.onChange(!0)})),this.addproperty_checkboxes[t]=r,r}},{key:"showAddProperty",value:function(){this.addproperty_holder&&(this.hideEditJSON(),this.addproperty_holder.style.left="".concat(this.addproperty_button.offsetLeft,"px"),this.addproperty_holder.style.top="".concat(this.addproperty_button.offsetTop+this.addproperty_button.offsetHeight,"px"),this.disable(),this.adding_property=!0,this.addproperty_button.disabled=!1,this.addproperty_holder.style.display="",this.refreshAddProperties())}},{key:"hideAddProperty",value:function(){this.addproperty_holder&&this.adding_property&&(this.addproperty_holder.style.display="none",this.enable(),this.adding_property=!1)}},{key:"toggleAddProperty",value:function(){this.adding_property?this.hideAddProperty():this.showAddProperty()}},{key:"removeObjectProperty",value:function(t){this.editors[t]&&(this.editors[t].unregister(),delete this.editors[t],this.refreshValue(),this.layoutEditors())}},{key:"getSchemaOnMaxDepth",value:function(t){return Object.keys(t).reduce((function(e,n){switch(n){case"$ref":return e;case"properties":case"items":return Br(Br({},e),{},Fr({},n,{}));case"additionalProperties":case"propertyNames":return Br(Br({},e),{},Fr({},n,!0));default:return Br(Br({},e),{},Fr({},n,t[n]))}}),{})}},{key:"addObjectProperty",value:function(t,e){if(!this.editors[t]){if(this.cached_editors[t]){if(this.editors[t]=this.cached_editors[t],e)return;this.editors[t].register()}else{if(!(this.canHaveAdditionalProperties()||this.schema.properties&&this.schema.properties[t]))return;var n=this.getPropertySchema(t);"number"!=typeof n.propertyOrder&&(n.propertyOrder=Object.keys(this.editors).length+1e3);var r=this.jsoneditor.getEditorClass(n),i=this.jsoneditor.options.max_depth;if(this.editors[t]=this.jsoneditor.createEditor(r,{jsoneditor:this.jsoneditor,schema:i&&this.currentDepth>=i?this.getSchemaOnMaxDepth(n):n,path:"".concat(this.path,".").concat(t),parent:this},this.currentDepth+1),this.editors[t].preBuild(),!e){var o=this.theme.getChildEditorHolder();this.editor_holder.appendChild(o),this.editors[t].setContainer(o),this.editors[t].build(),this.editors[t].postBuild(),this.editors[t].setOptInCheckbox(r.header),this.editors[t].activate()}this.cached_editors[t]=this.editors[t]}e||(this.refreshValue(),this.layoutEditors())}}},{key:"onOutsideModalClick",value:function(t){this.addproperty_holder&&!this.addproperty_holder.contains(t.path[0]||t.composedPath()[0])&&this.adding_property&&(t.preventDefault(),t.stopPropagation(),this.toggleAddProperty())}},{key:"onChildEditorChange",value:function(t){this.refreshValue(),qr(Wr(o.prototype),"onChildEditorChange",this).call(this,t)}},{key:"canHaveAdditionalProperties",value:function(){return"boolean"==typeof this.schema.additionalProperties?this.schema.additionalProperties:!this.jsoneditor.options.no_additional_properties}},{key:"destroy",value:function(){Object.values(this.cached_editors).forEach((function(t){return t.destroy()})),this.editor_holder&&(this.editor_holder.innerHTML=""),this.title&&this.title.parentNode&&this.title.parentNode.removeChild(this.title),this.error_holder&&this.error_holder.parentNode&&this.error_holder.parentNode.removeChild(this.error_holder),this.editors=null,this.cached_editors=null,this.editor_holder&&this.editor_holder.parentNode&&this.editor_holder.parentNode.removeChild(this.editor_holder),this.editor_holder=null,document.removeEventListener("click",this.onOutsideModalClick),qr(Wr(o.prototype),"destroy",this).call(this)}},{key:"getValue",value:function(){if(this.dependenciesFulfilled){var t=qr(Wr(o.prototype),"getValue",this).call(this);return t&&(this.jsoneditor.options.remove_empty_properties||this.options.remove_empty_properties)&&Object.keys(t).forEach((function(e){var n;(void 0===(n=t[e])||""===n||n===Object(n)&&0===Object.keys(n).length&&n.constructor===Object)&&delete t[e]})),t}}},{key:"refreshValue",value:function(){var t=this;this.value={},Object.keys(this.editors).forEach((function(e){t.editors[e].isActive()&&(t.value[e]=t.editors[e].getValue())})),this.adding_property&&this.refreshAddProperties()}},{key:"refreshAddProperties",value:function(){var t=this;if(this.options.disable_properties||!1!==this.options.disable_properties&&this.jsoneditor.options.disable_properties)this.addproperty_button.style.display="none";else{var e,n=0,r=!1;Object.keys(this.editors).forEach((function(t){return n++})),e=this.canHaveAdditionalProperties()&&!(void 0!==this.schema.maxProperties&&n>=this.schema.maxProperties),this.addproperty_checkboxes&&(this.addproperty_list.innerHTML=""),this.addproperty_checkboxes={},Object.keys(this.cached_editors).forEach((function(i){t.addPropertyCheckbox(i),t.isRequiredObject(t.cached_editors[i])&&i in t.editors&&(t.addproperty_checkboxes[i].disabled=!0),void 0!==t.schema.minProperties&&n<=t.schema.minProperties?(t.addproperty_checkboxes[i].disabled=t.addproperty_checkboxes[i].checked,t.addproperty_checkboxes[i].checked||(r=!0)):i in t.editors?r=!0:e||b(t.schema.properties,i)?(t.addproperty_checkboxes[i].disabled=!1,r=!0):t.addproperty_checkboxes[i].disabled=!0})),this.canHaveAdditionalProperties()&&(r=!0),Object.keys(this.schema.properties).forEach((function(e){t.cached_editors[e]||(r=!0,t.addPropertyCheckbox(e))})),r?this.canHaveAdditionalProperties()?this.addproperty_add.disabled=!e:(this.addproperty_add.style.display="none",this.addproperty_input.style.display="none"):(this.hideAddProperty(),this.addproperty_button.style.display="none")}}},{key:"isRequiredObject",value:function(t){if(t)return"boolean"==typeof t.schema.required?t.schema.required:Array.isArray(this.schema.required)?this.schema.required.includes(t.key):!!this.jsoneditor.options.required_by_default}},{key:"setValue",value:function(t,e){var n=this;("object"!==zr(t=t||{})||Array.isArray(t))&&(t={}),Object.entries(this.cached_editors).forEach((function(r){var i=Vr(r,2),o=i[0],a=i[1];void 0!==t[o]?(n.addObjectProperty(o),a.setValue(t[o],e)):e||n.isRequiredObject(a)?a.setValue(a.getDefault(),e):n.removeObjectProperty(o)})),Object.entries(t).forEach((function(t){var r=Vr(t,2),i=r[0],o=r[1];n.cached_editors[i]||(n.addObjectProperty(i),n.editors[i]&&n.editors[i].setValue(o,e,!!n.editors[i].template))})),this.refreshValue(),this.layoutEditors(),this.onChange()}},{key:"showValidationErrors",value:function(t){var e=this,n=[],r=[];t.forEach((function(t){t.path===e.path?n.push(t):r.push(t)})),this.error_holder&&(n.length?(this.error_holder.innerHTML="",this.error_holder.style.display="",n.forEach((function(t){t.errorcount&&t.errorcount>1&&(t.message+=" (".concat(t.errorcount," errors)")),e.error_holder.appendChild(e.theme.getErrorMessage(t.message))}))):this.error_holder.style.display="none"),this.options.table_row&&(n.length?this.theme.addTableRowError(this.container):this.theme.removeTableRowError(this.container)),Object.values(this.editors).forEach((function(t){t.showValidationErrors(r)}))}}])&&Mr(e.prototype,n),r&&Mr(e,r),o}(N);function Zr(t){return(Zr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Qr(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Yr(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Xr(t,e,n){return(Xr="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=ni(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Kr(t,e){return(Kr=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ti(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ni(t);if(e){var i=ni(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return ei(this,n)}}function ei(t,e){return!e||"object"!==Zr(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ni(t){return(ni=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}Jr.rules={".je-object__title":"display:inline-block",".je-object__controls":"margin:0%200%200%2010px",".je-object__container":"position:relative",".je-object__property-checkbox":"margin:0;height:auto",".property-selector":"width:295px;max-height:160px;padding:5px%200;overflow-y:auto;overflow-x:hidden;padding-left:5px",".property-selector-input":"width:220px;margin-bottom:0;display:inline-block",".json-editor-btntype-toggle":"margin:0%2010px%200%200",".je-edit-json--textarea":"height:170px%20!important;width:300px%20!important;display:block"};var ri=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Kr(t,e)}(o,t);var e,n,r,i=ti(o);function o(){return Qr(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"preBuild",value:function(){this.schema.required=!0,Xr(ni(o.prototype),"preBuild",this).call(this)}},{key:"build",value:function(){var t=this;this.label="",this.options.compact||(this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired())),this.schema.description&&(this.description=this.theme.getFormInputDescription(this.schema.description)),this.options.infoText&&(this.infoButton=this.theme.getInfoButton(this.options.infoText)),this.options.compact&&this.container.classList.add("compact"),this.radioContainer=document.createElement("div"),this.radioGroup=[];for(var e=function(e){t.setValue(e.currentTarget.value),t.onChange(!0)},n=0;n<this.enum_values.length;n++){this.input=this.theme.getFormRadio({name:this.formname,id:"".concat(this.formname,"[").concat(n,"]"),value:this.enum_values[n]}),this.setInputAttributes(["id","value","name"]),this.input.addEventListener("change",e,!1),this.radioGroup.push(this.input);var r=this.theme.getFormRadioLabel(this.enum_display[n]);r.htmlFor=this.input.id;var i=this.theme.getFormRadioControl(r,this.input,!("horizontal"!==this.options.layout&&!this.options.compact));this.radioContainer.appendChild(i)}(this.schema.readOnly||this.schema.readonly)&&this.disable(!0);var o=this.theme.getContainer();o.appendChild(this.radioContainer),o.dataset.containerFor="radio",this.input=o,this.control=this.theme.getFormControl(this.label,o,this.description,this.infoButton),this.container.appendChild(this.control),window.requestAnimationFrame((function(){t.input.parentNode&&t.afterInputReady()}))}},{key:"enable",value:function(){if(!this.always_disabled){for(var t=0;t<this.radioGroup.length;t++)this.radioGroup[t].disabled=!1;this.radioContainer.classList.remove("readonly"),Xr(ni(o.prototype),"enable",this).call(this)}}},{key:"disable",value:function(t){t&&(this.always_disabled=!0);for(var e=0;e<this.radioGroup.length;e++)this.radioGroup[e].disabled=!0;this.radioContainer.classList.add("readonly"),Xr(ni(o.prototype),"disable",this).call(this)}},{key:"destroy",value:function(){this.radioContainer.parentNode&&this.radioContainer.parentNode.parentNode&&this.radioContainer.parentNode.parentNode.removeChild(this.radioContainer.parentNode),this.label&&this.label.parentNode&&this.label.parentNode.removeChild(this.label),this.description&&this.description.parentNode&&this.description.parentNode.removeChild(this.description),Xr(ni(o.prototype),"destroy",this).call(this)}},{key:"getNumColumns",value:function(){return 2}},{key:"setValue",value:function(t){for(var e=0;e<this.radioGroup.length;e++)if(this.radioGroup[e].value===t){this.radioGroup[e].checked=!0,this.value=t,this.onChange();break}}}])&&Yr(e.prototype,n),r&&Yr(e,r),o}(De);function ii(t){return(ii="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function oi(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function ai(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function si(t,e,n){return(si="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=hi(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function li(t,e){return(li=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function ci(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=hi(t);if(e){var i=hi(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return ui(this,n)}}function ui(t,e){return!e||"object"!==ii(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function hi(t){return(hi=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var pi=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&li(t,e)}(o,t);var e,n,r,i=ci(o);function o(){return oi(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e,n){var r=si(hi(o.prototype),"setValue",this).call(this,t,e,n);void 0!==r&&r.changed&&this.sceditor_instance&&this.sceditor_instance.val(r.value)}},{key:"build",value:function(){this.options.format="textarea",si(hi(o.prototype),"build",this).call(this),this.input_type=this.schema.format,this.input.setAttribute("data-schemaformat",this.input_type)}},{key:"afterInputReady",value:function(){var t=this;if(window.sceditor){var e=this.expandCallbacks("sceditor",f({},{format:this.input_type,emoticonsEnabled:!1,width:"100%",height:300,readOnly:this.schema.readOnly||this.schema.readonly||this.schema.template},this.defaults.options.sceditor||{},this.options.sceditor||{},{element:this.input})),n=window.sceditor.instance(this.input);void 0===n&&window.sceditor.create(this.input,e),this.sceditor_instance=n||window.sceditor.instance(this.input),this.sceditor_instance.blur((function(){t.value=t.sceditor_instance.val(),t.sceditor_instance.updateOriginal(),t.is_dirty=!0,t.onChange(!0)})),this.theme.afterInputReady(this.input)}else si(hi(o.prototype),"afterInputReady",this).call(this)}},{key:"getNumColumns",value:function(){return 6}},{key:"enable",value:function(){!this.always_disabled&&this.sceditor_instance&&this.sceditor_instance.readOnly(!1),si(hi(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.sceditor_instance&&this.sceditor_instance.readOnly(!0),si(hi(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.sceditor_instance&&(this.sceditor_instance.destroy(),this.sceditor_instance=null),si(hi(o.prototype),"destroy",this).call(this)}}])&&ai(e.prototype,n),r&&ai(e,r),o}(G);function di(t){return(di="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function fi(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function yi(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function mi(t,e,n){return(mi="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_i(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function bi(t,e){return(bi=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function vi(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=_i(t);if(e){var i=_i(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return gi(this,n)}}function gi(t,e){return!e||"object"!==di(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function _i(t){return(_i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var wi=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&bi(t,e)}(o,t);var e,n,r,i=vi(o);function o(){return fi(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e){if(this.select2_instance){e?this.is_dirty=!1:"change"===this.jsoneditor.options.show_errors&&(this.is_dirty=!0);var n=this.updateValue(t);this.input.value=n,this.select2v4?this.select2_instance.val(n).trigger("change"):this.select2_instance.select2("val",n),this.onChange(!0)}else mi(_i(o.prototype),"setValue",this).call(this,t,e)}},{key:"afterInputReady",value:function(){var t=this;if(window.jQuery&&window.jQuery.fn&&window.jQuery.fn.select2&&!this.select2_instance){var e=this.expandCallbacks("select2",f({},this.defaults.options.select2||{},this.options.select2||{}));this.newEnumAllowed=e.tags=!!e.tags&&"string"===this.schema.type,this.select2_instance=window.jQuery(this.input).select2(e),this.select2v4=b(this.select2_instance.select2,"amd"),this.selectChangeHandler=function(){var e=t.select2v4?t.select2_instance.val():t.select2_instance.select2("val");t.updateValue(e),t.onChange(!0)},this.select2_instance.on("change",this.selectChangeHandler),this.select2_instance.on("select2-blur",this.selectChangeHandler)}mi(_i(o.prototype),"afterInputReady",this).call(this)}},{key:"updateValue",value:function(t){var e=this.enum_values[0];return t=this.typecast(t||""),this.enum_values.includes(t)?e=t:this.newEnumAllowed&&(e=this.addNewOption(t)?t:e),this.value=e,e}},{key:"addNewOption",value:function(t){var e,n=this.typecast(t),r=!1;return this.enum_values.includes(n)||""===n||(this.enum_options.push("".concat(n)),this.enum_display.push("".concat(n)),this.enum_values.push(n),this.schema.enum.push(n),(e=this.input.querySelector('option[value="'.concat(n,'"]')))?e.removeAttribute("data-select2-tag"):this.input.appendChild(new Option(n,n,!1,!1)).trigger("change"),r=!0),r}},{key:"enable",value:function(){this.always_disabled||this.select2_instance&&(this.select2v4?this.select2_instance.prop("disabled",!1):this.select2_instance.select2("enable",!0)),mi(_i(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.select2_instance&&(this.select2v4?this.select2_instance.prop("disabled",!0):this.select2_instance.select2("enable",!1)),mi(_i(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.select2_instance&&(this.select2_instance.select2("destroy"),this.select2_instance=null),mi(_i(o.prototype),"destroy",this).call(this)}}])&&yi(e.prototype,n),r&&yi(e,r),o}(De);function ki(t){return(ki="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function xi(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function ji(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Oi(t,e,n){return(Oi="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Ri(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Ci(t,e){return(Ci=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ei(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ri(t);if(e){var i=Ri(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Si(this,n)}}function Si(t,e){return!e||"object"!==ki(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ri(t){return(Ri=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Pi=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ci(t,e)}(o,t);var e,n,r,i=Ei(o);function o(){return xi(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e){if(this.selectize_instance){e?this.is_dirty=!1:"change"===this.jsoneditor.options.show_errors&&(this.is_dirty=!0);var n=this.updateValue(t);this.input.value=n,this.selectize_instance.clear(!0),this.selectize_instance.setValue(n),this.onChange(!0)}else Oi(Ri(o.prototype),"setValue",this).call(this,t,e)}},{key:"afterInputReady",value:function(){var t=this;if(window.jQuery&&window.jQuery.fn&&window.jQuery.fn.selectize&&!this.selectize_instance){var e=this.expandCallbacks("selectize",f({},this.defaults.options.selectize||{},this.options.selectize||{}));this.newEnumAllowed=e.create=!!e.create&&"string"===this.schema.type,this.selectize_instance=window.jQuery(this.input).selectize(e)[0].selectize,this.control.removeEventListener("change",this.multiselectChangeHandler),this.multiselectChangeHandler=function(e){t.updateValue(e),t.onChange(!0)},this.selectize_instance.on("change",this.multiselectChangeHandler)}Oi(Ri(o.prototype),"afterInputReady",this).call(this)}},{key:"updateValue",value:function(t){var e=this.enum_values[0];return t=this.typecast(t||""),this.enum_values.includes(t)?e=t:this.newEnumAllowed&&(e=this.addNewOption(t)?t:e),this.value=e,e}},{key:"addNewOption",value:function(t){var e=this.typecast(t),n=!1;return this.enum_values.includes(e)||""===e||(this.enum_options.push("".concat(e)),this.enum_display.push("".concat(e)),this.enum_values.push(e),this.schema.enum.push(e),this.selectize_instance.addItem(e),this.selectize_instance.refreshOptions(!1),n=!0),n}},{key:"onWatchedFieldChange",value:function(){var t=this;Oi(Ri(o.prototype),"onWatchedFieldChange",this).call(this),this.selectize_instance&&(this.selectize_instance.clear(!0),this.selectize_instance.clearOptions(!0),this.enum_options.forEach((function(e,n){t.selectize_instance.addOption({value:e,text:t.enum_display[n]})})),this.selectize_instance.addItem("".concat(this.value),!0))}},{key:"enable",value:function(){!this.always_disabled&&this.selectize_instance&&this.selectize_instance.unlock(),Oi(Ri(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.selectize_instance&&this.selectize_instance.lock(),Oi(Ri(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.selectize_instance&&(this.selectize_instance.destroy(),this.selectize_instance=null),Oi(Ri(o.prototype),"destroy",this).call(this)}}])&&ji(e.prototype,n),r&&ji(e,r),o}(De);function Li(t){return(Li="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ti(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ai(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ii(t,e){return(Ii=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Di(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Bi(t);if(e){var i=Bi(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ni(this,n)}}function Ni(t,e){return!e||"object"!==Li(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Bi(t){return(Bi=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Fi=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ii(t,e)}(o,t);var e,n,r,i=Di(o);function o(){return Ti(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"build",value:function(){var t=this;this.options.compact||(this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired())),this.schema.description&&(this.description=this.theme.getFormInputDescription(this.schema.description));var e=this.formname.replace(/\W/g,"");if("function"==typeof SignaturePad){this.input=this.theme.getFormInputField("hidden"),this.container.appendChild(this.input);var n=document.createElement("div");n.classList.add("signature-container");var r=document.createElement("canvas");r.setAttribute("name",e),r.classList.add("signature"),n.appendChild(r),this.signaturePad=new window.SignaturePad(r,{onEnd:function(){this.signaturePad.isEmpty()?this.input.value="":this.input.value=this.signaturePad.toDataURL(),this.is_dirty=!0,this.refreshValue(),this.watch_listener(),this.jsoneditor.notifyWatchers(this.path),this.parent?this.parent.onChildEditorChange(this):this.jsoneditor.onChange()}});var i=document.createElement("div"),o=document.createElement("button");o.classList.add("tiny","button"),o.innerHTML="Clear signature",i.appendChild(o),n.appendChild(i),this.options.compact&&this.container.setAttribute("class","".concat(this.container.getAttribute("class")," compact")),(this.schema.readOnly||this.schema.readonly)&&(this.disable(!0),Array.from(this.inputs).forEach((function(t){r.setAttribute("readOnly","readOnly"),t.disabled=!0}))),o.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.signaturePad.clear(),t.signaturePad.strokeEnd()})),this.control=this.theme.getFormControl(this.label,n,this.description),this.container.appendChild(this.control),this.refreshValue(),r.width=n.offsetWidth,this.options&&this.options.canvas_height?r.height=this.options.canvas_height:r.height="300"}else{var a=document.createElement("p");a.innerHTML="Signature pad is not available, please include SignaturePad from https://github.com/szimek/signature_pad",this.container.appendChild(a)}}},{key:"setValue",value:function(t){if("function"==typeof SignaturePad){var e=this.sanitize(t);if(this.value===e)return;return this.value=e,this.input.value=this.value,this.signaturePad.clear(),t&&""!==t&&this.signaturePad.fromDataURL(t),this.watch_listener(),this.jsoneditor.notifyWatchers(this.path),!1}}},{key:"destroy",value:function(){this.signaturePad.off(),delete this.signaturePad}}])&&Ai(e.prototype,n),r&&Ai(e,r),o}(G);n(160);function Vi(t){return(Vi="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Hi(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function zi(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Mi(t,e,n){return(Mi="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=$i(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function qi(t,e){return(qi=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ui(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=$i(t);if(e){var i=$i(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Gi(this,n)}}function Gi(t,e){return!e||"object"!==Vi(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function $i(t){return($i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Wi=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&qi(t,e)}(o,t);var e,n,r,i=Ui(o);function o(){return Hi(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"setValue",value:function(t,e,n){var r=Mi($i(o.prototype),"setValue",this).call(this,t,e,n);void 0!==r&&r.changed&&this.simplemde_instance&&this.simplemde_instance.value(r.value)}},{key:"build",value:function(){this.options.format="textarea",Mi($i(o.prototype),"build",this).call(this),this.input_type=this.schema.format,this.input.setAttribute("data-schemaformat",this.input_type)}},{key:"afterInputReady",value:function(){var t,e=this;window.SimpleMDE?(t=this.expandCallbacks("simplemde",f({},{height:300},this.defaults.options.simplemde||{},this.options.simplemde||{},{element:this.input})),this.simplemde_instance=new window.SimpleMDE(t),(this.schema.readOnly||this.schema.readonly||this.schema.template)&&(this.simplemde_instance.codemirror.options.readOnly=!0),this.simplemde_instance.codemirror.on("change",(function(){e.value=e.simplemde_instance.value(),e.is_dirty=!0,e.onChange(!0)})),t.autorefresh&&this.startListening(this.simplemde_instance.codemirror,this.simplemde_instance.codemirror.state.autoRefresh={delay:250}),this.theme.afterInputReady(this.input)):Mi($i(o.prototype),"afterInputReady",this).call(this)}},{key:"getNumColumns",value:function(){return 6}},{key:"enable",value:function(){!this.always_disabled&&this.simplemde_instance&&(this.simplemde_instance.codemirror.options.readOnly=!1),Mi($i(o.prototype),"enable",this).call(this)}},{key:"disable",value:function(t){this.simplemde_instance&&(this.simplemde_instance.codemirror.options.readOnly=!0),Mi($i(o.prototype),"disable",this).call(this,t)}},{key:"destroy",value:function(){this.simplemde_instance&&(this.simplemde_instance.toTextArea(),this.simplemde_instance=null),Mi($i(o.prototype),"destroy",this).call(this)}},{key:"startListening",value:function(t,e){function n(){t.display.wrapper.offsetHeight?(this.stopListening(t,e),t.display.lastWrapHeight!==t.display.wrapper.clientHeight&&t.refresh()):e.timeout=window.setTimeout(n,e.delay)}e.timeout=window.setTimeout(n,e.delay),e.hurry=function(){window.clearTimeout(e.timeout),e.timeout=window.setTimeout(n,50)},t.on(window,"mouseup",e.hurry),t.on(window,"keyup",e.hurry)}},{key:"stopListening",value:function(t,e){window.clearTimeout(e.timeout),t.off(window,"mouseup",e.hurry),t.off(window,"keyup",e.hurry)}}])&&zi(e.prototype,n),r&&zi(e,r),o}(G);function Ji(t){return(Ji="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Zi(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Qi(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Yi(t,e,n){return(Yi="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=eo(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Xi(t,e){return(Xi=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ki(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=eo(t);if(e){var i=eo(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return to(this,n)}}function to(t,e){return!e||"object"!==Ji(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function eo(t){return(eo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var no=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Xi(t,e)}(o,t);var e,n,r,i=Ki(o);function o(){return Zi(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"build",value:function(){var t=this;if(this.options.compact||(this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired())),this.schema.description&&(this.description=this.theme.getFormInputDescription(this.schema.description)),this.options.infoText&&(this.infoButton=this.theme.getInfoButton(this.options.infoText)),this.options.compact&&this.container.classList.add("compact"),this.ratingContainer=document.createElement("div"),this.ratingContainer.classList.add("starrating"),void 0===this.schema.enum){var e=this.schema.maximum?this.schema.maximum:5;this.schema.exclusiveMaximum&&e--,this.enum_values=[];for(var n=0;n<e;n++)this.enum_values.push(n+1)}else this.enum_values=this.schema.enum;this.radioGroup=[];for(var r=function(e){e.preventDefault(),e.stopPropagation(),t.setValue(e.currentTarget.value),t.onChange(!0)},i=this.enum_values.length-1;i>-1;i--){var o=this.formname+(i+1),a=this.theme.getFormInputField("radio");a.name="".concat(this.formname,"[starrating]"),a.value=this.enum_values[i],a.id=o,a.addEventListener("change",r,!1),this.radioGroup.push(a);var s=document.createElement("label");s.htmlFor=o,s.title=this.enum_values[i],this.options.displayValue&&s.classList.add("starrating-display-enabled"),this.ratingContainer.appendChild(a),this.ratingContainer.appendChild(s)}this.options.displayValue&&(this.displayRating=document.createElement("div"),this.displayRating.classList.add("starrating-display"),this.displayRating.innerText=this.enum_values[0],this.ratingContainer.appendChild(this.displayRating)),(this.schema.readOnly||this.schema.readonly)&&this.disable(!0);var l=this.theme.getContainer();l.appendChild(this.ratingContainer),this.input=l,this.control=this.theme.getFormControl(this.label,l,this.description,this.infoButton),this.container.appendChild(this.control),this.refreshValue()}},{key:"enable",value:function(){if(!this.always_disabled){for(var t=0;t<this.radioGroup.length;t++)this.radioGroup[t].disabled=!1;this.ratingContainer.classList.remove("readonly"),this.disabled=!1}}},{key:"disable",value:function(t){t&&(this.always_disabled=!0);for(var e=0;e<this.radioGroup.length;e++)this.radioGroup[e].disabled=!0;this.ratingContainer.classList.add("readonly"),this.disabled=!0}},{key:"destroy",value:function(){this.ratingContainer.parentNode&&this.ratingContainer.parentNode.parentNode&&this.ratingContainer.parentNode.parentNode.removeChild(this.ratingContainer.parentNode),this.label&&this.label.parentNode&&this.label.parentNode.removeChild(this.label),this.description&&this.description.parentNode&&this.description.parentNode.removeChild(this.description),Yi(eo(o.prototype),"destroy",this).call(this)}},{key:"getNumColumns",value:function(){return 2}},{key:"getValue",value:function(){if(this.dependenciesFulfilled)return"integer"===this.schema.type?""===this.value?void 0:1*this.value:this.value}},{key:"setValue",value:function(t){for(var e=0;e<this.radioGroup.length;e++)if(this.radioGroup[e].value==="".concat(t)){this.radioGroup[e].checked=!0,this.value=t,this.options.displayValue&&(this.displayRating.innerHTML=this.value),this.onChange(!0);break}}}])&&Qi(e.prototype,n),r&&Qi(e,r),o}(G);function ro(t){return(ro="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function io(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function oo(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ao(t,e,n){return(ao="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=uo(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function so(t,e){return(so=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function lo(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=uo(t);if(e){var i=uo(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return co(this,n)}}function co(t,e){return!e||"object"!==ro(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function uo(t){return(uo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}no.rules={".starrating":"direction:rtl;display:inline-block;white-space:nowrap",".starrating > input":"display:none",".starrating > label:before":"content:'%5C2606';margin:1px;font-size:18px;font-style:normal;font-weight:400;line-height:1;font-family:'Arial';display:inline-block",".starrating > label":"color:%23888;cursor:pointer;margin:8px%200%202px%200",".starrating > label.starrating-display-enabled":"margin:1px%200%200%200",".starrating > input:checked ~ label":"color:%23ffca08",".starrating:not(.readonly) > input:hover ~ label":"color:%23ffca08",".starrating > input:checked ~ label:before":"content:'%5C2605';text-shadow:0%200%201px%20rgba(0%2C20%2C20%2C1)",".starrating:not(.readonly) > input:hover ~ label:before":"content:'%5C2605';text-shadow:0%200%201px%20rgba(0%2C20%2C20%2C1)",".starrating .starrating-display":"position:relative;direction:rtl;text-align:center;font-size:10px;line-height:0px"};var ho=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&so(t,e)}(o,t);var e,n,r,i=lo(o);function o(){return io(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"build",value:function(){ao(uo(o.prototype),"build",this).call(this),this.input.setAttribute("type","number"),this.input.getAttribute("step")||this.input.setAttribute("step","1");var t=this.theme.getStepperButtons(this.input);this.control.appendChild(t),this.stepperDown=this.control.querySelector(".stepper-down"),this.stepperUp=this.control.querySelector(".stepper-up")}},{key:"enable",value:function(){ao(uo(o.prototype),"enable",this).call(this),this.stepperDown.removeAttribute("disabled"),this.stepperUp.removeAttribute("disabled")}},{key:"disable",value:function(){ao(uo(o.prototype),"disable",this).call(this),this.stepperDown.setAttribute("disabled",!0),this.stepperUp.setAttribute("disabled",!0)}}])&&oo(e.prototype,n),r&&oo(e,r),o}(tr);function po(t){return(po="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function fo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function yo(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function mo(t,e,n){return(mo="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=_o(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function bo(t,e){return(bo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function vo(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=_o(t);if(e){var i=_o(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return go(this,n)}}function go(t,e){return!e||"object"!==po(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function _o(t){return(_o=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var wo=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&bo(t,e)}(o,t);var e,n,r,i=vo(o);function o(){return fo(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"register",value:function(){if(mo(_o(o.prototype),"register",this).call(this),this.rows)for(var t=0;t<this.rows.length;t++)this.rows[t].register()}},{key:"unregister",value:function(){if(mo(_o(o.prototype),"unregister",this).call(this),this.rows)for(var t=0;t<this.rows.length;t++)this.rows[t].unregister()}},{key:"getNumColumns",value:function(){return Math.max(Math.min(12,this.width),3)}},{key:"preBuild",value:function(){var t=this.jsoneditor.expandRefs(this.schema.items||{});this.item_title=t.title||"row",this.item_default=t.default||null,this.item_has_child_editors=t.properties||t.items,this.width=12,mo(_o(o.prototype),"preBuild",this).call(this)}},{key:"build",value:function(){this.table=this.theme.getTable(),this.container.appendChild(this.table),this.thead=this.theme.getTableHead(),this.table.appendChild(this.thead),this.header_row=this.theme.getTableRow(),this.thead.appendChild(this.header_row),this.row_holder=this.theme.getTableBody(),this.table.appendChild(this.row_holder);var t=this.getElementEditor(0,!0);if(this.item_default=t.getDefault(),this.width=t.getNumColumns()+2,this.options.compact?(this.panel=document.createElement("div"),this.container.appendChild(this.panel)):(this.header=document.createElement("label"),this.header.textContent=this.getTitle(),this.title=this.theme.getHeader(this.header),this.container.appendChild(this.title),this.title_controls=this.theme.getHeaderButtonHolder(),this.title.appendChild(this.title_controls),this.schema.description&&(this.description=this.theme.getDescription(this.schema.description),this.container.appendChild(this.description)),this.panel=this.theme.getIndentedPanel(),this.container.appendChild(this.panel),this.error_holder=document.createElement("div"),this.panel.appendChild(this.error_holder)),this.panel.appendChild(this.table),this.controls=this.theme.getButtonHolder(),this.panel.appendChild(this.controls),this.item_has_child_editors)for(var e=t.getChildEditors(),n=t.property_order||Object.keys(e),r=0;r<n.length;r++){var i=this.theme.getTableHeaderCell(e[n[r]].getTitle());e[n[r]].options.hidden&&(i.style.display="none"),this.header_row.appendChild(i)}else this.header_row.appendChild(this.theme.getTableHeaderCell(this.item_title));t.destroy(),this.row_holder.innerHTML="",this.controls_header_cell=this.theme.getTableHeaderCell(" "),this.header_row.appendChild(this.controls_header_cell),this.addControls()}},{key:"onChildEditorChange",value:function(t){this.refreshValue(),mo(_o(o.prototype),"onChildEditorChange",this).call(this)}},{key:"getItemDefault",value:function(){return f({},{default:this.item_default}).default}},{key:"getItemTitle",value:function(){return this.item_title}},{key:"getElementEditor",value:function(t,e){var n=f({},this.schema.items),r=this.jsoneditor.getEditorClass(n,this.jsoneditor),i=this.row_holder.appendChild(this.theme.getTableRow()),o=i;this.item_has_child_editors||(o=this.theme.getTableCell(),i.appendChild(o));var a=this.jsoneditor.createEditor(r,{jsoneditor:this.jsoneditor,schema:n,container:o,path:"".concat(this.path,".").concat(t),parent:this,compact:!0,table_row:!0});return a.preBuild(),e||(a.build(),a.postBuild(),a.controls_cell=i.appendChild(this.theme.getTableCell()),a.row=i,a.table_controls=this.theme.getButtonHolder(),a.controls_cell.appendChild(a.table_controls),a.table_controls.style.margin=0,a.table_controls.style.padding=0),a}},{key:"destroy",value:function(){this.innerHTML="",this.checkParent(this.title)&&this.title.parentNode.removeChild(this.title),this.checkParent(this.description)&&this.description.parentNode.removeChild(this.description),this.checkParent(this.row_holder)&&this.row_holder.parentNode.removeChild(this.row_holder),this.checkParent(this.table)&&this.table.parentNode.removeChild(this.table),this.checkParent(this.panel)&&this.panel.parentNode.removeChild(this.panel),this.rows=this.title=this.description=this.row_holder=this.table=this.panel=null,mo(_o(o.prototype),"destroy",this).call(this)}},{key:"ensureArraySize",value:function(t){if(Array.isArray(t)||(t=[t]),this.schema.minItems)for(;t.length<this.schema.minItems;)t.push(this.getItemDefault());return this.schema.maxItems&&t.length>this.schema.maxItems&&(t=t.slice(0,this.schema.maxItems)),t}},{key:"setValue",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1?arguments[1]:void 0;e=this.ensureArraySize(e);var r=JSON.stringify(e);if(r!==this.serialized){var i=!1;e.forEach((function(e,n){t.rows[n]?t.rows[n].setValue(e):(t.addRow(e),i=!0)}));for(var o=e.length;o<this.rows.length;o++){var a=this.rows[o].container;this.item_has_child_editors||this.rows[o].row.parentNode.removeChild(this.rows[o].row),this.rows[o].destroy(),a.parentNode&&a.parentNode.removeChild(a),this.rows[o]=null,i=!0}this.rows=this.rows.slice(0,e.length),this.refreshValue(),(i||n)&&this.refreshRowButtons(),this.onChange()}}},{key:"refreshRowButtons",value:function(){var t=this,e=this.schema.minItems&&this.schema.minItems>=this.rows.length,n=this.schema.maxItems&&this.schema.maxItems<=this.rows.length,r=[];this.rows.forEach((function(i,o){if(i.delete_button){var a=!e;t.setVisibility(i.delete_button,a),r.push(a)}if(i.copy_button){var s=!n;t.setVisibility(i.copy_button,s),r.push(s)}if(i.moveup_button){var l=0!==o;t.setVisibility(i.moveup_button,l),r.push(l)}if(i.movedown_button){var c=o!==t.rows.length-1;t.setVisibility(i.movedown_button,c),r.push(c)}}));var i=r.some((function(t){return t}));this.rows.forEach((function(e){return t.setVisibility(e.controls_cell,i)})),this.setVisibility(this.controls_header_cell,i),this.setVisibility(this.table,this.value.length);var o=!(n||this.hide_add_button);this.setVisibility(this.add_row_button,o);var a=!(!this.value.length||e||this.hide_delete_last_row_buttons);this.setVisibility(this.delete_last_row_button,a);var s=!(this.value.length<=1||e||this.hide_delete_all_rows_buttons);this.setVisibility(this.remove_all_rows_button,s);var l=o||a||s;this.setVisibility(this.controls,l)}},{key:"refreshValue",value:function(){var t=this;this.value=[],this.rows.forEach((function(e,n){t.value[n]=e.getValue()})),this.serialized=JSON.stringify(this.value)}},{key:"addRow",value:function(t){var e=this.rows.length;this.rows[e]=this.getElementEditor(e);var n=this.rows[e].table_controls;this.hide_delete_buttons||(this.rows[e].delete_button=this._createDeleteButton(e,n)),this.show_copy_button&&(this.rows[e].copy_button=this._createCopyButton(e,n)),this.hide_move_buttons||(this.rows[e].moveup_button=this._createMoveUpButton(e,n)),this.hide_move_buttons||(this.rows[e].movedown_button=this._createMoveDownButton(e,n)),t&&this.rows[e].setValue(t)}},{key:"_createDeleteButton",value:function(t,e){var n=this,r=this.getButton("","delete","button_delete_row_title_short");return r.classList.add("delete","json-editor-btntype-delete"),r.setAttribute("data-i",t),r.addEventListener("click",(function(t){if(t.preventDefault(),t.stopPropagation(),!n.askConfirmation())return!1;var e=1*t.currentTarget.getAttribute("data-i"),r=n.getValue();r.splice(e,1),n.setValue(r),n.onChange(!0),n.jsoneditor.trigger("deleteRow",n.rows[e])})),e.appendChild(r),r}},{key:"_createCopyButton",value:function(t,e){var n=this,r=this.getButton("","copy","button_copy_row_title_short");return r.classList.add("copy","json-editor-btntype-copy"),r.setAttribute("data-i",t),r.addEventListener("click",(function(t){t.preventDefault(),t.stopPropagation();var e=1*t.currentTarget.getAttribute("data-i"),r=n.getValue();r.splice(e+1,0,r[e]),n.setValue(r),n.onChange(!0),n.jsoneditor.trigger("copyRow",n.rows[e+1])})),e.appendChild(r),r}},{key:"_createMoveUpButton",value:function(t,e){var n=this,r=this.getButton("","moveup","button_move_up_title");return r.classList.add("moveup","json-editor-btntype-move"),r.setAttribute("data-i",t),r.addEventListener("click",(function(t){t.preventDefault(),t.stopPropagation();var e=1*t.currentTarget.getAttribute("data-i"),r=n.getValue();r.splice(e-1,0,r.splice(e,1)[0]),n.setValue(r),n.onChange(!0),n.jsoneditor.trigger("moveRow",n.rows[e-1])})),e.appendChild(r),r}},{key:"_createMoveDownButton",value:function(t,e){var n=this,r=this.getButton("","movedown","button_move_down_title");return r.classList.add("movedown","json-editor-btntype-move"),r.setAttribute("data-i",t),r.addEventListener("click",(function(t){t.preventDefault(),t.stopPropagation();var e=1*t.currentTarget.getAttribute("data-i"),r=n.getValue();r.splice(e+1,0,r.splice(e,1)[0]),n.setValue(r),n.onChange(!0),n.jsoneditor.trigger("moveRow",n.rows[e+1])})),e.appendChild(r),r}},{key:"addControls",value:function(){var t=this;this.collapsed=!1,this.toggle_button=this._createToggleButton(),this.title_controls&&(this.title.insertBefore(this.toggle_button,this.title.childNodes[0]),this.toggle_button.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation(),t.setVisibility(t.panel,t.collapsed),t.collapsed?(t.collapsed=!1,t.setButtonText(e.currentTarget,"","collapse","button_collapse")):(t.collapsed=!0,t.setButtonText(e.currentTarget,"","expand","button_expand"))})),this.options.collapsed&&y(this.toggle_button,"click"),this.schema.options&&void 0!==this.schema.options.disable_collapse?this.schema.options.disable_collapse&&(this.toggle_button.style.display="none"):this.jsoneditor.options.disable_collapse&&(this.toggle_button.style.display="none")),this.add_row_button=this._createAddRowButton(),this.delete_last_row_button=this._createDeleteLastRowButton(),this.remove_all_rows_button=this._createRemoveAllRowsButton()}},{key:"_createToggleButton",value:function(){var t=this.getButton("","collapse","button_collapse");return t.classList.add("json-editor-btntype-toggle"),t}},{key:"_createAddRowButton",value:function(){var t=this,e=this.getButton(this.getItemTitle(),"add","button_add_row_title",[this.getItemTitle()]);return e.classList.add("json-editor-btntype-add"),e.addEventListener("click",(function(e){e.preventDefault(),e.stopPropagation();var n=t.addRow();t.refreshValue(),t.refreshRowButtons(),t.onChange(!0),t.jsoneditor.trigger("addRow",n)})),this.controls.appendChild(e),e}},{key:"_createDeleteLastRowButton",value:function(){var t=this,e=this.getButton("button_delete_last","subtract","button_delete_last_title",[this.getItemTitle()]);return e.classList.add("json-editor-btntype-deletelast"),e.addEventListener("click",(function(e){if(e.preventDefault(),e.stopPropagation(),!t.askConfirmation())return!1;var n=t.getValue(),r=n.pop();t.setValue(n),t.onChange(!0),t.jsoneditor.trigger("deleteRow",r)})),this.controls.appendChild(e),e}},{key:"_createRemoveAllRowsButton",value:function(){var t=this,e=this.getButton("button_delete_all","delete","button_delete_all_title");return e.classList.add("json-editor-btntype-deleteall"),e.addEventListener("click",(function(e){if(e.preventDefault(),e.stopPropagation(),!t.askConfirmation())return!1;t.setValue([]),t.onChange(!0),t.jsoneditor.trigger("deleteAllRows")})),this.controls.appendChild(e),e}}])&&yo(e.prototype,n),r&&yo(e,r),o}(ct);n(135);function ko(t){return(ko="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function xo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function jo(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Oo(t,e,n){return(Oo="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Ro(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Co(t,e){return(Co=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Eo(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ro(t);if(e){var i=Ro(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return So(this,n)}}function So(t,e){return!e||"object"!==ko(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ro(t){return(Ro=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Po(t){return(Po="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Lo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function To(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Ao(t,e,n){return(Ao="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Bo(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Io(t,e){return(Io=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Do(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Bo(t);if(e){var i=Bo(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return No(this,n)}}function No(t,e){return!e||"object"!==Po(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Bo(t){return(Bo=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function Fo(t){return(Fo="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Vo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ho(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function zo(t,e,n){return(zo="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Go(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Mo(t,e){return(Mo=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function qo(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Go(t);if(e){var i=Go(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Uo(this,n)}}function Uo(t,e){return!e||"object"!==Fo(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Go(t){return(Go=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var $o={ace:tt,array:ct,arrayChoices:Et,arraySelect2:Nt,arraySelectize:Gt,autocomplete:te,base64:ce,button:be,checkbox:Ce,choices:Ue,datetime:Ke,describedBy:cn,enum:_n,hidden:Rn,info:Bn,integer:tr,ip:cr,jodit:vr,multiple:Er,multiselect:vt,null:Dr,number:$n,object:Jr,radio:ri,sceditor:pi,select:De,select2:wi,selectize:Pi,signature:Fi,simplemde:Wi,starrating:no,stepper:ho,string:G,table:wo,upload:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Co(t,e)}(o,t);var e,n,r,i=Eo(o);function o(){return xo(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"getNumColumns",value:function(){return 4}},{key:"build",value:function(){var t=this;if(this.options.compact||(this.header=this.label=this.theme.getFormInputLabel(this.getTitle(),this.isRequired())),this.schema.description&&(this.description=this.theme.getFormInputDescription(this.schema.description)),this.options.infoText&&(this.infoButton=this.theme.getInfoButton(this.options.infoText)),this.options=this.expandCallbacks("upload",f({},{title:"Browse",icon:"",auto_upload:!1,hide_input:!1,enable_drag_drop:!1,drop_zone_text:"Drag & Drop file here",drop_zone_top:!1,alt_drop_zone:"",mime_type:"",max_upload_size:0,upload_handler:function(t,e,n,r){window.alert('No upload_handler defined for "'.concat(t.path,'". You must create your own handler to enable upload to server'))}},this.defaults.options.upload||{},this.options.upload||{})),this.options.mime_type=this.options.mime_type?[].concat(this.options.mime_type):[],this.input=this.theme.getFormInputField("hidden"),this.container.appendChild(this.input),!this.schema.readOnly&&!this.schema.readonly){if("function"!=typeof this.options.upload_handler)throw new Error("Upload handler required for upload editor");if(this.uploader=this.theme.getFormInputField("file"),this.uploader.style.display="none",this.options.mime_type.length&&this.uploader.setAttribute("accept",this.options.mime_type),!0===this.options.enable_drag_drop&&!0===this.options.hide_input||(this.clickHandler=function(e){t.uploader.dispatchEvent(new window.MouseEvent("click",{view:window,bubbles:!0,cancelable:!1}))},this.browseButton=this.getButton(this.options.title,this.options.icon,this.options.title),this.browseButton.addEventListener("click",this.clickHandler),this.fileDisplay=this.theme.getFormInputField("input"),this.fileDisplay.setAttribute("readonly",!0),this.fileDisplay.value="No file selected.",this.fileDisplay.addEventListener("dblclick",this.clickHandler),this.fileUploadGroup=this.theme.getInputGroup(this.fileDisplay,[this.browseButton]),this.fileUploadGroup||(this.fileUploadGroup=document.createElement("div"),this.fileUploadGroup.appendChild(this.fileDisplay),this.fileUploadGroup.appendChild(this.browseButton))),!0===this.options.enable_drag_drop){if(""!==this.options.alt_drop_zone){if(this.altDropZone=document.querySelector(this.options.alt_drop_zone),!this.altDropZone)throw new Error('Error: alt_drop_zone selector "'.concat(this.options.alt_drop_zone,'" not found!'));this.dropZone=this.altDropZone}else this.dropZone=this.theme.getDropZone(this.options.drop_zone_text);this.dropZone&&(this.dropZone.classList.add("upload-dropzone"),this.dropZone.addEventListener("dblclick",this.clickHandler))}this.uploadHandler=function(e){e.preventDefault(),e.stopPropagation();var n=e.target.files||e.dataTransfer.files;if(n&&n.length)if(0!==t.options.max_upload_size&&n[0].size>t.options.max_upload_size)t.theme.addInputError(t.uploader,"Filesize too large. Max size is ".concat(t.options.max_upload_size));else if(0===t.options.mime_type.length||t.isValidMimeType(n[0].type,t.options.mime_type)){t.fileDisplay&&(t.fileDisplay.value=n[0].name);var r=new window.FileReader;r.onload=function(e){t.preview_value=e.target.result,t.refreshPreview(n),t.onChange(!0),r=null},r.readAsDataURL(n[0])}else t.theme.addInputError(t.uploader,"Wrong file format. Allowed format(s): ".concat(t.options.mime_type.toString()))},this.uploader.addEventListener("change",this.uploadHandler),this.dragHandler=function(e){var n=e.dataTransfer.items||e.dataTransfer.files,r=n&&n.length&&(0===t.options.mime_type.length||t.isValidMimeType(n[0].type,t.options.mime_type)),i=e.currentTarget.classList&&e.currentTarget.classList.contains("upload-dropzone")&&r;switch((e.currentTarget===window?"w_":"e_")+e.type){case"w_drop":case"w_dragover":i||(e.dataTransfer.dropEffect="none");break;case"e_dragenter":i?(t.dropZone.classList.add("valid-dropzone"),e.dataTransfer.dropEffect="copy"):t.dropZone.classList.add("invalid-dropzone");break;case"e_dragover":i&&(e.dataTransfer.dropEffect="copy");break;case"e_dragleave":t.dropZone.classList.remove("valid-dropzone","invalid-dropzone");break;case"e_drop":t.dropZone.classList.remove("valid-dropzone","invalid-dropzone"),i&&t.uploadHandler(e)}i||e.preventDefault()},!0===this.options.enable_drag_drop&&(["dragover","drop"].forEach((function(e){window.addEventListener(e,t.dragHandler,!0)})),["dragenter","dragover","dragleave","drop"].forEach((function(e){t.dropZone.addEventListener(e,t.dragHandler,!0)})))}this.preview=document.createElement("div"),this.control=this.input.controlgroup=this.theme.getFormControl(this.label,this.uploader||this.input,this.description,this.infoButton),this.uploader&&(this.uploader.controlgroup=this.control);var e=this.uploader||this.input,n=document.createElement("div");this.dropZone&&!this.altDropZone&&!0===this.options.drop_zone_top&&n.appendChild(this.dropZone),this.fileUploadGroup&&n.appendChild(this.fileUploadGroup),this.dropZone&&!this.altDropZone&&!0!==this.options.drop_zone_top&&n.appendChild(this.dropZone),n.appendChild(this.preview),e.parentNode.insertBefore(n,e.nextSibling),this.container.appendChild(this.control),window.requestAnimationFrame((function(){t.afterInputReady()}))}},{key:"afterInputReady",value:function(){var t=this;if(this.value){var e=document.createElement("img");e.style.maxWidth="100%",e.style.maxHeight="100px",e.onload=function(n){t.preview.appendChild(e)},e.onerror=function(t){console.error("upload error",t,t.currentTarget)},e.src=this.container.querySelector("a").href}this.theme.afterInputReady(this.input)}},{key:"refreshPreview",value:function(t){var e=this;if(this.last_preview!==this.preview_value&&(this.last_preview=this.preview_value,this.preview.innerHTML="",this.preview_value)){var n=t[0],r=this.preview_value.match(/^data:([^;,]+)[;,]/);if(n.mimeType=r?r[1]:"unknown",n.size>0){var i=Math.floor(Math.log(n.size)/Math.log(1024));n.formattedSize="".concat(parseFloat((n.size/Math.pow(1024,i)).toFixed(2))," ").concat(["Bytes","KB","MB","GB","TB","PB","EB","ZB","YB"][i])}else n.formattedSize="0 Bytes";var o=this.getButton("button_upload","upload","button_upload");o.addEventListener("click",(function(t){t.preventDefault(),o.setAttribute("disabled","disabled"),e.theme.removeInputError(e.uploader),e.theme.getProgressBar&&(e.progressBar=e.theme.getProgressBar(),e.preview.appendChild(e.progressBar)),e.options.upload_handler(e.path,n,{success:function(t){e.setValue(t),e.parent?e.parent.onChildEditorChange(e):e.jsoneditor.onChange(),e.progressBar&&e.preview.removeChild(e.progressBar),o.removeAttribute("disabled")},failure:function(t){e.theme.addInputError(e.uploader,t),e.progressBar&&e.preview.removeChild(e.progressBar),o.removeAttribute("disabled")},updateProgress:function(t){e.progressBar&&(t?e.theme.updateProgressBar(e.progressBar,t):e.theme.updateProgressBarUnknown(e.progressBar))}})})),this.preview.appendChild(this.theme.getUploadPreview(n,o,this.preview_value)),this.options.auto_upload&&(o.dispatchEvent(new window.MouseEvent("click")),this.preview.removeChild(o))}}},{key:"enable",value:function(){this.always_disabled||(this.uploader&&(this.uploader.disabled=!1),Oo(Ro(o.prototype),"enable",this).call(this))}},{key:"disable",value:function(t){t&&(this.always_disabled=!0),this.uploader&&(this.uploader.disabled=!0),Oo(Ro(o.prototype),"disable",this).call(this)}},{key:"setValue",value:function(t){this.value!==t&&(this.value=t,this.input.value=this.value,this.onChange())}},{key:"destroy",value:function(){var t=this;!0===this.options.enable_drag_drop&&(["dragover","drop"].forEach((function(e){window.removeEventListener(e,t.dragHandler,!0)})),["dragenter","dragover","dragleave","drop"].forEach((function(e){t.dropZone.removeEventListener(e,t.dragHandler,!0)})),this.dropZone.removeEventListener("dblclick",this.clickHandler),this.dropZone&&this.dropZone.parentNode&&this.dropZone.parentNode.removeChild(this.dropZone)),this.uploader&&this.uploader.parentNode&&(this.uploader.removeEventListener("change",this.uploadHandler),this.uploader.parentNode.removeChild(this.uploader)),this.browseButton&&this.browseButton.parentNode&&(this.browseButton.removeEventListener("click",this.clickHandler),this.browseButton.parentNode.removeChild(this.browseButton)),this.fileDisplay&&this.fileDisplay.parentNode&&(this.fileDisplay.removeEventListener("dblclick",this.clickHandler),this.fileDisplay.parentNode.removeChild(this.fileDisplay)),this.fileUploadGroup&&this.fileUploadGroup.parentNode&&this.fileUploadGroup.parentNode.removeChild(this.fileUploadGroup),this.preview&&this.preview.parentNode&&this.preview.parentNode.removeChild(this.preview),this.header&&this.header.parentNode&&this.header.parentNode.removeChild(this.header),this.input&&this.input.parentNode&&this.input.parentNode.removeChild(this.input),Oo(Ro(o.prototype),"destroy",this).call(this)}},{key:"isValidMimeType",value:function(t,e){return e.reduce((function(e,n){return e||new RegExp(n.replace(/\*/g,".*"),"gi").test(t)}),!1)}}])&&jo(e.prototype,n),r&&jo(e,r),o}(N),uuid:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Io(t,e)}(o,t);var e,n,r,i=Do(o);function o(){return Lo(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"preBuild",value:function(){Ao(Bo(o.prototype),"preBuild",this).call(this),this.schema.default=this.uuid=this.getUuid(),this.schema.options||(this.schema.options={}),this.schema.options.cleave||(this.schema.options.cleave={delimiters:["-"],blocks:[8,4,4,4,12]})}},{key:"build",value:function(){Ao(Bo(o.prototype),"build",this).call(this),this.disable(!0)}},{key:"sanitize",value:function(t){return this.testUuid(t)||(t=this.uuid),t}},{key:"setValue",value:function(t,e,n){this.testUuid(t)||(t=this.uuid),this.uuid=t,Ao(Bo(o.prototype),"setValue",this).call(this,t,e,n)}},{key:"getUuid",value:function(){var t=(new Date).getTime();return"undefined"!=typeof performance&&"function"==typeof performance.now&&(t+=performance.now()),"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){var n=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"===e?n:3&n|8).toString(16)}))}},{key:"testUuid",value:function(t){return/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(t)}}])&&To(e.prototype,n),r&&To(e,r),o}(G),colorpicker:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Mo(t,e)}(o,t);var e,n,r,i=qo(o);function o(){return Vo(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"postBuild",value:function(){window.Picker&&(this.input.type="text"),this.input.style.padding="3px"}},{key:"setValue",value:function(t,e,n){var r=zo(Go(o.prototype),"setValue",this).call(this,t,e,n);return this.picker_instance&&this.picker_instance.domElement&&r&&r.changed&&this.picker_instance.setColor(r.value,!0),r}},{key:"getNumColumns",value:function(){return 2}},{key:"afterInputReady",value:function(){zo(Go(o.prototype),"afterInputReady",this).call(this),this.createPicker(!0)}},{key:"disable",value:function(){if(zo(Go(o.prototype),"disable",this).call(this),this.picker_instance&&this.picker_instance.domElement){this.picker_instance.domElement.style.pointerEvents="none";for(var t=this.picker_instance.domElement.querySelectorAll("button"),e=0;e<t.length;e++)t[e].disabled=!0}}},{key:"enable",value:function(){if(zo(Go(o.prototype),"enable",this).call(this),this.picker_instance&&this.picker_instance.domElement){this.picker_instance.domElement.style.pointerEvents="auto";for(var t=this.picker_instance.domElement.querySelectorAll("button"),e=0;e<t.length;e++)t[e].disabled=!1}}},{key:"destroy",value:function(){this.createPicker(!1),zo(Go(o.prototype),"destroy",this).call(this)}},{key:"createPicker",value:function(t){var e=this;if(t){if(window.Picker&&!this.picker_instance){var n=this.expandCallbacks("colorpicker",f({},{editor:!1,alpha:!1,color:this.value,popup:"bottom"},this.defaults.options.colorpicker||{},this.options.colorpicker||{},{parent:this.container})),r=function(t){var n=e.picker_instance.settings.editorFormat,r=e.picker_instance.settings.alpha;e.setValue("hex"===n?r?t.hex:t.hex.slice(0,7):t["".concat(n+(r?"a":""),"String")])};n.popup||"function"==typeof n.onChange?n.popup&&"function"!=typeof n.onDone&&(n.onDone=r):n.onChange=r,this.picker_instance=new window.Picker(n),n.popup||(this.input.style.display="none",this.theme.afterInputReady(this.picker_instance.domElement))}}else this.picker_instance&&(this.picker_instance.destroy(),this.picker_instance=null,this.input.style.display="")}}])&&Ho(e.prototype,n),r&&Ho(e,r),o}(G)},Wo=(n(163),{default:function(){return{compile:function(t){var e=t.match(/{{\s*([a-zA-Z0-9\-_ .]+)\s*}}/g),n=e&&e.length;if(!n)return function(){return t};for(var r=[],i=function(t){var n,i,o=e[t].replace(/[{}]+/g,"").trim().split("."),a=o.length;a>1?n=function(e){for(i=e,t=0;t<a&&(i=i[o[t]]);t++);return i}:(o=o[0],n=function(t){return t[o]});r.push({s:e[t],r:n})},o=0;o<n;o++)i(o);return function(e){var i,a="".concat(t);for(o=0;o<n;o++)i=r[o],a=a.replace(i.s,i.r(e));return a}}}},ejs:function(){return!!window.EJS&&{compile:function(t){var e=new window.EJS({text:t});return function(t){return e.render(t)}}}},handlebars:function(){return window.Handlebars},hogan:function(){return!!window.Hogan&&{compile:function(t){var e=window.Hogan.compile(t);return function(t){return e.render(t)}}}},lodash:function(){return!!window._&&{compile:function(t){return function(e){return window._.template(t)(e)}}}},markup:function(){return!(!window.Mark||!window.Mark.up)&&{compile:function(t){return function(e){return window.Mark.up(t,e)}}}},mustache:function(){return!!window.Mustache&&{compile:function(t){return function(e){return window.Mustache.render(t,e)}}}},swig:function(){return window.swig},underscore:function(){return!!window._&&{compile:function(t){return function(e){return window._.template(t)(e)}}}}});function Jo(t){return function(t){if(Array.isArray(t))return Zo(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return Zo(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Zo(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Zo(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function Qo(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Yo(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Xo={collapse:"",expand:"",delete:"",edit:"",add:"",cancel:"",save:"",moveup:"",movedown:""},Ko=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Xo;Qo(this,t),this.mapping=n,this.icon_prefix=e}var e,n,r;return e=t,(n=[{key:"getIconClass",value:function(t){return this.mapping[t]?this.icon_prefix+this.mapping[t]:null}},{key:"getIcon",value:function(t){var e,n=this.getIconClass(t);if(!n)return null;var r=document.createElement("i");return(e=r.classList).add.apply(e,Jo(n.split(" "))),r}}])&&Yo(e.prototype,n),r&&Yo(e,r),t}();function ta(t){return(ta="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ea(t,e){return(ea=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function na(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ia(t);if(e){var i=ia(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return ra(this,n)}}function ra(t,e){return!e||"object"!==ta(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ia(t){return(ia=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var oa={collapse:"chevron-down",expand:"chevron-right",delete:"trash",edit:"pencil",add:"plus",subtract:"minus",cancel:"floppy-remove",save:"floppy-saved",moveup:"arrow-up",moveright:"arrow-right",movedown:"arrow-down",moveleft:"arrow-left",copy:"copy",clear:"remove-circle",time:"time",calendar:"calendar",edit_properties:"list"};function aa(t){return(aa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function sa(t,e){return(sa=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function la(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ua(t);if(e){var i=ua(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return ca(this,n)}}function ca(t,e){return!e||"object"!==aa(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ua(t){return(ua=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var ha={collapse:"chevron-down",expand:"chevron-right",delete:"trash",edit:"pencil",add:"plus",subtract:"minus",cancel:"ban-circle",save:"save",moveup:"arrow-up",moveright:"arrow-right",movedown:"arrow-down",moveleft:"arrow-left",copy:"copy",clear:"remove-circle",time:"time",calendar:"calendar",edit_properties:"list"};function pa(t){return(pa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function da(t,e){return(da=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function fa(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ma(t);if(e){var i=ma(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return ya(this,n)}}function ya(t,e){return!e||"object"!==pa(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ma(t){return(ma=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var ba={collapse:"caret-square-o-down",expand:"caret-square-o-right",delete:"times",edit:"pencil",add:"plus",subtract:"minus",cancel:"ban",save:"save",moveup:"arrow-up",moveright:"arrow-right",movedown:"arrow-down",moveleft:"arrow-left",copy:"files-o",clear:"times-circle-o",time:"clock-o",calendar:"calendar",edit_properties:"list"};function va(t){return(va="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function ga(t,e){return(ga=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function _a(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ka(t);if(e){var i=ka(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return wa(this,n)}}function wa(t,e){return!e||"object"!==va(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ka(t){return(ka=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var xa={collapse:"caret-down",expand:"caret-right",delete:"trash",edit:"pen",add:"plus",subtract:"minus",cancel:"ban",save:"save",moveup:"arrow-up",moveright:"arrow-right",movedown:"arrow-down",moveleft:"arrow-left",copy:"copy",clear:"times-circle",time:"clock",calendar:"calendar",edit_properties:"list"};function ja(t){return(ja="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Oa(t,e){return(Oa=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ca(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Sa(t);if(e){var i=Sa(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ea(this,n)}}function Ea(t,e){return!e||"object"!==ja(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Sa(t){return(Sa=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Ra={collapse:"triangle-1-s",expand:"triangle-1-e",delete:"trash",edit:"pencil",add:"plusthick",subtract:"minusthick",cancel:"closethick",save:"disk",moveup:"arrowthick-1-n",moveright:"arrowthick-1-e",movedown:"arrowthick-1-s",moveleft:"arrowthick-1-w",copy:"copy",clear:"circle-close",time:"time",calendar:"calendar",edit_properties:"note"};function Pa(t){return(Pa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function La(t,e){return(La=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ta(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ia(t);if(e){var i=Ia(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Aa(this,n)}}function Aa(t,e){return!e||"object"!==Pa(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ia(t){return(Ia=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Da={collapse:"collapse-down",expand:"expand-right",delete:"trash",edit:"pencil",add:"plus",subtract:"minus",cancel:"ban",save:"file",moveup:"arrow-thick-top",moveright:"arrow-thick-right",movedown:"arrow-thick-bottom",moveleft:"arrow-thick-left",copy:"clipboard",clear:"circle-x",time:"clock",calendar:"calendar",edit_properties:"list"};function Na(t){return(Na="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ba(t,e){return(Ba=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Fa(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Ha(t);if(e){var i=Ha(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Va(this,n)}}function Va(t,e){return!e||"object"!==Na(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Ha(t){return(Ha=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var za={collapse:"arrow-down",expand:"arrow-right",delete:"delete",edit:"edit",add:"plus",subtract:"minus",cancel:"cross",save:"check",moveup:"upward",moveright:"forward",movedown:"downward",moveleft:"back",copy:"copy",clear:"close",time:"time",calendar:"bookmark",edit_properties:"menu"},Ma={bootstrap3:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ea(t,e)}(n,t);var e=na(n);function n(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e.call(this,"glyphicon glyphicon-",oa)}return n}(Ko),fontawesome3:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&sa(t,e)}(n,t);var e=la(n);function n(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e.call(this,"icon-",ha)}return n}(Ko),fontawesome4:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&da(t,e)}(n,t);var e=fa(n);function n(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e.call(this,"fa fa-",ba)}return n}(Ko),fontawesome5:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ga(t,e)}(n,t);var e=_a(n);function n(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e.call(this,"fas fa-",xa)}return n}(Ko),jqueryui:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Oa(t,e)}(n,t);var e=Ca(n);function n(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e.call(this,"ui-icon ui-icon-",Ra)}return n}(Ko),openiconic:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&La(t,e)}(n,t);var e=Ta(n);function n(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e.call(this,"oi oi-",Da)}return n}(Ko),spectre:function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ba(t,e)}(n,t);var e=Fa(n);function n(){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),e.call(this,"icon icon-",za)}return n}(Ko)};n(136);function qa(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Ua(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var Ga=["matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector"].find((function(t){return t in document.documentElement})),$a=function(){function t(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{disable_theme_rules:!1};qa(this,t),this.jsoneditor=e,Object.keys(n).forEach((function(t){void 0!==e.options[t]&&(n[t]=e.options[t])})),this.options=n}var e,n,r;return e=t,(n=[{key:"getContainer",value:function(){return document.createElement("div")}},{key:"getFloatRightLinkHolder",value:function(){var t=document.createElement("div");return t.classList.add("je-float-right-linkholder"),t}},{key:"getModal",value:function(){var t=document.createElement("div");return t.style.display="none",t.classList.add("je-modal"),t}},{key:"getGridContainer",value:function(){return document.createElement("div")}},{key:"getGridRow",value:function(){var t=document.createElement("div");return t.classList.add("row"),t}},{key:"getGridColumn",value:function(){return document.createElement("div")}},{key:"setGridColumnSize",value:function(t,e){}},{key:"getLink",value:function(t){var e=document.createElement("a");return e.setAttribute("href","#"),e.appendChild(document.createTextNode(t)),e}},{key:"disableHeader",value:function(t){t.style.color="#ccc"}},{key:"disableLabel",value:function(t){t.style.color="#ccc"}},{key:"enableHeader",value:function(t){t.style.color=""}},{key:"enableLabel",value:function(t){t.style.color=""}},{key:"getInfoButton",value:function(t){var e=document.createElement("span");e.innerText="ⓘ",e.classList.add("je-infobutton-icon");var n=document.createElement("span");return n.classList.add("je-infobutton-tooltip"),n.innerText=t,e.onmouseover=function(){n.style.visibility="visible"},e.onmouseleave=function(){n.style.visibility="hidden"},e.appendChild(n),e}},{key:"getFormInputLabel",value:function(t,e){var n=document.createElement("label");return n.appendChild(document.createTextNode(t)),e&&n.classList.add("required"),n}},{key:"getHeader",value:function(t){var e=document.createElement("h3");return"string"==typeof t?e.textContent=t:e.appendChild(t),e.classList.add("je-header"),e}},{key:"getCheckbox",value:function(){var t=this.getFormInputField("checkbox");return t.classList.add("je-checkbox"),t}},{key:"getCheckboxLabel",value:function(t,e){var n=document.createElement("label");return n.appendChild(document.createTextNode(" ".concat(t))),e&&n.classList.add("required"),n}},{key:"getMultiCheckboxHolder",value:function(t,e,n,r){var i=document.createElement("div");return i.classList.add("control-group"),e&&(e.style.display="block",i.appendChild(e),r&&e.appendChild(r)),Object.values(t).forEach((function(t){t.style.display="inline-block",t.style.marginRight="20px",i.appendChild(t)})),n&&i.appendChild(n),i}},{key:"getFormCheckboxControl",value:function(t,e,n){var r=document.createElement("div");return r.appendChild(t),e.style.width="auto",t.insertBefore(e,t.firstChild),n&&r.classList.add("je-checkbox-control--compact"),r}},{key:"getFormRadio",value:function(t){var e=this.getFormInputField("radio");return Object.keys(t).forEach((function(n){return e.setAttribute(n,t[n])})),e.classList.add("je-radio"),e}},{key:"getFormRadioLabel",value:function(t,e){var n=document.createElement("label");return n.appendChild(document.createTextNode(" ".concat(t))),e&&n.classList.add("required"),n}},{key:"getFormRadioControl",value:function(t,e,n){var r=document.createElement("div");return r.appendChild(t),e.style.width="auto",t.insertBefore(e,t.firstChild),n&&r.classList.add("je-radio-control--compact"),r}},{key:"getSelectInput",value:function(t,e){var n=document.createElement("select");return t&&this.setSelectOptions(n,t),n}},{key:"getSwitcher",value:function(t){var e=this.getSelectInput(t,!1);return e.classList.add("je-switcher"),e}},{key:"getSwitcherOptions",value:function(t){return t.getElementsByTagName("option")}},{key:"setSwitcherOptions",value:function(t,e,n){this.setSelectOptions(t,e,n)}},{key:"setSelectOptions",value:function(t,e){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];t.innerHTML="";for(var r=0;r<e.length;r++){var i=document.createElement("option");i.setAttribute("value",e[r]),i.textContent=n[r]||e[r],t.appendChild(i)}}},{key:"getTextareaInput",value:function(){var t=document.createElement("textarea");return t.classList.add("je-textarea"),t}},{key:"getRangeInput",value:function(t,e,n){var r=this.getFormInputField("range");return r.setAttribute("min",t),r.setAttribute("max",e),r.setAttribute("step",n),r}},{key:"getStepperButtons",value:function(t){var e=document.createElement("div"),n=document.createElement("button");n.setAttribute("type","button"),n.classList.add("stepper-down");var r=document.createElement("button");r.setAttribute("type","button"),r.classList.add("stepper-up"),t.getAttribute("readonly")&&(n.setAttribute("disabled",!0),r.setAttribute("disabled",!0)),n.textContent="-",r.textContent="+";var i=function(t,e){t.value=Number(e||t.value),t.setAttribute("initialized","1")},o=t.getAttribute("min"),a=t.getAttribute("max");return n.addEventListener("click",(function(){t.getAttribute("initialized")?o?Number(t.value)>Number(o)&&t.stepDown():t.stepDown():i(t,o),y(t,"change")})),r.addEventListener("click",(function(){t.getAttribute("initialized")?a?Number(t.value)<Number(a)&&t.stepUp():t.stepUp():i(t,o),y(t,"change")})),e.appendChild(n),e.appendChild(r),e}},{key:"getRangeOutput",value:function(t,e){var n=document.createElement("output");n.value=e||0;var r=function(t){n.value=t.currentTarget.value};return t.addEventListener("change",r,!1),t.addEventListener("input",r,!1),n}},{key:"getRangeControl",value:function(t,e){var n=document.createElement("div");return n.classList.add("je-range-control"),e&&n.appendChild(e),n.appendChild(t),n}},{key:"getFormInputField",value:function(t){var e=document.createElement("input");return e.setAttribute("type",t),e}},{key:"afterInputReady",value:function(t){}},{key:"getFormControl",value:function(t,e,n,r){var i=document.createElement("div");return i.classList.add("form-control"),t&&i.appendChild(t),"checkbox"!==e.type&&"radio"!==e.type||!t?(r&&t&&t.appendChild(r),i.appendChild(e)):(e.style.width="auto",t.insertBefore(e,t.firstChild),r&&t.appendChild(r)),n&&i.appendChild(n),i}},{key:"getIndentedPanel",value:function(){var t=document.createElement("div");return t.classList.add("je-indented-panel"),t}},{key:"getTopIndentedPanel",value:function(){var t=document.createElement("div");return t.classList.add("je-indented-panel--top"),t}},{key:"getChildEditorHolder",value:function(){return document.createElement("div")}},{key:"getDescription",value:function(t){var e=document.createElement("p");return window.DOMPurify?e.innerHTML=window.DOMPurify.sanitize(t):e.textContent=this.cleanText(t),e}},{key:"getCheckboxDescription",value:function(t){return this.getDescription(t)}},{key:"getFormInputDescription",value:function(t){return this.getDescription(t)}},{key:"getButtonHolder",value:function(){return document.createElement("span")}},{key:"getHeaderButtonHolder",value:function(){return this.getButtonHolder()}},{key:"getFormButtonHolder",value:function(t){return this.getButtonHolder()}},{key:"getButton",value:function(t,e,n){var r=document.createElement("button");return r.type="button",this.setButtonText(r,t,e,n),r}},{key:"getFormButton",value:function(t,e,n){return this.getButton(t,e,n)}},{key:"setButtonText",value:function(t,e,n,r){for(;t.firstChild;)t.removeChild(t.firstChild);if(n&&(t.appendChild(n),e=" ".concat(e)),!this.jsoneditor.options.iconlib||!this.jsoneditor.options.remove_button_labels||!n){var i=document.createElement("span");i.appendChild(document.createTextNode(e)),t.appendChild(i)}r&&t.setAttribute("title",r)}},{key:"getTable",value:function(){return document.createElement("table")}},{key:"getTableRow",value:function(){return document.createElement("tr")}},{key:"getTableHead",value:function(){return document.createElement("thead")}},{key:"getTableBody",value:function(){return document.createElement("tbody")}},{key:"getTableHeaderCell",value:function(t){var e=document.createElement("th");return e.textContent=t,e}},{key:"getTableCell",value:function(){return document.createElement("td")}},{key:"getErrorMessage",value:function(t){var e=document.createElement("p");return e.style=e.style||{},e.style.color="red",e.appendChild(document.createTextNode(t)),e}},{key:"addInputError",value:function(t,e){}},{key:"removeInputError",value:function(t){}},{key:"addTableRowError",value:function(t){}},{key:"removeTableRowError",value:function(t){}},{key:"getTabHolder",value:function(t){var e=void 0===t?"":t,n=document.createElement("div");return n.innerHTML="<div class='je-tabholder tabs'></div><div class='content' id='".concat(e,"'></div><div class='je-tabholder--clear'></div>"),n}},{key:"getTopTabHolder",value:function(t){var e=void 0===t?"":t,n=document.createElement("div");return n.innerHTML="<div class='tabs je-tabholder--top'></div><div class='je-tabholder--clear'></div><div class='content' id='".concat(e,"'></div>"),n}},{key:"applyStyles",value:function(t,e){Object.keys(e).forEach((function(n){return t.style[n]=e[n]}))}},{key:"closest",value:function(t,e){for(;t&&t!==document;){if(!t[Ga])return!1;if(t[Ga](e))return t;t=t.parentNode}return!1}},{key:"insertBasicTopTab",value:function(t,e){e.firstChild.insertBefore(t,e.firstChild.firstChild)}},{key:"getTab",value:function(t,e){var n=document.createElement("div");return n.appendChild(t),n.id=e,n.classList.add("je-tab"),n}},{key:"getTopTab",value:function(t,e){var n=document.createElement("div");return n.appendChild(t),n.id=e,n.classList.add("je-tab--top"),n}},{key:"getTabContentHolder",value:function(t){return t.children[1]}},{key:"getTopTabContentHolder",value:function(t){return t.children[1]}},{key:"getTabContent",value:function(){return this.getIndentedPanel()}},{key:"getTopTabContent",value:function(){return this.getTopIndentedPanel()}},{key:"markTabActive",value:function(t){this.applyStyles(t.tab,{opacity:1,background:"white"}),void 0!==t.rowPane?t.rowPane.style.display="":t.container.style.display=""}},{key:"markTabInactive",value:function(t){this.applyStyles(t.tab,{opacity:.5,background:""}),void 0!==t.rowPane?t.rowPane.style.display="none":t.container.style.display="none"}},{key:"addTab",value:function(t,e){t.children[0].appendChild(e)}},{key:"addTopTab",value:function(t,e){t.children[0].appendChild(e)}},{key:"getBlockLink",value:function(){var t=document.createElement("a");return t.classList.add("je-block-link"),t}},{key:"getBlockLinkHolder",value:function(){return document.createElement("div")}},{key:"getLinksHolder",value:function(){return document.createElement("div")}},{key:"createMediaLink",value:function(t,e,n){t.appendChild(e),n.classList.add("je-media"),t.appendChild(n)}},{key:"createImageLink",value:function(t,e,n){t.appendChild(e),e.appendChild(n)}},{key:"getFirstTab",value:function(t){return t.firstChild.firstChild}},{key:"getInputGroup",value:function(t,e){}},{key:"cleanText",value:function(t){var e=document.createElement("div");return e.innerHTML=t,e.textContent||e.innerText}},{key:"getDropZone",value:function(t){var e=document.createElement("div");return e.setAttribute("data-text",t),e.classList.add("je-dropzone"),e}},{key:"getUploadPreview",value:function(t,e,n){var r=document.createElement("div");if(r.classList.add("je-upload-preview"),"image"===t.mimeType.substr(0,5)){var i=document.createElement("img");i.src=n,r.appendChild(i)}var o=document.createElement("div");o.innerHTML+="<strong>Name:</strong> ".concat(t.name,"<br><strong>Type:</strong> ").concat(t.type,"<br><strong>Size:</strong> ").concat(t.formattedSize),r.appendChild(o),r.appendChild(e);var a=document.createElement("div");return a.style.clear="left",r.appendChild(a),r}},{key:"getProgressBar",value:function(){var t=document.createElement("progress");return t.setAttribute("max",100),t.setAttribute("value",0),t}},{key:"updateProgressBar",value:function(t,e){t&&t.setAttribute("value",e)}},{key:"updateProgressBarUnknown",value:function(t){t&&t.removeAttribute("value")}}])&&Ua(e.prototype,n),r&&Ua(e,r),t}();function Wa(t){return(Wa="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ja(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function Za(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Qa(t,e,n){return(Qa="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=ts(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Ya(t,e){return(Ya=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Xa(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=ts(t);if(e){var i=ts(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ka(this,n)}}function Ka(t,e){return!e||"object"!==Wa(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function ts(t){return(ts=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var es=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ya(t,e)}(o,t);var e,n,r,i=Xa(o);function o(){return Ja(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"getFormInputLabel",value:function(t,e){var n=Qa(ts(o.prototype),"getFormInputLabel",this).call(this,t,e);return n.classList.add("je-form-input-label"),n}},{key:"getFormInputDescription",value:function(t){var e=Qa(ts(o.prototype),"getFormInputDescription",this).call(this,t);return e.classList.add("je-form-input-label"),e}},{key:"getIndentedPanel",value:function(){var t=Qa(ts(o.prototype),"getIndentedPanel",this).call(this);return t.classList.add("je-indented-panel"),t}},{key:"getTopIndentedPanel",value:function(){return this.getIndentedPanel()}},{key:"getChildEditorHolder",value:function(){var t=Qa(ts(o.prototype),"getChildEditorHolder",this).call(this);return t.classList.add("je-child-editor-holder"),t}},{key:"getHeaderButtonHolder",value:function(){var t=this.getButtonHolder();return t.classList.add("je-header-button-holder"),t}},{key:"getTable",value:function(){var t=Qa(ts(o.prototype),"getTable",this).call(this);return t.classList.add("je-table"),t}},{key:"addInputError",value:function(t,e){if(t.style.borderColor="red",t.errmsg)t.errmsg.style.display="block";else{var n=this.closest(t,".form-control");t.errmsg=document.createElement("div"),t.errmsg.setAttribute("class","errmsg"),t.errmsg.style=t.errmsg.style||{},t.errmsg.style.color="red",n.appendChild(t.errmsg)}t.errmsg.innerHTML="",t.errmsg.appendChild(document.createTextNode(e))}},{key:"removeInputError",value:function(t){t.style&&(t.style.borderColor=""),t.errmsg&&(t.errmsg.style.display="none")}}])&&Za(e.prototype,n),r&&Za(e,r),o}($a);es.rules={".je-form-input-label":"display:block;margin-bottom:3px;font-weight:bold",".je-form-input-description":"display:inline-block;margin:0;font-size:0.8em;font-style:italic",".je-indented-panel":"padding:5px;margin:10px;border-radius:3px;border:1px%20solid%20%23ddd",".je-child-editor-holder":"margin-bottom:8px",".je-header-button-holder":"display:inline-block;margin-left:10px;font-size:0.8em;vertical-align:middle",".je-table":"margin-bottom:5px;border-bottom:1px%20solid%20%23ccc",".je-upload-preview img":"float:left;margin:0%200.5rem%200.5rem%200;max-width:100%25;max-height:5rem",".je-dropzone":"position:relative;margin:0.5rem%200;border:2px%20dashed%20black;width:100%25;height:60px;background:teal;transition:all%200.5s",".je-dropzone:before":"position:absolute;content:attr(data-text);color:rgba(0%2C%200%2C%200%2C%200.6);left:50%25;top:50%25;transform:translate(-50%25%2C%20-50%25)",".je-dropzone.valid-dropzone":"background:green",".je-dropzone.invalid-dropzone":"background:red"};var ns=n(137),rs=n.n(ns);function is(t){return(is="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function os(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function as(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ss(t,e,n){return(ss="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=hs(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function ls(t,e){return(ls=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function cs(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=hs(t);if(e){var i=hs(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return us(this,n)}}function us(t,e){return!e||"object"!==is(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function hs(t){return(hs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var ps=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ls(t,e)}(o,t);var e,n,r,i=cs(o);function o(){return os(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"getSelectInput",value:function(t,e){var n=ss(hs(o.prototype),"getSelectInput",this).call(this,t);return n.classList.add("form-control"),n}},{key:"setGridColumnSize",value:function(t,e,n){t.classList.add("col-md-".concat(e)),n&&t.classList.add("col-md-offset-".concat(n))}},{key:"afterInputReady",value:function(t){if(!t.controlgroup&&(t.controlgroup=this.closest(t,".form-group"),this.closest(t,".compact")&&(t.controlgroup.style.marginBottom=0),this.queuedInputErrorText)){var e=this.queuedInputErrorText;delete this.queuedInputErrorText,this.addInputError(t,e)}}},{key:"getTextareaInput",value:function(){var t=document.createElement("textarea");return t.classList.add("form-control"),t}},{key:"getRangeInput",value:function(t,e,n){return ss(hs(o.prototype),"getRangeInput",this).call(this,t,e,n)}},{key:"getFormInputField",value:function(t){var e=ss(hs(o.prototype),"getFormInputField",this).call(this,t);return"checkbox"!==t&&"radio"!==t&&e.classList.add("form-control"),e}},{key:"getFormControl",value:function(t,e,n){var r=document.createElement("div");return!t||"checkbox"!==e.type&&"radio"!==e.type?(r.classList.add("form-group"),t&&(t.classList.add("control-label"),r.appendChild(t)),r.appendChild(e)):(r.classList.add(e.type),t.insertBefore(e,t.firstChild),r.appendChild(t)),n&&r.appendChild(n),r}},{key:"getIndentedPanel",value:function(){var t=document.createElement("div");return t.classList.add("well","well-sm"),t.style.paddingBottom=0,t}},{key:"getInfoButton",value:function(t){var e=document.createElement("span");e.classList.add("glyphicon","glyphicon-info-sign","pull-right"),e.style.padding=".25rem",e.style.position="relative",e.style.display="inline-block";var n=document.createElement("span");return n.style["font-family"]="sans-serif",n.style.visibility="hidden",n.style["background-color"]="rgba(50, 50, 50, .75)",n.style.margin="0 .25rem",n.style.color="#FAFAFA",n.style.padding=".5rem 1rem",n.style["border-radius"]=".25rem",n.style.width="25rem",n.style.transform="translateX(-27rem) translateY(-.5rem)",n.style.position="absolute",n.innerText=t,e.onmouseover=function(){n.style.visibility="visible"},e.onmouseleave=function(){n.style.visibility="hidden"},e.appendChild(n),e}},{key:"getFormInputDescription",value:function(t){var e=document.createElement("p");return e.classList.add("help-block"),window.DOMPurify?e.innerHTML=window.DOMPurify.sanitize(t):e.textContent=this.cleanText(t),e}},{key:"getHeaderButtonHolder",value:function(){var t=this.getButtonHolder();return t.style.marginLeft="10px",t}},{key:"getButtonHolder",value:function(){var t=document.createElement("span");return t.classList.add("btn-group"),t}},{key:"getButton",value:function(t,e,n){var r=ss(hs(o.prototype),"getButton",this).call(this,t,e,n);return r.classList.add("btn","btn-default"),r}},{key:"getTable",value:function(){var t=document.createElement("table");return t.classList.add("table","table-bordered"),t.style.width="auto",t.style.maxWidth="none",t}},{key:"addInputError",value:function(t,e){t.controlgroup?(t.controlgroup.classList.add("has-error"),t.errmsg?t.errmsg.style.display="":(t.errmsg=document.createElement("p"),t.errmsg.classList.add("help-block","errormsg"),t.controlgroup.appendChild(t.errmsg)),t.errmsg.textContent=e):this.queuedInputErrorText=e}},{key:"removeInputError",value:function(t){t.controlgroup||delete this.queuedInputErrorText,t.errmsg&&(t.errmsg.style.display="none",t.controlgroup.classList.remove("has-error"))}},{key:"getTabHolder",value:function(t){var e=void 0===t?"":t,n=document.createElement("div");return n.innerHTML="<ul class='col-md-2 nav nav-pills nav-stacked' id='".concat(e,"' role='tablist'></ul><div class='col-md-10 tab-content well well-small'  id='").concat(e,"'></div>"),n}},{key:"getTopTabHolder",value:function(t){var e=void 0===t?"":t,n=document.createElement("div");return n.innerHTML="<ul class='nav nav-tabs' id='".concat(e,"' role='tablist'></ul><div class='tab-content well well-small'  id='").concat(e,"'></div>"),n}},{key:"getTab",value:function(t,e){var n=document.createElement("li");n.setAttribute("role","presentation");var r=document.createElement("a");return r.setAttribute("href","#".concat(e)),r.appendChild(t),r.setAttribute("aria-controls",e),r.setAttribute("role","tab"),r.setAttribute("data-toggle","tab"),n.appendChild(r),n}},{key:"getTopTab",value:function(t,e){var n=document.createElement("li");n.setAttribute("role","presentation");var r=document.createElement("a");return r.setAttribute("href","#".concat(e)),r.appendChild(t),r.setAttribute("aria-controls",e),r.setAttribute("role","tab"),r.setAttribute("data-toggle","tab"),n.appendChild(r),n}},{key:"getTabContent",value:function(){var t=document.createElement("div");return t.classList.add("tab-pane"),t.setAttribute("role","tabpanel"),t}},{key:"getTopTabContent",value:function(){var t=document.createElement("div");return t.classList.add("tab-pane"),t.setAttribute("role","tabpanel"),t}},{key:"markTabActive",value:function(t){t.tab.classList.add("active"),void 0!==t.rowPane?t.rowPane.classList.add("active"):t.container.classList.add("active")}},{key:"markTabInactive",value:function(t){t.tab.classList.remove("active"),void 0!==t.rowPane?t.rowPane.classList.remove("active"):t.container.classList.remove("active")}},{key:"getProgressBar",value:function(){var t=document.createElement("div");t.classList.add("progress");var e=document.createElement("div");return e.classList.add("progress-bar"),e.setAttribute("role","progressbar"),e.setAttribute("aria-valuenow",0),e.setAttribute("aria-valuemin",0),e.setAttribute("aria-valuenax",100),e.innerHTML="".concat(0,"%"),t.appendChild(e),t}},{key:"updateProgressBar",value:function(t,e){if(t){var n=t.firstChild,r="".concat(e,"%");n.setAttribute("aria-valuenow",e),n.style.width=r,n.innerHTML=r}}},{key:"updateProgressBarUnknown",value:function(t){if(t){var e=t.firstChild;t.classList.add("progress","progress-striped","active"),e.removeAttribute("aria-valuenow"),e.style.width="100%",e.innerHTML=""}}},{key:"getInputGroup",value:function(t,e){if(t){var n=document.createElement("div");n.classList.add("input-group"),n.appendChild(t);var r=document.createElement("div");r.classList.add("input-group-btn"),n.appendChild(r);for(var i=0;i<e.length;i++)r.appendChild(e[i]);return n}}}])&&as(e.prototype,n),r&&as(e,r),o}($a);ps.rules=rs.a;n(165);function ds(t){return(ds="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function fs(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ys(t,e,n){return(ys="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=gs(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function ms(t,e){return(ms=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function bs(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=gs(t);if(e){var i=gs(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return vs(this,n)}}function vs(t,e){return!e||"object"!==ds(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function gs(t){return(gs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var _s={disable_theme_rules:!1,input_size:"normal",custom_forms:!1,object_indent:!0,object_background:"bg-light",object_text:"",table_border:!1,table_zebrastyle:!1,tooltip:"bootstrap"},ws=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&ms(t,e)}(o,t);var e,n,r,i=bs(o);function o(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),i.call(this,t,_s)}return e=o,(n=[{key:"getSelectInput",value:function(t,e){var n=ys(gs(o.prototype),"getSelectInput",this).call(this,t);return n.classList.add("form-control"),!1===this.options.custom_forms?("small"===this.options.input_size&&n.classList.add("form-control-sm"),"large"===this.options.input_size&&n.classList.add("form-control-lg")):(n.classList.remove("form-control"),n.classList.add("custom-select"),"small"===this.options.input_size&&n.classList.add("custom-select-sm"),"large"===this.options.input_size&&n.classList.add("custom-select-lg")),n}},{key:"getContainer",value:function(){var t=document.createElement("div");return this.options.object_indent||t.classList.add("je-noindent"),t}},{key:"setGridColumnSize",value:function(t,e,n){t.classList.add("col-md-".concat(e)),n&&t.classList.add("offset-md-".concat(n))}},{key:"afterInputReady",value:function(t){if(!t.controlgroup){var e=t.name;t.id=e;var n=t.parentNode.parentNode.getElementsByTagName("label")[0];n&&(n.htmlFor=e),t.controlgroup=this.closest(t,".form-group")}}},{key:"getTextareaInput",value:function(){var t=document.createElement("textarea");return t.classList.add("form-control"),"small"===this.options.input_size&&t.classList.add("form-control-sm"),"large"===this.options.input_size&&t.classList.add("form-control-lg"),t}},{key:"getRangeInput",value:function(t,e,n){var r=ys(gs(o.prototype),"getRangeInput",this).call(this,t,e,n);return!0===this.options.custom_forms&&(r.classList.remove("form-control"),r.classList.add("custom-range")),r}},{key:"getStepperButtons",value:function(t){var e=document.createElement("div"),n=document.createElement("div"),r=document.createElement("div"),i=document.createElement("button");i.setAttribute("type","button");var o=document.createElement("button");o.setAttribute("type","button"),e.appendChild(n),e.appendChild(t),e.appendChild(r),n.appendChild(i),r.appendChild(o),e.classList.add("input-group"),n.classList.add("input-group-prepend"),r.classList.add("input-group-append"),i.classList.add("btn"),i.classList.add("btn-secondary"),i.classList.add("stepper-down"),o.classList.add("btn"),o.classList.add("btn-secondary"),o.classList.add("stepper-up"),t.getAttribute("readonly")&&(i.setAttribute("disabled",!0),o.setAttribute("disabled",!0)),i.textContent="-",o.textContent="+";var a=function(t,e){t.value=Number(e||t.value),t.setAttribute("initialized","1")},s=t.getAttribute("min"),l=t.getAttribute("max");return i.addEventListener("click",(function(){t.getAttribute("initialized")?s?Number(t.value)>Number(s)&&t.stepDown():t.stepDown():a(t,s),y(t,"change")})),o.addEventListener("click",(function(){t.getAttribute("initialized")?l?Number(t.value)<Number(l)&&t.stepUp():t.stepUp():a(t,s),y(t,"change")})),e}},{key:"getFormInputField",value:function(t){var e=ys(gs(o.prototype),"getFormInputField",this).call(this,t);return"checkbox"!==t&&"radio"!==t&&"file"!==t&&(e.classList.add("form-control"),"small"===this.options.input_size&&e.classList.add("form-control-sm"),"large"===this.options.input_size&&e.classList.add("form-control-lg")),"file"===t&&e.classList.add("form-control-file"),e}},{key:"getFormControl",value:function(t,e,n,r){var i=document.createElement("div");if(i.classList.add("form-group"),!t||"checkbox"!==e.type&&"radio"!==e.type)t&&(i.appendChild(t),r&&i.appendChild(r)),i.appendChild(e);else{var o=document.createElement("div");!1===this.options.custom_forms?(o.classList.add("form-check"),e.classList.add("form-check-input"),t.classList.add("form-check-label")):(o.classList.add("custom-control"),e.classList.add("custom-control-input"),t.classList.add("custom-control-label"),"checkbox"===e.type?o.classList.add("custom-checkbox"):o.classList.add("custom-radio"));var a=(Date.now()*Math.random()).toFixed(0);e.setAttribute("id",a),t.setAttribute("for",a),o.appendChild(e),o.appendChild(t),r&&o.appendChild(r),i.appendChild(o)}return n&&i.appendChild(n),i}},{key:"getInfoButton",value:function(t){var e=document.createElement("button");e.type="button",e.classList.add("ml-3","jsoneditor-twbs4-text-button"),e.setAttribute("data-toggle","tooltip"),e.setAttribute("data-placement","auto"),e.title=t;var n=document.createTextNode("ⓘ");return e.appendChild(n),"bootstrap"===this.options.tooltip?window.jQuery&&window.jQuery().tooltip?window.jQuery(e).tooltip():console.warn("Could not find popper jQuery plugin of Bootstrap."):"css"===this.options.tooltip&&e.classList.add("je-tooltip"),e}},{key:"getCheckbox",value:function(){return this.getFormInputField("checkbox")}},{key:"getMultiCheckboxHolder",value:function(t,e,n,r){var i=document.createElement("div");i.classList.add("form-group"),e&&(i.appendChild(e),r&&e.appendChild(r));var o=document.createElement("div");return Object.values(t).forEach((function(t){var e=t.firstChild;o.appendChild(e)})),i.appendChild(o),n&&i.appendChild(n),i}},{key:"getFormRadio",value:function(t){var e=this.getFormInputField("radio");for(var n in t)e.setAttribute(n,t[n]);return!1===this.options.custom_forms?e.classList.add("form-check-input"):e.classList.add("custom-control-input"),e}},{key:"getFormRadioLabel",value:function(t,e){var n=document.createElement("label");return!1===this.options.custom_forms?n.classList.add("form-check-label"):n.classList.add("custom-control-label"),n.appendChild(document.createTextNode(t)),n}},{key:"getFormRadioControl",value:function(t,e,n){var r=document.createElement("div");return!1===this.options.custom_forms?r.classList.add("form-check"):r.classList.add("custom-control","custom-radio"),r.appendChild(e),r.appendChild(t),n&&(!1===this.options.custom_forms?r.classList.add("form-check-inline"):r.classList.add("custom-control-inline")),r}},{key:"getIndentedPanel",value:function(){var t=document.createElement("div");return t.classList.add("card","card-body","mb-3"),this.options.object_background&&t.classList.add(this.options.object_background),this.options.object_text&&t.classList.add(this.options.object_text),t}},{key:"getFormInputDescription",value:function(t){var e=document.createElement("small");return e.classList.add("form-text"),window.DOMPurify?e.innerHTML=window.DOMPurify.sanitize(t):e.textContent=this.cleanText(t),e}},{key:"getHeader",value:function(t){var e=document.createElement("h3");return e.classList.add("card-title"),"string"==typeof t?e.textContent=t:e.appendChild(t),e.style.display="inline-block",e}},{key:"getHeaderButtonHolder",value:function(){return this.getButtonHolder()}},{key:"getButtonHolder",value:function(){var t=document.createElement("span");return t.classList.add("btn-group"),t}},{key:"getFormButtonHolder",value:function(t){var e=this.getButtonHolder();return e.classList.add("d-block"),"center"===t?e.classList.add("text-center"):"right"===t&&e.classList.add("text-right"),e}},{key:"getButton",value:function(t,e,n){var r=ys(gs(o.prototype),"getButton",this).call(this,t,e,n);return r.classList.add("btn","btn-secondary","btn-sm"),r}},{key:"getTable",value:function(){var t=document.createElement("table");return t.classList.add("table","table-sm"),this.options.table_border&&t.classList.add("table-bordered"),this.options.table_zebrastyle&&t.classList.add("table-striped"),t}},{key:"getErrorMessage",value:function(t){var e=document.createElement("div");return e.classList.add("alert","alert-danger"),e.setAttribute("role","alert"),e.appendChild(document.createTextNode(t)),e}},{key:"addInputError",value:function(t,e){t.controlgroup&&(t.classList.add("is-invalid"),t.errmsg||(t.errmsg=document.createElement("p"),t.errmsg.classList.add("invalid-feedback"),t.controlgroup.appendChild(t.errmsg),t.errmsg.style.display="block"),t.errmsg.style.display="block",t.errmsg.textContent=e)}},{key:"removeInputError",value:function(t){t.errmsg&&(t.errmsg.style.display="none",t.classList.remove("is-invalid"))}},{key:"getTabHolder",value:function(t){var e=document.createElement("div"),n=void 0===t?"":t;return e.innerHTML="<div class='col-md-2' id='".concat(n,"'><ul class='nav flex-column nav-pills'></ul></div><div class='col-md-10'><div class='tab-content' id='").concat(n,"'></div></div>"),e.classList.add("row"),e}},{key:"addTab",value:function(t,e){t.children[0].children[0].appendChild(e)}},{key:"getTabContentHolder",value:function(t){return t.children[1].children[0]}},{key:"getTopTabHolder",value:function(t){var e=void 0===t?"":t,n=document.createElement("div");return n.classList.add("card"),n.innerHTML="<div class='card-header'><ul class='nav nav-tabs card-header-tabs' id='".concat(e,"'></ul></div><div class='card-body'><div class='tab-content' id='").concat(e,"'></div></div>"),n}},{key:"getTab",value:function(t,e){var n=document.createElement("li");n.classList.add("nav-item");var r=document.createElement("a");return r.classList.add("nav-link"),r.setAttribute("href","#".concat(e)),r.setAttribute("data-toggle","tab"),r.appendChild(t),n.appendChild(r),n}},{key:"getTopTab",value:function(t,e){var n=document.createElement("li");n.classList.add("nav-item");var r=document.createElement("a");return r.classList.add("nav-link"),r.setAttribute("href","#".concat(e)),r.setAttribute("data-toggle","tab"),r.appendChild(t),n.appendChild(r),n}},{key:"getTabContent",value:function(){var t=document.createElement("div");return t.classList.add("tab-pane"),t.setAttribute("role","tabpanel"),t}},{key:"getTopTabContent",value:function(){var t=document.createElement("div");return t.classList.add("tab-pane"),t.setAttribute("role","tabpanel"),t}},{key:"markTabActive",value:function(t){t.tab.firstChild.classList.add("active"),void 0!==t.rowPane?t.rowPane.classList.add("active"):t.container.classList.add("active")}},{key:"markTabInactive",value:function(t){t.tab.firstChild.classList.remove("active"),void 0!==t.rowPane?t.rowPane.classList.remove("active"):t.container.classList.remove("active")}},{key:"insertBasicTopTab",value:function(t,e){e.children[0].children[0].insertBefore(t,e.children[0].children[0].firstChild)}},{key:"addTopTab",value:function(t,e){t.children[0].children[0].appendChild(e)}},{key:"getTopTabContentHolder",value:function(t){return t.children[1].children[0]}},{key:"getFirstTab",value:function(t){return t.firstChild.firstChild.firstChild}},{key:"getProgressBar",value:function(){var t=document.createElement("div");t.classList.add("progress");var e=document.createElement("div");return e.classList.add("progress-bar"),e.setAttribute("role","progressbar"),e.setAttribute("aria-valuenow",0),e.setAttribute("aria-valuemin",0),e.setAttribute("aria-valuenax",100),e.innerHTML="".concat(0,"%"),t.appendChild(e),t}},{key:"updateProgressBar",value:function(t,e){if(t){var n=t.firstChild,r="".concat(e,"%");n.setAttribute("aria-valuenow",e),n.style.width=r,n.innerHTML=r}}},{key:"updateProgressBarUnknown",value:function(t){if(t){var e=t.firstChild;t.classList.add("progress","progress-striped","active"),e.removeAttribute("aria-valuenow"),e.style.width="100%",e.innerHTML=""}}},{key:"getBlockLink",value:function(){var t=document.createElement("a");return t.classList.add("mb-3","d-inline-block"),t}},{key:"getLinksHolder",value:function(){return document.createElement("div")}},{key:"getInputGroup",value:function(t,e){if(t){var n=document.createElement("div");n.classList.add("input-group"),n.appendChild(t);var r=document.createElement("div");r.classList.add("input-group-append"),n.appendChild(r);for(var i=0;i<e.length;i++)e[i].classList.remove("mr-2","btn-secondary"),e[i].classList.add("btn-outline-secondary"),r.appendChild(e[i]);return n}}}])&&fs(e.prototype,n),r&&fs(e,r),o}($a);function ks(t){return(ks="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function xs(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function js(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Os(t,e,n){return(Os="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Rs(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Cs(t,e){return(Cs=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Es(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Rs(t);if(e){var i=Rs(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ss(this,n)}}function Ss(t,e){return!e||"object"!==ks(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Rs(t){return(Rs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}ws.rules={".jsoneditor-twbs4-text-button":"background:none;padding:0;border:0;color:currentColor","td > .form-group":"margin-bottom:0",".json-editor-btn-upload":"margin-top:1rem",".je-noindent .card":"padding:0;border:0",".je-tooltip:hover::before":"display:block;position:absolute;font-size:0.8em;color:%23fff;border-radius:0.2em;content:attr(title);background-color:%23000;margin-top:-2.5em;padding:0.3em",".je-tooltip:hover::after":"display:block;position:absolute;font-size:0.8em;color:%23fff",".select2-container--default .select2-selection--single":"height:calc(1.5em%20%2B%200.75rem%20%2B%202px)",".select2-container--default   .select2-selection--single   .select2-selection__arrow":"height:calc(1.5em%20%2B%200.75rem%20%2B%202px)",".select2-container--default   .select2-selection--single   .select2-selection__rendered":"line-height:calc(1.5em%20%2B%200.75rem%20%2B%202px)",".selectize-control.form-control":"padding:0",".selectize-dropdown.form-control":"padding:0;height:auto",".je-upload-preview img":"float:left;margin:0%200.5rem%200.5rem%200;max-width:100%25;max-height:5rem",".je-dropzone":"position:relative;margin:0.5rem%200;border:2px%20dashed%20black;width:100%25;height:60px;background:teal;transition:all%200.5s",".je-dropzone:before":"position:absolute;content:attr(data-text);color:rgba(0%2C%200%2C%200%2C%200.6);left:50%25;top:50%25;transform:translate(-50%25%2C%20-50%25)",".je-dropzone.valid-dropzone":"background:green",".je-dropzone.invalid-dropzone":"background:red"};var Ps=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Cs(t,e)}(o,t);var e,n,r,i=Es(o);function o(){return xs(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"getTable",value:function(){var t=Os(Rs(o.prototype),"getTable",this).call(this);return t.setAttribute("cellpadding",5),t.setAttribute("cellspacing",0),t}},{key:"getTableHeaderCell",value:function(t){var e=Os(Rs(o.prototype),"getTableHeaderCell",this).call(this,t);return e.classList.add("ui-state-active"),e.style.fontWeight="bold",e}},{key:"getTableCell",value:function(){var t=Os(Rs(o.prototype),"getTableCell",this).call(this);return t.classList.add("ui-widget-content"),t}},{key:"getHeaderButtonHolder",value:function(){var t=this.getButtonHolder();return t.style.marginLeft="10px",t.style.fontSize=".6em",t.style.display="inline-block",t}},{key:"getFormInputDescription",value:function(t){var e=this.getDescription(t);return e.style.marginLeft="10px",e.style.display="inline-block",e}},{key:"getFormControl",value:function(t,e,n,r){var i=Os(Rs(o.prototype),"getFormControl",this).call(this,t,e,n,r);return"checkbox"===e.type?(i.style.lineHeight="25px",i.style.padding="3px 0"):i.style.padding="4px 0 8px 0",i}},{key:"getDescription",value:function(t){var e=document.createElement("span");return e.style.fontSize=".8em",e.style.fontStyle="italic",window.DOMPurify?e.innerHTML=window.DOMPurify.sanitize(t):e.textContent=this.cleanText(t),e}},{key:"getButtonHolder",value:function(){var t=document.createElement("div");return t.classList.add("ui-buttonset"),t.style.fontSize=".7em",t}},{key:"getFormInputLabel",value:function(t,e){var n=document.createElement("label");return n.style.fontWeight="bold",n.style.display="block",n.textContent=t,e&&n.classList.add("required"),n}},{key:"getButton",value:function(t,e,n){var r=document.createElement("button");r.classList.add("ui-button","ui-widget","ui-state-default","ui-corner-all"),e&&!t?(r.classList.add("ui-button-icon-only"),e.classList.add("ui-button-icon-primary","ui-icon-primary"),r.appendChild(e)):e?(r.classList.add("ui-button-text-icon-primary"),e.classList.add("ui-button-icon-primary","ui-icon-primary"),r.appendChild(e)):r.classList.add("ui-button-text-only");var i=document.createElement("span");return i.classList.add("ui-button-text"),i.textContent=t||n||".",r.appendChild(i),r.setAttribute("title",n),r}},{key:"setButtonText",value:function(t,e,n,r){t.innerHTML="",t.classList.add("ui-button","ui-widget","ui-state-default","ui-corner-all"),n&&!e?(t.classList.add("ui-button-icon-only"),n.classList.add("ui-button-icon-primary","ui-icon-primary"),t.appendChild(n)):n?(t.classList.add("ui-button-text-icon-primary"),n.classList.add("ui-button-icon-primary","ui-icon-primary"),t.appendChild(n)):t.classList.add("ui-button-text-only");var i=document.createElement("span");i.classList.add("ui-button-text"),i.textContent=e||r||".",t.appendChild(i),t.setAttribute("title",r)}},{key:"getIndentedPanel",value:function(){var t=document.createElement("div");return t.classList.add("ui-widget-content","ui-corner-all"),t.style.padding="1em 1.4em",t.style.marginBottom="20px",t}},{key:"afterInputReady",value:function(t){if(!t.controls&&(t.controls=this.closest(t,".form-control"),this.queuedInputErrorText)){var e=this.queuedInputErrorText;delete this.queuedInputErrorText,this.addInputError(t,e)}}},{key:"addInputError",value:function(t,e){t.controls?(t.errmsg?t.errmsg.style.display="":(t.errmsg=document.createElement("div"),t.errmsg.classList.add("ui-state-error"),t.controls.appendChild(t.errmsg)),t.errmsg.textContent=e):this.queuedInputErrorText=e}},{key:"removeInputError",value:function(t){t.controls||delete this.queuedInputErrorText,t.errmsg&&(t.errmsg.style.display="none")}},{key:"markTabActive",value:function(t){t.tab.classList.remove("ui-widget-header"),t.tab.classList.add("ui-state-active"),void 0!==t.rowPane?t.rowPane.style.display="":t.container.style.display=""}},{key:"markTabInactive",value:function(t){t.tab.classList.add("ui-widget-header"),t.tab.classList.remove("ui-state-active"),void 0!==t.rowPane?t.rowPane.style.display="none":t.container.style.display="none"}}])&&js(e.prototype,n),r&&js(e,r),o}($a);Ps.rules={'div[data-schemaid="root"]:after':'position:relative;color:red;margin:10px 0;font-weight:600;display:block;width:100%;text-align:center;content:"This is an old JSON-Editor 1.x Theme and might not display elements correctly when used with the 2.x version"'};function Ls(t){return(Ls="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Ts(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function As(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Is(t,e){return(Is=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Ds(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Bs(t);if(e){var i=Bs(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ns(this,n)}}function Ns(t,e){return!e||"object"!==Ls(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Bs(t){return(Bs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var Fs=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Is(t,e)}(o,t);var e,n,r,i=Ds(o);function o(){return Ts(this,o),i.apply(this,arguments)}return e=o,(n=[{key:"addInputError",value:function(t,e){if(t.errmsg)t.errmsg.style.display="block";else{var n=this.closest(t,".form-control");t.errmsg=document.createElement("div"),t.errmsg.setAttribute("class","errmsg"),n.appendChild(t.errmsg)}t.errmsg.innerHTML="",t.errmsg.appendChild(document.createTextNode(e))}},{key:"removeInputError",value:function(t){t.style&&(t.style.borderColor=""),t.errmsg&&(t.errmsg.style.display="none")}}])&&As(e.prototype,n),r&&As(e,r),o}($a);Fs.rules={".je-upload-preview img":"float:left;margin:0%200.5rem%200.5rem%200;max-width:100%25;max-height:5rem",".je-dropzone":"position:relative;margin:0.5rem%200;border:2px%20dashed%20black;width:100%25;height:60px;background:teal;transition:all%200.5s",".je-dropzone:before":"position:absolute;content:attr(data-text);color:rgba(0%2C%200%2C%200%2C%200.6);left:50%25;top:50%25;transform:translate(-50%25%2C%20-50%25)",".je-dropzone.valid-dropzone":"background:green",".je-dropzone.invalid-dropzone":"background:red"};function Vs(t){return(Vs="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Hs(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function zs(t,e,n){return(zs="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=Gs(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Ms(t,e){return(Ms=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function qs(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=Gs(t);if(e){var i=Gs(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Us(this,n)}}function Us(t,e){return!e||"object"!==Vs(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function Gs(t){return(Gs=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var $s={disable_theme_rules:!1,label_bold:!0,align_bottom:!1,object_indent:!1,object_border:!1,table_border:!1,table_zebrastyle:!1,input_size:"normal"},Ws=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ms(t,e)}(o,t);var e,n,r,i=qs(o);function o(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),i.call(this,t,$s)}return e=o,(n=[{key:"setGridColumnSize",value:function(t,e,n){t.classList.add("col-".concat(e)),n&&t.classList.add("col-mx-auto")}},{key:"getGridContainer",value:function(){var t=document.createElement("div");return t.classList.add("container"),this.options.object_indent||t.classList.add("je-noindent"),t}},{key:"getGridRow",value:function(){var t=document.createElement("div");return t.classList.add("columns"),t}},{key:"getGridColumn",value:function(){var t=document.createElement("div");return t.classList.add("column"),this.options.align_bottom&&t.classList.add("je-align-bottom"),t}},{key:"getIndentedPanel",value:function(){var t=document.createElement("div");return t.classList.add("je-panel"),this.options.object_border&&t.classList.add("je-border"),t}},{key:"getTopIndentedPanel",value:function(){var t=document.createElement("div");return t.classList.add("je-panel-top"),this.options.object_border&&t.classList.add("je-border"),t}},{key:"getHeaderButtonHolder",value:function(){return this.getButtonHolder()}},{key:"getButtonHolder",value:function(){var t=zs(Gs(o.prototype),"getButtonHolder",this).call(this);return t.classList.add("btn-group"),t}},{key:"getFormButtonHolder",value:function(t){var e=zs(Gs(o.prototype),"getFormButtonHolder",this).call(this);return e.classList.remove("btn-group"),e.classList.add("d-block"),"center"===t?e.classList.add("text-center"):"right"===t?e.classList.add("text-right"):e.classList.add("text-left"),e}},{key:"getFormButton",value:function(t,e,n){var r=zs(Gs(o.prototype),"getFormButton",this).call(this,t,e,n);return r.classList.add("btn","btn-primary","mx-2","my-1"),"small"!==this.options.input_size&&r.classList.remove("btn-sm"),"large"===this.options.input_size&&r.classList.add("btn-lg"),r}},{key:"getButton",value:function(t,e,n){var r=zs(Gs(o.prototype),"getButton",this).call(this,t,e,n);return r.classList.add("btn","btn-sm","btn-primary","mr-2","my-1"),r}},{key:"getHeader",value:function(t){var e=document.createElement("h4");return"string"==typeof t?e.textContent=t:e.appendChild(t),e.style.display="inline-block",e}},{key:"getFormInputDescription",value:function(t){var e=zs(Gs(o.prototype),"getFormInputDescription",this).call(this,t);return e.classList.add("je-desc","hide-sm"),e}},{key:"getFormInputLabel",value:function(t,e){var n=zs(Gs(o.prototype),"getFormInputLabel",this).call(this,t,e);return this.options.label_bold&&n.classList.add("je-label"),n}},{key:"getCheckbox",value:function(){return this.getFormInputField("checkbox")}},{key:"getCheckboxLabel",value:function(t,e){var n=zs(Gs(o.prototype),"getCheckboxLabel",this).call(this,t,e),r=document.createElement("i");return r.classList.add("form-icon"),n.classList.add("form-checkbox","mr-5"),n.insertBefore(r,n.firstChild),n}},{key:"getFormCheckboxControl",value:function(t,e,n){return t.insertBefore(e,t.firstChild),n&&t.classList.add("form-inline"),t}},{key:"getMultiCheckboxHolder",value:function(t,e,n,r){return console.log("mul"),zs(Gs(o.prototype),"getMultiCheckboxHolder",this).call(this,t,e,n,r)}},{key:"getFormRadio",value:function(t){var e=this.getFormInputField("radio");for(var n in t)e.setAttribute(n,t[n]);return e}},{key:"getFormRadioLabel",value:function(t,e){var n=zs(Gs(o.prototype),"getFormRadioLabel",this).call(this,t,e),r=document.createElement("i");return r.classList.add("form-icon"),n.classList.add("form-radio"),n.insertBefore(r,n.firstChild),n}},{key:"getFormRadioControl",value:function(t,e,n){return t.insertBefore(e,t.firstChild),n&&t.classList.add("form-inline"),t}},{key:"getFormInputField",value:function(t){var e=zs(Gs(o.prototype),"getFormInputField",this).call(this,t);return["checkbox","radio"].includes(t)||e.classList.add("form-input"),e}},{key:"getRangeInput",value:function(t,e,n){var r=this.getFormInputField("range");return r.classList.add("slider"),r.classList.remove("form-input"),r.setAttribute("oninput",'this.setAttribute("value", this.value)'),r.setAttribute("min",t),r.setAttribute("max",e),r.setAttribute("step",n),r}},{key:"getRangeControl",value:function(t,e){var n=zs(Gs(o.prototype),"getRangeControl",this).call(this,t,e);return n.classList.add("text-center"),n}},{key:"getSelectInput",value:function(t,e){var n=zs(Gs(o.prototype),"getSelectInput",this).call(this,t);return n.classList.add("form-select"),n}},{key:"getTextareaInput",value:function(){var t=document.createElement("textarea");return t.classList.add("form-input"),t}},{key:"getFormControl",value:function(t,e,n,r){var i=document.createElement("div");return i.classList.add("form-group"),t&&("checkbox"===e.type&&(t=this.getFormCheckboxControl(t,e,!1)),t.classList.add("form-label"),i.appendChild(t),r&&i.insertBefore(r,i.firstChild)),"small"===this.options.input_size?e.classList.add("input-sm","select-sm"):"large"===this.options.input_size&&e.classList.add("input-lg","select-lg"),"checkbox"!==e.type&&i.appendChild(e),n&&i.appendChild(n),i}},{key:"getInputGroup",value:function(t,e){if(t){var n=document.createElement("div");n.classList.add("input-group"),n.appendChild(t);for(var r=0;r<e.length;r++)e[r].classList.add("input-group-btn"),e[r].classList.remove("btn-sm","mr-2","my-1"),n.appendChild(e[r]);return n}}},{key:"getInfoButton",value:function(t){var e=document.createElement("div");e.classList.add("popover","popover-left","float-right");var n=document.createElement("button");n.classList.add("btn","btn-secondary","btn-info","btn-action","s-circle"),n.setAttribute("tabindex","-1"),e.appendChild(n);var r=document.createTextNode("I");n.appendChild(r);var i=document.createElement("div");i.classList.add("popover-container"),e.appendChild(i);var o=document.createElement("div");o.classList.add("card"),i.appendChild(o);var a=document.createElement("div");return a.classList.add("card-body"),a.innerHTML=t,o.appendChild(a),e}},{key:"getTable",value:function(){var t=zs(Gs(o.prototype),"getTable",this).call(this);return t.classList.add("table","table-scroll"),this.options.table_border&&t.classList.add("je-table-border"),this.options.table_zebrastyle&&t.classList.add("table-striped"),t}},{key:"getProgressBar",value:function(){var t=zs(Gs(o.prototype),"getProgressBar",this).call(this);return t.classList.add("progress"),t}},{key:"getTabHolder",value:function(t){var e=void 0===t?"":t,n=document.createElement("div");return n.classList.add("columns"),n.innerHTML='<div class="column col-2"></div><div class="column col-10 content" id="'.concat(e,'"></div>'),n}},{key:"getTopTabHolder",value:function(t){var e=void 0===t?"":t,n=document.createElement("div");return n.innerHTML='<ul class="tab"></ul><div class="content" id="'.concat(e,'"></div>'),n}},{key:"getTab",value:function(t,e){var n=document.createElement("a");return n.classList.add("btn","btn-secondary","btn-block"),n.setAttribute("href","#".concat(e)),n.appendChild(t),n}},{key:"getTopTab",value:function(t,e){var n=document.createElement("li");n.id=e,n.classList.add("tab-item");var r=document.createElement("a");return r.setAttribute("href","#".concat(e)),r.appendChild(t),n.appendChild(r),n}},{key:"markTabActive",value:function(t){t.tab.classList.add("active"),void 0!==t.rowPane?t.rowPane.style.display="":t.container.style.display=""}},{key:"markTabInactive",value:function(t){t.tab.classList.remove("active"),void 0!==t.rowPane?t.rowPane.style.display="none":t.container.style.display="none"}},{key:"afterInputReady",value:function(t){if("select"===t.localName)if(t.classList.contains("selectized")){var e=t.nextSibling;e&&(e.classList.remove("form-select"),Array.from(e.querySelectorAll(".form-select")).forEach((function(t){t.classList.remove("form-select")})))}else if(t.classList.contains("select2-hidden-accessible")){var n=t.nextSibling;n&&n.querySelector(".select2-selection--single")&&n.classList.add("form-select")}t.controlgroup||(t.controlgroup=this.closest(t,".form-group"),this.closest(t,".compact")&&(t.controlgroup.style.marginBottom=0))}},{key:"addInputError",value:function(t,e){t.controlgroup&&(t.controlgroup.classList.add("has-error"),t.errmsg||(t.errmsg=document.createElement("p"),t.errmsg.classList.add("form-input-hint"),t.controlgroup.appendChild(t.errmsg)),t.errmsg.classList.remove("d-hide"),t.errmsg.textContent=e)}},{key:"removeInputError",value:function(t){t.errmsg&&(t.errmsg.classList.add("d-hide"),t.controlgroup.classList.remove("has-error"))}}])&&Hs(e.prototype,n),r&&Hs(e,r),o}($a);Ws.rules={"*":"--primary-color:%235755d9;--gray-color:%23bcc3ce;--light-color:%23fff",".slider:focus":"box-shadow:none","h4 > label + .btn-group":"margin-left:1rem",".text-right > button":"margin-right:0%20!important",".text-left > button":"margin-left:0%20!important",".property-selector":"font-size:0.7rem;font-weight:normal;max-height:260px%20!important;width:395px%20!important",".property-selector .form-checkbox":"margin:0",textarea:"width:100%25;min-height:2rem;resize:vertical",table:"border-collapse:collapse",".table td":"padding:0.4rem%200.4rem",".mr-5":"margin-right:1rem%20!important","div[data-schematype]:not([data-schematype='object'])":"transition:0.5s","div[data-schematype]:not([data-schematype='object']):hover":"background-color:%23eee",".je-table-border td":"border:0.05rem%20solid%20%23dadee4%20!important",".btn-info":"font-size:0.5rem;font-weight:bold;height:0.8rem;padding:0.15rem%200;line-height:0.8;margin:0.3rem%200%200.3rem%200.1rem",".je-label + select":"min-width:5rem",".je-label":"font-weight:600",".btn-action.btn-info":"width:0.8rem",".je-border":"border:0.05rem%20solid%20%23dadee4",".je-panel":"padding:0.2rem;margin:0.2rem;background-color:rgba(218%2C%20222%2C%20228%2C%200.1)",".je-panel-top":"padding:0.2rem;margin:0.2rem;background-color:rgba(218%2C%20222%2C%20228%2C%200.1)",".required:after":"content:%22%20*%22;color:red;font:inherit",".je-align-bottom":"margin-top:auto",".je-desc":"font-size:smaller;margin:0.2rem%200",".je-upload-preview img":"float:left;margin:0%200.5rem%200.5rem%200;max-width:100%25;max-height:5rem;border:3px%20solid%20white;box-shadow:0px%200px%208px%20rgba(0%2C%200%2C%200%2C%200.3);box-sizing:border-box",".je-dropzone":"position:relative;margin:0.5rem%200;border:2px%20dashed%20black;width:100%25;height:60px;background:teal;transition:all%200.5s",".je-dropzone:before":"position:absolute;content:attr(data-text);color:rgba(0%2C%200%2C%200%2C%200.6);left:50%25;top:50%25;transform:translate(-50%25%2C%20-50%25)",".je-dropzone.valid-dropzone":"background:green",".je-dropzone.invalid-dropzone":"background:red",".columns .container.je-noindent":"padding-left:0;padding-right:0",".selectize-control.multi .item":"background:var(--primary-color)%20!important",".select2-container--default   .select2-selection--single   .select2-selection__arrow":"display:none",".select2-container--default .select2-selection--single":"border:none",".select2-container .select2-selection--single .select2-selection__rendered":"padding:0",".select2-container .select2-search--inline .select2-search__field":"margin-top:0",".select2-container--default.select2-container--focus   .select2-selection--multiple":"border:0.05rem%20solid%20var(--gray-color)",".select2-container--default   .select2-selection--multiple   .select2-selection__choice":"margin:0.4rem%200.2rem%200.2rem%200;padding:2px%205px;background-color:var(--primary-color);color:var(--light-color)",".select2-container--default .select2-search--inline .select2-search__field":"line-height:normal",".choices":"margin-bottom:auto",".choices__list--multiple .choices__item":"border:none;background-color:var(--primary-color);color:var(--light-color)",".choices[data-type*='select-multiple'] .choices__button":"border-left:0.05rem%20solid%20%232826a6",".choices__inner":"font-size:inherit;min-height:20px;padding:4px%207.5px%204px%203.75px",".choices[data-type*='select-one'] .choices__inner":"padding-bottom:4px",".choices__list--dropdown .choices__item":"font-size:inherit"};function Js(t){return(Js="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function Zs(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function Qs(t,e,n){return(Qs="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=tl(t)););return t}(t,e);if(r){var i=Object.getOwnPropertyDescriptor(r,e);return i.get?i.get.call(n):i.value}})(t,e,n||t)}function Ys(t,e){return(Ys=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function Xs(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(t){return!1}}();return function(){var n,r=tl(t);if(e){var i=tl(this).constructor;n=Reflect.construct(r,arguments,i)}else n=r.apply(this,arguments);return Ks(this,n)}}function Ks(t,e){return!e||"object"!==Js(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function tl(t){return(tl=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var el={disable_theme_rules:!1,label_bold:!1,object_panel_default:!0,object_indent:!0,object_border:!1,table_border:!1,table_hdiv:!1,table_zebrastyle:!1,input_size:"small",enable_compact:!1},nl=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&Ys(t,e)}(o,t);var e,n,r,i=Xs(o);function o(t){return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,o),i.call(this,t,el)}return e=o,(n=[{key:"getGridContainer",value:function(){var t=document.createElement("div");return t.classList.add("flex","flex-col","w-full"),this.options.object_indent||t.classList.add("je-noindent"),t}},{key:"getGridRow",value:function(){var t=document.createElement("div");return t.classList.add("flex","flex-wrap","w-full"),t}},{key:"getGridColumn",value:function(){var t=document.createElement("div");return t.classList.add("flex","flex-col"),t}},{key:"setGridColumnSize",value:function(t,e,n){e>0&&e<12?t.classList.add("w-".concat(e,"/12"),"px-1"):t.classList.add("w-full","px-1"),n&&(t.style.marginLeft="".concat(100/12*n,"%"))}},{key:"getIndentedPanel",value:function(){var t=document.createElement("div");return this.options.object_panel_default?t.classList.add("w-full","p-1"):t.classList.add("relative","flex","flex-col","rounded","break-words","border","bg-white","border-0","border-blue-400","p-1","shadow-md"),this.options.object_border&&t.classList.add("je-border"),t}},{key:"getTopIndentedPanel",value:function(){var t=document.createElement("div");return this.options.object_panel_default?t.classList.add("w-full","m-2"):t.classList.add("relative","flex","flex-col","rounded","break-words","border","bg-white","border-0","border-blue-400","p-1","shadow-md"),this.options.object_border&&t.classList.add("je-border"),t}},{key:"getTitle",value:function(){return this.schema.title}},{key:"getSelectInput",value:function(t,e){var n=Qs(tl(o.prototype),"getSelectInput",this).call(this,t);return e?n.classList.add("form-multiselect","block","py-0","h-auto","w-full","px-1","text-sm","text-black","leading-normal","bg-white","border","border-grey","rounded"):n.classList.add("form-select","block","py-0","h-6","w-full","px-1","text-sm","text-black","leading-normal","bg-white","border","border-grey","rounded"),this.options.enable_compact&&n.classList.add("compact"),n}},{key:"afterInputReady",value:function(t){t.controlgroup||(t.controlgroup=this.closest(t,".form-group"),this.closest(t,".compact")&&(t.controlgroup.style.marginBottom=0))}},{key:"getTextareaInput",value:function(){var t=Qs(tl(o.prototype),"getTextareaInput",this).call(this);return t.classList.add("block","w-full","px-1","text-sm","leading-normal","bg-white","text-black","border","border-grey","rounded"),this.options.enable_compact&&t.classList.add("compact"),t.style.height=0,t}},{key:"getRangeInput",value:function(t,e,n){var r=this.getFormInputField("range");return r.classList.add("slider"),this.options.enable_compact&&r.classList.add("compact"),r.setAttribute("oninput",'this.setAttribute("value", this.value)'),r.setAttribute("min",t),r.setAttribute("max",e),r.setAttribute("step",n),r}},{key:"getRangeControl",value:function(t,e){var n=Qs(tl(o.prototype),"getRangeControl",this).call(this,t,e);return n.classList.add("text-center","text-black"),n}},{key:"getCheckbox",value:function(){var t=this.getFormInputField("checkbox");return t.classList.add("form-checkbox","text-red-600"),t}},{key:"getCheckboxLabel",value:function(t,e){var n=Qs(tl(o.prototype),"getCheckboxLabel",this).call(this,t,e);return n.classList.add("inline-flex","items-center"),n}},{key:"getFormCheckboxControl",value:function(t,e,n){return t.insertBefore(e,t.firstChild),n&&t.classList.add("inline-flex flex-row"),t}},{key:"getMultiCheckboxHolder",value:function(t,e,n,r){var i=Qs(tl(o.prototype),"getMultiCheckboxHolder",this).call(this,t,e,n,r);return i.classList.add("inline-flex","flex-col"),i}},{key:"getFormRadio",value:function(t){var e=this.getFormInputField("radio");for(var n in e.classList.add("form-radio","text-red-600"),t)e.setAttribute(n,t[n]);return e}},{key:"getFormRadioLabel",value:function(t,e){var n=Qs(tl(o.prototype),"getFormRadioLabel",this).call(this,t,e);return n.classList.add("inline-flex","items-center","mr-2"),n}},{key:"getFormRadioControl",value:function(t,e,n){return t.insertBefore(e,t.firstChild),n&&t.classList.add("form-radio"),t}},{key:"getRadioHolder",value:function(t,e,n,r,i){var a=Qs(tl(o.prototype),"getRadioHolder",this).call(this,e,n,r,i);return"h"===t.options.layout?a.classList.add("inline-flex","flex-row"):a.classList.add("inline-flex","flex-col"),a}},{key:"getFormInputLabel",value:function(t,e){var n=Qs(tl(o.prototype),"getFormInputLabel",this).call(this,t,e);return this.options.label_bold?n.classList.add("font-bold"):n.classList.add("required"),n}},{key:"getFormInputField",value:function(t){var e=Qs(tl(o.prototype),"getFormInputField",this).call(this,t);return["checkbox","radio"].includes(t)||e.classList.add("block","w-full","px-1","text-black","text-sm","leading-normal","bg-white","border","border-grey","rounded"),this.options.enable_compact&&e.classList.add("compact"),e}},{key:"getFormInputDescription",value:function(t){var e=document.createElement("p");return e.classList.add("block","mt-1","text-xs"),window.DOMPurify?e.innerHTML=window.DOMPurify.sanitize(t):e.textContent=this.cleanText(t),e}},{key:"getFormControl",value:function(t,e,n,r){var i=document.createElement("div");return i.classList.add("form-group","mb-1","w-full"),t&&(t.classList.add("text-xs"),"checkbox"===e.type&&(e.classList.add("form-checkbox","text-xs","text-red-600","mr-1"),t.classList.add("items-center","flex"),t=this.getFormCheckboxControl(t,e,!1,r)),"radio"===e.type&&(e.classList.add("form-radio","text-red-600","mr-1"),t.classList.add("items-center","flex"),t=this.getFormRadioControl(t,e,!1,r)),i.appendChild(t),!["checkbox","radio"].includes(e.type)&&r&&i.appendChild(r)),["checkbox","radio"].includes(e.type)||("small"===this.options.input_size?e.classList.add("text-xs"):"normal"===this.options.input_size?e.classList.add("text-base"):"large"===this.options.input_size&&e.classList.add("text-xl"),i.appendChild(e)),n&&i.appendChild(n),i}},{key:"getHeaderButtonHolder",value:function(){var t=this.getButtonHolder();return t.classList.add("text-sm"),t}},{key:"getButtonHolder",value:function(){var t=document.createElement("div");return t.classList.add("flex","relative","inline-flex","align-middle"),t}},{key:"getButton",value:function(t,e,n){var r=Qs(tl(o.prototype),"getButton",this).call(this,t,e,n);return r.classList.add("inline-block","align-middle","text-center","text-sm","bg-blue-700","text-white","py-1","pr-1","m-2","shadow","select-none","whitespace-no-wrap","rounded"),r}},{key:"getInfoButton",value:function(t){var e=document.createElement("a");e.classList.add("tooltips","float-right"),e.innerHTML="ⓘ";var n=document.createElement("span");return n.innerHTML=t,e.appendChild(n),e}},{key:"getTable",value:function(){var t=Qs(tl(o.prototype),"getTable",this).call(this);return this.options.table_border?t.classList.add("je-table-border"):t.classList.add("table","border","p-0"),t}},{key:"getTableRow",value:function(){var t=Qs(tl(o.prototype),"getTableRow",this).call(this);return this.options.table_border&&t.classList.add("je-table-border"),this.options.table_zebrastyle&&t.classList.add("je-table-zebra"),t}},{key:"getTableHeaderCell",value:function(t){var e=Qs(tl(o.prototype),"getTableHeaderCell",this).call(this,t);return this.options.table_border?e.classList.add("je-table-border"):this.options.table_hdiv?e.classList.add("je-table-hdiv"):e.classList.add("text-xs","border","p-0","m-0"),e}},{key:"getTableCell",value:function(){var t=Qs(tl(o.prototype),"getTableCell",this).call(this);return this.options.table_border?t.classList.add("je-table-border"):this.options.table_hdiv?t.classList.add("je-table-hdiv"):t.classList.add("border-0","p-0","m-0"),t}},{key:"addInputError",value:function(t,e){t.controlgroup&&(t.controlgroup.classList.add("has-error"),t.classList.add("bg-red-600"),t.errmsg?t.errmsg.style.display="":(t.errmsg=document.createElement("p"),t.errmsg.classList.add("block","mt-1","text-xs","text-red"),t.controlgroup.appendChild(t.errmsg)),t.errmsg.textContent=e)}},{key:"removeInputError",value:function(t){t.errmsg&&(t.errmsg.style.display="none",t.classList.remove("bg-red-600"),t.controlgroup.classList.remove("has-error"))}},{key:"getTabHolder",value:function(t){var e=document.createElement("div"),n=void 0===t?"":t;return e.innerHTML="<div class='w-2/12' id='".concat(n,"'><ul class='list-reset pl-0 mb-0'></ul></div><div class='w-10/12' id='").concat(n,"'></div>"),e.classList.add("flex"),e}},{key:"addTab",value:function(t,e){t.children[0].children[0].appendChild(e)}},{key:"getTopTabHolder",value:function(t){var e=void 0===t?"":t,n=document.createElement("div");return n.innerHTML="<ul class='nav-tabs flex list-reset pl-0 mb-0 border-b border-grey-light' id='".concat(e,"'></ul><div class='p-6 block' id='").concat(e,"'></div>"),n}},{key:"getTab",value:function(t,e){var n=document.createElement("li");n.classList.add("nav-item","flex-col","text-center","text-white","bg-blue-500","shadow-md","border","p-2","mb-2","mr-2","hover:bg-blue-400","rounded");var r=document.createElement("a");return r.classList.add("nav-link","text-center"),r.setAttribute("href","#".concat(e)),r.setAttribute("data-toggle","tab"),r.appendChild(t),n.appendChild(r),n}},{key:"getTopTab",value:function(t,e){var n=document.createElement("li");n.classList.add("nav-item","flex","border-l","border-t","border-r");var r=document.createElement("a");return r.classList.add("nav-link","-mb-px","flex-row","text-center","bg-white","p-2","hover:bg-blue-400","rounded-t"),r.setAttribute("href","#".concat(e)),r.setAttribute("data-toggle","tab"),r.appendChild(t),n.appendChild(r),n}},{key:"getTabContent",value:function(){var t=document.createElement("div");return t.setAttribute("role","tabpanel"),t}},{key:"getTopTabContent",value:function(){var t=document.createElement("div");return t.setAttribute("role","tabpanel"),t}},{key:"markTabActive",value:function(t){t.tab.firstChild.classList.add("block"),!0===t.tab.firstChild.classList.contains("border-b")?(t.tab.firstChild.classList.add("border-b-0"),t.tab.firstChild.classList.remove("border-b")):t.tab.firstChild.classList.add("border-b-0"),!0===t.container.classList.contains("hidden")?(t.container.classList.remove("hidden"),t.container.classList.add("block")):t.container.classList.add("block")}},{key:"markTabInactive",value:function(t){!0===t.tab.firstChild.classList.contains("border-b-0")?(t.tab.firstChild.classList.add("border-b"),t.tab.firstChild.classList.remove("border-b-0")):t.tab.firstChild.classList.add("border-b"),!0===t.container.classList.contains("block")&&(t.container.classList.remove("block"),t.container.classList.add("hidden"))}},{key:"getProgressBar",value:function(){var t=document.createElement("div");t.classList.add("progress");var e=document.createElement("div");return e.classList.add("bg-blue","leading-none","py-1","text-xs","text-center","text-white"),e.setAttribute("role","progressbar"),e.setAttribute("aria-valuenow",0),e.setAttribute("aria-valuemin",0),e.setAttribute("aria-valuenax",100),e.innerHTML="".concat(0,"%"),t.appendChild(e),t}},{key:"updateProgressBar",value:function(t,e){if(t){var n=t.firstChild,r="".concat(e,"%");n.setAttribute("aria-valuenow",e),n.style.width=r,n.innerHTML=r}}},{key:"updateProgressBarUnknown",value:function(t){if(t){var e=t.firstChild;t.classList.add("progress","bg-blue","leading-none","py-1","text-xs","text-center","text-white","block"),e.removeAttribute("aria-valuenow"),e.classList.add("w-full"),e.innerHTML=""}}},{key:"getInputGroup",value:function(t,e){if(t){var n=document.createElement("div");n.classList.add("relative","items-stretch","w-full"),n.appendChild(t);var r=document.createElement("div");r.classList.add("-mr-1"),n.appendChild(r);for(var i=0;i<e.length;i++)r.appendChild(e[i]);return n}}}])&&Zs(e.prototype,n),r&&Zs(e,r),o}($a);nl.rules={".slider":"-webkit-appearance:none;-moz-appearance:none;appearance:none;background:transparent;display:block;border:none;height:1.2rem;width:100%25",".slider:focus":"box-shadow:0%200%200%200%20rgba(87%2C%2085%2C%20217%2C%200.2);outline:none",".slider.tooltip:not([data-tooltip])::after":"content:attr(value)",".slider::-webkit-slider-thumb":"-webkit-appearance:none;background:%23f17405;border-radius:100%25;height:0.6rem;margin-top:-0.25rem;transition:transform%200.2s;width:0.6rem",".slider:active::-webkit-slider-thumb":"transform:scale(1.25);outline:none",".slider::-webkit-slider-runnable-track":"background:%23b2b4b6;border-radius:0.1rem;height:0.1rem;width:100%25","a.tooltips":"position:relative;display:inline","a.tooltips span":"position:absolute;white-space:nowrap;width:auto;padding-left:1rem;padding-right:1rem;color:%23ffffff;background:rgba(56%2C%2056%2C%2056%2C%200.85);height:1.5rem;line-height:1.5rem;text-align:center;visibility:hidden;border-radius:3px","a.tooltips span:after":"content:%22%22;position:absolute;top:50%25;left:100%25;margin-top:-5px;width:0;height:0;border-left:5px%20solid%20rgba(56%2C%2056%2C%2056%2C%200.85);border-top:5px%20solid%20transparent;border-bottom:5px%20solid%20transparent","a:hover.tooltips span":"visibility:visible;opacity:0.9;font-size:0.8rem;right:100%25;top:50%25;margin-top:-12px;margin-right:10px;z-index:999",".json-editor-btntype-properties + div":"font-size:0.8rem;font-weight:normal",textarea:"width:100%25;min-height:2rem;resize:vertical",table:"width:100%25;border-collapse:collapse",".table td":"padding:0rem%200rem","div[data-schematype]:not([data-schematype='object'])":"transition:0.5s","div[data-schematype]:not([data-schematype='object']):hover":"background-color:%23e6f4fe","div[data-schemaid='root']":"position:relative;width:inherit;display:inherit;overflow-x:hidden;z-index:10","select[multiple]":"height:auto","select[multiple].from-select":"height:auto",".je-table-zebra:nth-child(even)":"background-color:%23f2f2f2",".je-table-border":"border:0.5px%20solid%20black",".je-table-hdiv":"border-bottom:1px%20solid%20black",".je-border":"border:0.05rem%20solid%20%233182ce",".je-panel":"width:inherit;padding:0.2rem;margin:0.2rem;background-color:rgba(218%2C%20222%2C%20228%2C%200.1)",".je-panel-top":"width:100%25;padding:0.2rem;margin:0.2rem;background-color:rgba(218%2C%20222%2C%20228%2C%200.1)",".required:after":"content:%22%20*%22;color:red;font:inherit;font-weight:bold",".je-desc":"font-size:smaller;margin:0.2rem%200",".container-xl.je-noindent":"padding-left:0;padding-right:0",".json-editor-btntype-add":"color:white;margin:0.3rem;padding:0.3rem%200.8rem;background-color:%234299e1;box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-webkit-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-moz-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2)",".json-editor-btntype-deletelast":"color:white;margin:0.3rem;padding:0.3rem%200.8rem;background-color:%23e53e3e;box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-webkit-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-moz-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2)",".json-editor-btntype-deleteall":"color:white;margin:0.3rem;padding:0.3rem%200.8rem;background-color:%23000000;box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-webkit-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-moz-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2)",".json-editor-btn-save":"float:right;color:white;margin:0.3rem;padding:0.3rem%200.8rem;background-color:%232b6cb0;box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-webkit-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-moz-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2)",".json-editor-btn-back":"color:white;margin:0.3rem;padding:0.3rem%200.8rem;background-color:%232b6cb0;box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-webkit-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2);-moz-box-shadow:3px%203px%205px%201px%20rgba(4%2C%204%2C%204%2C%200.2)",".json-editor-btntype-delete":"color:%23e53e3e;background-color:rgba(218%2C%20222%2C%20228%2C%200.1);margin:0.03rem;padding:0.1rem",".json-editor-btntype-move":"color:%23000000;background-color:rgba(218%2C%20222%2C%20228%2C%200.1);margin:0.03rem;padding:0.1rem",".json-editor-btn-collapse":"padding:0em%200.8rem;font-size:1.3rem;color:%23e53e3e;background-color:rgba(218%2C%20222%2C%20228%2C%200.1)",".je-upload-preview img":"float:left;margin:0%200.5rem%200.5rem%200;max-width:100%25;max-height:5rem",".je-dropzone":"position:relative;margin:0.5rem%200;border:2px%20dashed%20black;width:100%25;height:60px;background:teal;transition:all%200.5s",".je-dropzone:before":"position:absolute;content:attr(data-text);color:rgba(0%2C%200%2C%200%2C%200.6);left:50%25;top:50%25;transform:translate(-50%25%2C%20-50%25)",".je-dropzone.valid-dropzone":"background:green",".je-dropzone.invalid-dropzone":"background:red"};var rl={html:es,bootstrap3:ps,bootstrap4:ws,jqueryui:Ps,barebones:Fs,spectre:Ws,tailwind:nl},il={".je-float-right-linkholder":"float:right;margin-left:10px",".je-modal":"background-color:white;border:1px%20solid%20black;box-shadow:3px%203px%20black;position:absolute;z-index:10",".je-infobutton-icon":"font-size:16px;font-weight:bold;padding:0.25rem;position:relative;display:inline-block",".je-infobutton-tooltip":"font-size:12px;font-weight:normal;font-family:sans-serif;visibility:hidden;background-color:rgba(50%2C%2050%2C%2050%2C%200.75);margin:0%200.25rem;color:%23fafafa;padding:0.5rem%201rem;border-radius:0.25rem;width:20rem;position:absolute",".je-header":"display:inline-block",".je-upload-preview img":"float:left;margin:0%200.5rem%200.5rem%200;max-width:100%25;max-height:5rem",".je-checkbox":"display:inline-block;width:auto",".je-checkbox-control--compact":"display:inline-block;margin-right:1rem",".je-radio":"display:inline-block;width:auto",".je-radio-control--compact":"display:inline-block;margin-right:1rem",".je-switcher":"background-color:transparent;display:inline-block;font-style:italic;font-weight:normal;height:auto;width:auto;margin-bottom:0;margin-left:5px;padding:0%200%200%203px",".je-textarea":"width:100%25;height:300px;box-sizing:border-box",".je-range-control":"text-align:center",".je-indented-panel":"padding-left:10px;margin-left:10px;border-left:1px%20solid%20%23ccc",".je-indented-panel--top":"padding-left:10px;margin-left:10px",".je-tabholder":"float:left;width:130px",".je-tabholder .content":"margin-left:120px",".je-tabholder--top":"margin-left:10px",".je-tabholder--clear":"clear:both",".je-tab":"border:1px%20solid%20%23ccc;border-width:1px%200%201px%201px;text-align:center;line-height:30px;border-radius:5px;border-bottom-right-radius:0;border-top-right-radius:0;font-weight:bold;cursor:pointer",".je-tab--top":"float:left;border:1px%20solid%20%23ccc;border-width:1px%201px%200px%201px;text-align:center;line-height:30px;border-radius:5px;padding-left:5px;padding-right:5px;border-bottom-right-radius:0;border-bottom-left-radius:0;font-weight:bold;cursor:pointer",".je-block-link":"display:block",".je-media":"width:100%25"};function ol(t){return function(t){if(Array.isArray(t))return al(t)}(t)||function(t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(t))return Array.from(t)}(t)||function(t,e){if(!t)return;if("string"==typeof t)return al(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);"Object"===n&&t.constructor&&(n=t.constructor.name);if("Map"===n||"Set"===n)return Array.from(t);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return al(t,e)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function al(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}function sl(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function ll(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var cl=function(){function t(e){var n=this,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(sl(this,t),!(e instanceof Element))throw new Error("element should be an instance of Element");this.element=e,this.options=f({},t.defaults.options,r),this.ready=!1,this.copyClipboard=null,this.schema=this.options.schema,this.template=this.options.template,this.translate=this.options.translate||t.defaults.translate,this.uuid=0,this.__data={};var i=this.options.theme||t.defaults.theme,o=t.defaults.themes[i];if(!o)throw new Error("Unknown theme ".concat(i));this.element.setAttribute("data-theme",i),this.theme=new o(this);var a=f(il,this.getEditorsRules()),s=function(t,e,r){return r?n.addNewStyleRulesToShadowRoot(t,e,r):n.addNewStyleRules(t,e)};if(!this.theme.options.disable_theme_rules){var l=m(this.element);s("default",a,l),void 0!==o.rules&&s(i,o.rules,l)}var c=t.defaults.iconlibs[this.options.iconlib||t.defaults.iconlib];c&&(this.iconlib=new c),this.root_container=this.theme.getContainer(),this.element.appendChild(this.root_container);var u=document.location.origin+document.location.pathname.toString(),h=new L(this.options),p=document.location.toString();this.expandSchema=function(t,e){return h.expandSchema(t,e)},this.expandRefs=function(t,e){return h.expandRefs(t,e)},this.refs=h.refs,h.load(this.schema,(function(e){var r=n.options.custom_validators?{custom_validators:n.options.custom_validators}:{};n.validator=new C(n,null,r,t.defaults);var i=n.getEditorClass(e);n.root=n.createEditor(i,{jsoneditor:n,schema:e,required:!0,container:n.root_container}),n.root.preBuild(),n.root.build(),n.root.postBuild(),b(n.options,"startval")&&n.root.setValue(n.options.startval),n.validation_results=n.validator.validate(n.root.getValue()),n.root.showValidationErrors(n.validation_results),n.ready=!0,window.requestAnimationFrame((function(){n.ready&&(n.validation_results=n.validator.validate(n.root.getValue()),n.root.showValidationErrors(n.validation_results),n.trigger("ready"),n.trigger("change"))}))}),u,p)}var e,n,r;return e=t,(n=[{key:"getValue",value:function(){if(!this.ready)throw new Error("JSON Editor not ready yet.  Listen for 'ready' event before getting the value");return this.root.getValue()}},{key:"setValue",value:function(t){if(!this.ready)throw new Error("JSON Editor not ready yet.  Listen for 'ready' event before setting the value");return this.root.setValue(t),this}},{key:"validate",value:function(t){if(!this.ready)throw new Error("JSON Editor not ready yet.  Listen for 'ready' event before validating");return 1===arguments.length?this.validator.validate(t):this.validation_results}},{key:"destroy",value:function(){this.destroyed||this.ready&&(this.schema=null,this.options=null,this.root.destroy(),this.root=null,this.root_container=null,this.validator=null,this.validation_results=null,this.theme=null,this.iconlib=null,this.template=null,this.__data=null,this.ready=!1,this.element.innerHTML="",this.element.removeAttribute("data-theme"),this.destroyed=!0)}},{key:"on",value:function(t,e){return this.callbacks=this.callbacks||{},this.callbacks[t]=this.callbacks[t]||[],this.callbacks[t].push(e),this}},{key:"off",value:function(t,e){if(t&&e){this.callbacks=this.callbacks||{},this.callbacks[t]=this.callbacks[t]||[];for(var n=[],r=0;r<this.callbacks[t].length;r++)this.callbacks[t][r]!==e&&n.push(this.callbacks[t][r]);this.callbacks[t]=n}else t?(this.callbacks=this.callbacks||{},this.callbacks[t]=[]):this.callbacks={};return this}},{key:"trigger",value:function(t,e){if(this.callbacks&&this.callbacks[t]&&this.callbacks[t].length)for(var n=0;n<this.callbacks[t].length;n++)this.callbacks[t][n].apply(this,[e]);return this}},{key:"setOption",value:function(t,e){if("show_errors"!==t)throw new Error("Option ".concat(t," must be set during instantiation and cannot be changed later"));return this.options.show_errors=e,this.onChange(),this}},{key:"getEditorsRules",value:function(){return Object.values(t.defaults.editors).reduce((function(t,e){return e.rules?f(t,e.rules):t}),{})}},{key:"getEditorClass",value:function(e){var n;if(e=this.expandSchema(e),t.defaults.resolvers.find((function(r){return(n=r(e))&&t.defaults.editors[n]})),!n)throw new Error("Unknown editor for schema ".concat(JSON.stringify(e)));if(!t.defaults.editors[n])throw new Error("Unknown editor ".concat(n));return t.defaults.editors[n]}},{key:"createEditor",value:function(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return new e(n=f({},e.options||{},n),t.defaults,r)}},{key:"onChange",value:function(){var t=this;if(this.ready&&!this.firing_change)return this.firing_change=!0,window.requestAnimationFrame((function(){t.firing_change=!1,t.ready&&(t.validation_results=t.validator.validate(t.root.getValue()),"never"!==t.options.show_errors?t.root.showValidationErrors(t.validation_results):t.root.showValidationErrors([]),t.trigger("change"))})),this}},{key:"compileTemplate",value:function(e){var n,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.defaults.template;if("string"==typeof r){if(!t.defaults.templates[r])throw new Error("Unknown template engine ".concat(r));if(!(n=t.defaults.templates[r]()))throw new Error("Template engine ".concat(r," missing required library."))}else n=r;if(!n)throw new Error("No template engine set");if(!n.compile)throw new Error("Invalid template engine set");return n.compile(e)}},{key:"_data",value:function(t,e,n){if(3!==arguments.length)return t.hasAttribute("data-jsoneditor-".concat(e))?this.__data[t.getAttribute("data-jsoneditor-".concat(e))]:null;var r;t.hasAttribute("data-jsoneditor-".concat(e))?r=t.getAttribute("data-jsoneditor-".concat(e)):(r=this.uuid++,t.setAttribute("data-jsoneditor-".concat(e),r)),this.__data[r]=n}},{key:"registerEditor",value:function(t){return this.editors=this.editors||{},this.editors[t.path]=t,this}},{key:"unregisterEditor",value:function(t){return this.editors=this.editors||{},this.editors[t.path]=null,this}},{key:"getEditor",value:function(t){if(this.editors)return this.editors[t]}},{key:"watch",value:function(t,e){return this.watchlist=this.watchlist||{},this.watchlist[t]=this.watchlist[t]||[],this.watchlist[t].push(e),this}},{key:"unwatch",value:function(t,e){if(!this.watchlist||!this.watchlist[t])return this;if(!e)return this.watchlist[t]=null,this;for(var n=[],r=0;r<this.watchlist[t].length;r++)this.watchlist[t][r]!==e&&n.push(this.watchlist[t][r]);return this.watchlist[t]=n.length?n:null,this}},{key:"notifyWatchers",value:function(t){if(!this.watchlist||!this.watchlist[t])return this;for(var e=0;e<this.watchlist[t].length;e++)this.watchlist[t][e]()}},{key:"isEnabled",value:function(){return!this.root||this.root.isEnabled()}},{key:"enable",value:function(){this.root.enable()}},{key:"disable",value:function(){this.root.disable()}},{key:"setCopyClipboardContents",value:function(t){this.copyClipboard=t}},{key:"getCopyClipboardContents",value:function(){return this.copyClipboard}},{key:"addNewStyleRules",value:function(t,e){var n=document.querySelector("#theme-".concat(t));n||((n=document.createElement("style")).setAttribute("id","theme-".concat(t)),n.appendChild(document.createTextNode("")),document.head.appendChild(n));for(var r=n.sheet?n.sheet:n.styleSheet,i=this.element.nodeName.toLowerCase();r.cssRules.length>0;)r.deleteRule(0);Object.keys(e).forEach((function(n){var o="default"===t?n:"".concat(i,'[data-theme="').concat(t,'"] ').concat(n);r.insertRule?r.insertRule(o+" {"+decodeURIComponent(e[n])+"}",0):r.addRule&&r.addRule(o,decodeURIComponent(e[n]),0)}))}},{key:"addNewStyleRulesToShadowRoot",value:function(t,e,n){var r=this.element.nodeName.toLowerCase(),i="";Object.keys(e).forEach((function(n){var o="default"===t?n:"".concat(r,'[data-theme="').concat(t,'"] ').concat(n);i+=o+" {"+decodeURIComponent(e[n])+"}\n"}));var o=new CSSStyleSheet;o.replaceSync(i),n.adoptedStyleSheets=[].concat(ol(n.adoptedStyleSheets),[o])}}])&&ll(e.prototype,n),r&&ll(e,r),t}();cl.defaults=c,cl.AbstractEditor=N,cl.AbstractTheme=$a,cl.AbstractIconLib=Ko,Object.assign(cl.defaults.themes,rl),Object.assign(cl.defaults.editors,$o),Object.assign(cl.defaults.templates,Wo),Object.assign(cl.defaults.iconlibs,Ma)}])}));
},{}],3:[function(require,module,exports){

/**
 * Array#filter.
 *
 * @param {Array} arr
 * @param {Function} fn
 * @param {Object=} self
 * @return {Array}
 * @throw TypeError
 */

module.exports = function (arr, fn, self) {
  if (arr.filter) return arr.filter(fn, self);
  if (void 0 === arr || null === arr) throw new TypeError;
  if ('function' != typeof fn) throw new TypeError;
  var ret = [];
  for (var i = 0; i < arr.length; i++) {
    if (!hasOwn.call(arr, i)) continue;
    var val = arr[i];
    if (fn.call(self, val, i, arr)) ret.push(val);
  }
  return ret;
};

var hasOwn = Object.prototype.hasOwnProperty;

},{}],4:[function(require,module,exports){
(function (global){(function (){
'use strict';

var filter = require('array-filter');

module.exports = function availableTypedArrays() {
	return filter([
		'BigInt64Array',
		'BigUint64Array',
		'Float32Array',
		'Float64Array',
		'Int16Array',
		'Int32Array',
		'Int8Array',
		'Uint16Array',
		'Uint32Array',
		'Uint8Array',
		'Uint8ClampedArray'
	], function (typedArray) {
		return typeof global[typedArray] === 'function';
	});
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"array-filter":3}],5:[function(require,module,exports){
'use strict'

exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  var i
  for (i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}

},{}],6:[function(require,module,exports){

},{}],7:[function(require,module,exports){
(function (Buffer){(function (){
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */

'use strict'

var base64 = require('base64-js')
var ieee754 = require('ieee754')

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

var K_MAX_LENGTH = 0x7fffffff
exports.kMaxLength = K_MAX_LENGTH

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */
Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport()

if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&
    typeof console.error === 'function') {
  console.error(
    'This browser lacks typed array (Uint8Array) support which is required by ' +
    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'
  )
}

function typedArraySupport () {
  // Can typed array instances can be augmented?
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = { __proto__: Uint8Array.prototype, foo: function () { return 42 } }
    return arr.foo() === 42
  } catch (e) {
    return false
  }
}

Object.defineProperty(Buffer.prototype, 'parent', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.buffer
  }
})

Object.defineProperty(Buffer.prototype, 'offset', {
  enumerable: true,
  get: function () {
    if (!Buffer.isBuffer(this)) return undefined
    return this.byteOffset
  }
})

function createBuffer (length) {
  if (length > K_MAX_LENGTH) {
    throw new RangeError('The value "' + length + '" is invalid for option "size"')
  }
  // Return an augmented `Uint8Array` instance
  var buf = new Uint8Array(length)
  buf.__proto__ = Buffer.prototype
  return buf
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new TypeError(
        'The "string" argument must be of type string. Received type number'
      )
    }
    return allocUnsafe(arg)
  }
  return from(arg, encodingOrOffset, length)
}

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
if (typeof Symbol !== 'undefined' && Symbol.species != null &&
    Buffer[Symbol.species] === Buffer) {
  Object.defineProperty(Buffer, Symbol.species, {
    value: null,
    configurable: true,
    enumerable: false,
    writable: false
  })
}

Buffer.poolSize = 8192 // not used by this implementation

function from (value, encodingOrOffset, length) {
  if (typeof value === 'string') {
    return fromString(value, encodingOrOffset)
  }

  if (ArrayBuffer.isView(value)) {
    return fromArrayLike(value)
  }

  if (value == null) {
    throw TypeError(
      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
      'or Array-like Object. Received type ' + (typeof value)
    )
  }

  if (isInstance(value, ArrayBuffer) ||
      (value && isInstance(value.buffer, ArrayBuffer))) {
    return fromArrayBuffer(value, encodingOrOffset, length)
  }

  if (typeof value === 'number') {
    throw new TypeError(
      'The "value" argument must not be of type number. Received type number'
    )
  }

  var valueOf = value.valueOf && value.valueOf()
  if (valueOf != null && valueOf !== value) {
    return Buffer.from(valueOf, encodingOrOffset, length)
  }

  var b = fromObject(value)
  if (b) return b

  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&
      typeof value[Symbol.toPrimitive] === 'function') {
    return Buffer.from(
      value[Symbol.toPrimitive]('string'), encodingOrOffset, length
    )
  }

  throw new TypeError(
    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +
    'or Array-like Object. Received type ' + (typeof value)
  )
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(value, encodingOrOffset, length)
}

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Buffer.prototype.__proto__ = Uint8Array.prototype
Buffer.__proto__ = Uint8Array

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be of type number')
  } else if (size < 0) {
    throw new RangeError('The value "' + size + '" is invalid for option "size"')
  }
}

function alloc (size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(size).fill(fill, encoding)
      : createBuffer(size).fill(fill)
  }
  return createBuffer(size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(size, fill, encoding)
}

function allocUnsafe (size) {
  assertSize(size)
  return createBuffer(size < 0 ? 0 : checked(size) | 0)
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(size)
}

function fromString (string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('Unknown encoding: ' + encoding)
  }

  var length = byteLength(string, encoding) | 0
  var buf = createBuffer(length)

  var actual = buf.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    buf = buf.slice(0, actual)
  }

  return buf
}

function fromArrayLike (array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  var buf = createBuffer(length)
  for (var i = 0; i < length; i += 1) {
    buf[i] = array[i] & 255
  }
  return buf
}

function fromArrayBuffer (array, byteOffset, length) {
  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('"offset" is outside of buffer bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('"length" is outside of buffer bounds')
  }

  var buf
  if (byteOffset === undefined && length === undefined) {
    buf = new Uint8Array(array)
  } else if (length === undefined) {
    buf = new Uint8Array(array, byteOffset)
  } else {
    buf = new Uint8Array(array, byteOffset, length)
  }

  // Return an augmented `Uint8Array` instance
  buf.__proto__ = Buffer.prototype
  return buf
}

function fromObject (obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    var buf = createBuffer(len)

    if (buf.length === 0) {
      return buf
    }

    obj.copy(buf, 0, 0, len)
    return buf
  }

  if (obj.length !== undefined) {
    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
      return createBuffer(0)
    }
    return fromArrayLike(obj)
  }

  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
    return fromArrayLike(obj.data)
  }
}

function checked (length) {
  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= K_MAX_LENGTH) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return b != null && b._isBuffer === true &&
    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
}

Buffer.compare = function compare (a, b) {
  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)
  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError(
      'The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array'
    )
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!Array.isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (isInstance(buf, Uint8Array)) {
      buf = Buffer.from(buf)
    }
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    throw new TypeError(
      'The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' +
      'Received type ' + typeof string
    )
  }

  var len = string.length
  var mustMatch = (arguments.length > 2 && arguments[2] === true)
  if (!mustMatch && len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) {
          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
        }
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.toLocaleString = Buffer.prototype.toString

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()
  if (this.length > max) str += ' ... '
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (isInstance(target, Uint8Array)) {
    target = Buffer.from(target, target.offset, target.byteLength)
  }
  if (!Buffer.isBuffer(target)) {
    throw new TypeError(
      'The "target" argument must be one of type Buffer or Uint8Array. ' +
      'Received type ' + (typeof target)
    )
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset // Coerce to Number.
  if (numberIsNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  var strLen = string.length

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (numberIsNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset >>> 0
    if (isFinite(length)) {
      length = length >>> 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
          : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf = this.subarray(start, end)
  // Return an augmented `Uint8Array` instance
  newBuf.__proto__ = Buffer.prototype
  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  offset = offset >>> 0
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  byteLength = byteLength >>> 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset + 3] = (value >>> 24)
  this[offset + 2] = (value >>> 16)
  this[offset + 1] = (value >>> 8)
  this[offset] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    var limit = Math.pow(2, (8 * byteLength) - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  this[offset] = (value >>> 8)
  this[offset + 1] = (value & 0xff)
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  this[offset] = (value & 0xff)
  this[offset + 1] = (value >>> 8)
  this[offset + 2] = (value >>> 16)
  this[offset + 3] = (value >>> 24)
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  this[offset] = (value >>> 24)
  this[offset + 1] = (value >>> 16)
  this[offset + 2] = (value >>> 8)
  this[offset + 3] = (value & 0xff)
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  value = +value
  offset = offset >>> 0
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start

  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
    // Use built-in when available, missing from IE11
    this.copyWithin(targetStart, start, end)
  } else if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (var i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, end),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if ((encoding === 'utf8' && code < 128) ||
          encoding === 'latin1') {
        // Fast path: If `val` fits into a single byte, use that numeric value.
        val = code
      }
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : Buffer.from(val, encoding)
    var len = bytes.length
    if (len === 0) {
      throw new TypeError('The value "' + val +
        '" is invalid for argument "value"')
    }
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node takes equal signs as end of the Base64 encoding
  str = str.split('=')[0]
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = str.trim().replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance (obj, type) {
  return obj instanceof type ||
    (obj != null && obj.constructor != null && obj.constructor.name != null &&
      obj.constructor.name === type.name)
}
function numberIsNaN (obj) {
  // For IE11 support
  return obj !== obj // eslint-disable-line no-self-compare
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"base64-js":5,"buffer":7,"ieee754":24}],8:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var callBind = require('./');

var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));

module.exports = function callBoundIntrinsic(name, allowMissing) {
	var intrinsic = GetIntrinsic(name, !!allowMissing);
	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
		return callBind(intrinsic);
	}
	return intrinsic;
};

},{"./":9,"get-intrinsic":20}],9:[function(require,module,exports){
'use strict';

var bind = require('function-bind');
var GetIntrinsic = require('get-intrinsic');

var $apply = GetIntrinsic('%Function.prototype.apply%');
var $call = GetIntrinsic('%Function.prototype.call%');
var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
var $max = GetIntrinsic('%Math.max%');

if ($defineProperty) {
	try {
		$defineProperty({}, 'a', { value: 1 });
	} catch (e) {
		// IE 8 has a broken defineProperty
		$defineProperty = null;
	}
}

module.exports = function callBind(originalFunction) {
	var func = $reflectApply(bind, $call, arguments);
	if ($gOPD && $defineProperty) {
		var desc = $gOPD(func, 'length');
		if (desc.configurable) {
			// original length, plus the receiver, minus any additional arguments (after the receiver)
			$defineProperty(
				func,
				'length',
				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
			);
		}
	}
	return func;
};

var applyBind = function applyBind() {
	return $reflectApply(bind, $apply, arguments);
};

if ($defineProperty) {
	$defineProperty(module.exports, 'apply', { value: applyBind });
} else {
	module.exports.apply = applyBind;
}

},{"function-bind":19,"get-intrinsic":20}],10:[function(require,module,exports){
'use strict';

var objectKeys = require('object-keys');
var isArguments = require('is-arguments');
var is = require('object-is');
var isRegex = require('is-regex');
var flags = require('regexp.prototype.flags');
var isArray = require('isarray');
var isDate = require('is-date-object');
var whichBoxedPrimitive = require('which-boxed-primitive');
var GetIntrinsic = require('get-intrinsic');
var callBound = require('call-bind/callBound');
var whichCollection = require('which-collection');
var getIterator = require('es-get-iterator');
var getSideChannel = require('side-channel');
var whichTypedArray = require('which-typed-array');
var assign = require('object.assign');

var $getTime = callBound('Date.prototype.getTime');
var gPO = Object.getPrototypeOf;
var $objToString = callBound('Object.prototype.toString');

var $Set = GetIntrinsic('%Set%', true);
var $mapHas = callBound('Map.prototype.has', true);
var $mapGet = callBound('Map.prototype.get', true);
var $mapSize = callBound('Map.prototype.size', true);
var $setAdd = callBound('Set.prototype.add', true);
var $setDelete = callBound('Set.prototype.delete', true);
var $setHas = callBound('Set.prototype.has', true);
var $setSize = callBound('Set.prototype.size', true);

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L401-L414
function setHasEqualElement(set, val1, opts, channel) {
  var i = getIterator(set);
  var result;
  while ((result = i.next()) && !result.done) {
    if (internalDeepEqual(val1, result.value, opts, channel)) { // eslint-disable-line no-use-before-define
      // Remove the matching element to make sure we do not check that again.
      $setDelete(set, result.value);
      return true;
    }
  }

  return false;
}

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L416-L439
function findLooseMatchingPrimitives(prim) {
  if (typeof prim === 'undefined') {
    return null;
  }
  if (typeof prim === 'object') { // Only pass in null as object!
    return void 0;
  }
  if (typeof prim === 'symbol') {
    return false;
  }
  if (typeof prim === 'string' || typeof prim === 'number') {
    // Loose equal entries exist only if the string is possible to convert to a regular number and not NaN.
    return +prim === +prim; // eslint-disable-line no-implicit-coercion
  }
  return true;
}

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L449-L460
function mapMightHaveLoosePrim(a, b, prim, item, opts, channel) {
  var altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) {
    return altValue;
  }
  var curB = $mapGet(b, altValue);
  var looseOpts = assign({}, opts, { strict: false });
  if (
    (typeof curB === 'undefined' && !$mapHas(b, altValue))
    // eslint-disable-next-line no-use-before-define
    || !internalDeepEqual(item, curB, looseOpts, channel)
  ) {
    return false;
  }
  // eslint-disable-next-line no-use-before-define
  return !$mapHas(a, altValue) && internalDeepEqual(item, curB, looseOpts, channel);
}

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L441-L447
function setMightHaveLoosePrim(a, b, prim) {
  var altValue = findLooseMatchingPrimitives(prim);
  if (altValue != null) {
    return altValue;
  }

  return $setHas(b, altValue) && !$setHas(a, altValue);
}

// taken from https://github.com/browserify/commonjs-assert/blob/bba838e9ba9e28edf3127ce6974624208502f6bc/internal/util/comparisons.js#L518-L533
function mapHasEqualEntry(set, map, key1, item1, opts, channel) {
  var i = getIterator(set);
  var result;
  var key2;
  while ((result = i.next()) && !result.done) {
    key2 = result.value;
    if (
      // eslint-disable-next-line no-use-before-define
      internalDeepEqual(key1, key2, opts, channel)
      // eslint-disable-next-line no-use-before-define
      && internalDeepEqual(item1, $mapGet(map, key2), opts, channel)
    ) {
      $setDelete(set, key2);
      return true;
    }
  }

  return false;
}

function internalDeepEqual(actual, expected, options, channel) {
  var opts = options || {};

  // 7.1. All identical values are equivalent, as determined by ===.
  if (opts.strict ? is(actual, expected) : actual === expected) {
    return true;
  }

  var actualBoxed = whichBoxedPrimitive(actual);
  var expectedBoxed = whichBoxedPrimitive(expected);
  if (actualBoxed !== expectedBoxed) {
    return false;
  }

  // 7.3. Other pairs that do not both pass typeof value == 'object', equivalence is determined by ==.
  if (!actual || !expected || (typeof actual !== 'object' && typeof expected !== 'object')) {
    return opts.strict ? is(actual, expected) : actual == expected; // eslint-disable-line eqeqeq
  }

  /*
   * 7.4. For all other Object pairs, including Array objects, equivalence is
   * determined by having the same number of owned properties (as verified
   * with Object.prototype.hasOwnProperty.call), the same set of keys
   * (although not necessarily the same order), equivalent values for every
   * corresponding key, and an identical 'prototype' property. Note: this
   * accounts for both named and indexed properties on Arrays.
   */
  // see https://github.com/nodejs/node/commit/d3aafd02efd3a403d646a3044adcf14e63a88d32 for memos/channel inspiration

  var hasActual = channel.has(actual);
  var hasExpected = channel.has(expected);
  var sentinel;
  if (hasActual && hasExpected) {
    if (channel.get(actual) === channel.get(expected)) {
      return true;
    }
  } else {
    sentinel = {};
  }
  if (!hasActual) { channel.set(actual, sentinel); }
  if (!hasExpected) { channel.set(expected, sentinel); }

  // eslint-disable-next-line no-use-before-define
  return objEquiv(actual, expected, opts, channel);
}

function isBuffer(x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') {
    return false;
  }
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') {
    return false;
  }

  return !!(x.constructor && x.constructor.isBuffer && x.constructor.isBuffer(x));
}

function setEquiv(a, b, opts, channel) {
  if ($setSize(a) !== $setSize(b)) {
    return false;
  }
  var iA = getIterator(a);
  var iB = getIterator(b);
  var resultA;
  var resultB;
  var set;
  while ((resultA = iA.next()) && !resultA.done) {
    if (resultA.value && typeof resultA.value === 'object') {
      if (!set) { set = new $Set(); }
      $setAdd(set, resultA.value);
    } else if (!$setHas(b, resultA.value)) {
      if (opts.strict) { return false; }
      if (!setMightHaveLoosePrim(a, b, resultA.value)) {
        return false;
      }
      if (!set) { set = new $Set(); }
      $setAdd(set, resultA.value);
    }
  }
  if (set) {
    while ((resultB = iB.next()) && !resultB.done) {
      // We have to check if a primitive value is already matching and only if it's not, go hunting for it.
      if (resultB.value && typeof resultB.value === 'object') {
        if (!setHasEqualElement(set, resultB.value, opts.strict, channel)) {
          return false;
        }
      } else if (
        !opts.strict
        && !$setHas(a, resultB.value)
        && !setHasEqualElement(set, resultB.value, opts.strict, channel)
      ) {
        return false;
      }
    }
    return $setSize(set) === 0;
  }
  return true;
}

function mapEquiv(a, b, opts, channel) {
  if ($mapSize(a) !== $mapSize(b)) {
    return false;
  }
  var iA = getIterator(a);
  var iB = getIterator(b);
  var resultA;
  var resultB;
  var set;
  var key;
  var item1;
  var item2;
  while ((resultA = iA.next()) && !resultA.done) {
    key = resultA.value[0];
    item1 = resultA.value[1];
    if (key && typeof key === 'object') {
      if (!set) { set = new $Set(); }
      $setAdd(set, key);
    } else {
      item2 = $mapGet(b, key);
      if ((typeof item2 === 'undefined' && !$mapHas(b, key)) || !internalDeepEqual(item1, item2, opts, channel)) {
        if (opts.strict) {
          return false;
        }
        if (!mapMightHaveLoosePrim(a, b, key, item1, opts, channel)) {
          return false;
        }
        if (!set) { set = new $Set(); }
        $setAdd(set, key);
      }
    }
  }

  if (set) {
    while ((resultB = iB.next()) && !resultB.done) {
      key = resultB.value[0];
      item2 = resultB.value[1];
      if (key && typeof key === 'object') {
        if (!mapHasEqualEntry(set, a, key, item2, opts, channel)) {
          return false;
        }
      } else if (
        !opts.strict
        && (!a.has(key) || !internalDeepEqual($mapGet(a, key), item2, opts, channel))
        && !mapHasEqualEntry(set, a, key, item2, assign({}, opts, { strict: false }), channel)
      ) {
        return false;
      }
    }
    return $setSize(set) === 0;
  }
  return true;
}

function objEquiv(a, b, opts, channel) {
  /* eslint max-statements: [2, 100], max-lines-per-function: [2, 120], max-depth: [2, 5] */
  var i, key;

  if (typeof a !== typeof b) { return false; }
  if (a == null || b == null) { return false; }

  if ($objToString(a) !== $objToString(b)) { return false; }

  if (isArguments(a) !== isArguments(b)) { return false; }

  var aIsArray = isArray(a);
  var bIsArray = isArray(b);
  if (aIsArray !== bIsArray) { return false; }

  // TODO: replace when a cross-realm brand check is available
  var aIsError = a instanceof Error;
  var bIsError = b instanceof Error;
  if (aIsError !== bIsError) { return false; }
  if (aIsError || bIsError) {
    if (a.name !== b.name || a.message !== b.message) { return false; }
  }

  var aIsRegex = isRegex(a);
  var bIsRegex = isRegex(b);
  if (aIsRegex !== bIsRegex) { return false; }
  if ((aIsRegex || bIsRegex) && (a.source !== b.source || flags(a) !== flags(b))) {
    return false;
  }

  var aIsDate = isDate(a);
  var bIsDate = isDate(b);
  if (aIsDate !== bIsDate) { return false; }
  if (aIsDate || bIsDate) { // && would work too, because both are true or both false here
    if ($getTime(a) !== $getTime(b)) { return false; }
  }
  if (opts.strict && gPO && gPO(a) !== gPO(b)) { return false; }

  if (whichTypedArray(a) !== whichTypedArray(b)) {
    return false;
  }

  var aIsBuffer = isBuffer(a);
  var bIsBuffer = isBuffer(b);
  if (aIsBuffer !== bIsBuffer) { return false; }
  if (aIsBuffer || bIsBuffer) { // && would work too, because both are true or both false here
    if (a.length !== b.length) { return false; }
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) { return false; }
    }
    return true;
  }

  if (typeof a !== typeof b) { return false; }

  var ka = objectKeys(a);
  var kb = objectKeys(b);
  // having the same number of owned properties (keys incorporates hasOwnProperty)
  if (ka.length !== kb.length) { return false; }

  // the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  // ~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i]) { return false; } // eslint-disable-line eqeqeq
  }

  // equivalent values for every corresponding key, and ~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!internalDeepEqual(a[key], b[key], opts, channel)) { return false; }
  }

  var aCollection = whichCollection(a);
  var bCollection = whichCollection(b);
  if (aCollection !== bCollection) {
    return false;
  }
  if (aCollection === 'Set' || bCollection === 'Set') { // aCollection === bCollection
    return setEquiv(a, b, opts, channel);
  }
  if (aCollection === 'Map') { // aCollection === bCollection
    return mapEquiv(a, b, opts, channel);
  }

  return true;
}

module.exports = function deepEqual(a, b, opts) {
  return internalDeepEqual(a, b, opts, getSideChannel());
};

},{"call-bind/callBound":8,"es-get-iterator":15,"get-intrinsic":20,"is-arguments":25,"is-date-object":28,"is-regex":31,"isarray":11,"object-is":42,"object-keys":46,"object.assign":49,"regexp.prototype.flags":58,"side-channel":63,"which-boxed-primitive":66,"which-collection":67,"which-typed-array":68}],11:[function(require,module,exports){
var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};

},{}],12:[function(require,module,exports){
'use strict';

var keys = require('object-keys');
var hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';

var toStr = Object.prototype.toString;
var concat = Array.prototype.concat;
var origDefineProperty = Object.defineProperty;

var isFunction = function (fn) {
	return typeof fn === 'function' && toStr.call(fn) === '[object Function]';
};

var arePropertyDescriptorsSupported = function () {
	var obj = {};
	try {
		origDefineProperty(obj, 'x', { enumerable: false, value: obj });
		// eslint-disable-next-line no-unused-vars, no-restricted-syntax
		for (var _ in obj) { // jscs:ignore disallowUnusedVariables
			return false;
		}
		return obj.x === obj;
	} catch (e) { /* this is IE 8. */
		return false;
	}
};
var supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();

var defineProperty = function (object, name, value, predicate) {
	if (name in object && (!isFunction(predicate) || !predicate())) {
		return;
	}
	if (supportsDescriptors) {
		origDefineProperty(object, name, {
			configurable: true,
			enumerable: false,
			value: value,
			writable: true
		});
	} else {
		object[name] = value;
	}
};

var defineProperties = function (object, map) {
	var predicates = arguments.length > 2 ? arguments[2] : {};
	var props = keys(map);
	if (hasSymbols) {
		props = concat.call(props, Object.getOwnPropertySymbols(map));
	}
	for (var i = 0; i < props.length; i += 1) {
		defineProperty(object, props[i], map[props[i]], predicates[props[i]]);
	}
};

defineProperties.supportsDescriptors = !!supportsDescriptors;

module.exports = defineProperties;

},{"object-keys":46}],13:[function(require,module,exports){
"use strict";

//download.js v4.2, by dandavis; 2008-2016. [MIT] see http://danml.com/download.html for tests/usage
// v1 landed a FF+Chrome compat way of downloading strings to local un-named files, upgraded to use a hidden frame and optional mime
// v2 added named files via a[download], msSaveBlob, IE (10+) support, and window.URL support for larger+faster saves than dataURLs
// v3 added dataURL and Blob Input, bind-toggle arity, and legacy dataURL fallback was improved with force-download mime and base64 support. 3.1 improved safari handling.
// v4 adds AMD/UMD, commonJS, and plain browser support
// v4.1 adds url download capability via solo URL argument (same domain/CORS only)
// v4.2 adds semantic variable names, long (over 2MB) dataURL support, and hidden by default temp anchors
// https://github.com/rndme/download
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define([], factory);
  } else if (typeof exports === 'object') {
    // Node. Does not work with strict CommonJS, but
    // only CommonJS-like environments that support module.exports,
    // like Node.
    module.exports = factory();
  } else {
    // Browser globals (root is window)
    root.download = factory();
  }
})(void 0, function () {
  return function download(data, strFileName, strMimeType) {
    var self = window,
        // this script is only for browsers anyway...
    defaultMime = "application/octet-stream",
        // this default mime also triggers iframe downloads
    mimeType = strMimeType || defaultMime,
        payload = data,
        url = !strFileName && !strMimeType && payload,
        anchor = document.createElement("a"),
        toString = function (a) {
      return String(a);
    },
        myBlob = self.Blob || self.MozBlob || self.WebKitBlob || toString,
        fileName = strFileName || "download",
        blob,
        reader;

    myBlob = myBlob.call ? myBlob.bind(self) : Blob;

    if (String(this) === "true") {
      //reverse arguments, allowing download.bind(true, "text/xml", "export.xml") to act as a callback
      payload = [payload, mimeType];
      mimeType = payload[0];
      payload = payload[1];
    }

    if (url && url.length < 2048) {
      // if no filename and no mime, assume a url was passed as the only argument
      fileName = url.split("/").pop().split("?")[0];
      anchor.href = url; // assign href prop to temp anchor

      if (anchor.href.indexOf(url) !== -1) {
        // if the browser determines that it's a potentially valid url path:
        var ajax = new XMLHttpRequest();
        ajax.open("GET", url, true);
        ajax.responseType = 'blob';

        ajax.onload = function (e) {
          download(e.target.response, fileName, defaultMime);
        };

        setTimeout(function () {
          ajax.send();
        }, 0); // allows setting custom ajax headers using the return:

        return ajax;
      } // end if valid url?

    } // end if url?
    //go ahead and download dataURLs right away


    if (/^data:([\w+-]+\/[\w+.-]+)?[,;]/.test(payload)) {
      if (payload.length > 1024 * 1024 * 1.999 && myBlob !== toString) {
        payload = dataUrlToBlob(payload);
        mimeType = payload.type || defaultMime;
      } else {
        return navigator.msSaveBlob ? // IE10 can't do a[download], only Blobs:
        navigator.msSaveBlob(dataUrlToBlob(payload), fileName) : saver(payload); // everyone else can save dataURLs un-processed
      }
    } else {
      //not data url, is it a string with special needs?
      if (/([\x80-\xff])/.test(payload)) {
        var i = 0,
            tempUiArr = new Uint8Array(payload.length),
            mx = tempUiArr.length;

        for (i; i < mx; ++i) tempUiArr[i] = payload.charCodeAt(i);

        payload = new myBlob([tempUiArr], {
          type: mimeType
        });
      }
    }

    blob = payload instanceof myBlob ? payload : new myBlob([payload], {
      type: mimeType
    });

    function dataUrlToBlob(strUrl) {
      var parts = strUrl.split(/[:;,]/),
          type = parts[1],
          decoder = parts[2] == "base64" ? atob : decodeURIComponent,
          binData = decoder(parts.pop()),
          mx = binData.length,
          i = 0,
          uiArr = new Uint8Array(mx);

      for (i; i < mx; ++i) uiArr[i] = binData.charCodeAt(i);

      return new myBlob([uiArr], {
        type: type
      });
    }

    function saver(url, winMode) {
      if ('download' in anchor) {
        //html5 A[download]
        anchor.href = url;
        anchor.setAttribute("download", fileName);
        anchor.className = "download-js-link";
        anchor.innerHTML = "downloading...";
        anchor.style.display = "none";
        document.body.appendChild(anchor);
        setTimeout(function () {
          anchor.click();
          document.body.removeChild(anchor);

          if (winMode === true) {
            setTimeout(function () {
              self.URL.revokeObjectURL(anchor.href);
            }, 250);
          }
        }, 66);
        return true;
      } // handle non-a[download] safari as best we can:


      if (/(Version)\/(\d+)\.(\d+)(?:\.(\d+))?.*Safari\//.test(navigator.userAgent)) {
        if (/^data:/.test(url)) url = "data:" + url.replace(/^data:([\w\/\-\+]+)/, defaultMime);

        if (!window.open(url)) {
          // popup blocked, offer direct download:
          if (confirm("Displaying New Document\n\nUse Save As... to download, then click back to return to this page.")) {
            location.href = url;
          }
        }

        return true;
      } //do iframe dataURL download (old ch+FF):


      var f = document.createElement("iframe");
      document.body.appendChild(f);

      if (!winMode && /^data:/.test(url)) {
        // force a mime that will download:
        url = "data:" + url.replace(/^data:([\w\/\-\+]+)/, defaultMime);
      }

      f.src = url;
      setTimeout(function () {
        document.body.removeChild(f);
      }, 333);
    } //end saver


    if (navigator.msSaveBlob) {
      // IE10+ : (has Blob, but not a[download] or URL)
      return navigator.msSaveBlob(blob, fileName);
    }

    if (self.URL) {
      // simple fast and modern way using Blob and URL:
      saver(self.URL.createObjectURL(blob), true);
    } else {
      // handle non-Blob()+non-URL browsers:
      if (typeof blob === "string" || blob.constructor === toString) {
        try {
          return saver("data:" + mimeType + ";base64," + self.btoa(blob));
        } catch (y) {
          return saver("data:" + mimeType + "," + encodeURIComponent(blob));
        }
      } // Blob but not URL support:


      reader = new FileReader();

      reader.onload = function (e) {
        saver(this.result);
      };

      reader.readAsDataURL(blob);
    }

    return true;
  };
  /* end download() */
});

},{}],14:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');

var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%');
if ($gOPD) {
	try {
		$gOPD([], 'length');
	} catch (e) {
		// IE 8 has a broken gOPD
		$gOPD = null;
	}
}

module.exports = $gOPD;

},{"get-intrinsic":20}],15:[function(require,module,exports){
(function (process){(function (){
'use strict';

/* eslint global-require: 0 */
// the code is structured this way so that bundlers can
// alias out `has-symbols` to `() => true` or `() => false` if your target
// environments' Symbol capabilities are known, and then use
// dead code elimination on the rest of this module.
//
// Similarly, `isarray` can be aliased to `Array.isArray` if
// available in all target environments.

var isArguments = require('is-arguments');

if (require('has-symbols')() || require('has-symbols/shams')()) {
	var $iterator = Symbol.iterator;
	// Symbol is available natively or shammed
	// natively:
	//  - Chrome >= 38
	//  - Edge 12-14?, Edge >= 15 for sure
	//  - FF >= 36
	//  - Safari >= 9
	//  - node >= 0.12
	module.exports = function getIterator(iterable) {
		// alternatively, `iterable[$iterator]?.()`
		if (iterable != null && typeof iterable[$iterator] !== 'undefined') {
			return iterable[$iterator]();
		}
		if (isArguments(iterable)) {
			// arguments objects lack Symbol.iterator
			// - node 0.12
			return Array.prototype[$iterator].call(iterable);
		}
	};
} else {
	// Symbol is not available, native or shammed
	var isArray = require('isarray');
	var isString = require('is-string');
	var GetIntrinsic = require('get-intrinsic');
	var $Map = GetIntrinsic('%Map%', true);
	var $Set = GetIntrinsic('%Set%', true);
	var callBound = require('call-bind/callBound');
	var $arrayPush = callBound('Array.prototype.push');
	var $charCodeAt = callBound('String.prototype.charCodeAt');
	var $stringSlice = callBound('String.prototype.slice');

	var advanceStringIndex = function advanceStringIndex(S, index) {
		var length = S.length;
		if ((index + 1) >= length) {
			return index + 1;
		}

		var first = $charCodeAt(S, index);
		if (first < 0xD800 || first > 0xDBFF) {
			return index + 1;
		}

		var second = $charCodeAt(S, index + 1);
		if (second < 0xDC00 || second > 0xDFFF) {
			return index + 1;
		}

		return index + 2;
	};

	var getArrayIterator = function getArrayIterator(arraylike) {
		var i = 0;
		return {
			next: function next() {
				var done = i >= arraylike.length;
				var value;
				if (!done) {
					value = arraylike[i];
					i += 1;
				}
				return {
					done: done,
					value: value
				};
			}
		};
	};

	var getNonCollectionIterator = function getNonCollectionIterator(iterable, noPrimordialCollections) {
		if (isArray(iterable) || isArguments(iterable)) {
			return getArrayIterator(iterable);
		}
		if (isString(iterable)) {
			var i = 0;
			return {
				next: function next() {
					var nextIndex = advanceStringIndex(iterable, i);
					var value = $stringSlice(iterable, i, nextIndex);
					i = nextIndex;
					return {
						done: nextIndex > iterable.length,
						value: value
					};
				}
			};
		}

		// es6-shim and es-shims' es-map use a string "_es6-shim iterator_" property on different iterables, such as MapIterator.
		if (noPrimordialCollections && typeof iterable['_es6-shim iterator_'] !== 'undefined') {
			return iterable['_es6-shim iterator_']();
		}
	};

	if (!$Map && !$Set) {
		// the only language iterables are Array, String, arguments
		// - Safari <= 6.0
		// - Chrome < 38
		// - node < 0.12
		// - FF < 13
		// - IE < 11
		// - Edge < 11

		module.exports = function getIterator(iterable) {
			if (iterable != null) {
				return getNonCollectionIterator(iterable, true);
			}
		};
	} else {
		// either Map or Set are available, but Symbol is not
		// - es6-shim on an ES5 browser
		// - Safari 6.2 (maybe 6.1?)
		// - FF v[13, 36)
		// - IE 11
		// - Edge 11
		// - Safari v[6, 9)

		var isMap = require('is-map');
		var isSet = require('is-set');

		// Firefox >= 27, IE 11, Safari 6.2 - 9, Edge 11, es6-shim in older envs, all have forEach
		var $mapForEach = callBound('Map.prototype.forEach', true);
		var $setForEach = callBound('Set.prototype.forEach', true);
		if (typeof process === 'undefined' || !process.versions || !process.versions.node) { // "if is not node"

			// Firefox 17 - 26 has `.iterator()`, whose iterator `.next()` either
			// returns a value, or throws a StopIteration object. These browsers
			// do not have any other mechanism for iteration.
			var $mapIterator = callBound('Map.prototype.iterator', true);
			var $setIterator = callBound('Set.prototype.iterator', true);
			var getStopIterationIterator = function (iterator) {
				var done = false;
				return {
					next: function next() {
						try {
							return {
								done: done,
								value: done ? undefined : iterator.next()
							};
						} catch (e) {
							done = true;
							return {
								done: true,
								value: undefined
							};
						}
					}
				};
			};
		}
		// Firefox 27-35, and some older es6-shim versions, use a string "@@iterator" property
		// this returns a proper iterator object, so we should use it instead of forEach.
		// newer es6-shim versions use a string "_es6-shim iterator_" property.
		var $mapAtAtIterator = callBound('Map.prototype.@@iterator', true) || callBound('Map.prototype._es6-shim iterator_', true);
		var $setAtAtIterator = callBound('Set.prototype.@@iterator', true) || callBound('Set.prototype._es6-shim iterator_', true);

		var getCollectionIterator = function getCollectionIterator(iterable) {
			if (isMap(iterable)) {
				if ($mapIterator) {
					return getStopIterationIterator($mapIterator(iterable));
				}
				if ($mapAtAtIterator) {
					return $mapAtAtIterator(iterable);
				}
				if ($mapForEach) {
					var entries = [];
					$mapForEach(iterable, function (v, k) {
						$arrayPush(entries, [k, v]);
					});
					return getArrayIterator(entries);
				}
			}
			if (isSet(iterable)) {
				if ($setIterator) {
					return getStopIterationIterator($setIterator(iterable));
				}
				if ($setAtAtIterator) {
					return $setAtAtIterator(iterable);
				}
				if ($setForEach) {
					var values = [];
					$setForEach(iterable, function (v) {
						$arrayPush(values, v);
					});
					return getArrayIterator(values);
				}
			}
		};

		module.exports = function getIterator(iterable) {
			return getCollectionIterator(iterable) || getNonCollectionIterator(iterable);
		};
	}
}

}).call(this)}).call(this,require('_process'))
},{"_process":52,"call-bind/callBound":8,"get-intrinsic":20,"has-symbols":21,"has-symbols/shams":22,"is-arguments":25,"is-map":29,"is-set":32,"is-string":33,"isarray":16}],16:[function(require,module,exports){
arguments[4][11][0].apply(exports,arguments)
},{"dup":11}],17:[function(require,module,exports){

var hasOwn = Object.prototype.hasOwnProperty;
var toString = Object.prototype.toString;

module.exports = function forEach (obj, fn, ctx) {
    if (toString.call(fn) !== '[object Function]') {
        throw new TypeError('iterator must be a function');
    }
    var l = obj.length;
    if (l === +l) {
        for (var i = 0; i < l; i++) {
            fn.call(ctx, obj[i], i, obj);
        }
    } else {
        for (var k in obj) {
            if (hasOwn.call(obj, k)) {
                fn.call(ctx, obj[k], k, obj);
            }
        }
    }
};


},{}],18:[function(require,module,exports){
'use strict';

/* eslint no-invalid-this: 1 */

var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
var slice = Array.prototype.slice;
var toStr = Object.prototype.toString;
var funcType = '[object Function]';

module.exports = function bind(that) {
    var target = this;
    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
        throw new TypeError(ERROR_MESSAGE + target);
    }
    var args = slice.call(arguments, 1);

    var bound;
    var binder = function () {
        if (this instanceof bound) {
            var result = target.apply(
                this,
                args.concat(slice.call(arguments))
            );
            if (Object(result) === result) {
                return result;
            }
            return this;
        } else {
            return target.apply(
                that,
                args.concat(slice.call(arguments))
            );
        }
    };

    var boundLength = Math.max(0, target.length - args.length);
    var boundArgs = [];
    for (var i = 0; i < boundLength; i++) {
        boundArgs.push('$' + i);
    }

    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);

    if (target.prototype) {
        var Empty = function Empty() {};
        Empty.prototype = target.prototype;
        bound.prototype = new Empty();
        Empty.prototype = null;
    }

    return bound;
};

},{}],19:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = Function.prototype.bind || implementation;

},{"./implementation":18}],20:[function(require,module,exports){
'use strict';

var undefined;

var $SyntaxError = SyntaxError;
var $Function = Function;
var $TypeError = TypeError;

// eslint-disable-next-line consistent-return
var getEvalledConstructor = function (expressionSyntax) {
	try {
		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
	} catch (e) {}
};

var $gOPD = Object.getOwnPropertyDescriptor;
if ($gOPD) {
	try {
		$gOPD({}, '');
	} catch (e) {
		$gOPD = null; // this is IE 8, which has a broken gOPD
	}
}

var throwTypeError = function () {
	throw new $TypeError();
};
var ThrowTypeError = $gOPD
	? (function () {
		try {
			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
			arguments.callee; // IE 8 does not throw here
			return throwTypeError;
		} catch (calleeThrows) {
			try {
				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
				return $gOPD(arguments, 'callee').get;
			} catch (gOPDthrows) {
				return throwTypeError;
			}
		}
	}())
	: throwTypeError;

var hasSymbols = require('has-symbols')();

var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto

var needsEval = {};

var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);

var INTRINSICS = {
	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
	'%Array%': Array,
	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
	'%AsyncFromSyncIteratorPrototype%': undefined,
	'%AsyncFunction%': needsEval,
	'%AsyncGenerator%': needsEval,
	'%AsyncGeneratorFunction%': needsEval,
	'%AsyncIteratorPrototype%': needsEval,
	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
	'%Boolean%': Boolean,
	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
	'%Date%': Date,
	'%decodeURI%': decodeURI,
	'%decodeURIComponent%': decodeURIComponent,
	'%encodeURI%': encodeURI,
	'%encodeURIComponent%': encodeURIComponent,
	'%Error%': Error,
	'%eval%': eval, // eslint-disable-line no-eval
	'%EvalError%': EvalError,
	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
	'%Function%': $Function,
	'%GeneratorFunction%': needsEval,
	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
	'%isFinite%': isFinite,
	'%isNaN%': isNaN,
	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
	'%Map%': typeof Map === 'undefined' ? undefined : Map,
	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
	'%Math%': Math,
	'%Number%': Number,
	'%Object%': Object,
	'%parseFloat%': parseFloat,
	'%parseInt%': parseInt,
	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
	'%RangeError%': RangeError,
	'%ReferenceError%': ReferenceError,
	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
	'%RegExp%': RegExp,
	'%Set%': typeof Set === 'undefined' ? undefined : Set,
	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
	'%String%': String,
	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
	'%Symbol%': hasSymbols ? Symbol : undefined,
	'%SyntaxError%': $SyntaxError,
	'%ThrowTypeError%': ThrowTypeError,
	'%TypedArray%': TypedArray,
	'%TypeError%': $TypeError,
	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
	'%URIError%': URIError,
	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
};

var doEval = function doEval(name) {
	var value;
	if (name === '%AsyncFunction%') {
		value = getEvalledConstructor('async function () {}');
	} else if (name === '%GeneratorFunction%') {
		value = getEvalledConstructor('function* () {}');
	} else if (name === '%AsyncGeneratorFunction%') {
		value = getEvalledConstructor('async function* () {}');
	} else if (name === '%AsyncGenerator%') {
		var fn = doEval('%AsyncGeneratorFunction%');
		if (fn) {
			value = fn.prototype;
		}
	} else if (name === '%AsyncIteratorPrototype%') {
		var gen = doEval('%AsyncGenerator%');
		if (gen) {
			value = getProto(gen.prototype);
		}
	}

	INTRINSICS[name] = value;

	return value;
};

var LEGACY_ALIASES = {
	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
	'%ArrayPrototype%': ['Array', 'prototype'],
	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
	'%BooleanPrototype%': ['Boolean', 'prototype'],
	'%DataViewPrototype%': ['DataView', 'prototype'],
	'%DatePrototype%': ['Date', 'prototype'],
	'%ErrorPrototype%': ['Error', 'prototype'],
	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
	'%FunctionPrototype%': ['Function', 'prototype'],
	'%Generator%': ['GeneratorFunction', 'prototype'],
	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
	'%JSONParse%': ['JSON', 'parse'],
	'%JSONStringify%': ['JSON', 'stringify'],
	'%MapPrototype%': ['Map', 'prototype'],
	'%NumberPrototype%': ['Number', 'prototype'],
	'%ObjectPrototype%': ['Object', 'prototype'],
	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
	'%PromisePrototype%': ['Promise', 'prototype'],
	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
	'%Promise_all%': ['Promise', 'all'],
	'%Promise_reject%': ['Promise', 'reject'],
	'%Promise_resolve%': ['Promise', 'resolve'],
	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
	'%RegExpPrototype%': ['RegExp', 'prototype'],
	'%SetPrototype%': ['Set', 'prototype'],
	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
	'%StringPrototype%': ['String', 'prototype'],
	'%SymbolPrototype%': ['Symbol', 'prototype'],
	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
	'%URIErrorPrototype%': ['URIError', 'prototype'],
	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
	'%WeakSetPrototype%': ['WeakSet', 'prototype']
};

var bind = require('function-bind');
var hasOwn = require('has');
var $concat = bind.call(Function.call, Array.prototype.concat);
var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
var $replace = bind.call(Function.call, String.prototype.replace);
var $strSlice = bind.call(Function.call, String.prototype.slice);

/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
var stringToPath = function stringToPath(string) {
	var first = $strSlice(string, 0, 1);
	var last = $strSlice(string, -1);
	if (first === '%' && last !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
	} else if (last === '%' && first !== '%') {
		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
	}
	var result = [];
	$replace(string, rePropName, function (match, number, quote, subString) {
		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
	});
	return result;
};
/* end adaptation */

var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
	var intrinsicName = name;
	var alias;
	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
		alias = LEGACY_ALIASES[intrinsicName];
		intrinsicName = '%' + alias[0] + '%';
	}

	if (hasOwn(INTRINSICS, intrinsicName)) {
		var value = INTRINSICS[intrinsicName];
		if (value === needsEval) {
			value = doEval(intrinsicName);
		}
		if (typeof value === 'undefined' && !allowMissing) {
			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
		}

		return {
			alias: alias,
			name: intrinsicName,
			value: value
		};
	}

	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
};

module.exports = function GetIntrinsic(name, allowMissing) {
	if (typeof name !== 'string' || name.length === 0) {
		throw new $TypeError('intrinsic name must be a non-empty string');
	}
	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
		throw new $TypeError('"allowMissing" argument must be a boolean');
	}

	var parts = stringToPath(name);
	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';

	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
	var intrinsicRealName = intrinsic.name;
	var value = intrinsic.value;
	var skipFurtherCaching = false;

	var alias = intrinsic.alias;
	if (alias) {
		intrinsicBaseName = alias[0];
		$spliceApply(parts, $concat([0, 1], alias));
	}

	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
		var part = parts[i];
		var first = $strSlice(part, 0, 1);
		var last = $strSlice(part, -1);
		if (
			(
				(first === '"' || first === "'" || first === '`')
				|| (last === '"' || last === "'" || last === '`')
			)
			&& first !== last
		) {
			throw new $SyntaxError('property names with quotes must have matching quotes');
		}
		if (part === 'constructor' || !isOwn) {
			skipFurtherCaching = true;
		}

		intrinsicBaseName += '.' + part;
		intrinsicRealName = '%' + intrinsicBaseName + '%';

		if (hasOwn(INTRINSICS, intrinsicRealName)) {
			value = INTRINSICS[intrinsicRealName];
		} else if (value != null) {
			if (!(part in value)) {
				if (!allowMissing) {
					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
				}
				return void undefined;
			}
			if ($gOPD && (i + 1) >= parts.length) {
				var desc = $gOPD(value, part);
				isOwn = !!desc;

				// By convention, when a data property is converted to an accessor
				// property to emulate a data property that does not suffer from
				// the override mistake, that accessor's getter is marked with
				// an `originalValue` property. Here, when we detect this, we
				// uphold the illusion by pretending to see that original data
				// property, i.e., returning the value rather than the getter
				// itself.
				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
					value = desc.get;
				} else {
					value = value[part];
				}
			} else {
				isOwn = hasOwn(value, part);
				value = value[part];
			}

			if (isOwn && !skipFurtherCaching) {
				INTRINSICS[intrinsicRealName] = value;
			}
		}
	}
	return value;
};

},{"function-bind":19,"has":23,"has-symbols":21}],21:[function(require,module,exports){
'use strict';

var origSymbol = typeof Symbol !== 'undefined' && Symbol;
var hasSymbolSham = require('./shams');

module.exports = function hasNativeSymbols() {
	if (typeof origSymbol !== 'function') { return false; }
	if (typeof Symbol !== 'function') { return false; }
	if (typeof origSymbol('foo') !== 'symbol') { return false; }
	if (typeof Symbol('bar') !== 'symbol') { return false; }

	return hasSymbolSham();
};

},{"./shams":22}],22:[function(require,module,exports){
'use strict';

/* eslint complexity: [2, 18], max-statements: [2, 33] */
module.exports = function hasSymbols() {
	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
	if (typeof Symbol.iterator === 'symbol') { return true; }

	var obj = {};
	var sym = Symbol('test');
	var symObj = Object(sym);
	if (typeof sym === 'string') { return false; }

	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }

	// temp disabled per https://github.com/ljharb/object.assign/issues/17
	// if (sym instanceof Symbol) { return false; }
	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
	// if (!(symObj instanceof Symbol)) { return false; }

	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

	var symVal = 42;
	obj[sym] = symVal;
	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }

	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }

	var syms = Object.getOwnPropertySymbols(obj);
	if (syms.length !== 1 || syms[0] !== sym) { return false; }

	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }

	if (typeof Object.getOwnPropertyDescriptor === 'function') {
		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
	}

	return true;
};

},{}],23:[function(require,module,exports){
'use strict';

var bind = require('function-bind');

module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);

},{"function-bind":19}],24:[function(require,module,exports){
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}

},{}],25:[function(require,module,exports){
'use strict';

var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');

var isStandardArguments = function isArguments(value) {
	if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {
		return false;
	}
	return $toString(value) === '[object Arguments]';
};

var isLegacyArguments = function isArguments(value) {
	if (isStandardArguments(value)) {
		return true;
	}
	return value !== null &&
		typeof value === 'object' &&
		typeof value.length === 'number' &&
		value.length >= 0 &&
		$toString(value) !== '[object Array]' &&
		$toString(value.callee) === '[object Function]';
};

var supportsStandardArguments = (function () {
	return isStandardArguments(arguments);
}());

isStandardArguments.isLegacyArguments = isLegacyArguments; // for tests

module.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;

},{"call-bind/callBound":8}],26:[function(require,module,exports){
'use strict';

if (typeof BigInt === 'function') {
	var bigIntValueOf = BigInt.prototype.valueOf;
	var tryBigInt = function tryBigIntObject(value) {
		try {
			bigIntValueOf.call(value);
			return true;
		} catch (e) {
		}
		return false;
	};

	module.exports = function isBigInt(value) {
		if (
			value === null
			|| typeof value === 'undefined'
			|| typeof value === 'boolean'
			|| typeof value === 'string'
			|| typeof value === 'number'
			|| typeof value === 'symbol'
			|| typeof value === 'function'
		) {
			return false;
		}
		if (typeof value === 'bigint') {
			return true;
		}

		return tryBigInt(value);
	};
} else {
	module.exports = function isBigInt(value) {
		return false && value;
	};
}

},{}],27:[function(require,module,exports){
'use strict';

var callBound = require('call-bind/callBound');
var $boolToStr = callBound('Boolean.prototype.toString');
var $toString = callBound('Object.prototype.toString');

var tryBooleanObject = function booleanBrandCheck(value) {
	try {
		$boolToStr(value);
		return true;
	} catch (e) {
		return false;
	}
};
var boolClass = '[object Boolean]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isBoolean(value) {
	if (typeof value === 'boolean') {
		return true;
	}
	if (value === null || typeof value !== 'object') {
		return false;
	}
	return hasToStringTag && Symbol.toStringTag in value ? tryBooleanObject(value) : $toString(value) === boolClass;
};

},{"call-bind/callBound":8}],28:[function(require,module,exports){
'use strict';

var getDay = Date.prototype.getDay;
var tryDateObject = function tryDateGetDayCall(value) {
	try {
		getDay.call(value);
		return true;
	} catch (e) {
		return false;
	}
};

var toStr = Object.prototype.toString;
var dateClass = '[object Date]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isDateObject(value) {
	if (typeof value !== 'object' || value === null) {
		return false;
	}
	return hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;
};

},{}],29:[function(require,module,exports){
'use strict';

var $Map = typeof Map === 'function' && Map.prototype ? Map : null;
var $Set = typeof Set === 'function' && Set.prototype ? Set : null;

var exported;

if (!$Map) {
	// eslint-disable-next-line no-unused-vars
	exported = function isMap(x) {
		// `Map` is not present in this environment.
		return false;
	};
}

var $mapHas = $Map ? Map.prototype.has : null;
var $setHas = $Set ? Set.prototype.has : null;
if (!exported && !$mapHas) {
	// eslint-disable-next-line no-unused-vars
	exported = function isMap(x) {
		// `Map` does not have a `has` method
		return false;
	};
}

module.exports = exported || function isMap(x) {
	if (!x || typeof x !== 'object') {
		return false;
	}
	try {
		$mapHas.call(x);
		if ($setHas) {
			try {
				$setHas.call(x);
			} catch (e) {
				return true;
			}
		}
		return x instanceof $Map; // core-js workaround, pre-v2.5.0
	} catch (e) {}
	return false;
};

},{}],30:[function(require,module,exports){
'use strict';

var numToStr = Number.prototype.toString;
var tryNumberObject = function tryNumberObject(value) {
	try {
		numToStr.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var numClass = '[object Number]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isNumberObject(value) {
	if (typeof value === 'number') {
		return true;
	}
	if (typeof value !== 'object') {
		return false;
	}
	return hasToStringTag ? tryNumberObject(value) : toStr.call(value) === numClass;
};

},{}],31:[function(require,module,exports){
'use strict';

var callBound = require('call-bind/callBound');
var hasSymbols = require('has-symbols')();
var hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';
var has;
var $exec;
var isRegexMarker;
var badStringifier;

if (hasToStringTag) {
	has = callBound('Object.prototype.hasOwnProperty');
	$exec = callBound('RegExp.prototype.exec');
	isRegexMarker = {};

	var throwRegexMarker = function () {
		throw isRegexMarker;
	};
	badStringifier = {
		toString: throwRegexMarker,
		valueOf: throwRegexMarker
	};

	if (typeof Symbol.toPrimitive === 'symbol') {
		badStringifier[Symbol.toPrimitive] = throwRegexMarker;
	}
}

var $toString = callBound('Object.prototype.toString');
var gOPD = Object.getOwnPropertyDescriptor;
var regexClass = '[object RegExp]';

module.exports = hasToStringTag
	// eslint-disable-next-line consistent-return
	? function isRegex(value) {
		if (!value || typeof value !== 'object') {
			return false;
		}

		var descriptor = gOPD(value, 'lastIndex');
		var hasLastIndexDataProperty = descriptor && has(descriptor, 'value');
		if (!hasLastIndexDataProperty) {
			return false;
		}

		try {
			$exec(value, badStringifier);
		} catch (e) {
			return e === isRegexMarker;
		}
	}
	: function isRegex(value) {
		// In older browsers, typeof regex incorrectly returns 'function'
		if (!value || (typeof value !== 'object' && typeof value !== 'function')) {
			return false;
		}

		return $toString(value) === regexClass;
	};

},{"call-bind/callBound":8,"has-symbols":21}],32:[function(require,module,exports){
'use strict';

var $Map = typeof Map === 'function' && Map.prototype ? Map : null;
var $Set = typeof Set === 'function' && Set.prototype ? Set : null;

var exported;

if (!$Set) {
	// eslint-disable-next-line no-unused-vars
	exported = function isSet(x) {
		// `Set` is not present in this environment.
		return false;
	};
}

var $mapHas = $Map ? Map.prototype.has : null;
var $setHas = $Set ? Set.prototype.has : null;
if (!exported && !$setHas) {
	// eslint-disable-next-line no-unused-vars
	exported = function isSet(x) {
		// `Set` does not have a `has` method
		return false;
	};
}

module.exports = exported || function isSet(x) {
	if (!x || typeof x !== 'object') {
		return false;
	}
	try {
		$setHas.call(x);
		if ($mapHas) {
			try {
				$mapHas.call(x);
			} catch (e) {
				return true;
			}
		}
		return x instanceof $Set; // core-js workaround, pre-v2.5.0
	} catch (e) {}
	return false;
};

},{}],33:[function(require,module,exports){
'use strict';

var strValue = String.prototype.valueOf;
var tryStringObject = function tryStringObject(value) {
	try {
		strValue.call(value);
		return true;
	} catch (e) {
		return false;
	}
};
var toStr = Object.prototype.toString;
var strClass = '[object String]';
var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';

module.exports = function isString(value) {
	if (typeof value === 'string') {
		return true;
	}
	if (typeof value !== 'object') {
		return false;
	}
	return hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;
};

},{}],34:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;
var hasSymbols = require('has-symbols')();

if (hasSymbols) {
	var symToStr = Symbol.prototype.toString;
	var symStringRegex = /^Symbol\(.*\)$/;
	var isSymbolObject = function isRealSymbolObject(value) {
		if (typeof value.valueOf() !== 'symbol') {
			return false;
		}
		return symStringRegex.test(symToStr.call(value));
	};

	module.exports = function isSymbol(value) {
		if (typeof value === 'symbol') {
			return true;
		}
		if (toStr.call(value) !== '[object Symbol]') {
			return false;
		}
		try {
			return isSymbolObject(value);
		} catch (e) {
			return false;
		}
	};
} else {

	module.exports = function isSymbol(value) {
		// this environment does not support Symbols.
		return false && value;
	};
}

},{"has-symbols":21}],35:[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('foreach');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasSymbols = require('has-symbols')();
var hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';

var typedArrays = availableTypedArrays();

var $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {
	for (var i = 0; i < array.length; i += 1) {
		if (array[i] === value) {
			return i;
		}
	}
	return -1;
};
var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		var arr = new global[typedArray]();
		if (!(Symbol.toStringTag in arr)) {
			throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');
		}
		var proto = getPrototypeOf(arr);
		var descriptor = gOPD(proto, Symbol.toStringTag);
		if (!descriptor) {
			var superProto = getPrototypeOf(proto);
			descriptor = gOPD(superProto, Symbol.toStringTag);
		}
		toStrTags[typedArray] = descriptor.get;
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var anyTrue = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!anyTrue) {
			try {
				anyTrue = getter.call(value) === typedArray;
			} catch (e) { /**/ }
		}
	});
	return anyTrue;
};

module.exports = function isTypedArray(value) {
	if (!value || typeof value !== 'object') { return false; }
	if (!hasToStringTag) {
		var tag = $slice($toString(value), 8, -1);
		return $indexOf(typedArrays, tag) > -1;
	}
	if (!gOPD) { return false; }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":4,"call-bind/callBound":8,"es-abstract/helpers/getOwnPropertyDescriptor":14,"foreach":17,"has-symbols":21}],36:[function(require,module,exports){
'use strict';

var $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;
var $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;

var exported;

if (!$WeakMap) {
	// eslint-disable-next-line no-unused-vars
	exported = function isWeakMap(x) {
		// `WeakMap` is not present in this environment.
		return false;
	};
}

var $mapHas = $WeakMap ? $WeakMap.prototype.has : null;
var $setHas = $WeakSet ? $WeakSet.prototype.has : null;
if (!exported && !$mapHas) {
	// eslint-disable-next-line no-unused-vars
	exported = function isWeakMap(x) {
		// `WeakMap` does not have a `has` method
		return false;
	};
}

module.exports = exported || function isWeakMap(x) {
	if (!x || typeof x !== 'object') {
		return false;
	}
	try {
		$mapHas.call(x, $mapHas);
		if ($setHas) {
			try {
				$setHas.call(x, $setHas);
			} catch (e) {
				return true;
			}
		}
		return x instanceof $WeakMap; // core-js workaround, pre-v3
	} catch (e) {}
	return false;
};

},{}],37:[function(require,module,exports){
'use strict';

var $WeakMap = typeof WeakMap === 'function' && WeakMap.prototype ? WeakMap : null;
var $WeakSet = typeof WeakSet === 'function' && WeakSet.prototype ? WeakSet : null;

var exported;

if (!$WeakMap) {
	// eslint-disable-next-line no-unused-vars
	exported = function isWeakSet(x) {
		// `WeakSet` is not present in this environment.
		return false;
	};
}

var $mapHas = $WeakMap ? $WeakMap.prototype.has : null;
var $setHas = $WeakSet ? $WeakSet.prototype.has : null;
if (!exported && !$setHas) {
	// eslint-disable-next-line no-unused-vars
	module.exports = function isWeakSet(x) {
		// `WeakSet` does not have a `has` method
		return false;
	};
}

module.exports = exported || function isWeakSet(x) {
	if (!x || typeof x !== 'object') {
		return false;
	}
	try {
		$setHas.call(x, $setHas);
		if ($mapHas) {
			try {
				$mapHas.call(x, $mapHas);
			} catch (e) {
				return true;
			}
		}
		return x instanceof $WeakSet; // core-js workaround, pre-v3
	} catch (e) {}
	return false;
};

},{}],38:[function(require,module,exports){
/*!
 * jQuery JavaScript Library v3.6.0
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright OpenJS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2021-03-02T17:08Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var flat = arr.flat ? function( array ) {
	return arr.flat.call( array );
} : function( array ) {
	return arr.concat.apply( [], array );
};


var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

		// Support: Chrome <=57, Firefox <=52
		// In some browsers, typeof returns "function" for HTML <object> elements
		// (i.e., `typeof document.createElement( "object" ) === "function"`).
		// We don't want to classify *any* DOM node as a function.
		// Support: QtWeb <=3.8.5, WebKit <=534.34, wkhtmltopdf tool <=0.12.5
		// Plus for old WebKit, typeof returns "function" for HTML collections
		// (e.g., `typeof document.getElementsByTagName("div") === "function"`). (gh-4756)
		return typeof obj === "function" && typeof obj.nodeType !== "number" &&
			typeof obj.item !== "function";
	};


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};


var document = window.document;



	var preservedScriptAttributes = {
		type: true,
		src: true,
		nonce: true,
		noModule: true
	};

	function DOMEval( code, node, doc ) {
		doc = doc || document;

		var i, val,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {

				// Support: Firefox 64+, Edge 18+
				// Some browsers don't support the "nonce" property on scripts.
				// On the other hand, just using `getAttribute` is not enough as
				// the `nonce` attribute is reset to an empty string whenever it
				// becomes browsing-context connected.
				// See https://github.com/whatwg/html/issues/2369
				// See https://html.spec.whatwg.org/#nonce-attributes
				// The `node.getAttribute` check was added for the sake of
				// `jQuery.globalEval` so that it can fake a nonce-containing node
				// via an object.
				val = node[ i ] || node.getAttribute && node.getAttribute( i );
				if ( val ) {
					script.setAttribute( i, val );
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.6.0",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	};

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	even: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return ( i + 1 ) % 2;
		} ) );
	},

	odd: function() {
		return this.pushStack( jQuery.grep( this, function( _elem, i ) {
			return i % 2;
		} ) );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				copy = options[ name ];

				// Prevent Object.prototype pollution
				// Prevent never-ending loop
				if ( name === "__proto__" || target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {
					src = target[ name ];

					// Ensure proper type for the source value
					if ( copyIsArray && !Array.isArray( src ) ) {
						clone = [];
					} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {
						clone = {};
					} else {
						clone = src;
					}
					copyIsArray = false;

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a provided context; falls back to the global one
	// if not specified.
	globalEval: function( code, options, doc ) {
		DOMEval( code, { nonce: options && options.nonce }, doc );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
						[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return flat( ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
	function( _i, name ) {
		class2type[ "[object " + name + "]" ] = name.toLowerCase();
	} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.6
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://js.foundation/
 *
 * Date: 2021-02-16
 */
( function( window ) {
var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	nonnativeSelectorCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ( {} ).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	pushNative = arr.push,
	push = arr.push,
	slice = arr.slice,

	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[ i ] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|" +
		"ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram
	identifier = "(?:\\\\[\\da-fA-F]{1,6}" + whitespace +
		"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +

		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +

		// "Attribute values must be CSS identifiers [capture 5]
		// or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" +
		whitespace + "*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +

		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +

		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +

		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" +
		whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace +
		"*" ),
	rdescend = new RegExp( whitespace + "|>" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" +
			whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" +
			whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),

		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace +
			"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace +
			"*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rhtml = /HTML$/i,
	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\[\\da-fA-F]{1,6}" + whitespace + "?|\\\\([^\\r\\n\\f])", "g" ),
	funescape = function( escape, nonHex ) {
		var high = "0x" + escape.slice( 1 ) - 0x10000;

		return nonHex ?

			// Strip the backslash prefix from a non-hex escape sequence
			nonHex :

			// Replace a hexadecimal escape sequence with the encoded Unicode code point
			// Support: IE <=11+
			// For values outside the Basic Multilingual Plane (BMP), manually construct a
			// surrogate pair
			high < 0 ?
				String.fromCharCode( high + 0x10000 ) :
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" +
				ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	inDisabledFieldset = addCombinator(
		function( elem ) {
			return elem.disabled === true && elem.nodeName.toLowerCase() === "fieldset";
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		( arr = slice.call( preferredDoc.childNodes ) ),
		preferredDoc.childNodes
	);

	// Support: Android<4.0
	// Detect silently failing push.apply
	// eslint-disable-next-line no-unused-expressions
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			pushNative.apply( target, slice.call( els ) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;

			// Can't trust NodeList.length
			while ( ( target[ j++ ] = els[ i++ ] ) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {
		setDocument( context );
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {

				// ID selector
				if ( ( m = match[ 1 ] ) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( ( elem = context.getElementById( m ) ) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && ( elem = newContext.getElementById( m ) ) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[ 2 ] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!nonnativeSelectorCache[ selector + " " ] &&
				( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&

				// Support: IE 8 only
				// Exclude object elements
				( nodeType !== 1 || context.nodeName.toLowerCase() !== "object" ) ) {

				newSelector = selector;
				newContext = context;

				// qSA considers elements outside a scoping root when evaluating child or
				// descendant combinators, which is not what we want.
				// In such cases, we work around the behavior by prefixing every selector in the
				// list with an ID selector referencing the scope context.
				// The technique has to be used as well when a leading combinator is used
				// as such selectors are not recognized by querySelectorAll.
				// Thanks to Andrew Dupont for this technique.
				if ( nodeType === 1 &&
					( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;

					// We can use :scope instead of the ID hack if the browser
					// supports it & if we're not changing the context.
					if ( newContext !== context || !support.scope ) {

						// Capture the context ID, setting it first if necessary
						if ( ( nid = context.getAttribute( "id" ) ) ) {
							nid = nid.replace( rcssescape, fcssescape );
						} else {
							context.setAttribute( "id", ( nid = expando ) );
						}
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[ i ] = ( nid ? "#" + nid : ":scope" ) + " " +
							toSelector( groups[ i ] );
					}
					newSelector = groups.join( "," );
				}

				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch ( qsaError ) {
					nonnativeSelectorCache( selector, true );
				} finally {
					if ( nid === expando ) {
						context.removeAttribute( "id" );
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {

		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {

			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return ( cache[ key + " " ] = value );
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement( "fieldset" );

	try {
		return !!fn( el );
	} catch ( e ) {
		return false;
	} finally {

		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}

		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split( "|" ),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[ i ] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( ( cur = cur.nextSibling ) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return ( name === "input" || name === "button" ) && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
					inDisabledFieldset( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction( function( argument ) {
		argument = +argument;
		return markFunction( function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ ( j = matchIndexes[ i ] ) ] ) {
					seed[ j ] = !( matches[ j ] = seed[ j ] );
				}
			}
		} );
	} );
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	var namespace = elem && elem.namespaceURI,
		docElem = elem && ( elem.ownerDocument || elem ).documentElement;

	// Support: IE <=8
	// Assume HTML when documentElement doesn't yet exist, such as inside loading iframes
	// https://bugs.jquery.com/ticket/4833
	return !rhtml.test( namespace || docElem && docElem.nodeName || "HTML" );
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9 - 11+, Edge 12 - 18+
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( preferredDoc != document &&
		( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,
	// Safari 4 - 5 only, Opera <=11.6 - 12.x only
	// IE/Edge & older browsers don't support the :scope pseudo-class.
	// Support: Safari 6.0 only
	// Safari 6.0 supports :scope but it's an alias of :root there.
	support.scope = assert( function( el ) {
		docElem.appendChild( el ).appendChild( document.createElement( "div" ) );
		return typeof el.querySelectorAll !== "undefined" &&
			!el.querySelectorAll( ":scope fieldset div" ).length;
	} );

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert( function( el ) {
		el.className = "i";
		return !el.getAttribute( "className" );
	} );

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert( function( el ) {
		el.appendChild( document.createComment( "" ) );
		return !el.getElementsByTagName( "*" ).length;
	} );

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert( function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	} );

	// ID filter and find
	if ( support.getById ) {
		Expr.filter[ "ID" ] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute( "id" ) === attrId;
			};
		};
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter[ "ID" ] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode( "id" );
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find[ "ID" ] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode( "id" );
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( ( elem = elems[ i++ ] ) ) {
						node = elem.getAttributeNode( "id" );
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find[ "TAG" ] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,

				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( ( elem = results[ i++ ] ) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find[ "CLASS" ] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {

		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert( function( el ) {

			var input;

			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll( "[msallowcapture^='']" ).length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll( "[selected]" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push( "~=" );
			}

			// Support: IE 11+, Edge 15 - 18+
			// IE 11/Edge don't find elements on a `[name='']` query in some cases.
			// Adding a temporary attribute to the document before the selection works
			// around the issue.
			// Interestingly, IE 10 & older don't seem to have the issue.
			input = document.createElement( "input" );
			input.setAttribute( "name", "" );
			el.appendChild( input );
			if ( !el.querySelectorAll( "[name='']" ).length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*name" + whitespace + "*=" +
					whitespace + "*(?:''|\"\")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll( ":checked" ).length ) {
				rbuggyQSA.push( ":checked" );
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push( ".#.+[+~]" );
			}

			// Support: Firefox <=3.6 - 5 only
			// Old Firefox doesn't throw on a badly-escaped identifier.
			el.querySelectorAll( "\\\f" );
			rbuggyQSA.push( "[\\r\\n\\f]" );
		} );

		assert( function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement( "input" );
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll( "[name=d]" ).length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll( ":enabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll( ":disabled" ).length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: Opera 10 - 11 only
			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll( "*,:x" );
			rbuggyQSA.push( ",.*:" );
		} );
	}

	if ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector ) ) ) ) {

		assert( function( el ) {

			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		} );
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( "|" ) );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( "|" ) );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			) );
		} :
		function( a, b ) {
			if ( b ) {
				while ( ( b = b.parentNode ) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		// Support: IE 11+, Edge 17 - 18+
		// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
		// two documents; shallow comparisons work.
		// eslint-disable-next-line eqeqeq
		compare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {

			// Choose the first element that is related to our preferred document
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( a == document || a.ownerDocument == preferredDoc &&
				contains( preferredDoc, a ) ) {
				return -1;
			}

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			// eslint-disable-next-line eqeqeq
			if ( b == document || b.ownerDocument == preferredDoc &&
				contains( preferredDoc, b ) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {

		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {

			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			return a == document ? -1 :
				b == document ? 1 :
				/* eslint-enable eqeqeq */
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( ( cur = cur.parentNode ) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( ( cur = cur.parentNode ) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[ i ] === bp[ i ] ) {
			i++;
		}

		return i ?

			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[ i ], bp[ i ] ) :

			// Otherwise nodes in our document sort first
			// Support: IE 11+, Edge 17 - 18+
			// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
			// two documents; shallow comparisons work.
			/* eslint-disable eqeqeq */
			ap[ i ] == preferredDoc ? -1 :
			bp[ i ] == preferredDoc ? 1 :
			/* eslint-enable eqeqeq */
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	setDocument( elem );

	if ( support.matchesSelector && documentIsHTML &&
		!nonnativeSelectorCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||

				// As well, disconnected nodes are said to be in a document
				// fragment in IE 9
				elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch ( e ) {
			nonnativeSelectorCache( expr, true );
		}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( context.ownerDocument || context ) != document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {

	// Set document vars if needed
	// Support: IE 11+, Edge 17 - 18+
	// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
	// two documents; shallow comparisons work.
	// eslint-disable-next-line eqeqeq
	if ( ( elem.ownerDocument || elem ) != document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],

		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			( val = elem.getAttributeNode( name ) ) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return ( sel + "" ).replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( ( elem = results[ i++ ] ) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {

		// If no nodeType, this is expected to be an array
		while ( ( node = elem[ i++ ] ) ) {

			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {

		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {

			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}

	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[ 1 ] = match[ 1 ].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[ 3 ] = ( match[ 3 ] || match[ 4 ] ||
				match[ 5 ] || "" ).replace( runescape, funescape );

			if ( match[ 2 ] === "~=" ) {
				match[ 3 ] = " " + match[ 3 ] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {

			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[ 1 ] = match[ 1 ].toLowerCase();

			if ( match[ 1 ].slice( 0, 3 ) === "nth" ) {

				// nth-* requires argument
				if ( !match[ 3 ] ) {
					Sizzle.error( match[ 0 ] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[ 4 ] = +( match[ 4 ] ?
					match[ 5 ] + ( match[ 6 ] || 1 ) :
					2 * ( match[ 3 ] === "even" || match[ 3 ] === "odd" ) );
				match[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === "odd" );

				// other types prohibit arguments
			} else if ( match[ 3 ] ) {
				Sizzle.error( match[ 0 ] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[ 6 ] && match[ 2 ];

			if ( matchExpr[ "CHILD" ].test( match[ 0 ] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[ 3 ] ) {
				match[ 2 ] = match[ 4 ] || match[ 5 ] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&

				// Get excess from tokenize (recursively)
				( excess = tokenize( unquoted, true ) ) &&

				// advance to the next closing parenthesis
				( excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length ) ) {

				// excess is a negative index
				match[ 0 ] = match[ 0 ].slice( 0, excess );
				match[ 2 ] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() {
					return true;
				} :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				( pattern = new RegExp( "(^|" + whitespace +
					")" + className + "(" + whitespace + "|$)" ) ) && classCache(
						className, function( elem ) {
							return pattern.test(
								typeof elem.className === "string" && elem.className ||
								typeof elem.getAttribute !== "undefined" &&
									elem.getAttribute( "class" ) ||
								""
							);
				} );
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				/* eslint-disable max-len */

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
				/* eslint-enable max-len */

			};
		},

		"CHILD": function( type, what, _argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, _context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( ( node = node[ dir ] ) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}

								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || ( node[ expando ] = {} );

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								( outerCache[ node.uniqueID ] = {} );

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( ( node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								( diff = nodeIndex = 0 ) || start.pop() ) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {

							// Use previously-cached element index if available
							if ( useCache ) {

								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || ( node[ expando ] = {} );

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									( outerCache[ node.uniqueID ] = {} );

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {

								// Use the same loop as above to seek `elem` from the start
								while ( ( node = ++nodeIndex && node && node[ dir ] ||
									( diff = nodeIndex = 0 ) || start.pop() ) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] ||
												( node[ expando ] = {} );

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												( outerCache[ node.uniqueID ] = {} );

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {

			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction( function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[ i ] );
							seed[ idx ] = !( matches[ idx ] = matched[ i ] );
						}
					} ) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {

		// Potentially complex pseudos
		"not": markFunction( function( selector ) {

			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction( function( seed, matches, _context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( ( elem = unmatched[ i ] ) ) {
							seed[ i ] = !( matches[ i ] = elem );
						}
					}
				} ) :
				function( elem, _context, xml ) {
					input[ 0 ] = elem;
					matcher( input, null, xml, results );

					// Don't keep the element (issue #299)
					input[ 0 ] = null;
					return !results.pop();
				};
		} ),

		"has": markFunction( function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		} ),

		"contains": markFunction( function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;
			};
		} ),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {

			// lang value must be a valid identifier
			if ( !ridentifier.test( lang || "" ) ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( ( elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute( "xml:lang" ) || elem.getAttribute( "lang" ) ) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );
				return false;
			};
		} ),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement &&
				( !document.hasFocus || document.hasFocus() ) &&
				!!( elem.type || elem.href || ~elem.tabIndex );
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {

			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return ( nodeName === "input" && !!elem.checked ) ||
				( nodeName === "option" && !!elem.selected );
		},

		"selected": function( elem ) {

			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				// eslint-disable-next-line no-unused-expressions
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {

			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos[ "empty" ]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( ( attr = elem.getAttribute( "type" ) ) == null ||
					attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo( function() {
			return [ 0 ];
		} ),

		"last": createPositionalPseudo( function( _matchIndexes, length ) {
			return [ length - 1 ];
		} ),

		"eq": createPositionalPseudo( function( _matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		} ),

		"even": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"odd": createPositionalPseudo( function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"lt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ?
				argument + length :
				argument > length ?
					length :
					argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} ),

		"gt": createPositionalPseudo( function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		} )
	}
};

Expr.pseudos[ "nth" ] = Expr.pseudos[ "eq" ];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || ( match = rcomma.exec( soFar ) ) ) {
			if ( match ) {

				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[ 0 ].length ) || soFar;
			}
			groups.push( ( tokens = [] ) );
		}

		matched = false;

		// Combinators
		if ( ( match = rcombinators.exec( soFar ) ) ) {
			matched = match.shift();
			tokens.push( {
				value: matched,

				// Cast descendant combinators to space
				type: match[ 0 ].replace( rtrim, " " )
			} );
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||
				( match = preFilters[ type ]( match ) ) ) ) {
				matched = match.shift();
				tokens.push( {
					value: matched,
					type: type,
					matches: match
				} );
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :

			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[ i ].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?

		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( ( elem = elem[ dir ] ) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( ( elem = elem[ dir ] ) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || ( elem[ expando ] = {} );

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] ||
							( outerCache[ elem.uniqueID ] = {} );

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( ( oldCache = uniqueCache[ key ] ) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return ( newCache[ 2 ] = oldCache[ 2 ] );
						} else {

							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[ i ]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[ 0 ];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[ i ], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( ( elem = unmatched[ i ] ) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction( function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts(
				selector || "*",
				context.nodeType ? [ context ] : context,
				[]
			),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?

				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( ( elem = temp[ i ] ) ) {
					matcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {

					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( ( elem = matcherOut[ i ] ) ) {

							// Restore matcherIn since elem is not yet a final match
							temp.push( ( matcherIn[ i ] = elem ) );
						}
					}
					postFinder( null, ( matcherOut = [] ), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( ( elem = matcherOut[ i ] ) &&
						( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {

						seed[ temp ] = !( results[ temp ] = elem );
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	} );
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[ 0 ].type ],
		implicitRelative = leadingRelative || Expr.relative[ " " ],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				( checkContext = context ).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );

			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {
			matchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];
		} else {
			matcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {

				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[ j ].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(

					// If the preceding token was a descendant combinator, insert an implicit any-element `*`
					tokens
						.slice( 0, i - 1 )
						.concat( { value: tokens[ i - 2 ].type === " " ? "*" : "" } )
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,

				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find[ "TAG" ]( "*", outermost ),

				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),
				len = elems.length;

			if ( outermost ) {

				// Support: IE 11+, Edge 17 - 18+
				// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
				// two documents; shallow comparisons work.
				// eslint-disable-next-line eqeqeq
				outermostContext = context == document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;

					// Support: IE 11+, Edge 17 - 18+
					// IE/Edge sometimes throw a "Permission denied" error when strict-comparing
					// two documents; shallow comparisons work.
					// eslint-disable-next-line eqeqeq
					if ( !context && elem.ownerDocument != document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( ( matcher = elementMatchers[ j++ ] ) ) {
						if ( matcher( elem, context || document, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {

					// They will have gone through all possible matchers
					if ( ( elem = !matcher && elem ) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( ( matcher = setMatchers[ j++ ] ) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {

					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !( unmatched[ i ] || setMatched[ i ] ) ) {
								setMatched[ i ] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {

		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[ i ] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache(
			selector,
			matcherFromGroupMatchers( elementMatchers, setMatchers )
		);

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( ( selector = compiled.selector || selector ) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[ 0 ] = match[ 0 ].slice( 0 );
		if ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === "ID" &&
			context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {

			context = ( Expr.find[ "ID" ]( token.matches[ 0 ]
				.replace( runescape, funescape ), context ) || [] )[ 0 ];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr[ "needsContext" ].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[ i ];

			// Abort if we hit a combinator
			if ( Expr.relative[ ( type = token.type ) ] ) {
				break;
			}
			if ( ( find = Expr.find[ type ] ) ) {

				// Search, expanding context for leading sibling combinators
				if ( ( seed = find(
					token.matches[ 0 ].replace( runescape, funescape ),
					rsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||
						context
				) ) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split( "" ).sort( sortOrder ).join( "" ) === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert( function( el ) {

	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement( "fieldset" ) ) & 1;
} );

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert( function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute( "href" ) === "#";
} ) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	} );
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert( function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
} ) ) {
	addHandle( "value", function( elem, _name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	} );
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert( function( el ) {
	return el.getAttribute( "disabled" ) == null;
} ) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
				( val = elem.getAttributeNode( name ) ) && val.specified ?
					val.value :
					null;
		}
	} );
}

return Sizzle;

} )( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

	return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

}
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, _i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, _i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, _i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
		if ( elem.contentDocument != null &&

			// Support: IE 11+
			// <object> elements with no `data` attribute has an object
			// `contentDocument` with a `null` prototype.
			getProto( elem.contentDocument ) ) {

			return elem.contentDocument;
		}

		// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
		// Treat the template element as a regular one in browsers that
		// don't support it.
		if ( nodeName( elem, "template" ) ) {
			elem = elem.content || elem;
		}

		return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( _i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the primary Deferred
			primary = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						primary.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, primary.done( updateFunc( i ) ).resolve, primary.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( primary.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return primary.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), primary.reject );
		}

		return primary.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, _key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
						value :
						value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( _all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var documentElement = document.documentElement;



	var isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem );
		},
		composed = { composed: true };

	// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only
	// Check attachment across shadow DOM boundaries when possible (gh-3504)
	// Support: iOS 10.0-10.2 only
	// Early iOS 10 versions support `attachShadow` but not `getRootNode`,
	// leading to errors. We need to check for `getRootNode`.
	if ( documentElement.getRootNode ) {
		isAttached = function( elem ) {
			return jQuery.contains( elem.ownerDocument, elem ) ||
				elem.getRootNode( composed ) === elem.ownerDocument;
		};
	}
var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			isAttached( elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};



function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = elem.nodeType &&
			( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]*)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// Support: IE <=9 only
	// IE <=9 replaces <option> tags with their contents when inserted outside of
	// the select element.
	div.innerHTML = "<option></option>";
	support.option = !!div.lastChild;
} )();


// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

// Support: IE <=9 only
if ( !support.option ) {
	wrapMap.optgroup = wrapMap.option = [ 1, "<select multiple='multiple'>", "</select>" ];
}


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, attached, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		attached = isAttached( elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( attached ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


var rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 - 11+
// focus() and blur() are asynchronous, except when they are no-op.
// So expect focus to be synchronous when the element is already active,
// and blur to be synchronous when the element is not already active.
// (focus and blur are always synchronous in other supported browsers,
// this just defines when we can count on it).
function expectSync( elem, type ) {
	return ( elem === safeActiveElement() ) === ( type === "focus" );
}

// Support: IE <=9 only
// Accessing document.activeElement can throw unexpectedly
// https://bugs.jquery.com/ticket/13393
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Only attach events to objects that accept data
		if ( !acceptData( elem ) ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = Object.create( null );
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),

			// Make a writable jQuery.Event from the native event object
			event = jQuery.event.fix( nativeEvent ),

			handlers = (
				dataPriv.get( this, "events" ) || Object.create( null )
			)[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// If the event is namespaced, then each handler is only invoked if it is
				// specially universal or its namespaces are a superset of the event's.
				if ( !event.rnamespace || handleObj.namespace === false ||
					event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
						return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
						return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		click: {

			// Utilize native event to ensure correct state for checkable inputs
			setup: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Claim the first handler
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					// dataPriv.set( el, "click", ... )
					leverageNative( el, "click", returnTrue );
				}

				// Return false to allow normal processing in the caller
				return false;
			},
			trigger: function( data ) {

				// For mutual compressibility with _default, replace `this` access with a local var.
				// `|| data` is dead code meant only to preserve the variable through minification.
				var el = this || data;

				// Force setup before triggering a click
				if ( rcheckableType.test( el.type ) &&
					el.click && nodeName( el, "input" ) ) {

					leverageNative( el, "click" );
				}

				// Return non-false to allow normal event-path propagation
				return true;
			},

			// For cross-browser consistency, suppress native .click() on links
			// Also prevent it if we're currently inside a leveraged native-event stack
			_default: function( event ) {
				var target = event.target;
				return rcheckableType.test( target.type ) &&
					target.click && nodeName( target, "input" ) &&
					dataPriv.get( target, "click" ) ||
					nodeName( target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

// Ensure the presence of an event listener that handles manually-triggered
// synthetic events by interrupting progress until reinvoked in response to
// *native* events that it fires directly, ensuring that state changes have
// already occurred before other listeners are invoked.
function leverageNative( el, type, expectSync ) {

	// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add
	if ( !expectSync ) {
		if ( dataPriv.get( el, type ) === undefined ) {
			jQuery.event.add( el, type, returnTrue );
		}
		return;
	}

	// Register the controller as a special universal handler for all event namespaces
	dataPriv.set( el, type, false );
	jQuery.event.add( el, type, {
		namespace: false,
		handler: function( event ) {
			var notAsync, result,
				saved = dataPriv.get( this, type );

			if ( ( event.isTrigger & 1 ) && this[ type ] ) {

				// Interrupt processing of the outer synthetic .trigger()ed event
				// Saved data should be false in such cases, but might be a leftover capture object
				// from an async native handler (gh-4350)
				if ( !saved.length ) {

					// Store arguments for use when handling the inner native event
					// There will always be at least one argument (an event object), so this array
					// will not be confused with a leftover capture object.
					saved = slice.call( arguments );
					dataPriv.set( this, type, saved );

					// Trigger the native event and capture its result
					// Support: IE <=9 - 11+
					// focus() and blur() are asynchronous
					notAsync = expectSync( this, type );
					this[ type ]();
					result = dataPriv.get( this, type );
					if ( saved !== result || notAsync ) {
						dataPriv.set( this, type, false );
					} else {
						result = {};
					}
					if ( saved !== result ) {

						// Cancel the outer synthetic event
						event.stopImmediatePropagation();
						event.preventDefault();

						// Support: Chrome 86+
						// In Chrome, if an element having a focusout handler is blurred by
						// clicking outside of it, it invokes the handler synchronously. If
						// that handler calls `.remove()` on the element, the data is cleared,
						// leaving `result` undefined. We need to guard against this.
						return result && result.value;
					}

				// If this is an inner synthetic event for an event with a bubbling surrogate
				// (focus or blur), assume that the surrogate already propagated from triggering the
				// native event and prevent that from happening again here.
				// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the
				// bubbling surrogate propagates *after* the non-bubbling base), but that seems
				// less bad than duplication.
				} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {
					event.stopPropagation();
				}

			// If this is a native event triggered above, everything is now in order
			// Fire an inner synthetic event with the original arguments
			} else if ( saved.length ) {

				// ...and capture the result
				dataPriv.set( this, type, {
					value: jQuery.event.trigger(

						// Support: IE <=9 - 11+
						// Extend with the prototype to reset the above stopImmediatePropagation()
						jQuery.extend( saved[ 0 ], jQuery.Event.prototype ),
						saved.slice( 1 ),
						this
					)
				} );

				// Abort handling of the native event
				event.stopImmediatePropagation();
			}
		}
	} );
}

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	code: true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,
	which: true
}, jQuery.event.addProp );

jQuery.each( { focus: "focusin", blur: "focusout" }, function( type, delegateType ) {
	jQuery.event.special[ type ] = {

		// Utilize native event if possible so blur/focus sequence is correct
		setup: function() {

			// Claim the first handler
			// dataPriv.set( this, "focus", ... )
			// dataPriv.set( this, "blur", ... )
			leverageNative( this, type, expectSync );

			// Return false to allow normal processing in the caller
			return false;
		},
		trigger: function() {

			// Force setup before trigger
			leverageNative( this, type );

			// Return non-false to allow normal event-path propagation
			return true;
		},

		// Suppress native focus or blur as it's already being fired
		// in leverageNative.
		_default: function() {
			return true;
		},

		delegateType: delegateType
	};
} );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.get( src );
		events = pdataOld.events;

		if ( events ) {
			dataPriv.remove( dest, "handle events" );

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = flat( args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl && !node.noModule ) {
								jQuery._evalUrl( node.src, {
									nonce: node.nonce || node.getAttribute( "nonce" )
								}, doc );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), node, doc );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && isAttached( node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html;
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = isAttached( elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var swap = function( elem, options, callback ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.call( elem );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		// Support: Chrome <=64
		// Don't get tricked when zoom affects offsetWidth (gh-4029)
		div.style.position = "absolute";
		scrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableTrDimensionsVal, reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		},

		// Support: IE 9 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Behavior in IE 9 is more subtle than in newer versions & it passes
		// some versions of this test; make sure not to make it pass there!
		//
		// Support: Firefox 70+
		// Only Firefox includes border widths
		// in computed dimensions. (gh-4529)
		reliableTrDimensions: function() {
			var table, tr, trChild, trStyle;
			if ( reliableTrDimensionsVal == null ) {
				table = document.createElement( "table" );
				tr = document.createElement( "tr" );
				trChild = document.createElement( "div" );

				table.style.cssText = "position:absolute;left:-11111px;border-collapse:separate";
				tr.style.cssText = "border:1px solid";

				// Support: Chrome 86+
				// Height set through cssText does not get applied.
				// Computed height then comes back as 0.
				tr.style.height = "1px";
				trChild.style.height = "9px";

				// Support: Android 8 Chrome 86+
				// In our bodyBackground.html iframe,
				// display for all div elements is set to "inline",
				// which causes a problem only in Android 8 Chrome 86.
				// Ensuring the div is display: block
				// gets around this issue.
				trChild.style.display = "block";

				documentElement
					.appendChild( table )
					.appendChild( tr )
					.appendChild( trChild );

				trStyle = window.getComputedStyle( tr );
				reliableTrDimensionsVal = ( parseInt( trStyle.height, 10 ) +
					parseInt( trStyle.borderTopWidth, 10 ) +
					parseInt( trStyle.borderBottomWidth, 10 ) ) === tr.offsetHeight;

				documentElement.removeChild( table );
			}
			return reliableTrDimensionsVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !isAttached( elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style,
	vendorProps = {};

// Return a vendor-prefixed property or undefined
function vendorPropName( name ) {

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a potentially-mapped jQuery.cssProps or vendor prefixed property
function finalPropName( name ) {
	var final = jQuery.cssProps[ name ] || vendorProps[ name ];

	if ( final ) {
		return final;
	}
	if ( name in emptyStyle ) {
		return name;
	}
	return vendorProps[ name ] = vendorPropName( name ) || name;
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	};

function setPositiveNumber( _elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5

		// If offsetWidth/offsetHeight is unknown, then we can't determine content-box scroll gutter
		// Use an explicit zero to avoid NaN (gh-3964)
		) ) || 0;
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),

		// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).
		// Fake content-box until we know it's needed to know the true value.
		boxSizingNeeded = !support.boxSizingReliable() || extra,
		isBorderBox = boxSizingNeeded &&
			jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox,

		val = curCSS( elem, dimension, styles ),
		offsetProp = "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}


	// Support: IE 9 - 11 only
	// Use offsetWidth/offsetHeight for when box sizing is unreliable.
	// In those cases, the computed value can be trusted to be border-box.
	if ( ( !support.boxSizingReliable() && isBorderBox ||

		// Support: IE 10 - 11+, Edge 15 - 18+
		// IE/Edge misreport `getComputedStyle` of table rows with width/height
		// set in CSS while `offset*` properties report correct values.
		// Interestingly, in some cases IE 9 doesn't suffer from this issue.
		!support.reliableTrDimensions() && nodeName( elem, "tr" ) ||

		// Fall back to offsetWidth/offsetHeight when value is "auto"
		// This happens for inline elements with no explicit setting (gh-3571)
		val === "auto" ||

		// Support: Android <=4.1 - 4.3 only
		// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) &&

		// Make sure the element is visible & connected
		elem.getClientRects().length ) {

		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

		// Where available, offsetWidth/offsetHeight approximate border box dimensions.
		// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the
		// retrieved value as a content box dimension.
		valueIsBorderBox = offsetProp in elem;
		if ( valueIsBorderBox ) {
			val = elem[ offsetProp ];
		}
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"gridArea": true,
		"gridColumn": true,
		"gridColumnEnd": true,
		"gridColumnStart": true,
		"gridRow": true,
		"gridRowEnd": true,
		"gridRowStart": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append
			// "px" to a few hardcoded values.
			if ( type === "number" && !isCustomProp ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( _i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
					swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, dimension, extra );
					} ) :
					getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),

				// Only read styles.position if the test has a chance to fail
				// to avoid forcing a reflow.
				scrollboxSizeBuggy = !support.scrollboxSize() &&
					styles.position === "absolute",

				// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)
				boxSizingNeeded = scrollboxSizeBuggy || extra,
				isBorderBox = boxSizingNeeded &&
					jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra ?
					boxModelAdjustment(
						elem,
						dimension,
						extra,
						isBorderBox,
						styles
					) :
					0;

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && scrollboxSizeBuggy ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
			) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 && (
				jQuery.cssHooks[ tween.prop ] ||
					tween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

				/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
					animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};

		doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( _i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( _i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
							"" :
							dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
				return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || Object.create( null ) )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {

				// Handle: regular nodes (via `this.ownerDocument`), window
				// (via `this.document`) & document (via `this`).
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this.document || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = { guid: Date.now() };

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, parserErrorElem;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {}

	parserErrorElem = xml && xml.getElementsByTagName( "parsererror" )[ 0 ];
	if ( !xml || parserErrorElem ) {
		jQuery.error( "Invalid XML: " + (
			parserErrorElem ?
				jQuery.map( parserErrorElem.childNodes, function( el ) {
					return el.textContent;
				} ).join( "\n" ) :
				data
		) );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	if ( a == null ) {
		return "";
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} ).filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} ).map( function( _i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );

originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() + " " ] =
									( responseHeaders[ match[ 1 ].toLowerCase() + " " ] || [] )
										.concat( match[ 2 ] );
							}
						}
						match = responseHeaders[ key.toLowerCase() + " " ];
					}
					return match == null ? null : match.join( ", " );
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce.guid++ ) +
					uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Use a noop converter for missing script but not if jsonp
			if ( !isSuccess &&
				jQuery.inArray( "script", s.dataTypes ) > -1 &&
				jQuery.inArray( "json", s.dataTypes ) < 0 ) {
				s.converters[ "text script" ] = function() {};
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( _i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );

jQuery.ajaxPrefilter( function( s ) {
	var i;
	for ( i in s.headers ) {
		if ( i.toLowerCase() === "content-type" ) {
			s.contentType = s.headers[ i ] || "";
		}
	}
} );


jQuery._evalUrl = function( url, options, doc ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,

		// Only evaluate the response if it is successful (gh-4126)
		// dataFilter is not invoked for failure responses, so using it instead
		// of the default converter is kludgy but it works.
		converters: {
			"text script": function() {}
		},
		dataFilter: function( response ) {
			jQuery.globalEval( response, options, doc );
		}
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain or forced-by-attrs requests
	if ( s.crossDomain || s.scriptAttrs ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" )
					.attr( s.scriptAttrs || {} )
					.prop( { charset: s.scriptCharset, src: s.url } )
					.on( "load error", callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					} );

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce.guid++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( _i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( {
		padding: "inner" + name,
		content: type,
		"": "outer" + name
	}, function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( _i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	},

	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );

jQuery.each(
	( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( _i, name ) {

		// Handle event binding
		jQuery.fn[ name ] = function( data, fn ) {
			return arguments.length > 0 ?
				this.on( name, null, data, fn ) :
				this.trigger( name );
		};
	}
);




// Support: Android <=4.0 only
// Make sure we trim BOM and NBSP
var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};

jQuery.trim = function( text ) {
	return text == null ?
		"" :
		( text + "" ).replace( rtrim, "" );
};



// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	} );
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === "undefined" ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );

},{}],39:[function(require,module,exports){
"use strict";

/*globals jQuery, define, module, exports, require, window, document, postMessage */
(function (factory) {
  "use strict";

  if (typeof define === 'function' && define.amd) {
    define(['jquery'], factory);
  } else if (typeof module !== 'undefined' && module.exports) {
    module.exports = factory(require('jquery'));
  } else {
    factory(jQuery);
  }
})(function ($, undefined) {
  "use strict";
  /*!
   * jsTree 3.3.11
   * http://jstree.com/
   *
   * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)
   *
   * Licensed same as jquery - under the terms of the MIT License
   *   http://www.opensource.org/licenses/mit-license.php
   */

  /*!
   * if using jslint please allow for the jQuery global and use following options:
   * jslint: loopfunc: true, browser: true, ass: true, bitwise: true, continue: true, nomen: true, plusplus: true, regexp: true, unparam: true, todo: true, white: true
   */

  /*jshint -W083 */
  // prevent another load? maybe there is a better way?

  if ($.jstree) {
    return;
  }
  /**
   * ### jsTree core functionality
   */
  // internal variables


  var instance_counter = 0,
      ccp_node = false,
      ccp_mode = false,
      ccp_inst = false,
      themes_loaded = [],
      src = $('script:last').attr('src'),
      document = window.document; // local variable is always faster to access then a global

  var setImmediate = window.setImmediate;
  var Promise = window.Promise;

  if (!setImmediate && Promise) {
    // Good enough approximation of setImmediate
    setImmediate = function (cb, arg) {
      Promise.resolve(arg).then(cb);
    };
  }
  /**
   * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.
   * @name $.jstree
   */


  $.jstree = {
    /**
     * specifies the jstree version in use
     * @name $.jstree.version
     */
    version: '3.3.11',

    /**
     * holds all the default options used when creating new instances
     * @name $.jstree.defaults
     */
    defaults: {
      /**
       * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`
       * @name $.jstree.defaults.plugins
       */
      plugins: []
    },

    /**
     * stores all loaded jstree plugins (used internally)
     * @name $.jstree.plugins
     */
    plugins: {},
    path: src && src.indexOf('/') !== -1 ? src.replace(/\/[^\/]+$/, '') : '',
    idregex: /[\\:&!^|()\[\]<>@*'+~#";.,=\- \/${}%?`]/g,
    root: '#'
  };
  /**
   * creates a jstree instance
   * @name $.jstree.create(el [, options])
   * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector
   * @param {Object} options options for this instance (extends `$.jstree.defaults`)
   * @return {jsTree} the new instance
   */

  $.jstree.create = function (el, options) {
    var tmp = new $.jstree.core(++instance_counter),
        opt = options;
    options = $.extend(true, {}, $.jstree.defaults, options);

    if (opt && opt.plugins) {
      options.plugins = opt.plugins;
    }

    $.each(options.plugins, function (i, k) {
      if (i !== 'core') {
        tmp = tmp.plugin(k, options[k]);
      }
    });
    $(el).data('jstree', tmp);
    tmp.init(el, options);
    return tmp;
  };
  /**
   * remove all traces of jstree from the DOM and destroy all instances
   * @name $.jstree.destroy()
   */


  $.jstree.destroy = function () {
    $('.jstree:jstree').jstree('destroy');
    $(document).off('.jstree');
  };
  /**
   * the jstree class constructor, used only internally
   * @private
   * @name $.jstree.core(id)
   * @param {Number} id this instance's index
   */


  $.jstree.core = function (id) {
    this._id = id;
    this._cnt = 0;
    this._wrk = null;
    this._data = {
      core: {
        themes: {
          name: false,
          dots: false,
          icons: false,
          ellipsis: false
        },
        selected: [],
        last_error: {},
        working: false,
        worker_queue: [],
        focused: null
      }
    };
  };
  /**
   * get a reference to an existing instance
   *
   * __Examples__
   *
   *	// provided a container with an ID of "tree", and a nested node with an ID of "branch"
   *	// all of there will return the same instance
   *	$.jstree.reference('tree');
   *	$.jstree.reference('#tree');
   *	$.jstree.reference($('#tree'));
   *	$.jstree.reference(document.getElementByID('tree'));
   *	$.jstree.reference('branch');
   *	$.jstree.reference('#branch');
   *	$.jstree.reference($('#branch'));
   *	$.jstree.reference(document.getElementByID('branch'));
   *
   * @name $.jstree.reference(needle)
   * @param {DOMElement|jQuery|String} needle
   * @return {jsTree|null} the instance or `null` if not found
   */


  $.jstree.reference = function (needle) {
    var tmp = null,
        obj = null;

    if (needle && needle.id && (!needle.tagName || !needle.nodeType)) {
      needle = needle.id;
    }

    if (!obj || !obj.length) {
      try {
        obj = $(needle);
      } catch (ignore) {}
    }

    if (!obj || !obj.length) {
      try {
        obj = $('#' + needle.replace($.jstree.idregex, '\\$&'));
      } catch (ignore) {}
    }

    if (obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {
      tmp = obj;
    } else {
      $('.jstree').each(function () {
        var inst = $(this).data('jstree');

        if (inst && inst._model.data[needle]) {
          tmp = inst;
          return false;
        }
      });
    }

    return tmp;
  };
  /**
   * Create an instance, get an instance or invoke a command on a instance.
   *
   * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).
   *
   * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).
   *
   * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).
   *
   * In any other case - nothing is returned and chaining is not broken.
   *
   * __Examples__
   *
   *	$('#tree1').jstree(); // creates an instance
   *	$('#tree2').jstree({ plugins : [] }); // create an instance with some options
   *	$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments
   *	$('#tree2').jstree(); // get an existing instance (or create an instance)
   *	$('#tree2').jstree(true); // get an existing instance (will not create new instance)
   *	$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)
   *
   * @name $().jstree([arg])
   * @param {String|Object} arg
   * @return {Mixed}
   */


  $.fn.jstree = function (arg) {
    // check for string argument
    var is_method = typeof arg === 'string',
        args = Array.prototype.slice.call(arguments, 1),
        result = null;

    if (arg === true && !this.length) {
      return false;
    }

    this.each(function () {
      // get the instance (if there is one) and method (if it exists)
      var instance = $.jstree.reference(this),
          method = is_method && instance ? instance[arg] : null; // if calling a method, and method is available - execute on the instance

      result = is_method && method ? method.apply(instance, args) : null; // if there is no instance and no method is being called - create one

      if (!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {
        $.jstree.create(this, arg);
      } // if there is an instance and no method is called - return the instance


      if (instance && !is_method || arg === true) {
        result = instance || false;
      } // if there was a method call which returned a result - break and return the value


      if (result !== null && result !== undefined) {
        return false;
      }
    }); // if there was a method call with a valid return value - return that, otherwise continue the chain

    return result !== null && result !== undefined ? result : this;
  };
  /**
   * used to find elements containing an instance
   *
   * __Examples__
   *
   *	$('div:jstree').each(function () {
   *		$(this).jstree('destroy');
   *	});
   *
   * @name $(':jstree')
   * @return {jQuery}
   */


  $.expr.pseudos.jstree = $.expr.createPseudo(function (search) {
    return function (a) {
      return $(a).hasClass('jstree') && $(a).data('jstree') !== undefined;
    };
  });
  /**
   * stores all defaults for the core
   * @name $.jstree.defaults.core
   */

  $.jstree.defaults.core = {
    /**
     * data configuration
     *
     * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).
     *
     * You can also pass in a HTML string or a JSON array here.
     *
     * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree.
     * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.
     *
     * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.
     *
     * __Examples__
     *
     *	// AJAX
     *	$('#tree').jstree({
     *		'core' : {
     *			'data' : {
     *				'url' : '/get/children/',
     *				'data' : function (node) {
     *					return { 'id' : node.id };
     *				}
     *			}
     *		});
     *
     *	// direct data
     *	$('#tree').jstree({
     *		'core' : {
     *			'data' : [
     *				'Simple root node',
     *				{
     *					'id' : 'node_2',
     *					'text' : 'Root node with options',
     *					'state' : { 'opened' : true, 'selected' : true },
     *					'children' : [ { 'text' : 'Child 1' }, 'Child 2']
     *				}
     *			]
     *		}
     *	});
     *
     *	// function
     *	$('#tree').jstree({
     *		'core' : {
     *			'data' : function (obj, callback) {
     *				callback.call(this, ['Root 1', 'Root 2']);
     *			}
     *		});
     *
     * @name $.jstree.defaults.core.data
     */
    data: false,

    /**
     * configure the various strings used throughout the tree
     *
     * You can use an object where the key is the string you need to replace and the value is your replacement.
     * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.
     * If left as `false` no replacement is made.
     *
     * __Examples__
     *
     *	$('#tree').jstree({
     *		'core' : {
     *			'strings' : {
     *				'Loading ...' : 'Please wait ...'
     *			}
     *		}
     *	});
     *
     * @name $.jstree.defaults.core.strings
     */
    strings: false,

    /**
     * determines what happens when a user tries to modify the structure of the tree
     * If left as `false` all operations like create, rename, delete, move or copy are prevented.
     * You can set this to `true` to allow all interactions or use a function to have better control.
     *
     * __Examples__
     *
     *	$('#tree').jstree({
     *		'core' : {
     *			'check_callback' : function (operation, node, node_parent, node_position, more) {
     *				// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node', 'copy_node' or 'edit'
     *				// in case of 'rename_node' node_position is filled with the new node name
     *				return operation === 'rename_node' ? true : false;
     *			}
     *		}
     *	});
     *
     * @name $.jstree.defaults.core.check_callback
     */
    check_callback: false,

    /**
     * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)
     * @name $.jstree.defaults.core.error
     */
    error: $.noop,

    /**
     * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)
     * @name $.jstree.defaults.core.animation
     */
    animation: 200,

    /**
     * a boolean indicating if multiple nodes can be selected
     * @name $.jstree.defaults.core.multiple
     */
    multiple: true,

    /**
     * theme configuration object
     * @name $.jstree.defaults.core.themes
     */
    themes: {
      /**
       * the name of the theme to use (if left as `false` the default theme is used)
       * @name $.jstree.defaults.core.themes.name
       */
      name: false,

      /**
       * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.
       * @name $.jstree.defaults.core.themes.url
       */
      url: false,

      /**
       * the location of all jstree themes - only used if `url` is set to `true`
       * @name $.jstree.defaults.core.themes.dir
       */
      dir: false,

      /**
       * a boolean indicating if connecting dots are shown
       * @name $.jstree.defaults.core.themes.dots
       */
      dots: true,

      /**
       * a boolean indicating if node icons are shown
       * @name $.jstree.defaults.core.themes.icons
       */
      icons: true,

      /**
       * a boolean indicating if node ellipsis should be shown - this only works with a fixed with on the container
       * @name $.jstree.defaults.core.themes.ellipsis
       */
      ellipsis: false,

      /**
       * a boolean indicating if the tree background is striped
       * @name $.jstree.defaults.core.themes.stripes
       */
      stripes: false,

      /**
       * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)
       * @name $.jstree.defaults.core.themes.variant
       */
      variant: false,

      /**
       * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.
       * @name $.jstree.defaults.core.themes.responsive
       */
      responsive: false
    },

    /**
     * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)
     * @name $.jstree.defaults.core.expand_selected_onload
     */
    expand_selected_onload: true,

    /**
     * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`
     * @name $.jstree.defaults.core.worker
     */
    worker: true,

    /**
     * Force node text to plain text (and escape HTML). Defaults to `false`
     * @name $.jstree.defaults.core.force_text
     */
    force_text: false,

    /**
     * Should the node be toggled if the text is double clicked. Defaults to `true`
     * @name $.jstree.defaults.core.dblclick_toggle
     */
    dblclick_toggle: true,

    /**
     * Should the loaded nodes be part of the state. Defaults to `false`
     * @name $.jstree.defaults.core.loaded_state
     */
    loaded_state: false,

    /**
     * Should the last active node be focused when the tree container is blurred and the focused again. This helps working with screen readers. Defaults to `true`
     * @name $.jstree.defaults.core.restore_focus
     */
    restore_focus: true,

    /**
     * Force to compute and set "aria-setsize" and "aria-posinset" explicitly for each treeitem. 
     * Some browsers may compute incorrect elements position and produce wrong announcements for screen readers. Defaults to `false`
     * @name $.jstree.defaults.core.compute_elements_positions
     */
    compute_elements_positions: false,

    /**
     * Default keyboard shortcuts (an object where each key is the button name or combo - like 'enter', 'ctrl-space', 'p', etc and the value is the function to execute in the instance's scope)
     * @name $.jstree.defaults.core.keyboard
     */
    keyboard: {
      'ctrl-space': function (e) {
        // aria defines space only with Ctrl
        e.type = "click";
        $(e.currentTarget).trigger(e);
      },
      'enter': function (e) {
        // enter
        e.type = "click";
        $(e.currentTarget).trigger(e);
      },
      'left': function (e) {
        // left
        e.preventDefault();

        if (this.is_open(e.currentTarget)) {
          this.close_node(e.currentTarget);
        } else {
          var o = this.get_parent(e.currentTarget);

          if (o && o.id !== $.jstree.root) {
            this.get_node(o, true).children('.jstree-anchor').focus();
          }
        }
      },
      'up': function (e) {
        // up
        e.preventDefault();
        var o = this.get_prev_dom(e.currentTarget);

        if (o && o.length) {
          o.children('.jstree-anchor').focus();
        }
      },
      'right': function (e) {
        // right
        e.preventDefault();

        if (this.is_closed(e.currentTarget)) {
          this.open_node(e.currentTarget, function (o) {
            this.get_node(o, true).children('.jstree-anchor').focus();
          });
        } else if (this.is_open(e.currentTarget)) {
          var o = this.get_node(e.currentTarget, true).children('.jstree-children')[0];

          if (o) {
            $(this._firstChild(o)).children('.jstree-anchor').focus();
          }
        }
      },
      'down': function (e) {
        // down
        e.preventDefault();
        var o = this.get_next_dom(e.currentTarget);

        if (o && o.length) {
          o.children('.jstree-anchor').focus();
        }
      },
      '*': function (e) {
        // aria defines * on numpad as open_all - not very common
        this.open_all();
      },
      'home': function (e) {
        // home
        e.preventDefault();

        var o = this._firstChild(this.get_container_ul()[0]);

        if (o) {
          $(o).children('.jstree-anchor').filter(':visible').focus();
        }
      },
      'end': function (e) {
        // end
        e.preventDefault();
        this.element.find('.jstree-anchor').filter(':visible').last().focus();
      },
      'f2': function (e) {
        // f2 - safe to include - if check_callback is false it will fail
        e.preventDefault();
        this.edit(e.currentTarget);
      }
    }
  };
  $.jstree.core.prototype = {
    /**
     * used to decorate an instance with a plugin. Used internally.
     * @private
     * @name plugin(deco [, opts])
     * @param  {String} deco the plugin to decorate with
     * @param  {Object} opts options for the plugin
     * @return {jsTree}
     */
    plugin: function (deco, opts) {
      var Child = $.jstree.plugins[deco];

      if (Child) {
        this._data[deco] = {};
        Child.prototype = this;
        return new Child(opts, this);
      }

      return this;
    },

    /**
     * initialize the instance. Used internally.
     * @private
     * @name init(el, optons)
     * @param {DOMElement|jQuery|String} el the element we are transforming
     * @param {Object} options options for this instance
     * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree
     */
    init: function (el, options) {
      this._model = {
        data: {},
        changed: [],
        force_full_redraw: false,
        redraw_timeout: false,
        default_state: {
          loaded: true,
          opened: false,
          selected: false,
          disabled: false
        }
      };
      this._model.data[$.jstree.root] = {
        id: $.jstree.root,
        parent: null,
        parents: [],
        children: [],
        children_d: [],
        state: {
          loaded: false
        }
      };
      this.element = $(el).addClass('jstree jstree-' + this._id);
      this.settings = options;
      this._data.core.ready = false;
      this._data.core.loaded = false;
      this._data.core.rtl = this.element.css("direction") === "rtl";
      this.element[this._data.core.rtl ? 'addClass' : 'removeClass']("jstree-rtl");
      this.element.attr('role', 'tree');

      if (this.settings.core.multiple) {
        this.element.attr('aria-multiselectable', true);
      }

      if (!this.element.attr('tabindex')) {
        this.element.attr('tabindex', '0');
      }

      this.bind();
      /**
       * triggered after all events are bound
       * @event
       * @name init.jstree
       */

      this.trigger("init");
      this._data.core.original_container_html = this.element.find(" > ul > li").clone(true);

      this._data.core.original_container_html.find("li").addBack().contents().filter(function () {
        return this.nodeType === 3 && (!this.nodeValue || /^\s+$/.test(this.nodeValue));
      }).remove();

      this.element.html("<" + "ul class='jstree-container-ul jstree-children' role='group'><" + "li id='j" + this._id + "_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='none'><i class='jstree-icon jstree-ocl'></i><" + "a class='jstree-anchor' role='treeitem' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>" + this.get_string("Loading ...") + "</a></li></ul>");
      this.element.attr('aria-activedescendant', 'j' + this._id + '_loading');
      this._data.core.li_height = this.get_container_ul().children("li").first().outerHeight() || 24;
      this._data.core.node = this._create_prototype_node();
      /**
       * triggered after the loading text is shown and before loading starts
       * @event
       * @name loading.jstree
       */

      this.trigger("loading");
      this.load_node($.jstree.root);
    },

    /**
     * destroy an instance
     * @name destroy()
     * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact
     */
    destroy: function (keep_html) {
      /**
       * triggered before the tree is destroyed
       * @event
       * @name destroy.jstree
       */
      this.trigger("destroy");

      if (this._wrk) {
        try {
          window.URL.revokeObjectURL(this._wrk);
          this._wrk = null;
        } catch (ignore) {}
      }

      if (!keep_html) {
        this.element.empty();
      }

      this.teardown();
    },

    /**
     * Create a prototype node
     * @name _create_prototype_node()
     * @return {DOMElement}
     */
    _create_prototype_node: function () {
      var _node = document.createElement('LI'),
          _temp1,
          _temp2;

      _node.setAttribute('role', 'none');

      _temp1 = document.createElement('I');
      _temp1.className = 'jstree-icon jstree-ocl';

      _temp1.setAttribute('role', 'presentation');

      _node.appendChild(_temp1);

      _temp1 = document.createElement('A');
      _temp1.className = 'jstree-anchor';

      _temp1.setAttribute('href', '#');

      _temp1.setAttribute('tabindex', '-1');

      _temp1.setAttribute('role', 'treeitem');

      _temp2 = document.createElement('I');
      _temp2.className = 'jstree-icon jstree-themeicon';

      _temp2.setAttribute('role', 'presentation');

      _temp1.appendChild(_temp2);

      _node.appendChild(_temp1);

      _temp1 = _temp2 = null;
      return _node;
    },
    _kbevent_to_func: function (e) {
      var keys = {
        8: "Backspace",
        9: "Tab",
        13: "Enter",
        19: "Pause",
        27: "Esc",
        32: "Space",
        33: "PageUp",
        34: "PageDown",
        35: "End",
        36: "Home",
        37: "Left",
        38: "Up",
        39: "Right",
        40: "Down",
        44: "Print",
        45: "Insert",
        46: "Delete",
        96: "Numpad0",
        97: "Numpad1",
        98: "Numpad2",
        99: "Numpad3",
        100: "Numpad4",
        101: "Numpad5",
        102: "Numpad6",
        103: "Numpad7",
        104: "Numpad8",
        105: "Numpad9",
        '-13': "NumpadEnter",
        112: "F1",
        113: "F2",
        114: "F3",
        115: "F4",
        116: "F5",
        117: "F6",
        118: "F7",
        119: "F8",
        120: "F9",
        121: "F10",
        122: "F11",
        123: "F12",
        144: "Numlock",
        145: "Scrolllock",
        16: 'Shift',
        17: 'Ctrl',
        18: 'Alt',
        48: '0',
        49: '1',
        50: '2',
        51: '3',
        52: '4',
        53: '5',
        54: '6',
        55: '7',
        56: '8',
        57: '9',
        59: ';',
        61: '=',
        65: 'a',
        66: 'b',
        67: 'c',
        68: 'd',
        69: 'e',
        70: 'f',
        71: 'g',
        72: 'h',
        73: 'i',
        74: 'j',
        75: 'k',
        76: 'l',
        77: 'm',
        78: 'n',
        79: 'o',
        80: 'p',
        81: 'q',
        82: 'r',
        83: 's',
        84: 't',
        85: 'u',
        86: 'v',
        87: 'w',
        88: 'x',
        89: 'y',
        90: 'z',
        107: '+',
        109: '-',
        110: '.',
        186: ';',
        187: '=',
        188: ',',
        189: '-',
        190: '.',
        191: '/',
        192: '`',
        219: '[',
        220: '\\',
        221: ']',
        222: "'",
        111: '/',
        106: '*',
        173: '-'
      };
      var parts = [];

      if (e.ctrlKey) {
        parts.push('ctrl');
      }

      if (e.altKey) {
        parts.push('alt');
      }

      if (e.shiftKey) {
        parts.push('shift');
      }

      parts.push(keys[e.which] || e.which);
      parts = parts.sort().join('-').toLowerCase();

      if (parts === 'shift-shift' || parts === 'ctrl-ctrl' || parts === 'alt-alt') {
        return null;
      }

      var kb = this.settings.core.keyboard,
          i,
          tmp;

      for (i in kb) {
        if (kb.hasOwnProperty(i)) {
          tmp = i;

          if (tmp !== '-' && tmp !== '+') {
            tmp = tmp.replace('--', '-MINUS').replace('+-', '-MINUS').replace('++', '-PLUS').replace('-+', '-PLUS');
            tmp = tmp.split(/-|\+/).sort().join('-').replace('MINUS', '-').replace('PLUS', '+').toLowerCase();
          }

          if (tmp === parts) {
            return kb[i];
          }
        }
      }

      return null;
    },

    /**
     * part of the destroying of an instance. Used internally.
     * @private
     * @name teardown()
     */
    teardown: function () {
      this.unbind();
      this.element.removeClass('jstree').removeData('jstree').find("[class^='jstree']").addBack().attr("class", function () {
        return this.className.replace(/jstree[^ ]*|$/ig, '');
      });
      this.element = null;
    },

    /**
     * bind all events. Used internally.
     * @private
     * @name bind()
     */
    bind: function () {
      var word = '',
          tout = null,
          was_click = 0;
      this.element.on("dblclick.jstree", function (e) {
        if (e.target.tagName && e.target.tagName.toLowerCase() === "input") {
          return true;
        }

        if (document.selection && document.selection.empty) {
          document.selection.empty();
        } else {
          if (window.getSelection) {
            var sel = window.getSelection();

            try {
              sel.removeAllRanges();
              sel.collapse();
            } catch (ignore) {}
          }
        }
      }).on("mousedown.jstree", $.proxy(function (e) {
        if (e.target === this.element[0]) {
          e.preventDefault(); // prevent losing focus when clicking scroll arrows (FF, Chrome)

          was_click = +new Date(); // ie does not allow to prevent losing focus
        }
      }, this)).on("mousedown.jstree", ".jstree-ocl", function (e) {
        e.preventDefault(); // prevent any node inside from losing focus when clicking the open/close icon
      }).on("click.jstree", ".jstree-ocl", $.proxy(function (e) {
        this.toggle_node(e.target);
      }, this)).on("dblclick.jstree", ".jstree-anchor", $.proxy(function (e) {
        if (e.target.tagName && e.target.tagName.toLowerCase() === "input") {
          return true;
        }

        if (this.settings.core.dblclick_toggle) {
          this.toggle_node(e.target);
        }
      }, this)).on("click.jstree", ".jstree-anchor", $.proxy(function (e) {
        e.preventDefault();

        if (e.currentTarget !== document.activeElement) {
          $(e.currentTarget).focus();
        }

        this.activate_node(e.currentTarget, e);
      }, this)).on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {
        if (e.target.tagName && e.target.tagName.toLowerCase() === "input") {
          return true;
        }

        if (this._data.core.rtl) {
          if (e.which === 37) {
            e.which = 39;
          } else if (e.which === 39) {
            e.which = 37;
          }
        }

        var f = this._kbevent_to_func(e);

        if (f) {
          var r = f.call(this, e);

          if (r === false || r === true) {
            return r;
          }
        }
      }, this)).on("load_node.jstree", $.proxy(function (e, data) {
        if (data.status) {
          if (data.node.id === $.jstree.root && !this._data.core.loaded) {
            this._data.core.loaded = true;

            if (this._firstChild(this.get_container_ul()[0])) {
              this.element.attr('aria-activedescendant', this._firstChild(this.get_container_ul()[0]).id);
            }
            /**
             * triggered after the root node is loaded for the first time
             * @event
             * @name loaded.jstree
             */


            this.trigger("loaded");
          }

          if (!this._data.core.ready) {
            setTimeout($.proxy(function () {
              if (this.element && !this.get_container_ul().find('.jstree-loading').length) {
                this._data.core.ready = true;

                if (this._data.core.selected.length) {
                  if (this.settings.core.expand_selected_onload) {
                    var tmp = [],
                        i,
                        j;

                    for (i = 0, j = this._data.core.selected.length; i < j; i++) {
                      tmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);
                    }

                    tmp = $.vakata.array_unique(tmp);

                    for (i = 0, j = tmp.length; i < j; i++) {
                      this.open_node(tmp[i], false, 0);
                    }
                  }

                  this.trigger('changed', {
                    'action': 'ready',
                    'selected': this._data.core.selected
                  });
                }
                /**
                 * triggered after all nodes are finished loading
                 * @event
                 * @name ready.jstree
                 */


                this.trigger("ready");
              }
            }, this), 0);
          }
        }
      }, this)) // quick searching when the tree is focused
      .on('keypress.jstree', $.proxy(function (e) {
        if (e.target.tagName && e.target.tagName.toLowerCase() === "input") {
          return true;
        }

        if (tout) {
          clearTimeout(tout);
        }

        tout = setTimeout(function () {
          word = '';
        }, 500);
        var chr = String.fromCharCode(e.which).toLowerCase(),
            col = this.element.find('.jstree-anchor').filter(':visible'),
            ind = col.index(document.activeElement) || 0,
            end = false;
        word += chr; // match for whole word from current node down (including the current node)

        if (word.length > 1) {
          col.slice(ind).each($.proxy(function (i, v) {
            if ($(v).text().toLowerCase().indexOf(word) === 0) {
              $(v).focus();
              end = true;
              return false;
            }
          }, this));

          if (end) {
            return;
          } // match for whole word from the beginning of the tree


          col.slice(0, ind).each($.proxy(function (i, v) {
            if ($(v).text().toLowerCase().indexOf(word) === 0) {
              $(v).focus();
              end = true;
              return false;
            }
          }, this));

          if (end) {
            return;
          }
        } // list nodes that start with that letter (only if word consists of a single char)


        if (new RegExp('^' + chr.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&') + '+$').test(word)) {
          // search for the next node starting with that letter
          col.slice(ind + 1).each($.proxy(function (i, v) {
            if ($(v).text().toLowerCase().charAt(0) === chr) {
              $(v).focus();
              end = true;
              return false;
            }
          }, this));

          if (end) {
            return;
          } // search from the beginning


          col.slice(0, ind + 1).each($.proxy(function (i, v) {
            if ($(v).text().toLowerCase().charAt(0) === chr) {
              $(v).focus();
              end = true;
              return false;
            }
          }, this));

          if (end) {
            return;
          }
        }
      }, this)) // THEME RELATED
      .on("init.jstree", $.proxy(function () {
        var s = this.settings.core.themes;
        this._data.core.themes.dots = s.dots;
        this._data.core.themes.stripes = s.stripes;
        this._data.core.themes.icons = s.icons;
        this._data.core.themes.ellipsis = s.ellipsis;
        this.set_theme(s.name || "default", s.url);
        this.set_theme_variant(s.variant);
      }, this)).on("loading.jstree", $.proxy(function () {
        this[this._data.core.themes.dots ? "show_dots" : "hide_dots"]();
        this[this._data.core.themes.icons ? "show_icons" : "hide_icons"]();
        this[this._data.core.themes.stripes ? "show_stripes" : "hide_stripes"]();
        this[this._data.core.themes.ellipsis ? "show_ellipsis" : "hide_ellipsis"]();
      }, this)).on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {
        this._data.core.focused = null;
        $(e.currentTarget).filter('.jstree-hovered').trigger('mouseleave');
        this.element.attr('tabindex', '0');
      }, this)).on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {
        var tmp = this.get_node(e.currentTarget);

        if (tmp && tmp.id) {
          this._data.core.focused = tmp.id;
        }

        this.element.find('.jstree-hovered').not(e.currentTarget).trigger('mouseleave');
        $(e.currentTarget).trigger('mouseenter');
        this.element.attr('tabindex', '-1');
      }, this)).on('focus.jstree', $.proxy(function () {
        if (+new Date() - was_click > 500 && !this._data.core.focused && this.settings.core.restore_focus) {
          was_click = 0;
          var act = this.get_node(this.element.attr('aria-activedescendant'), true);

          if (act) {
            act.find('> .jstree-anchor').focus();
          }
        }
      }, this)).on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {
        this.hover_node(e.currentTarget);
      }, this)).on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {
        this.dehover_node(e.currentTarget);
      }, this));
    },

    /**
     * part of the destroying of an instance. Used internally.
     * @private
     * @name unbind()
     */
    unbind: function () {
      this.element.off('.jstree');
      $(document).off('.jstree-' + this._id);
    },

    /**
     * trigger an event. Used internally.
     * @private
     * @name trigger(ev [, data])
     * @param  {String} ev the name of the event to trigger
     * @param  {Object} data additional data to pass with the event
     */
    trigger: function (ev, data) {
      if (!data) {
        data = {};
      }

      data.instance = this;
      this.element.triggerHandler(ev.replace('.jstree', '') + '.jstree', data);
    },

    /**
     * returns the jQuery extended instance container
     * @name get_container()
     * @return {jQuery}
     */
    get_container: function () {
      return this.element;
    },

    /**
     * returns the jQuery extended main UL node inside the instance container. Used internally.
     * @private
     * @name get_container_ul()
     * @return {jQuery}
     */
    get_container_ul: function () {
      return this.element.children(".jstree-children").first();
    },

    /**
     * gets string replacements (localization). Used internally.
     * @private
     * @name get_string(key)
     * @param  {String} key
     * @return {String}
     */
    get_string: function (key) {
      var a = this.settings.core.strings;

      if ($.isFunction(a)) {
        return a.call(this, key);
      }

      if (a && a[key]) {
        return a[key];
      }

      return key;
    },

    /**
     * gets the first child of a DOM node. Used internally.
     * @private
     * @name _firstChild(dom)
     * @param  {DOMElement} dom
     * @return {DOMElement}
     */
    _firstChild: function (dom) {
      dom = dom ? dom.firstChild : null;

      while (dom !== null && dom.nodeType !== 1) {
        dom = dom.nextSibling;
      }

      return dom;
    },

    /**
     * gets the next sibling of a DOM node. Used internally.
     * @private
     * @name _nextSibling(dom)
     * @param  {DOMElement} dom
     * @return {DOMElement}
     */
    _nextSibling: function (dom) {
      dom = dom ? dom.nextSibling : null;

      while (dom !== null && dom.nodeType !== 1) {
        dom = dom.nextSibling;
      }

      return dom;
    },

    /**
     * gets the previous sibling of a DOM node. Used internally.
     * @private
     * @name _previousSibling(dom)
     * @param  {DOMElement} dom
     * @return {DOMElement}
     */
    _previousSibling: function (dom) {
      dom = dom ? dom.previousSibling : null;

      while (dom !== null && dom.nodeType !== 1) {
        dom = dom.previousSibling;
      }

      return dom;
    },

    /**
     * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)
     * @name get_node(obj [, as_dom])
     * @param  {mixed} obj
     * @param  {Boolean} as_dom
     * @return {Object|jQuery}
     */
    get_node: function (obj, as_dom) {
      if (obj && obj.id) {
        obj = obj.id;
      }

      if (obj instanceof $ && obj.length && obj[0].id) {
        obj = obj[0].id;
      }

      var dom;

      try {
        if (this._model.data[obj]) {
          obj = this._model.data[obj];
        } else if (typeof obj === "string" && this._model.data[obj.replace(/^#/, '')]) {
          obj = this._model.data[obj.replace(/^#/, '')];
        } else if (typeof obj === "string" && (dom = $('#' + obj.replace($.jstree.idregex, '\\$&'), this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {
          obj = this._model.data[dom.closest('.jstree-node').attr('id')];
        } else if ((dom = this.element.find(obj)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {
          obj = this._model.data[dom.closest('.jstree-node').attr('id')];
        } else if ((dom = this.element.find(obj)).length && dom.hasClass('jstree')) {
          obj = this._model.data[$.jstree.root];
        } else {
          return false;
        }

        if (as_dom) {
          obj = obj.id === $.jstree.root ? this.element : $('#' + obj.id.replace($.jstree.idregex, '\\$&'), this.element);
        }

        return obj;
      } catch (ex) {
        return false;
      }
    },

    /**
     * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)
     * @name get_path(obj [, glue, ids])
     * @param  {mixed} obj the node
     * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned
     * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used
     * @return {mixed}
     */
    get_path: function (obj, glue, ids) {
      obj = obj.parents ? obj : this.get_node(obj);

      if (!obj || obj.id === $.jstree.root || !obj.parents) {
        return false;
      }

      var i,
          j,
          p = [];
      p.push(ids ? obj.id : obj.text);

      for (i = 0, j = obj.parents.length; i < j; i++) {
        p.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));
      }

      p = p.reverse().slice(1);
      return glue ? p.join(glue) : p;
    },

    /**
     * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.
     * @name get_next_dom(obj [, strict])
     * @param  {mixed} obj
     * @param  {Boolean} strict
     * @return {jQuery}
     */
    get_next_dom: function (obj, strict) {
      var tmp;
      obj = this.get_node(obj, true);

      if (obj[0] === this.element[0]) {
        tmp = this._firstChild(this.get_container_ul()[0]);

        while (tmp && tmp.offsetHeight === 0) {
          tmp = this._nextSibling(tmp);
        }

        return tmp ? $(tmp) : false;
      }

      if (!obj || !obj.length) {
        return false;
      }

      if (strict) {
        tmp = obj[0];

        do {
          tmp = this._nextSibling(tmp);
        } while (tmp && tmp.offsetHeight === 0);

        return tmp ? $(tmp) : false;
      }

      if (obj.hasClass("jstree-open")) {
        tmp = this._firstChild(obj.children('.jstree-children')[0]);

        while (tmp && tmp.offsetHeight === 0) {
          tmp = this._nextSibling(tmp);
        }

        if (tmp !== null) {
          return $(tmp);
        }
      }

      tmp = obj[0];

      do {
        tmp = this._nextSibling(tmp);
      } while (tmp && tmp.offsetHeight === 0);

      if (tmp !== null) {
        return $(tmp);
      }

      return obj.parentsUntil(".jstree", ".jstree-node").nextAll(".jstree-node:visible").first();
    },

    /**
     * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.
     * @name get_prev_dom(obj [, strict])
     * @param  {mixed} obj
     * @param  {Boolean} strict
     * @return {jQuery}
     */
    get_prev_dom: function (obj, strict) {
      var tmp;
      obj = this.get_node(obj, true);

      if (obj[0] === this.element[0]) {
        tmp = this.get_container_ul()[0].lastChild;

        while (tmp && tmp.offsetHeight === 0) {
          tmp = this._previousSibling(tmp);
        }

        return tmp ? $(tmp) : false;
      }

      if (!obj || !obj.length) {
        return false;
      }

      if (strict) {
        tmp = obj[0];

        do {
          tmp = this._previousSibling(tmp);
        } while (tmp && tmp.offsetHeight === 0);

        return tmp ? $(tmp) : false;
      }

      tmp = obj[0];

      do {
        tmp = this._previousSibling(tmp);
      } while (tmp && tmp.offsetHeight === 0);

      if (tmp !== null) {
        obj = $(tmp);

        while (obj.hasClass("jstree-open")) {
          obj = obj.children(".jstree-children").first().children(".jstree-node:visible:last");
        }

        return obj;
      }

      tmp = obj[0].parentNode.parentNode;
      return tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;
    },

    /**
     * get the parent ID of a node
     * @name get_parent(obj)
     * @param  {mixed} obj
     * @return {String}
     */
    get_parent: function (obj) {
      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      return obj.parent;
    },

    /**
     * get a jQuery collection of all the children of a node (node must be rendered), returns false on error
     * @name get_children_dom(obj)
     * @param  {mixed} obj
     * @return {jQuery}
     */
    get_children_dom: function (obj) {
      obj = this.get_node(obj, true);

      if (obj[0] === this.element[0]) {
        return this.get_container_ul().children(".jstree-node");
      }

      if (!obj || !obj.length) {
        return false;
      }

      return obj.children(".jstree-children").children(".jstree-node");
    },

    /**
     * checks if a node has children
     * @name is_parent(obj)
     * @param  {mixed} obj
     * @return {Boolean}
     */
    is_parent: function (obj) {
      obj = this.get_node(obj);
      return obj && (obj.state.loaded === false || obj.children.length > 0);
    },

    /**
     * checks if a node is loaded (its children are available)
     * @name is_loaded(obj)
     * @param  {mixed} obj
     * @return {Boolean}
     */
    is_loaded: function (obj) {
      obj = this.get_node(obj);
      return obj && obj.state.loaded;
    },

    /**
     * check if a node is currently loading (fetching children)
     * @name is_loading(obj)
     * @param  {mixed} obj
     * @return {Boolean}
     */
    is_loading: function (obj) {
      obj = this.get_node(obj);
      return obj && obj.state && obj.state.loading;
    },

    /**
     * check if a node is opened
     * @name is_open(obj)
     * @param  {mixed} obj
     * @return {Boolean}
     */
    is_open: function (obj) {
      obj = this.get_node(obj);
      return obj && obj.state.opened;
    },

    /**
     * check if a node is in a closed state
     * @name is_closed(obj)
     * @param  {mixed} obj
     * @return {Boolean}
     */
    is_closed: function (obj) {
      obj = this.get_node(obj);
      return obj && this.is_parent(obj) && !obj.state.opened;
    },

    /**
     * check if a node has no children
     * @name is_leaf(obj)
     * @param  {mixed} obj
     * @return {Boolean}
     */
    is_leaf: function (obj) {
      return !this.is_parent(obj);
    },

    /**
     * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.
     * @name load_node(obj [, callback])
     * @param  {mixed} obj
     * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status
     * @return {Boolean}
     * @trigger load_node.jstree
     */
    load_node: function (obj, callback) {
      var k, l, i, j, c;

      if ($.isArray(obj)) {
        this._load_nodes(obj.slice(), callback);

        return true;
      }

      obj = this.get_node(obj);

      if (!obj) {
        if (callback) {
          callback.call(this, obj, false);
        }

        return false;
      } // if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?


      if (obj.state.loaded) {
        obj.state.loaded = false;

        for (i = 0, j = obj.parents.length; i < j; i++) {
          this._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {
            return $.inArray(v, obj.children_d) === -1;
          });
        }

        for (k = 0, l = obj.children_d.length; k < l; k++) {
          if (this._model.data[obj.children_d[k]].state.selected) {
            c = true;
          }

          delete this._model.data[obj.children_d[k]];
        }

        if (c) {
          this._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {
            return $.inArray(v, obj.children_d) === -1;
          });
        }

        obj.children = [];
        obj.children_d = [];

        if (c) {
          this.trigger('changed', {
            'action': 'load_node',
            'node': obj,
            'selected': this._data.core.selected
          });
        }
      }

      obj.state.failed = false;
      obj.state.loading = true;
      this.get_node(obj, true).addClass("jstree-loading").attr('aria-busy', true);

      this._load_node(obj, $.proxy(function (status) {
        obj = this._model.data[obj.id];
        obj.state.loading = false;
        obj.state.loaded = status;
        obj.state.failed = !obj.state.loaded;
        var dom = this.get_node(obj, true),
            i = 0,
            j = 0,
            m = this._model.data,
            has_children = false;

        for (i = 0, j = obj.children.length; i < j; i++) {
          if (m[obj.children[i]] && !m[obj.children[i]].state.hidden) {
            has_children = true;
            break;
          }
        }

        if (obj.state.loaded && dom && dom.length) {
          dom.removeClass('jstree-closed jstree-open jstree-leaf');

          if (!has_children) {
            dom.addClass('jstree-leaf');
          } else {
            if (obj.id !== '#') {
              dom.addClass(obj.state.opened ? 'jstree-open' : 'jstree-closed');
            }
          }
        }

        dom.removeClass("jstree-loading").attr('aria-busy', false);
        /**
         * triggered after a node is loaded
         * @event
         * @name load_node.jstree
         * @param {Object} node the node that was loading
         * @param {Boolean} status was the node loaded successfully
         */

        this.trigger('load_node', {
          "node": obj,
          "status": status
        });

        if (callback) {
          callback.call(this, obj, status);
        }
      }, this));

      return true;
    },

    /**
     * load an array of nodes (will also load unavailable nodes as soon as they appear in the structure). Used internally.
     * @private
     * @name _load_nodes(nodes [, callback])
     * @param  {array} nodes
     * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes
     */
    _load_nodes: function (nodes, callback, is_callback, force_reload) {
      var r = true,
          c = function () {
        this._load_nodes(nodes, callback, true);
      },
          m = this._model.data,
          i,
          j,
          tmp = [];

      for (i = 0, j = nodes.length; i < j; i++) {
        if (m[nodes[i]] && (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed || !is_callback && force_reload)) {
          if (!this.is_loading(nodes[i])) {
            this.load_node(nodes[i], c);
          }

          r = false;
        }
      }

      if (r) {
        for (i = 0, j = nodes.length; i < j; i++) {
          if (m[nodes[i]] && m[nodes[i]].state.loaded) {
            tmp.push(nodes[i]);
          }
        }

        if (callback && !callback.done) {
          callback.call(this, tmp);
          callback.done = true;
        }
      }
    },

    /**
     * loads all unloaded nodes
     * @name load_all([obj, callback])
     * @param {mixed} obj the node to load recursively, omit to load all nodes in the tree
     * @param {function} callback a function to be executed once loading all the nodes is complete,
     * @trigger load_all.jstree
     */
    load_all: function (obj, callback) {
      if (!obj) {
        obj = $.jstree.root;
      }

      obj = this.get_node(obj);

      if (!obj) {
        return false;
      }

      var to_load = [],
          m = this._model.data,
          c = m[obj.id].children_d,
          i,
          j;

      if (obj.state && !obj.state.loaded) {
        to_load.push(obj.id);
      }

      for (i = 0, j = c.length; i < j; i++) {
        if (m[c[i]] && m[c[i]].state && !m[c[i]].state.loaded) {
          to_load.push(c[i]);
        }
      }

      if (to_load.length) {
        this._load_nodes(to_load, function () {
          this.load_all(obj, callback);
        });
      } else {
        /**
         * triggered after a load_all call completes
         * @event
         * @name load_all.jstree
         * @param {Object} node the recursively loaded node
         */
        if (callback) {
          callback.call(this, obj);
        }

        this.trigger('load_all', {
          "node": obj
        });
      }
    },

    /**
     * handles the actual loading of a node. Used only internally.
     * @private
     * @name _load_node(obj [, callback])
     * @param  {mixed} obj
     * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status
     * @return {Boolean}
     */
    _load_node: function (obj, callback) {
      var s = this.settings.core.data,
          t;

      var notTextOrCommentNode = function notTextOrCommentNode() {
        return this.nodeType !== 3 && this.nodeType !== 8;
      }; // use original HTML


      if (!s) {
        if (obj.id === $.jstree.root) {
          return this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {
            callback.call(this, status);
          });
        } else {
          return callback.call(this, false);
        } // return callback.call(this, obj.id === $.jstree.root ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);

      }

      if ($.isFunction(s)) {
        return s.call(this, obj, $.proxy(function (d) {
          if (d === false) {
            callback.call(this, false);
          } else {
            this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $($.parseHTML(d)).filter(notTextOrCommentNode) : d, function (status) {
              callback.call(this, status);
            });
          } // return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));

        }, this));
      }

      if (typeof s === 'object') {
        if (s.url) {
          s = $.extend(true, {}, s);

          if ($.isFunction(s.url)) {
            s.url = s.url.call(this, obj);
          }

          if ($.isFunction(s.data)) {
            s.data = s.data.call(this, obj);
          }

          return $.ajax(s).done($.proxy(function (d, t, x) {
            var type = x.getResponseHeader('Content-Type');

            if (type && type.indexOf('json') !== -1 || typeof d === "object") {
              return this._append_json_data(obj, d, function (status) {
                callback.call(this, status);
              }); //return callback.call(this, this._append_json_data(obj, d));
            }

            if (type && type.indexOf('html') !== -1 || typeof d === "string") {
              return this._append_html_data(obj, $($.parseHTML(d)).filter(notTextOrCommentNode), function (status) {
                callback.call(this, status);
              }); // return callback.call(this, this._append_html_data(obj, $(d)));
            }

            this._data.core.last_error = {
              'error': 'ajax',
              'plugin': 'core',
              'id': 'core_04',
              'reason': 'Could not load node',
              'data': JSON.stringify({
                'id': obj.id,
                'xhr': x
              })
            };
            this.settings.core.error.call(this, this._data.core.last_error);
            return callback.call(this, false);
          }, this)).fail($.proxy(function (f) {
            this._data.core.last_error = {
              'error': 'ajax',
              'plugin': 'core',
              'id': 'core_04',
              'reason': 'Could not load node',
              'data': JSON.stringify({
                'id': obj.id,
                'xhr': f
              })
            };
            callback.call(this, false);
            this.settings.core.error.call(this, this._data.core.last_error);
          }, this));
        }

        if ($.isArray(s)) {
          t = $.extend(true, [], s);
        } else if ($.isPlainObject(s)) {
          t = $.extend(true, {}, s);
        } else {
          t = s;
        }

        if (obj.id === $.jstree.root) {
          return this._append_json_data(obj, t, function (status) {
            callback.call(this, status);
          });
        } else {
          this._data.core.last_error = {
            'error': 'nodata',
            'plugin': 'core',
            'id': 'core_05',
            'reason': 'Could not load node',
            'data': JSON.stringify({
              'id': obj.id
            })
          };
          this.settings.core.error.call(this, this._data.core.last_error);
          return callback.call(this, false);
        } //return callback.call(this, (obj.id === $.jstree.root ? this._append_json_data(obj, t) : false) );

      }

      if (typeof s === 'string') {
        if (obj.id === $.jstree.root) {
          return this._append_html_data(obj, $($.parseHTML(s)).filter(notTextOrCommentNode), function (status) {
            callback.call(this, status);
          });
        } else {
          this._data.core.last_error = {
            'error': 'nodata',
            'plugin': 'core',
            'id': 'core_06',
            'reason': 'Could not load node',
            'data': JSON.stringify({
              'id': obj.id
            })
          };
          this.settings.core.error.call(this, this._data.core.last_error);
          return callback.call(this, false);
        } //return callback.call(this, (obj.id === $.jstree.root ? this._append_html_data(obj, $(s)) : false) );

      }

      return callback.call(this, false);
    },

    /**
     * adds a node to the list of nodes to redraw. Used only internally.
     * @private
     * @name _node_changed(obj [, callback])
     * @param  {mixed} obj
     */
    _node_changed: function (obj) {
      obj = this.get_node(obj);

      if (obj && $.inArray(obj.id, this._model.changed) === -1) {
        this._model.changed.push(obj.id);
      }
    },

    /**
     * appends HTML content to the tree. Used internally.
     * @private
     * @name _append_html_data(obj, data)
     * @param  {mixed} obj the node to append to
     * @param  {String} data the HTML string to parse and append
     * @trigger model.jstree, changed.jstree
     */
    _append_html_data: function (dom, data, cb) {
      dom = this.get_node(dom);
      dom.children = [];
      dom.children_d = [];
      var dat = data.is('ul') ? data.children() : data,
          par = dom.id,
          chd = [],
          dpc = [],
          m = this._model.data,
          p = m[par],
          s = this._data.core.selected.length,
          tmp,
          i,
          j;
      dat.each($.proxy(function (i, v) {
        tmp = this._parse_model_from_html($(v), par, p.parents.concat());

        if (tmp) {
          chd.push(tmp);
          dpc.push(tmp);

          if (m[tmp].children_d.length) {
            dpc = dpc.concat(m[tmp].children_d);
          }
        }
      }, this));
      p.children = chd;
      p.children_d = dpc;

      for (i = 0, j = p.parents.length; i < j; i++) {
        m[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);
      }
      /**
       * triggered when new data is inserted to the tree model
       * @event
       * @name model.jstree
       * @param {Array} nodes an array of node IDs
       * @param {String} parent the parent ID of the nodes
       */


      this.trigger('model', {
        "nodes": dpc,
        'parent': par
      });

      if (par !== $.jstree.root) {
        this._node_changed(par);

        this.redraw();
      } else {
        this.get_container_ul().children('.jstree-initial-node').remove();
        this.redraw(true);
      }

      if (this._data.core.selected.length !== s) {
        this.trigger('changed', {
          'action': 'model',
          'selected': this._data.core.selected
        });
      }

      cb.call(this, true);
    },

    /**
     * appends JSON content to the tree. Used internally.
     * @private
     * @name _append_json_data(obj, data)
     * @param  {mixed} obj the node to append to
     * @param  {String} data the JSON object to parse and append
     * @param  {Boolean} force_processing internal param - do not set
     * @trigger model.jstree, changed.jstree
     */
    _append_json_data: function (dom, data, cb, force_processing) {
      if (this.element === null) {
        return;
      }

      dom = this.get_node(dom);
      dom.children = [];
      dom.children_d = []; // *%$@!!!

      if (data.d) {
        data = data.d;

        if (typeof data === "string") {
          data = JSON.parse(data);
        }
      }

      if (!$.isArray(data)) {
        data = [data];
      }

      var w = null,
          args = {
        'df': this._model.default_state,
        'dat': data,
        'par': dom.id,
        'm': this._model.data,
        't_id': this._id,
        't_cnt': this._cnt,
        'sel': this._data.core.selected
      },
          inst = this,
          func = function (data, undefined) {
        if (data.data) {
          data = data.data;
        }

        var dat = data.dat,
            par = data.par,
            chd = [],
            dpc = [],
            add = [],
            df = data.df,
            t_id = data.t_id,
            t_cnt = data.t_cnt,
            m = data.m,
            p = m[par],
            sel = data.sel,
            tmp,
            i,
            j,
            rslt,
            parse_flat = function (d, p, ps) {
          if (!ps) {
            ps = [];
          } else {
            ps = ps.concat();
          }

          if (p) {
            ps.unshift(p);
          }

          var tid = d.id.toString(),
              i,
              j,
              c,
              e,
              tmp = {
            id: tid,
            text: d.text || '',
            icon: d.icon !== undefined ? d.icon : true,
            parent: p,
            parents: ps,
            children: d.children || [],
            children_d: d.children_d || [],
            data: d.data,
            state: {},
            li_attr: {
              id: false
            },
            a_attr: {
              href: '#'
            },
            original: false
          };

          for (i in df) {
            if (df.hasOwnProperty(i)) {
              tmp.state[i] = df[i];
            }
          }

          if (d && d.data && d.data.jstree && d.data.jstree.icon) {
            tmp.icon = d.data.jstree.icon;
          }

          if (tmp.icon === undefined || tmp.icon === null || tmp.icon === "") {
            tmp.icon = true;
          }

          if (d && d.data) {
            tmp.data = d.data;

            if (d.data.jstree) {
              for (i in d.data.jstree) {
                if (d.data.jstree.hasOwnProperty(i)) {
                  tmp.state[i] = d.data.jstree[i];
                }
              }
            }
          }

          if (d && typeof d.state === 'object') {
            for (i in d.state) {
              if (d.state.hasOwnProperty(i)) {
                tmp.state[i] = d.state[i];
              }
            }
          }

          if (d && typeof d.li_attr === 'object') {
            for (i in d.li_attr) {
              if (d.li_attr.hasOwnProperty(i)) {
                tmp.li_attr[i] = d.li_attr[i];
              }
            }
          }

          if (!tmp.li_attr.id) {
            tmp.li_attr.id = tid;
          }

          if (d && typeof d.a_attr === 'object') {
            for (i in d.a_attr) {
              if (d.a_attr.hasOwnProperty(i)) {
                tmp.a_attr[i] = d.a_attr[i];
              }
            }
          }

          if (d && d.children && d.children === true) {
            tmp.state.loaded = false;
            tmp.children = [];
            tmp.children_d = [];
          }

          m[tmp.id] = tmp;

          for (i = 0, j = tmp.children.length; i < j; i++) {
            c = parse_flat(m[tmp.children[i]], tmp.id, ps);
            e = m[c];
            tmp.children_d.push(c);

            if (e.children_d.length) {
              tmp.children_d = tmp.children_d.concat(e.children_d);
            }
          }

          delete d.data;
          delete d.children;
          m[tmp.id].original = d;

          if (tmp.state.selected) {
            add.push(tmp.id);
          }

          return tmp.id;
        },
            parse_nest = function (d, p, ps) {
          if (!ps) {
            ps = [];
          } else {
            ps = ps.concat();
          }

          if (p) {
            ps.unshift(p);
          }

          var tid = false,
              i,
              j,
              c,
              e,
              tmp;

          do {
            tid = 'j' + t_id + '_' + ++t_cnt;
          } while (m[tid]);

          tmp = {
            id: false,
            text: typeof d === 'string' ? d : '',
            icon: typeof d === 'object' && d.icon !== undefined ? d.icon : true,
            parent: p,
            parents: ps,
            children: [],
            children_d: [],
            data: null,
            state: {},
            li_attr: {
              id: false
            },
            a_attr: {
              href: '#'
            },
            original: false
          };

          for (i in df) {
            if (df.hasOwnProperty(i)) {
              tmp.state[i] = df[i];
            }
          }

          if (d && d.id) {
            tmp.id = d.id.toString();
          }

          if (d && d.text) {
            tmp.text = d.text;
          }

          if (d && d.data && d.data.jstree && d.data.jstree.icon) {
            tmp.icon = d.data.jstree.icon;
          }

          if (tmp.icon === undefined || tmp.icon === null || tmp.icon === "") {
            tmp.icon = true;
          }

          if (d && d.data) {
            tmp.data = d.data;

            if (d.data.jstree) {
              for (i in d.data.jstree) {
                if (d.data.jstree.hasOwnProperty(i)) {
                  tmp.state[i] = d.data.jstree[i];
                }
              }
            }
          }

          if (d && typeof d.state === 'object') {
            for (i in d.state) {
              if (d.state.hasOwnProperty(i)) {
                tmp.state[i] = d.state[i];
              }
            }
          }

          if (d && typeof d.li_attr === 'object') {
            for (i in d.li_attr) {
              if (d.li_attr.hasOwnProperty(i)) {
                tmp.li_attr[i] = d.li_attr[i];
              }
            }
          }

          if (tmp.li_attr.id && !tmp.id) {
            tmp.id = tmp.li_attr.id.toString();
          }

          if (!tmp.id) {
            tmp.id = tid;
          }

          if (!tmp.li_attr.id) {
            tmp.li_attr.id = tmp.id;
          }

          if (d && typeof d.a_attr === 'object') {
            for (i in d.a_attr) {
              if (d.a_attr.hasOwnProperty(i)) {
                tmp.a_attr[i] = d.a_attr[i];
              }
            }
          }

          if (d && d.children && d.children.length) {
            for (i = 0, j = d.children.length; i < j; i++) {
              c = parse_nest(d.children[i], tmp.id, ps);
              e = m[c];
              tmp.children.push(c);

              if (e.children_d.length) {
                tmp.children_d = tmp.children_d.concat(e.children_d);
              }
            }

            tmp.children_d = tmp.children_d.concat(tmp.children);
          }

          if (d && d.children && d.children === true) {
            tmp.state.loaded = false;
            tmp.children = [];
            tmp.children_d = [];
          }

          delete d.data;
          delete d.children;
          tmp.original = d;
          m[tmp.id] = tmp;

          if (tmp.state.selected) {
            add.push(tmp.id);
          }

          return tmp.id;
        };

        if (dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {
          // Flat JSON support (for easy import from DB):
          // 1) convert to object (foreach)
          for (i = 0, j = dat.length; i < j; i++) {
            if (!dat[i].children) {
              dat[i].children = [];
            }

            if (!dat[i].state) {
              dat[i].state = {};
            }

            m[dat[i].id.toString()] = dat[i];
          } // 2) populate children (foreach)


          for (i = 0, j = dat.length; i < j; i++) {
            if (!m[dat[i].parent.toString()]) {
              if (typeof inst !== "undefined") {
                inst._data.core.last_error = {
                  'error': 'parse',
                  'plugin': 'core',
                  'id': 'core_07',
                  'reason': 'Node with invalid parent',
                  'data': JSON.stringify({
                    'id': dat[i].id.toString(),
                    'parent': dat[i].parent.toString()
                  })
                };
                inst.settings.core.error.call(inst, inst._data.core.last_error);
              }

              continue;
            }

            m[dat[i].parent.toString()].children.push(dat[i].id.toString()); // populate parent.children_d

            p.children_d.push(dat[i].id.toString());
          } // 3) normalize && populate parents and children_d with recursion


          for (i = 0, j = p.children.length; i < j; i++) {
            tmp = parse_flat(m[p.children[i]], par, p.parents.concat());
            dpc.push(tmp);

            if (m[tmp].children_d.length) {
              dpc = dpc.concat(m[tmp].children_d);
            }
          }

          for (i = 0, j = p.parents.length; i < j; i++) {
            m[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);
          } // ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;


          rslt = {
            'cnt': t_cnt,
            'mod': m,
            'sel': sel,
            'par': par,
            'dpc': dpc,
            'add': add
          };
        } else {
          for (i = 0, j = dat.length; i < j; i++) {
            tmp = parse_nest(dat[i], par, p.parents.concat());

            if (tmp) {
              chd.push(tmp);
              dpc.push(tmp);

              if (m[tmp].children_d.length) {
                dpc = dpc.concat(m[tmp].children_d);
              }
            }
          }

          p.children = chd;
          p.children_d = dpc;

          for (i = 0, j = p.parents.length; i < j; i++) {
            m[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);
          }

          rslt = {
            'cnt': t_cnt,
            'mod': m,
            'sel': sel,
            'par': par,
            'dpc': dpc,
            'add': add
          };
        }

        if (typeof window === 'undefined' || typeof window.document === 'undefined') {
          postMessage(rslt);
        } else {
          return rslt;
        }
      },
          rslt = function (rslt, worker) {
        if (this.element === null) {
          return;
        }

        this._cnt = rslt.cnt;
        var i,
            m = this._model.data;

        for (i in m) {
          if (m.hasOwnProperty(i) && m[i].state && m[i].state.loading && rslt.mod[i]) {
            rslt.mod[i].state.loading = true;
          }
        }

        this._model.data = rslt.mod; // breaks the reference in load_node - careful

        if (worker) {
          var j,
              a = rslt.add,
              r = rslt.sel,
              s = this._data.core.selected.slice();

          m = this._model.data; // if selection was changed while calculating in worker

          if (r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {
            // deselect nodes that are no longer selected
            for (i = 0, j = r.length; i < j; i++) {
              if ($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {
                m[r[i]].state.selected = false;
              }
            } // select nodes that were selected in the mean time


            for (i = 0, j = s.length; i < j; i++) {
              if ($.inArray(s[i], r) === -1) {
                m[s[i]].state.selected = true;
              }
            }
          }
        }

        if (rslt.add.length) {
          this._data.core.selected = this._data.core.selected.concat(rslt.add);
        }

        this.trigger('model', {
          "nodes": rslt.dpc,
          'parent': rslt.par
        });

        if (rslt.par !== $.jstree.root) {
          this._node_changed(rslt.par);

          this.redraw();
        } else {
          // this.get_container_ul().children('.jstree-initial-node').remove();
          this.redraw(true);
        }

        if (rslt.add.length) {
          this.trigger('changed', {
            'action': 'model',
            'selected': this._data.core.selected
          });
        } // If no worker, try to mimic worker behavioour, by invoking cb asynchronously


        if (!worker && setImmediate) {
          setImmediate(function () {
            cb.call(inst, true);
          });
        } else {
          cb.call(inst, true);
        }
      };

      if (this.settings.core.worker && window.Blob && window.URL && window.Worker) {
        try {
          if (this._wrk === null) {
            this._wrk = window.URL.createObjectURL(new window.Blob(['self.onmessage = ' + func.toString()], {
              type: "text/javascript"
            }));
          }

          if (!this._data.core.working || force_processing) {
            this._data.core.working = true;
            w = new window.Worker(this._wrk);
            w.onmessage = $.proxy(function (e) {
              rslt.call(this, e.data, true);

              try {
                w.terminate();
                w = null;
              } catch (ignore) {}

              if (this._data.core.worker_queue.length) {
                this._append_json_data.apply(this, this._data.core.worker_queue.shift());
              } else {
                this._data.core.working = false;
              }
            }, this);

            if (!args.par) {
              if (this._data.core.worker_queue.length) {
                this._append_json_data.apply(this, this._data.core.worker_queue.shift());
              } else {
                this._data.core.working = false;
              }
            } else {
              w.postMessage(args);
            }
          } else {
            this._data.core.worker_queue.push([dom, data, cb, true]);
          }
        } catch (e) {
          rslt.call(this, func(args), false);

          if (this._data.core.worker_queue.length) {
            this._append_json_data.apply(this, this._data.core.worker_queue.shift());
          } else {
            this._data.core.working = false;
          }
        }
      } else {
        rslt.call(this, func(args), false);
      }
    },

    /**
     * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.
     * @private
     * @name _parse_model_from_html(d [, p, ps])
     * @param  {jQuery} d the jQuery object to parse
     * @param  {String} p the parent ID
     * @param  {Array} ps list of all parents
     * @return {String} the ID of the object added to the model
     */
    _parse_model_from_html: function (d, p, ps) {
      if (!ps) {
        ps = [];
      } else {
        ps = [].concat(ps);
      }

      if (p) {
        ps.unshift(p);
      }

      var c,
          e,
          m = this._model.data,
          data = {
        id: false,
        text: false,
        icon: true,
        parent: p,
        parents: ps,
        children: [],
        children_d: [],
        data: null,
        state: {},
        li_attr: {
          id: false
        },
        a_attr: {
          href: '#'
        },
        original: false
      },
          i,
          tmp,
          tid;

      for (i in this._model.default_state) {
        if (this._model.default_state.hasOwnProperty(i)) {
          data.state[i] = this._model.default_state[i];
        }
      }

      tmp = $.vakata.attributes(d, true);
      $.each(tmp, function (i, v) {
        v = $.vakata.trim(v);

        if (!v.length) {
          return true;
        }

        data.li_attr[i] = v;

        if (i === 'id') {
          data.id = v.toString();
        }
      });
      tmp = d.children('a').first();

      if (tmp.length) {
        tmp = $.vakata.attributes(tmp, true);
        $.each(tmp, function (i, v) {
          v = $.vakata.trim(v);

          if (v.length) {
            data.a_attr[i] = v;
          }
        });
      }

      tmp = d.children("a").first().length ? d.children("a").first().clone() : d.clone();
      tmp.children("ins, i, ul").remove();
      tmp = tmp.html();
      tmp = $('<div></div>').html(tmp);
      data.text = this.settings.core.force_text ? tmp.text() : tmp.html();
      tmp = d.data();
      data.data = tmp ? $.extend(true, {}, tmp) : null;
      data.state.opened = d.hasClass('jstree-open');
      data.state.selected = d.children('a').hasClass('jstree-clicked');
      data.state.disabled = d.children('a').hasClass('jstree-disabled');

      if (data.data && data.data.jstree) {
        for (i in data.data.jstree) {
          if (data.data.jstree.hasOwnProperty(i)) {
            data.state[i] = data.data.jstree[i];
          }
        }
      }

      tmp = d.children("a").children(".jstree-themeicon");

      if (tmp.length) {
        data.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');
      }

      if (data.state.icon !== undefined) {
        data.icon = data.state.icon;
      }

      if (data.icon === undefined || data.icon === null || data.icon === "") {
        data.icon = true;
      }

      tmp = d.children("ul").children("li");

      do {
        tid = 'j' + this._id + '_' + ++this._cnt;
      } while (m[tid]);

      data.id = data.li_attr.id ? data.li_attr.id.toString() : tid;

      if (tmp.length) {
        tmp.each($.proxy(function (i, v) {
          c = this._parse_model_from_html($(v), data.id, ps);
          e = this._model.data[c];
          data.children.push(c);

          if (e.children_d.length) {
            data.children_d = data.children_d.concat(e.children_d);
          }
        }, this));
        data.children_d = data.children_d.concat(data.children);
      } else {
        if (d.hasClass('jstree-closed')) {
          data.state.loaded = false;
        }
      }

      if (data.li_attr['class']) {
        data.li_attr['class'] = data.li_attr['class'].replace('jstree-closed', '').replace('jstree-open', '');
      }

      if (data.a_attr['class']) {
        data.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked', '').replace('jstree-disabled', '');
      }

      m[data.id] = data;

      if (data.state.selected) {
        this._data.core.selected.push(data.id);
      }

      return data.id;
    },

    /**
     * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.
     * @private
     * @name _parse_model_from_flat_json(d [, p, ps])
     * @param  {Object} d the JSON object to parse
     * @param  {String} p the parent ID
     * @param  {Array} ps list of all parents
     * @return {String} the ID of the object added to the model
     */
    _parse_model_from_flat_json: function (d, p, ps) {
      if (!ps) {
        ps = [];
      } else {
        ps = ps.concat();
      }

      if (p) {
        ps.unshift(p);
      }

      var tid = d.id.toString(),
          m = this._model.data,
          df = this._model.default_state,
          i,
          j,
          c,
          e,
          tmp = {
        id: tid,
        text: d.text || '',
        icon: d.icon !== undefined ? d.icon : true,
        parent: p,
        parents: ps,
        children: d.children || [],
        children_d: d.children_d || [],
        data: d.data,
        state: {},
        li_attr: {
          id: false
        },
        a_attr: {
          href: '#'
        },
        original: false
      };

      for (i in df) {
        if (df.hasOwnProperty(i)) {
          tmp.state[i] = df[i];
        }
      }

      if (d && d.data && d.data.jstree && d.data.jstree.icon) {
        tmp.icon = d.data.jstree.icon;
      }

      if (tmp.icon === undefined || tmp.icon === null || tmp.icon === "") {
        tmp.icon = true;
      }

      if (d && d.data) {
        tmp.data = d.data;

        if (d.data.jstree) {
          for (i in d.data.jstree) {
            if (d.data.jstree.hasOwnProperty(i)) {
              tmp.state[i] = d.data.jstree[i];
            }
          }
        }
      }

      if (d && typeof d.state === 'object') {
        for (i in d.state) {
          if (d.state.hasOwnProperty(i)) {
            tmp.state[i] = d.state[i];
          }
        }
      }

      if (d && typeof d.li_attr === 'object') {
        for (i in d.li_attr) {
          if (d.li_attr.hasOwnProperty(i)) {
            tmp.li_attr[i] = d.li_attr[i];
          }
        }
      }

      if (!tmp.li_attr.id) {
        tmp.li_attr.id = tid;
      }

      if (d && typeof d.a_attr === 'object') {
        for (i in d.a_attr) {
          if (d.a_attr.hasOwnProperty(i)) {
            tmp.a_attr[i] = d.a_attr[i];
          }
        }
      }

      if (d && d.children && d.children === true) {
        tmp.state.loaded = false;
        tmp.children = [];
        tmp.children_d = [];
      }

      m[tmp.id] = tmp;

      for (i = 0, j = tmp.children.length; i < j; i++) {
        c = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);
        e = m[c];
        tmp.children_d.push(c);

        if (e.children_d.length) {
          tmp.children_d = tmp.children_d.concat(e.children_d);
        }
      }

      delete d.data;
      delete d.children;
      m[tmp.id].original = d;

      if (tmp.state.selected) {
        this._data.core.selected.push(tmp.id);
      }

      return tmp.id;
    },

    /**
     * parses a node from a JSON object and appends it to the in memory tree model. Used internally.
     * @private
     * @name _parse_model_from_json(d [, p, ps])
     * @param  {Object} d the JSON object to parse
     * @param  {String} p the parent ID
     * @param  {Array} ps list of all parents
     * @return {String} the ID of the object added to the model
     */
    _parse_model_from_json: function (d, p, ps) {
      if (!ps) {
        ps = [];
      } else {
        ps = ps.concat();
      }

      if (p) {
        ps.unshift(p);
      }

      var tid = false,
          i,
          j,
          c,
          e,
          m = this._model.data,
          df = this._model.default_state,
          tmp;

      do {
        tid = 'j' + this._id + '_' + ++this._cnt;
      } while (m[tid]);

      tmp = {
        id: false,
        text: typeof d === 'string' ? d : '',
        icon: typeof d === 'object' && d.icon !== undefined ? d.icon : true,
        parent: p,
        parents: ps,
        children: [],
        children_d: [],
        data: null,
        state: {},
        li_attr: {
          id: false
        },
        a_attr: {
          href: '#'
        },
        original: false
      };

      for (i in df) {
        if (df.hasOwnProperty(i)) {
          tmp.state[i] = df[i];
        }
      }

      if (d && d.id) {
        tmp.id = d.id.toString();
      }

      if (d && d.text) {
        tmp.text = d.text;
      }

      if (d && d.data && d.data.jstree && d.data.jstree.icon) {
        tmp.icon = d.data.jstree.icon;
      }

      if (tmp.icon === undefined || tmp.icon === null || tmp.icon === "") {
        tmp.icon = true;
      }

      if (d && d.data) {
        tmp.data = d.data;

        if (d.data.jstree) {
          for (i in d.data.jstree) {
            if (d.data.jstree.hasOwnProperty(i)) {
              tmp.state[i] = d.data.jstree[i];
            }
          }
        }
      }

      if (d && typeof d.state === 'object') {
        for (i in d.state) {
          if (d.state.hasOwnProperty(i)) {
            tmp.state[i] = d.state[i];
          }
        }
      }

      if (d && typeof d.li_attr === 'object') {
        for (i in d.li_attr) {
          if (d.li_attr.hasOwnProperty(i)) {
            tmp.li_attr[i] = d.li_attr[i];
          }
        }
      }

      if (tmp.li_attr.id && !tmp.id) {
        tmp.id = tmp.li_attr.id.toString();
      }

      if (!tmp.id) {
        tmp.id = tid;
      }

      if (!tmp.li_attr.id) {
        tmp.li_attr.id = tmp.id;
      }

      if (d && typeof d.a_attr === 'object') {
        for (i in d.a_attr) {
          if (d.a_attr.hasOwnProperty(i)) {
            tmp.a_attr[i] = d.a_attr[i];
          }
        }
      }

      if (d && d.children && d.children.length) {
        for (i = 0, j = d.children.length; i < j; i++) {
          c = this._parse_model_from_json(d.children[i], tmp.id, ps);
          e = m[c];
          tmp.children.push(c);

          if (e.children_d.length) {
            tmp.children_d = tmp.children_d.concat(e.children_d);
          }
        }

        tmp.children_d = tmp.children.concat(tmp.children_d);
      }

      if (d && d.children && d.children === true) {
        tmp.state.loaded = false;
        tmp.children = [];
        tmp.children_d = [];
      }

      delete d.data;
      delete d.children;
      tmp.original = d;
      m[tmp.id] = tmp;

      if (tmp.state.selected) {
        this._data.core.selected.push(tmp.id);
      }

      return tmp.id;
    },

    /**
     * redraws all nodes that need to be redrawn. Used internally.
     * @private
     * @name _redraw()
     * @trigger redraw.jstree
     */
    _redraw: function () {
      var nodes = this._model.force_full_redraw ? this._model.data[$.jstree.root].children.concat([]) : this._model.changed.concat([]),
          f = document.createElement('UL'),
          tmp,
          i,
          j,
          fe = this._data.core.focused;

      for (i = 0, j = nodes.length; i < j; i++) {
        tmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);

        if (tmp && this._model.force_full_redraw) {
          f.appendChild(tmp);
        }
      }

      if (this._model.force_full_redraw) {
        f.className = this.get_container_ul()[0].className;
        f.setAttribute('role', 'group');
        this.element.empty().append(f); //this.get_container_ul()[0].appendChild(f);
      }

      if (fe !== null && this.settings.core.restore_focus) {
        tmp = this.get_node(fe, true);

        if (tmp && tmp.length && tmp.children('.jstree-anchor')[0] !== document.activeElement) {
          tmp.children('.jstree-anchor').focus();
        } else {
          this._data.core.focused = null;
        }
      }

      this._model.force_full_redraw = false;
      this._model.changed = [];
      /**
       * triggered after nodes are redrawn
       * @event
       * @name redraw.jstree
       * @param {array} nodes the redrawn nodes
       */

      this.trigger('redraw', {
        "nodes": nodes
      });
    },

    /**
     * redraws all nodes that need to be redrawn or optionally - the whole tree
     * @name redraw([full])
     * @param {Boolean} full if set to `true` all nodes are redrawn.
     */
    redraw: function (full) {
      if (full) {
        this._model.force_full_redraw = true;
      } //if(this._model.redraw_timeout) {
      //	clearTimeout(this._model.redraw_timeout);
      //}
      //this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);


      this._redraw();
    },

    /**
     * redraws a single node's children. Used internally.
     * @private
     * @name draw_children(node)
     * @param {mixed} node the node whose children will be redrawn
     */
    draw_children: function (node) {
      var obj = this.get_node(node),
          i = false,
          j = false,
          k = false,
          d = document;

      if (!obj) {
        return false;
      }

      if (obj.id === $.jstree.root) {
        return this.redraw(true);
      }

      node = this.get_node(node, true);

      if (!node || !node.length) {
        return false;
      } // TODO: quick toggle


      node.children('.jstree-children').remove();
      node = node[0];

      if (obj.children.length && obj.state.loaded) {
        k = d.createElement('UL');
        k.setAttribute('role', 'group');
        k.className = 'jstree-children';

        for (i = 0, j = obj.children.length; i < j; i++) {
          k.appendChild(this.redraw_node(obj.children[i], true, true));
        }

        node.appendChild(k);
      }
    },

    /**
     * redraws a single node. Used internally.
     * @private
     * @name redraw_node(node, deep, is_callback, force_render)
     * @param {mixed} node the node to redraw
     * @param {Boolean} deep should child nodes be redrawn too
     * @param {Boolean} is_callback is this a recursion call
     * @param {Boolean} force_render should children of closed parents be drawn anyway
     */
    redraw_node: function (node, deep, is_callback, force_render) {
      var obj = this.get_node(node),
          par = false,
          ind = false,
          old = false,
          i = false,
          j = false,
          k = false,
          c = '',
          d = document,
          m = this._model.data,
          f = false,
          s = false,
          tmp = null,
          t = 0,
          l = 0,
          has_children = false,
          last_sibling = false;

      if (!obj) {
        return false;
      }

      if (obj.id === $.jstree.root) {
        return this.redraw(true);
      }

      deep = deep || obj.children.length === 0;
      node = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + ("0123456789".indexOf(obj.id[0]) !== -1 ? '\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex, '\\$&') : obj.id.replace($.jstree.idregex, '\\$&'))); //, this.element);

      if (!node) {
        deep = true; //node = d.createElement('LI');

        if (!is_callback) {
          par = obj.parent !== $.jstree.root ? $('#' + obj.parent.replace($.jstree.idregex, '\\$&'), this.element)[0] : null;

          if (par !== null && (!par || !m[obj.parent].state.opened)) {
            return false;
          }

          ind = $.inArray(obj.id, par === null ? m[$.jstree.root].children : m[obj.parent].children);
        }
      } else {
        node = $(node);

        if (!is_callback) {
          par = node.parent().parent()[0];

          if (par === this.element[0]) {
            par = null;
          }

          ind = node.index();
        } // m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage


        if (!deep && obj.children.length && !node.children('.jstree-children').length) {
          deep = true;
        }

        if (!deep) {
          old = node.children('.jstree-children')[0];
        }

        f = node.children('.jstree-anchor')[0] === document.activeElement;
        node.remove(); //node = d.createElement('LI');
        //node = node[0];
      }

      node = this._data.core.node.cloneNode(true); // node is DOM, deep is boolean

      c = 'jstree-node ';

      for (i in obj.li_attr) {
        if (obj.li_attr.hasOwnProperty(i)) {
          if (i === 'id') {
            continue;
          }

          if (i !== 'class') {
            node.setAttribute(i, obj.li_attr[i]);
          } else {
            c += obj.li_attr[i];
          }
        }
      }

      if (!obj.a_attr.id) {
        obj.a_attr.id = obj.id + '_anchor';
      }

      node.childNodes[1].setAttribute('aria-selected', !!obj.state.selected);
      node.childNodes[1].setAttribute('aria-level', obj.parents.length);

      if (this.settings.core.compute_elements_positions) {
        node.childNodes[1].setAttribute('aria-setsize', m[obj.parent].children.length);
        node.childNodes[1].setAttribute('aria-posinset', m[obj.parent].children.indexOf(obj.id) + 1);
      }

      if (obj.state.disabled) {
        node.childNodes[1].setAttribute('aria-disabled', true);
      }

      for (i = 0, j = obj.children.length; i < j; i++) {
        if (!m[obj.children[i]].state.hidden) {
          has_children = true;
          break;
        }
      }

      if (obj.parent !== null && m[obj.parent] && !obj.state.hidden) {
        i = $.inArray(obj.id, m[obj.parent].children);
        last_sibling = obj.id;

        if (i !== -1) {
          i++;

          for (j = m[obj.parent].children.length; i < j; i++) {
            if (!m[m[obj.parent].children[i]].state.hidden) {
              last_sibling = m[obj.parent].children[i];
            }

            if (last_sibling !== obj.id) {
              break;
            }
          }
        }
      }

      if (obj.state.hidden) {
        c += ' jstree-hidden';
      }

      if (obj.state.loading) {
        c += ' jstree-loading';
      }

      if (obj.state.loaded && !has_children) {
        c += ' jstree-leaf';
      } else {
        c += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';
        node.childNodes[1].setAttribute('aria-expanded', obj.state.opened && obj.state.loaded);
      }

      if (last_sibling === obj.id) {
        c += ' jstree-last';
      }

      node.id = obj.id;
      node.className = c;
      c = (obj.state.selected ? ' jstree-clicked' : '') + (obj.state.disabled ? ' jstree-disabled' : '');

      for (j in obj.a_attr) {
        if (obj.a_attr.hasOwnProperty(j)) {
          if (j === 'href' && obj.a_attr[j] === '#') {
            continue;
          }

          if (j !== 'class') {
            node.childNodes[1].setAttribute(j, obj.a_attr[j]);
          } else {
            c += ' ' + obj.a_attr[j];
          }
        }
      }

      if (c.length) {
        node.childNodes[1].className = 'jstree-anchor ' + c;
      }

      if (obj.icon && obj.icon !== true || obj.icon === false) {
        if (obj.icon === false) {
          node.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';
        } else if (obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {
          node.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';
        } else {
          node.childNodes[1].childNodes[0].style.backgroundImage = 'url("' + obj.icon + '")';
          node.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';
          node.childNodes[1].childNodes[0].style.backgroundSize = 'auto';
          node.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';
        }
      }

      if (this.settings.core.force_text) {
        node.childNodes[1].appendChild(d.createTextNode(obj.text));
      } else {
        node.childNodes[1].innerHTML += obj.text;
      }

      if (deep && obj.children.length && (obj.state.opened || force_render) && obj.state.loaded) {
        k = d.createElement('UL');
        k.setAttribute('role', 'group');
        k.className = 'jstree-children';

        for (i = 0, j = obj.children.length; i < j; i++) {
          k.appendChild(this.redraw_node(obj.children[i], deep, true));
        }

        node.appendChild(k);
      }

      if (old) {
        node.appendChild(old);
      }

      if (!is_callback) {
        // append back using par / ind
        if (!par) {
          par = this.element[0];
        }

        for (i = 0, j = par.childNodes.length; i < j; i++) {
          if (par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {
            tmp = par.childNodes[i];
            break;
          }
        }

        if (!tmp) {
          tmp = d.createElement('UL');
          tmp.setAttribute('role', 'group');
          tmp.className = 'jstree-children';
          par.appendChild(tmp);
        }

        par = tmp;

        if (ind < par.childNodes.length) {
          par.insertBefore(node, par.childNodes[ind]);
        } else {
          par.appendChild(node);
        }

        if (f) {
          t = this.element[0].scrollTop;
          l = this.element[0].scrollLeft;
          node.childNodes[1].focus();
          this.element[0].scrollTop = t;
          this.element[0].scrollLeft = l;
        }
      }

      if (obj.state.opened && !obj.state.loaded) {
        obj.state.opened = false;
        setTimeout($.proxy(function () {
          this.open_node(obj.id, false, 0);
        }, this), 0);
      }

      return node;
    },

    /**
     * opens a node, revealing its children. If the node is not loaded it will be loaded and opened once ready.
     * @name open_node(obj [, callback, animation])
     * @param {mixed} obj the node to open
     * @param {Function} callback a function to execute once the node is opened
     * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.
     * @trigger open_node.jstree, after_open.jstree, before_open.jstree
     */
    open_node: function (obj, callback, animation) {
      var t1, t2, d, t;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.open_node(obj[t1], callback, animation);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      animation = animation === undefined ? this.settings.core.animation : animation;

      if (!this.is_closed(obj)) {
        if (callback) {
          callback.call(this, obj, false);
        }

        return false;
      }

      if (!this.is_loaded(obj)) {
        if (this.is_loading(obj)) {
          return setTimeout($.proxy(function () {
            this.open_node(obj, callback, animation);
          }, this), 500);
        }

        this.load_node(obj, function (o, ok) {
          return ok ? this.open_node(o, callback, animation) : callback ? callback.call(this, o, false) : false;
        });
      } else {
        d = this.get_node(obj, true);
        t = this;

        if (d.length) {
          if (animation && d.children(".jstree-children").length) {
            d.children(".jstree-children").stop(true, true);
          }

          if (obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {
            this.draw_children(obj); //d = this.get_node(obj, true);
          }

          if (!animation) {
            this.trigger('before_open', {
              "node": obj
            });
            d[0].className = d[0].className.replace('jstree-closed', 'jstree-open');
            d[0].childNodes[1].setAttribute("aria-expanded", true);
          } else {
            this.trigger('before_open', {
              "node": obj
            });
            d.children(".jstree-children").css("display", "none").end().removeClass("jstree-closed").addClass("jstree-open").children('.jstree-anchor').attr("aria-expanded", true).end().children(".jstree-children").stop(true, true).slideDown(animation, function () {
              this.style.display = "";

              if (t.element) {
                t.trigger("after_open", {
                  "node": obj
                });
              }
            });
          }
        }

        obj.state.opened = true;

        if (callback) {
          callback.call(this, obj, true);
        }

        if (!d.length) {
          /**
           * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)
           * @event
           * @name before_open.jstree
           * @param {Object} node the opened node
           */
          this.trigger('before_open', {
            "node": obj
          });
        }
        /**
         * triggered when a node is opened (if there is an animation it will not be completed yet)
         * @event
         * @name open_node.jstree
         * @param {Object} node the opened node
         */


        this.trigger('open_node', {
          "node": obj
        });

        if (!animation || !d.length) {
          /**
           * triggered when a node is opened and the animation is complete
           * @event
           * @name after_open.jstree
           * @param {Object} node the opened node
           */
          this.trigger("after_open", {
            "node": obj
          });
        }

        return true;
      }
    },

    /**
     * opens every parent of a node (node should be loaded)
     * @name _open_to(obj)
     * @param {mixed} obj the node to reveal
     * @private
     */
    _open_to: function (obj) {
      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      var i,
          j,
          p = obj.parents;

      for (i = 0, j = p.length; i < j; i += 1) {
        if (i !== $.jstree.root) {
          this.open_node(p[i], false, 0);
        }
      }

      return $('#' + obj.id.replace($.jstree.idregex, '\\$&'), this.element);
    },

    /**
     * closes a node, hiding its children
     * @name close_node(obj [, animation])
     * @param {mixed} obj the node to close
     * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.
     * @trigger close_node.jstree, after_close.jstree
     */
    close_node: function (obj, animation) {
      var t1, t2, t, d;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.close_node(obj[t1], animation);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      if (this.is_closed(obj)) {
        return false;
      }

      animation = animation === undefined ? this.settings.core.animation : animation;
      t = this;
      d = this.get_node(obj, true);
      obj.state.opened = false;
      /**
       * triggered when a node is closed (if there is an animation it will not be complete yet)
       * @event
       * @name close_node.jstree
       * @param {Object} node the closed node
       */

      this.trigger('close_node', {
        "node": obj
      });

      if (!d.length) {
        /**
         * triggered when a node is closed and the animation is complete
         * @event
         * @name after_close.jstree
         * @param {Object} node the closed node
         */
        this.trigger("after_close", {
          "node": obj
        });
      } else {
        if (!animation) {
          d[0].className = d[0].className.replace('jstree-open', 'jstree-closed');
          d.children('.jstree-anchor').attr("aria-expanded", false);
          d.children('.jstree-children').remove();
          this.trigger("after_close", {
            "node": obj
          });
        } else {
          d.children(".jstree-children").attr("style", "display:block !important").end().removeClass("jstree-open").addClass("jstree-closed").children('.jstree-anchor').attr("aria-expanded", false).end().children(".jstree-children").stop(true, true).slideUp(animation, function () {
            this.style.display = "";
            d.children('.jstree-children').remove();

            if (t.element) {
              t.trigger("after_close", {
                "node": obj
              });
            }
          });
        }
      }
    },

    /**
     * toggles a node - closing it if it is open, opening it if it is closed
     * @name toggle_node(obj)
     * @param {mixed} obj the node to toggle
     */
    toggle_node: function (obj) {
      var t1, t2;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.toggle_node(obj[t1]);
        }

        return true;
      }

      if (this.is_closed(obj)) {
        return this.open_node(obj);
      }

      if (this.is_open(obj)) {
        return this.close_node(obj);
      }
    },

    /**
     * opens all nodes within a node (or the tree), revealing their children. If the node is not loaded it will be loaded and opened once ready.
     * @name open_all([obj, animation, original_obj])
     * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree
     * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation
     * @param {jQuery} reference to the node that started the process (internal use)
     * @trigger open_all.jstree
     */
    open_all: function (obj, animation, original_obj) {
      if (!obj) {
        obj = $.jstree.root;
      }

      obj = this.get_node(obj);

      if (!obj) {
        return false;
      }

      var dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),
          i,
          j,
          _this;

      if (!dom.length) {
        for (i = 0, j = obj.children_d.length; i < j; i++) {
          if (this.is_closed(this._model.data[obj.children_d[i]])) {
            this._model.data[obj.children_d[i]].state.opened = true;
          }
        }

        return this.trigger('open_all', {
          "node": obj
        });
      }

      original_obj = original_obj || dom;
      _this = this;
      dom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');
      dom.each(function () {
        _this.open_node(this, function (node, status) {
          if (status && this.is_parent(node)) {
            this.open_all(node, animation, original_obj);
          }
        }, animation || 0);
      });

      if (original_obj.find('.jstree-closed').length === 0) {
        /**
         * triggered when an `open_all` call completes
         * @event
         * @name open_all.jstree
         * @param {Object} node the opened node
         */
        this.trigger('open_all', {
          "node": this.get_node(original_obj)
        });
      }
    },

    /**
     * closes all nodes within a node (or the tree), revealing their children
     * @name close_all([obj, animation])
     * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree
     * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation
     * @trigger close_all.jstree
     */
    close_all: function (obj, animation) {
      if (!obj) {
        obj = $.jstree.root;
      }

      obj = this.get_node(obj);

      if (!obj) {
        return false;
      }

      var dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),
          _this = this,
          i,
          j;

      if (dom.length) {
        dom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');
        $(dom.get().reverse()).each(function () {
          _this.close_node(this, animation || 0);
        });
      }

      for (i = 0, j = obj.children_d.length; i < j; i++) {
        this._model.data[obj.children_d[i]].state.opened = false;
      }
      /**
       * triggered when an `close_all` call completes
       * @event
       * @name close_all.jstree
       * @param {Object} node the closed node
       */


      this.trigger('close_all', {
        "node": obj
      });
    },

    /**
     * checks if a node is disabled (not selectable)
     * @name is_disabled(obj)
     * @param  {mixed} obj
     * @return {Boolean}
     */
    is_disabled: function (obj) {
      obj = this.get_node(obj);
      return obj && obj.state && obj.state.disabled;
    },

    /**
     * enables a node - so that it can be selected
     * @name enable_node(obj)
     * @param {mixed} obj the node to enable
     * @trigger enable_node.jstree
     */
    enable_node: function (obj) {
      var t1, t2;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.enable_node(obj[t1]);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      obj.state.disabled = false;
      this.get_node(obj, true).children('.jstree-anchor').removeClass('jstree-disabled').attr('aria-disabled', false);
      /**
       * triggered when an node is enabled
       * @event
       * @name enable_node.jstree
       * @param {Object} node the enabled node
       */

      this.trigger('enable_node', {
        'node': obj
      });
    },

    /**
     * disables a node - so that it can not be selected
     * @name disable_node(obj)
     * @param {mixed} obj the node to disable
     * @trigger disable_node.jstree
     */
    disable_node: function (obj) {
      var t1, t2;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.disable_node(obj[t1]);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      obj.state.disabled = true;
      this.get_node(obj, true).children('.jstree-anchor').addClass('jstree-disabled').attr('aria-disabled', true);
      /**
       * triggered when an node is disabled
       * @event
       * @name disable_node.jstree
       * @param {Object} node the disabled node
       */

      this.trigger('disable_node', {
        'node': obj
      });
    },

    /**
     * determines if a node is hidden
     * @name is_hidden(obj)
     * @param {mixed} obj the node
     */
    is_hidden: function (obj) {
      obj = this.get_node(obj);
      return obj.state.hidden === true;
    },

    /**
     * hides a node - it is still in the structure but will not be visible
     * @name hide_node(obj)
     * @param {mixed} obj the node to hide
     * @param {Boolean} skip_redraw internal parameter controlling if redraw is called
     * @trigger hide_node.jstree
     */
    hide_node: function (obj, skip_redraw) {
      var t1, t2;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.hide_node(obj[t1], true);
        }

        if (!skip_redraw) {
          this.redraw();
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      if (!obj.state.hidden) {
        obj.state.hidden = true;

        this._node_changed(obj.parent);

        if (!skip_redraw) {
          this.redraw();
        }
        /**
         * triggered when an node is hidden
         * @event
         * @name hide_node.jstree
         * @param {Object} node the hidden node
         */


        this.trigger('hide_node', {
          'node': obj
        });
      }
    },

    /**
     * shows a node
     * @name show_node(obj)
     * @param {mixed} obj the node to show
     * @param {Boolean} skip_redraw internal parameter controlling if redraw is called
     * @trigger show_node.jstree
     */
    show_node: function (obj, skip_redraw) {
      var t1, t2;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.show_node(obj[t1], true);
        }

        if (!skip_redraw) {
          this.redraw();
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      if (obj.state.hidden) {
        obj.state.hidden = false;

        this._node_changed(obj.parent);

        if (!skip_redraw) {
          this.redraw();
        }
        /**
         * triggered when an node is shown
         * @event
         * @name show_node.jstree
         * @param {Object} node the shown node
         */


        this.trigger('show_node', {
          'node': obj
        });
      }
    },

    /**
     * hides all nodes
     * @name hide_all()
     * @trigger hide_all.jstree
     */
    hide_all: function (skip_redraw) {
      var i,
          m = this._model.data,
          ids = [];

      for (i in m) {
        if (m.hasOwnProperty(i) && i !== $.jstree.root && !m[i].state.hidden) {
          m[i].state.hidden = true;
          ids.push(i);
        }
      }

      this._model.force_full_redraw = true;

      if (!skip_redraw) {
        this.redraw();
      }
      /**
       * triggered when all nodes are hidden
       * @event
       * @name hide_all.jstree
       * @param {Array} nodes the IDs of all hidden nodes
       */


      this.trigger('hide_all', {
        'nodes': ids
      });
      return ids;
    },

    /**
     * shows all nodes
     * @name show_all()
     * @trigger show_all.jstree
     */
    show_all: function (skip_redraw) {
      var i,
          m = this._model.data,
          ids = [];

      for (i in m) {
        if (m.hasOwnProperty(i) && i !== $.jstree.root && m[i].state.hidden) {
          m[i].state.hidden = false;
          ids.push(i);
        }
      }

      this._model.force_full_redraw = true;

      if (!skip_redraw) {
        this.redraw();
      }
      /**
       * triggered when all nodes are shown
       * @event
       * @name show_all.jstree
       * @param {Array} nodes the IDs of all shown nodes
       */


      this.trigger('show_all', {
        'nodes': ids
      });
      return ids;
    },

    /**
     * called when a node is selected by the user. Used internally.
     * @private
     * @name activate_node(obj, e)
     * @param {mixed} obj the node
     * @param {Object} e the related event
     * @trigger activate_node.jstree, changed.jstree
     */
    activate_node: function (obj, e) {
      if (this.is_disabled(obj)) {
        return false;
      }

      if (!e || typeof e !== 'object') {
        e = {};
      } // ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node


      this._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;

      if (this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) {
        this._data.core.last_clicked = null;
      }

      if (!this._data.core.last_clicked && this._data.core.selected.length) {
        this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]);
      }

      if (!this.settings.core.multiple || !e.metaKey && !e.ctrlKey && !e.shiftKey || e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent)) {
        if (!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {
          this.deselect_node(obj, false, e);
        } else {
          this.deselect_all(true);
          this.select_node(obj, false, false, e);
          this._data.core.last_clicked = this.get_node(obj);
        }
      } else {
        if (e.shiftKey) {
          var o = this.get_node(obj).id,
              l = this._data.core.last_clicked.id,
              p = this.get_node(this._data.core.last_clicked.parent).children,
              c = false,
              i,
              j;

          for (i = 0, j = p.length; i < j; i += 1) {
            // separate IFs work whem o and l are the same
            if (p[i] === o) {
              c = !c;
            }

            if (p[i] === l) {
              c = !c;
            }

            if (!this.is_disabled(p[i]) && (c || p[i] === o || p[i] === l)) {
              if (!this.is_hidden(p[i])) {
                this.select_node(p[i], true, false, e);
              }
            } else {
              this.deselect_node(p[i], true, e);
            }
          }

          this.trigger('changed', {
            'action': 'select_node',
            'node': this.get_node(obj),
            'selected': this._data.core.selected,
            'event': e
          });
        } else {
          if (!this.is_selected(obj)) {
            this.select_node(obj, false, false, e);
          } else {
            this.deselect_node(obj, false, e);
          }
        }
      }
      /**
       * triggered when an node is clicked or intercated with by the user
       * @event
       * @name activate_node.jstree
       * @param {Object} node
       * @param {Object} event the ooriginal event (if any) which triggered the call (may be an empty object)
       */


      this.trigger('activate_node', {
        'node': this.get_node(obj),
        'event': e
      });
    },

    /**
     * applies the hover state on a node, called when a node is hovered by the user. Used internally.
     * @private
     * @name hover_node(obj)
     * @param {mixed} obj
     * @trigger hover_node.jstree
     */
    hover_node: function (obj) {
      obj = this.get_node(obj, true);

      if (!obj || !obj.length || obj.children('.jstree-hovered').length) {
        return false;
      }

      var o = this.element.find('.jstree-hovered'),
          t = this.element;

      if (o && o.length) {
        this.dehover_node(o);
      }

      obj.children('.jstree-anchor').addClass('jstree-hovered');
      /**
       * triggered when an node is hovered
       * @event
       * @name hover_node.jstree
       * @param {Object} node
       */

      this.trigger('hover_node', {
        'node': this.get_node(obj)
      });
      setTimeout(function () {
        t.attr('aria-activedescendant', obj[0].id);
      }, 0);
    },

    /**
     * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.
     * @private
     * @name dehover_node(obj)
     * @param {mixed} obj
     * @trigger dehover_node.jstree
     */
    dehover_node: function (obj) {
      obj = this.get_node(obj, true);

      if (!obj || !obj.length || !obj.children('.jstree-hovered').length) {
        return false;
      }

      obj.children('.jstree-anchor').removeClass('jstree-hovered');
      /**
       * triggered when an node is no longer hovered
       * @event
       * @name dehover_node.jstree
       * @param {Object} node
       */

      this.trigger('dehover_node', {
        'node': this.get_node(obj)
      });
    },

    /**
     * select a node
     * @name select_node(obj [, supress_event, prevent_open])
     * @param {mixed} obj an array can be used to select multiple nodes
     * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered
     * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened
     * @trigger select_node.jstree, changed.jstree
     */
    select_node: function (obj, supress_event, prevent_open, e) {
      var dom, t1, t2, th;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.select_node(obj[t1], supress_event, prevent_open, e);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      dom = this.get_node(obj, true);

      if (!obj.state.selected) {
        obj.state.selected = true;

        this._data.core.selected.push(obj.id);

        if (!prevent_open) {
          dom = this._open_to(obj);
        }

        if (dom && dom.length) {
          dom.children('.jstree-anchor').addClass('jstree-clicked').attr('aria-selected', true);
        }
        /**
         * triggered when an node is selected
         * @event
         * @name select_node.jstree
         * @param {Object} node
         * @param {Array} selected the current selection
         * @param {Object} event the event (if any) that triggered this select_node
         */


        this.trigger('select_node', {
          'node': obj,
          'selected': this._data.core.selected,
          'event': e
        });

        if (!supress_event) {
          /**
           * triggered when selection changes
           * @event
           * @name changed.jstree
           * @param {Object} node
           * @param {Object} action the action that caused the selection to change
           * @param {Array} selected the current selection
           * @param {Object} event the event (if any) that triggered this changed event
           */
          this.trigger('changed', {
            'action': 'select_node',
            'node': obj,
            'selected': this._data.core.selected,
            'event': e
          });
        }
      }
    },

    /**
     * deselect a node
     * @name deselect_node(obj [, supress_event])
     * @param {mixed} obj an array can be used to deselect multiple nodes
     * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered
     * @trigger deselect_node.jstree, changed.jstree
     */
    deselect_node: function (obj, supress_event, e) {
      var t1, t2, dom;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.deselect_node(obj[t1], supress_event, e);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      dom = this.get_node(obj, true);

      if (obj.state.selected) {
        obj.state.selected = false;
        this._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);

        if (dom.length) {
          dom.children('.jstree-anchor').removeClass('jstree-clicked').attr('aria-selected', false);
        }
        /**
         * triggered when an node is deselected
         * @event
         * @name deselect_node.jstree
         * @param {Object} node
         * @param {Array} selected the current selection
         * @param {Object} event the event (if any) that triggered this deselect_node
         */


        this.trigger('deselect_node', {
          'node': obj,
          'selected': this._data.core.selected,
          'event': e
        });

        if (!supress_event) {
          this.trigger('changed', {
            'action': 'deselect_node',
            'node': obj,
            'selected': this._data.core.selected,
            'event': e
          });
        }
      }
    },

    /**
     * select all nodes in the tree
     * @name select_all([supress_event])
     * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered
     * @trigger select_all.jstree, changed.jstree
     */
    select_all: function (supress_event) {
      var tmp = this._data.core.selected.concat([]),
          i,
          j;

      this._data.core.selected = this._model.data[$.jstree.root].children_d.concat();

      for (i = 0, j = this._data.core.selected.length; i < j; i++) {
        if (this._model.data[this._data.core.selected[i]]) {
          this._model.data[this._data.core.selected[i]].state.selected = true;
        }
      }

      this.redraw(true);
      /**
       * triggered when all nodes are selected
       * @event
       * @name select_all.jstree
       * @param {Array} selected the current selection
       */

      this.trigger('select_all', {
        'selected': this._data.core.selected
      });

      if (!supress_event) {
        this.trigger('changed', {
          'action': 'select_all',
          'selected': this._data.core.selected,
          'old_selection': tmp
        });
      }
    },

    /**
     * deselect all selected nodes
     * @name deselect_all([supress_event])
     * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered
     * @trigger deselect_all.jstree, changed.jstree
     */
    deselect_all: function (supress_event) {
      var tmp = this._data.core.selected.concat([]),
          i,
          j;

      for (i = 0, j = this._data.core.selected.length; i < j; i++) {
        if (this._model.data[this._data.core.selected[i]]) {
          this._model.data[this._data.core.selected[i]].state.selected = false;
        }
      }

      this._data.core.selected = [];
      this.element.find('.jstree-clicked').removeClass('jstree-clicked').attr('aria-selected', false);
      /**
       * triggered when all nodes are deselected
       * @event
       * @name deselect_all.jstree
       * @param {Object} node the previous selection
       * @param {Array} selected the current selection
       */

      this.trigger('deselect_all', {
        'selected': this._data.core.selected,
        'node': tmp
      });

      if (!supress_event) {
        this.trigger('changed', {
          'action': 'deselect_all',
          'selected': this._data.core.selected,
          'old_selection': tmp
        });
      }
    },

    /**
     * checks if a node is selected
     * @name is_selected(obj)
     * @param  {mixed}  obj
     * @return {Boolean}
     */
    is_selected: function (obj) {
      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      return obj.state.selected;
    },

    /**
     * get an array of all selected nodes
     * @name get_selected([full])
     * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned
     * @return {Array}
     */
    get_selected: function (full) {
      return full ? $.map(this._data.core.selected, $.proxy(function (i) {
        return this.get_node(i);
      }, this)) : this._data.core.selected.slice();
    },

    /**
     * get an array of all top level selected nodes (ignoring children of selected nodes)
     * @name get_top_selected([full])
     * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned
     * @return {Array}
     */
    get_top_selected: function (full) {
      var tmp = this.get_selected(true),
          obj = {},
          i,
          j,
          k,
          l;

      for (i = 0, j = tmp.length; i < j; i++) {
        obj[tmp[i].id] = tmp[i];
      }

      for (i = 0, j = tmp.length; i < j; i++) {
        for (k = 0, l = tmp[i].children_d.length; k < l; k++) {
          if (obj[tmp[i].children_d[k]]) {
            delete obj[tmp[i].children_d[k]];
          }
        }
      }

      tmp = [];

      for (i in obj) {
        if (obj.hasOwnProperty(i)) {
          tmp.push(i);
        }
      }

      return full ? $.map(tmp, $.proxy(function (i) {
        return this.get_node(i);
      }, this)) : tmp;
    },

    /**
     * get an array of all bottom level selected nodes (ignoring selected parents)
     * @name get_bottom_selected([full])
     * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned
     * @return {Array}
     */
    get_bottom_selected: function (full) {
      var tmp = this.get_selected(true),
          obj = [],
          i,
          j;

      for (i = 0, j = tmp.length; i < j; i++) {
        if (!tmp[i].children.length) {
          obj.push(tmp[i].id);
        }
      }

      return full ? $.map(obj, $.proxy(function (i) {
        return this.get_node(i);
      }, this)) : obj;
    },

    /**
     * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.
     * @name get_state()
     * @private
     * @return {Object}
     */
    get_state: function () {
      var state = {
        'core': {
          'open': [],
          'loaded': [],
          'scroll': {
            'left': this.element.scrollLeft(),
            'top': this.element.scrollTop()
          },

          /*!
          'themes' : {
          	'name' : this.get_theme(),
          	'icons' : this._data.core.themes.icons,
          	'dots' : this._data.core.themes.dots
          },
          */
          'selected': []
        }
      },
          i;

      for (i in this._model.data) {
        if (this._model.data.hasOwnProperty(i)) {
          if (i !== $.jstree.root) {
            if (this._model.data[i].state.loaded && this.settings.core.loaded_state) {
              state.core.loaded.push(i);
            }

            if (this._model.data[i].state.opened) {
              state.core.open.push(i);
            }

            if (this._model.data[i].state.selected) {
              state.core.selected.push(i);
            }
          }
        }
      }

      return state;
    },

    /**
     * sets the state of the tree. Used internally.
     * @name set_state(state [, callback])
     * @private
     * @param {Object} state the state to restore. Keep in mind this object is passed by reference and jstree will modify it.
     * @param {Function} callback an optional function to execute once the state is restored.
     * @trigger set_state.jstree
     */
    set_state: function (state, callback) {
      if (state) {
        if (state.core && state.core.selected && state.core.initial_selection === undefined) {
          state.core.initial_selection = this._data.core.selected.concat([]).sort().join(',');
        }

        if (state.core) {
          var res, n, t, _this, i;

          if (state.core.loaded) {
            if (!this.settings.core.loaded_state || !$.isArray(state.core.loaded) || !state.core.loaded.length) {
              delete state.core.loaded;
              this.set_state(state, callback);
            } else {
              this._load_nodes(state.core.loaded, function (nodes) {
                delete state.core.loaded;
                this.set_state(state, callback);
              });
            }

            return false;
          }

          if (state.core.open) {
            if (!$.isArray(state.core.open) || !state.core.open.length) {
              delete state.core.open;
              this.set_state(state, callback);
            } else {
              this._load_nodes(state.core.open, function (nodes) {
                this.open_node(nodes, false, 0);
                delete state.core.open;
                this.set_state(state, callback);
              });
            }

            return false;
          }

          if (state.core.scroll) {
            if (state.core.scroll && state.core.scroll.left !== undefined) {
              this.element.scrollLeft(state.core.scroll.left);
            }

            if (state.core.scroll && state.core.scroll.top !== undefined) {
              this.element.scrollTop(state.core.scroll.top);
            }

            delete state.core.scroll;
            this.set_state(state, callback);
            return false;
          }

          if (state.core.selected) {
            _this = this;

            if (state.core.initial_selection === undefined || state.core.initial_selection === this._data.core.selected.concat([]).sort().join(',')) {
              this.deselect_all();
              $.each(state.core.selected, function (i, v) {
                _this.select_node(v, false, true);
              });
            }

            delete state.core.initial_selection;
            delete state.core.selected;
            this.set_state(state, callback);
            return false;
          }

          for (i in state) {
            if (state.hasOwnProperty(i) && i !== "core" && $.inArray(i, this.settings.plugins) === -1) {
              delete state[i];
            }
          }

          if ($.isEmptyObject(state.core)) {
            delete state.core;
            this.set_state(state, callback);
            return false;
          }
        }

        if ($.isEmptyObject(state)) {
          state = null;

          if (callback) {
            callback.call(this);
          }
          /**
           * triggered when a `set_state` call completes
           * @event
           * @name set_state.jstree
           */


          this.trigger('set_state');
          return false;
        }

        return true;
      }

      return false;
    },

    /**
     * refreshes the tree - all nodes are reloaded with calls to `load_node`.
     * @name refresh()
     * @param {Boolean} skip_loading an option to skip showing the loading indicator
     * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state
     * @trigger refresh.jstree
     */
    refresh: function (skip_loading, forget_state) {
      this._data.core.state = forget_state === true ? {} : this.get_state();

      if (forget_state && $.isFunction(forget_state)) {
        this._data.core.state = forget_state.call(this, this._data.core.state);
      }

      this._cnt = 0;
      this._model.data = {};
      this._model.data[$.jstree.root] = {
        id: $.jstree.root,
        parent: null,
        parents: [],
        children: [],
        children_d: [],
        state: {
          loaded: false
        }
      };
      this._data.core.selected = [];
      this._data.core.last_clicked = null;
      this._data.core.focused = null;
      var c = this.get_container_ul()[0].className;

      if (!skip_loading) {
        this.element.html("<" + "ul class='" + c + "' role='group'><" + "li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='none' id='j" + this._id + "_loading'><i class='jstree-icon jstree-ocl'></i><" + "a class='jstree-anchor' role='treeitem' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>" + this.get_string("Loading ...") + "</a></li></ul>");
        this.element.attr('aria-activedescendant', 'j' + this._id + '_loading');
      }

      this.load_node($.jstree.root, function (o, s) {
        if (s) {
          this.get_container_ul()[0].className = c;

          if (this._firstChild(this.get_container_ul()[0])) {
            this.element.attr('aria-activedescendant', this._firstChild(this.get_container_ul()[0]).id);
          }

          this.set_state($.extend(true, {}, this._data.core.state), function () {
            /**
             * triggered when a `refresh` call completes
             * @event
             * @name refresh.jstree
             */
            this.trigger('refresh');
          });
        }

        this._data.core.state = null;
      });
    },

    /**
     * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.
     * @name refresh_node(obj)
     * @param  {mixed} obj the node
     * @trigger refresh_node.jstree
     */
    refresh_node: function (obj) {
      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      var opened = [],
          to_load = [],
          s = this._data.core.selected.concat([]);

      to_load.push(obj.id);

      if (obj.state.opened === true) {
        opened.push(obj.id);
      }

      this.get_node(obj, true).find('.jstree-open').each(function () {
        to_load.push(this.id);
        opened.push(this.id);
      });

      this._load_nodes(to_load, $.proxy(function (nodes) {
        this.open_node(opened, false, 0);
        this.select_node(s);
        /**
         * triggered when a node is refreshed
         * @event
         * @name refresh_node.jstree
         * @param {Object} node - the refreshed node
         * @param {Array} nodes - an array of the IDs of the nodes that were reloaded
         */

        this.trigger('refresh_node', {
          'node': obj,
          'nodes': nodes
        });
      }, this), false, true);
    },

    /**
     * set (change) the ID of a node
     * @name set_id(obj, id)
     * @param  {mixed} obj the node
     * @param  {String} id the new ID
     * @return {Boolean}
     * @trigger set_id.jstree
     */
    set_id: function (obj, id) {
      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      var i,
          j,
          m = this._model.data,
          old = obj.id;
      id = id.toString(); // update parents (replace current ID with new one in children and children_d)

      m[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;

      for (i = 0, j = obj.parents.length; i < j; i++) {
        m[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;
      } // update children (replace current ID with new one in parent and parents)


      for (i = 0, j = obj.children.length; i < j; i++) {
        m[obj.children[i]].parent = id;
      }

      for (i = 0, j = obj.children_d.length; i < j; i++) {
        m[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;
      }

      i = $.inArray(obj.id, this._data.core.selected);

      if (i !== -1) {
        this._data.core.selected[i] = id;
      } // update model and obj itself (obj.id, this._model.data[KEY])


      i = this.get_node(obj.id, true);

      if (i) {
        i.attr('id', id); //.children('.jstree-anchor').attr('id', id + '_anchor').end().attr('aria-labelledby', id + '_anchor');

        if (this.element.attr('aria-activedescendant') === obj.id) {
          this.element.attr('aria-activedescendant', id);
        }
      }

      delete m[obj.id];
      obj.id = id;
      obj.li_attr.id = id;
      m[id] = obj;
      /**
       * triggered when a node id value is changed
       * @event
       * @name set_id.jstree
       * @param {Object} node
       * @param {String} old the old id
       */

      this.trigger('set_id', {
        "node": obj,
        "new": obj.id,
        "old": old
      });
      return true;
    },

    /**
     * get the text value of a node
     * @name get_text(obj)
     * @param  {mixed} obj the node
     * @return {String}
     */
    get_text: function (obj) {
      obj = this.get_node(obj);
      return !obj || obj.id === $.jstree.root ? false : obj.text;
    },

    /**
     * set the text value of a node. Used internally, please use `rename_node(obj, val)`.
     * @private
     * @name set_text(obj, val)
     * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes
     * @param  {String} val the new text value
     * @return {Boolean}
     * @trigger set_text.jstree
     */
    set_text: function (obj, val) {
      var t1, t2;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.set_text(obj[t1], val);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      obj.text = val;

      if (this.get_node(obj, true).length) {
        this.redraw_node(obj.id);
      }
      /**
       * triggered when a node text value is changed
       * @event
       * @name set_text.jstree
       * @param {Object} obj
       * @param {String} text the new value
       */


      this.trigger('set_text', {
        "obj": obj,
        "text": val
      });
      return true;
    },

    /**
     * gets a JSON representation of a node (or the whole tree)
     * @name get_json([obj, options])
     * @param  {mixed} obj
     * @param  {Object} options
     * @param  {Boolean} options.no_state do not return state information
     * @param  {Boolean} options.no_id do not return ID
     * @param  {Boolean} options.no_children do not include children
     * @param  {Boolean} options.no_data do not include node data
     * @param  {Boolean} options.no_li_attr do not include LI attributes
     * @param  {Boolean} options.no_a_attr do not include A attributes
     * @param  {Boolean} options.flat return flat JSON instead of nested
     * @return {Object}
     */
    get_json: function (obj, options, flat) {
      obj = this.get_node(obj || $.jstree.root);

      if (!obj) {
        return false;
      }

      if (options && options.flat && !flat) {
        flat = [];
      }

      var tmp = {
        'id': obj.id,
        'text': obj.text,
        'icon': this.get_icon(obj),
        'li_attr': $.extend(true, {}, obj.li_attr),
        'a_attr': $.extend(true, {}, obj.a_attr),
        'state': {},
        'data': options && options.no_data ? false : $.extend(true, $.isArray(obj.data) ? [] : {}, obj.data) //( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),

      },
          i,
          j;

      if (options && options.flat) {
        tmp.parent = obj.parent;
      } else {
        tmp.children = [];
      }

      if (!options || !options.no_state) {
        for (i in obj.state) {
          if (obj.state.hasOwnProperty(i)) {
            tmp.state[i] = obj.state[i];
          }
        }
      } else {
        delete tmp.state;
      }

      if (options && options.no_li_attr) {
        delete tmp.li_attr;
      }

      if (options && options.no_a_attr) {
        delete tmp.a_attr;
      }

      if (options && options.no_id) {
        delete tmp.id;

        if (tmp.li_attr && tmp.li_attr.id) {
          delete tmp.li_attr.id;
        }

        if (tmp.a_attr && tmp.a_attr.id) {
          delete tmp.a_attr.id;
        }
      }

      if (options && options.flat && obj.id !== $.jstree.root) {
        flat.push(tmp);
      }

      if (!options || !options.no_children) {
        for (i = 0, j = obj.children.length; i < j; i++) {
          if (options && options.flat) {
            this.get_json(obj.children[i], options, flat);
          } else {
            tmp.children.push(this.get_json(obj.children[i], options));
          }
        }
      }

      return options && options.flat ? flat : obj.id === $.jstree.root ? tmp.children : tmp;
    },

    /**
     * create a new node (do not confuse with load_node)
     * @name create_node([par, node, pos, callback, is_loaded])
     * @param  {mixed}   par       the parent node (to create a root node use either "#" (string) or `null`)
     * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)
     * @param  {mixed}   pos       the index at which to insert the node, "first" and "last" are also supported, default is "last"
     * @param  {Function} callback a function to be called once the node is created
     * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded
     * @return {String}            the ID of the newly create node
     * @trigger model.jstree, create_node.jstree
     */
    create_node: function (par, node, pos, callback, is_loaded) {
      if (par === null) {
        par = $.jstree.root;
      }

      par = this.get_node(par);

      if (!par) {
        return false;
      }

      pos = pos === undefined ? "last" : pos;

      if (!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {
        return this.load_node(par, function () {
          this.create_node(par, node, pos, callback, true);
        });
      }

      if (!node) {
        node = {
          "text": this.get_string('New node')
        };
      }

      if (typeof node === "string") {
        node = {
          "text": node
        };
      } else {
        node = $.extend(true, {}, node);
      }

      if (node.text === undefined) {
        node.text = this.get_string('New node');
      }

      var tmp, dpc, i, j;

      if (par.id === $.jstree.root) {
        if (pos === "before") {
          pos = "first";
        }

        if (pos === "after") {
          pos = "last";
        }
      }

      switch (pos) {
        case "before":
          tmp = this.get_node(par.parent);
          pos = $.inArray(par.id, tmp.children);
          par = tmp;
          break;

        case "after":
          tmp = this.get_node(par.parent);
          pos = $.inArray(par.id, tmp.children) + 1;
          par = tmp;
          break;

        case "inside":
        case "first":
          pos = 0;
          break;

        case "last":
          pos = par.children.length;
          break;

        default:
          if (!pos) {
            pos = 0;
          }

          break;
      }

      if (pos > par.children.length) {
        pos = par.children.length;
      }

      if (!node.id) {
        node.id = true;
      }

      if (!this.check("create_node", node, par, pos)) {
        this.settings.core.error.call(this, this._data.core.last_error);
        return false;
      }

      if (node.id === true) {
        delete node.id;
      }

      node = this._parse_model_from_json(node, par.id, par.parents.concat());

      if (!node) {
        return false;
      }

      tmp = this.get_node(node);
      dpc = [];
      dpc.push(node);
      dpc = dpc.concat(tmp.children_d);
      this.trigger('model', {
        "nodes": dpc,
        "parent": par.id
      });
      par.children_d = par.children_d.concat(dpc);

      for (i = 0, j = par.parents.length; i < j; i++) {
        this._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);
      }

      node = tmp;
      tmp = [];

      for (i = 0, j = par.children.length; i < j; i++) {
        tmp[i >= pos ? i + 1 : i] = par.children[i];
      }

      tmp[pos] = node.id;
      par.children = tmp;
      this.redraw_node(par, true);
      /**
       * triggered when a node is created
       * @event
       * @name create_node.jstree
       * @param {Object} node
       * @param {String} parent the parent's ID
       * @param {Number} position the position of the new node among the parent's children
       */

      this.trigger('create_node', {
        "node": this.get_node(node),
        "parent": par.id,
        "position": pos
      });

      if (callback) {
        callback.call(this, this.get_node(node));
      }

      return node.id;
    },

    /**
     * set the text value of a node
     * @name rename_node(obj, val)
     * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name
     * @param  {String} val the new text value
     * @return {Boolean}
     * @trigger rename_node.jstree
     */
    rename_node: function (obj, val) {
      var t1, t2, old;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.rename_node(obj[t1], val);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      old = obj.text;

      if (!this.check("rename_node", obj, this.get_parent(obj), val)) {
        this.settings.core.error.call(this, this._data.core.last_error);
        return false;
      }

      this.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))

      /**
       * triggered when a node is renamed
       * @event
       * @name rename_node.jstree
       * @param {Object} node
       * @param {String} text the new value
       * @param {String} old the old value
       */

      this.trigger('rename_node', {
        "node": obj,
        "text": val,
        "old": old
      });
      return true;
    },

    /**
     * remove a node
     * @name delete_node(obj)
     * @param  {mixed} obj the node, you can pass an array to delete multiple nodes
     * @return {Boolean}
     * @trigger delete_node.jstree, changed.jstree
     */
    delete_node: function (obj) {
      var t1, t2, par, pos, tmp, i, j, k, l, c, top, lft;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.delete_node(obj[t1]);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      par = this.get_node(obj.parent);
      pos = $.inArray(obj.id, par.children);
      c = false;

      if (!this.check("delete_node", obj, par, pos)) {
        this.settings.core.error.call(this, this._data.core.last_error);
        return false;
      }

      if (pos !== -1) {
        par.children = $.vakata.array_remove(par.children, pos);
      }

      tmp = obj.children_d.concat([]);
      tmp.push(obj.id);

      for (i = 0, j = obj.parents.length; i < j; i++) {
        this._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {
          return $.inArray(v, tmp) === -1;
        });
      }

      for (k = 0, l = tmp.length; k < l; k++) {
        if (this._model.data[tmp[k]].state.selected) {
          c = true;
          break;
        }
      }

      if (c) {
        this._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {
          return $.inArray(v, tmp) === -1;
        });
      }
      /**
       * triggered when a node is deleted
       * @event
       * @name delete_node.jstree
       * @param {Object} node
       * @param {String} parent the parent's ID
       */


      this.trigger('delete_node', {
        "node": obj,
        "parent": par.id
      });

      if (c) {
        this.trigger('changed', {
          'action': 'delete_node',
          'node': obj,
          'selected': this._data.core.selected,
          'parent': par.id
        });
      }

      for (k = 0, l = tmp.length; k < l; k++) {
        delete this._model.data[tmp[k]];
      }

      if ($.inArray(this._data.core.focused, tmp) !== -1) {
        this._data.core.focused = null;
        top = this.element[0].scrollTop;
        lft = this.element[0].scrollLeft;

        if (par.id === $.jstree.root) {
          if (this._model.data[$.jstree.root].children[0]) {
            this.get_node(this._model.data[$.jstree.root].children[0], true).children('.jstree-anchor').focus();
          }
        } else {
          this.get_node(par, true).children('.jstree-anchor').focus();
        }

        this.element[0].scrollTop = top;
        this.element[0].scrollLeft = lft;
      }

      this.redraw_node(par, true);
      return true;
    },

    /**
     * check if an operation is premitted on the tree. Used internally.
     * @private
     * @name check(chk, obj, par, pos)
     * @param  {String} chk the operation to check, can be "create_node", "rename_node", "delete_node", "copy_node" or "move_node"
     * @param  {mixed} obj the node
     * @param  {mixed} par the parent
     * @param  {mixed} pos the position to insert at, or if "rename_node" - the new name
     * @param  {mixed} more some various additional information, for example if a "move_node" operations is triggered by DND this will be the hovered node
     * @return {Boolean}
     */
    check: function (chk, obj, par, pos, more) {
      obj = obj && obj.id ? obj : this.get_node(obj);
      par = par && par.id ? par : this.get_node(par);
      var tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,
          chc = this.settings.core.check_callback;

      if (chk === "move_node" || chk === "copy_node") {
        if ((!more || !more.is_multi) && chk === "move_node" && $.inArray(obj.id, par.children) === pos) {
          this._data.core.last_error = {
            'error': 'check',
            'plugin': 'core',
            'id': 'core_08',
            'reason': 'Moving node to its current position',
            'data': JSON.stringify({
              'chk': chk,
              'pos': pos,
              'obj': obj && obj.id ? obj.id : false,
              'par': par && par.id ? par.id : false
            })
          };
          return false;
        }

        if ((!more || !more.is_multi) && (obj.id === par.id || chk === "move_node" && $.inArray(obj.id, par.children) === pos || $.inArray(par.id, obj.children_d) !== -1)) {
          this._data.core.last_error = {
            'error': 'check',
            'plugin': 'core',
            'id': 'core_01',
            'reason': 'Moving parent inside child',
            'data': JSON.stringify({
              'chk': chk,
              'pos': pos,
              'obj': obj && obj.id ? obj.id : false,
              'par': par && par.id ? par.id : false
            })
          };
          return false;
        }
      }

      if (tmp && tmp.data) {
        tmp = tmp.data;
      }

      if (tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {
        if (tmp.functions[chk] === false) {
          this._data.core.last_error = {
            'error': 'check',
            'plugin': 'core',
            'id': 'core_02',
            'reason': 'Node data prevents function: ' + chk,
            'data': JSON.stringify({
              'chk': chk,
              'pos': pos,
              'obj': obj && obj.id ? obj.id : false,
              'par': par && par.id ? par.id : false
            })
          };
        }

        return tmp.functions[chk];
      }

      if (chc === false || $.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false || chc && chc[chk] === false) {
        this._data.core.last_error = {
          'error': 'check',
          'plugin': 'core',
          'id': 'core_03',
          'reason': 'User config for core.check_callback prevents function: ' + chk,
          'data': JSON.stringify({
            'chk': chk,
            'pos': pos,
            'obj': obj && obj.id ? obj.id : false,
            'par': par && par.id ? par.id : false
          })
        };
        return false;
      }

      return true;
    },

    /**
     * get the last error
     * @name last_error()
     * @return {Object}
     */
    last_error: function () {
      return this._data.core.last_error;
    },

    /**
     * move a node to a new parent
     * @name move_node(obj, par [, pos, callback, is_loaded])
     * @param  {mixed} obj the node to move, pass an array to move multiple nodes
     * @param  {mixed} par the new parent
     * @param  {mixed} pos the position to insert at (besides integer values, "first" and "last" are supported, as well as "before" and "after"), defaults to integer `0`
     * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position
     * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded
     * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn
     * @param  {Boolean} instance internal parameter indicating if the node comes from another instance
     * @trigger move_node.jstree
     */
    move_node: function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {
      var t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;
      par = this.get_node(par);
      pos = pos === undefined ? 0 : pos;

      if (!par) {
        return false;
      }

      if (!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {
        return this.load_node(par, function () {
          this.move_node(obj, par, pos, callback, true, false, origin);
        });
      }

      if ($.isArray(obj)) {
        if (obj.length === 1) {
          obj = obj[0];
        } else {
          //obj = obj.slice();
          for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
            if (tmp = this.move_node(obj[t1], par, pos, callback, is_loaded, false, origin)) {
              par = tmp;
              pos = "after";
            }
          }

          this.redraw();
          return true;
        }
      }

      obj = obj && obj.id ? obj : this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      old_par = (obj.parent || $.jstree.root).toString();
      new_par = !pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root ? par : this.get_node(par.parent);
      old_ins = origin ? origin : this._model.data[obj.id] ? this : $.jstree.reference(obj.id);
      is_multi = !old_ins || !old_ins._id || this._id !== old_ins._id;
      old_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;

      if (old_ins && old_ins._id) {
        obj = old_ins._model.data[obj.id];
      }

      if (is_multi) {
        if (tmp = this.copy_node(obj, par, pos, callback, is_loaded, false, origin)) {
          if (old_ins) {
            old_ins.delete_node(obj);
          }

          return tmp;
        }

        return false;
      } //var m = this._model.data;


      if (par.id === $.jstree.root) {
        if (pos === "before") {
          pos = "first";
        }

        if (pos === "after") {
          pos = "last";
        }
      }

      switch (pos) {
        case "before":
          pos = $.inArray(par.id, new_par.children);
          break;

        case "after":
          pos = $.inArray(par.id, new_par.children) + 1;
          break;

        case "inside":
        case "first":
          pos = 0;
          break;

        case "last":
          pos = new_par.children.length;
          break;

        default:
          if (!pos) {
            pos = 0;
          }

          break;
      }

      if (pos > new_par.children.length) {
        pos = new_par.children.length;
      }

      if (!this.check("move_node", obj, new_par, pos, {
        'core': true,
        'origin': origin,
        'is_multi': old_ins && old_ins._id && old_ins._id !== this._id,
        'is_foreign': !old_ins || !old_ins._id
      })) {
        this.settings.core.error.call(this, this._data.core.last_error);
        return false;
      }

      if (obj.parent === new_par.id) {
        dpc = new_par.children.concat();
        tmp = $.inArray(obj.id, dpc);

        if (tmp !== -1) {
          dpc = $.vakata.array_remove(dpc, tmp);

          if (pos > tmp) {
            pos--;
          }
        }

        tmp = [];

        for (i = 0, j = dpc.length; i < j; i++) {
          tmp[i >= pos ? i + 1 : i] = dpc[i];
        }

        tmp[pos] = obj.id;
        new_par.children = tmp;

        this._node_changed(new_par.id);

        this.redraw(new_par.id === $.jstree.root);
      } else {
        // clean old parent and up
        tmp = obj.children_d.concat();
        tmp.push(obj.id);

        for (i = 0, j = obj.parents.length; i < j; i++) {
          dpc = [];
          p = old_ins._model.data[obj.parents[i]].children_d;

          for (k = 0, l = p.length; k < l; k++) {
            if ($.inArray(p[k], tmp) === -1) {
              dpc.push(p[k]);
            }
          }

          old_ins._model.data[obj.parents[i]].children_d = dpc;
        }

        old_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id); // insert into new parent and up

        for (i = 0, j = new_par.parents.length; i < j; i++) {
          this._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);
        }

        dpc = [];

        for (i = 0, j = new_par.children.length; i < j; i++) {
          dpc[i >= pos ? i + 1 : i] = new_par.children[i];
        }

        dpc[pos] = obj.id;
        new_par.children = dpc;
        new_par.children_d.push(obj.id);
        new_par.children_d = new_par.children_d.concat(obj.children_d); // update object

        obj.parent = new_par.id;
        tmp = new_par.parents.concat();
        tmp.unshift(new_par.id);
        p = obj.parents.length;
        obj.parents = tmp; // update object children

        tmp = tmp.concat();

        for (i = 0, j = obj.children_d.length; i < j; i++) {
          this._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0, p * -1);
          Array.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);
        }

        if (old_par === $.jstree.root || new_par.id === $.jstree.root) {
          this._model.force_full_redraw = true;
        }

        if (!this._model.force_full_redraw) {
          this._node_changed(old_par);

          this._node_changed(new_par.id);
        }

        if (!skip_redraw) {
          this.redraw();
        }
      }

      if (callback) {
        callback.call(this, obj, new_par, pos);
      }
      /**
       * triggered when a node is moved
       * @event
       * @name move_node.jstree
       * @param {Object} node
       * @param {String} parent the parent's ID
       * @param {Number} position the position of the node among the parent's children
       * @param {String} old_parent the old parent of the node
       * @param {Number} old_position the old position of the node
       * @param {Boolean} is_multi do the node and new parent belong to different instances
       * @param {jsTree} old_instance the instance the node came from
       * @param {jsTree} new_instance the instance of the new parent
       */


      this.trigger('move_node', {
        "node": obj,
        "parent": new_par.id,
        "position": pos,
        "old_parent": old_par,
        "old_position": old_pos,
        'is_multi': old_ins && old_ins._id && old_ins._id !== this._id,
        'is_foreign': !old_ins || !old_ins._id,
        'old_instance': old_ins,
        'new_instance': this
      });
      return obj.id;
    },

    /**
     * copy a node to a new parent
     * @name copy_node(obj, par [, pos, callback, is_loaded])
     * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes
     * @param  {mixed} par the new parent
     * @param  {mixed} pos the position to insert at (besides integer values, "first" and "last" are supported, as well as "before" and "after"), defaults to integer `0`
     * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position
     * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded
     * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn
     * @param  {Boolean} instance internal parameter indicating if the node comes from another instance
     * @trigger model.jstree copy_node.jstree
     */
    copy_node: function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {
      var t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;
      par = this.get_node(par);
      pos = pos === undefined ? 0 : pos;

      if (!par) {
        return false;
      }

      if (!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {
        return this.load_node(par, function () {
          this.copy_node(obj, par, pos, callback, true, false, origin);
        });
      }

      if ($.isArray(obj)) {
        if (obj.length === 1) {
          obj = obj[0];
        } else {
          //obj = obj.slice();
          for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
            if (tmp = this.copy_node(obj[t1], par, pos, callback, is_loaded, true, origin)) {
              par = tmp;
              pos = "after";
            }
          }

          this.redraw();
          return true;
        }
      }

      obj = obj && obj.id ? obj : this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      old_par = (obj.parent || $.jstree.root).toString();
      new_par = !pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root ? par : this.get_node(par.parent);
      old_ins = origin ? origin : this._model.data[obj.id] ? this : $.jstree.reference(obj.id);
      is_multi = !old_ins || !old_ins._id || this._id !== old_ins._id;

      if (old_ins && old_ins._id) {
        obj = old_ins._model.data[obj.id];
      }

      if (par.id === $.jstree.root) {
        if (pos === "before") {
          pos = "first";
        }

        if (pos === "after") {
          pos = "last";
        }
      }

      switch (pos) {
        case "before":
          pos = $.inArray(par.id, new_par.children);
          break;

        case "after":
          pos = $.inArray(par.id, new_par.children) + 1;
          break;

        case "inside":
        case "first":
          pos = 0;
          break;

        case "last":
          pos = new_par.children.length;
          break;

        default:
          if (!pos) {
            pos = 0;
          }

          break;
      }

      if (pos > new_par.children.length) {
        pos = new_par.children.length;
      }

      if (!this.check("copy_node", obj, new_par, pos, {
        'core': true,
        'origin': origin,
        'is_multi': old_ins && old_ins._id && old_ins._id !== this._id,
        'is_foreign': !old_ins || !old_ins._id
      })) {
        this.settings.core.error.call(this, this._data.core.last_error);
        return false;
      }

      node = old_ins ? old_ins.get_json(obj, {
        no_id: true,
        no_data: true,
        no_state: true
      }) : obj;

      if (!node) {
        return false;
      }

      if (node.id === true) {
        delete node.id;
      }

      node = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());

      if (!node) {
        return false;
      }

      tmp = this.get_node(node);

      if (obj && obj.state && obj.state.loaded === false) {
        tmp.state.loaded = false;
      }

      dpc = [];
      dpc.push(node);
      dpc = dpc.concat(tmp.children_d);
      this.trigger('model', {
        "nodes": dpc,
        "parent": new_par.id
      }); // insert into new parent and up

      for (i = 0, j = new_par.parents.length; i < j; i++) {
        this._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);
      }

      dpc = [];

      for (i = 0, j = new_par.children.length; i < j; i++) {
        dpc[i >= pos ? i + 1 : i] = new_par.children[i];
      }

      dpc[pos] = tmp.id;
      new_par.children = dpc;
      new_par.children_d.push(tmp.id);
      new_par.children_d = new_par.children_d.concat(tmp.children_d);

      if (new_par.id === $.jstree.root) {
        this._model.force_full_redraw = true;
      }

      if (!this._model.force_full_redraw) {
        this._node_changed(new_par.id);
      }

      if (!skip_redraw) {
        this.redraw(new_par.id === $.jstree.root);
      }

      if (callback) {
        callback.call(this, tmp, new_par, pos);
      }
      /**
       * triggered when a node is copied
       * @event
       * @name copy_node.jstree
       * @param {Object} node the copied node
       * @param {Object} original the original node
       * @param {String} parent the parent's ID
       * @param {Number} position the position of the node among the parent's children
       * @param {String} old_parent the old parent of the node
       * @param {Number} old_position the position of the original node
       * @param {Boolean} is_multi do the node and new parent belong to different instances
       * @param {jsTree} old_instance the instance the node came from
       * @param {jsTree} new_instance the instance of the new parent
       */


      this.trigger('copy_node', {
        "node": tmp,
        "original": obj,
        "parent": new_par.id,
        "position": pos,
        "old_parent": old_par,
        "old_position": old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,
        'is_multi': old_ins && old_ins._id && old_ins._id !== this._id,
        'is_foreign': !old_ins || !old_ins._id,
        'old_instance': old_ins,
        'new_instance': this
      });
      return tmp.id;
    },

    /**
     * cut a node (a later call to `paste(obj)` would move the node)
     * @name cut(obj)
     * @param  {mixed} obj multiple objects can be passed using an array
     * @trigger cut.jstree
     */
    cut: function (obj) {
      if (!obj) {
        obj = this._data.core.selected.concat();
      }

      if (!$.isArray(obj)) {
        obj = [obj];
      }

      if (!obj.length) {
        return false;
      }

      var tmp = [],
          o,
          t1,
          t2;

      for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
        o = this.get_node(obj[t1]);

        if (o && o.id && o.id !== $.jstree.root) {
          tmp.push(o);
        }
      }

      if (!tmp.length) {
        return false;
      }

      ccp_node = tmp;
      ccp_inst = this;
      ccp_mode = 'move_node';
      /**
       * triggered when nodes are added to the buffer for moving
       * @event
       * @name cut.jstree
       * @param {Array} node
       */

      this.trigger('cut', {
        "node": obj
      });
    },

    /**
     * copy a node (a later call to `paste(obj)` would copy the node)
     * @name copy(obj)
     * @param  {mixed} obj multiple objects can be passed using an array
     * @trigger copy.jstree
     */
    copy: function (obj) {
      if (!obj) {
        obj = this._data.core.selected.concat();
      }

      if (!$.isArray(obj)) {
        obj = [obj];
      }

      if (!obj.length) {
        return false;
      }

      var tmp = [],
          o,
          t1,
          t2;

      for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
        o = this.get_node(obj[t1]);

        if (o && o.id && o.id !== $.jstree.root) {
          tmp.push(o);
        }
      }

      if (!tmp.length) {
        return false;
      }

      ccp_node = tmp;
      ccp_inst = this;
      ccp_mode = 'copy_node';
      /**
       * triggered when nodes are added to the buffer for copying
       * @event
       * @name copy.jstree
       * @param {Array} node
       */

      this.trigger('copy', {
        "node": obj
      });
    },

    /**
     * get the current buffer (any nodes that are waiting for a paste operation)
     * @name get_buffer()
     * @return {Object} an object consisting of `mode` ("copy_node" or "move_node"), `node` (an array of objects) and `inst` (the instance)
     */
    get_buffer: function () {
      return {
        'mode': ccp_mode,
        'node': ccp_node,
        'inst': ccp_inst
      };
    },

    /**
     * check if there is something in the buffer to paste
     * @name can_paste()
     * @return {Boolean}
     */
    can_paste: function () {
      return ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];
    },

    /**
     * copy or move the previously cut or copied nodes to a new parent
     * @name paste(obj [, pos])
     * @param  {mixed} obj the new parent
     * @param  {mixed} pos the position to insert at (besides integer, "first" and "last" are supported), defaults to integer `0`
     * @trigger paste.jstree
     */
    paste: function (obj, pos) {
      obj = this.get_node(obj);

      if (!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) {
        return false;
      }

      if (this[ccp_mode](ccp_node, obj, pos, false, false, false, ccp_inst)) {
        /**
         * triggered when paste is invoked
         * @event
         * @name paste.jstree
         * @param {String} parent the ID of the receiving node
         * @param {Array} node the nodes in the buffer
         * @param {String} mode the performed operation - "copy_node" or "move_node"
         */
        this.trigger('paste', {
          "parent": obj.id,
          "node": ccp_node,
          "mode": ccp_mode
        });
      }

      ccp_node = false;
      ccp_mode = false;
      ccp_inst = false;
    },

    /**
     * clear the buffer of previously copied or cut nodes
     * @name clear_buffer()
     * @trigger clear_buffer.jstree
     */
    clear_buffer: function () {
      ccp_node = false;
      ccp_mode = false;
      ccp_inst = false;
      /**
       * triggered when the copy / cut buffer is cleared
       * @event
       * @name clear_buffer.jstree
       */

      this.trigger('clear_buffer');
    },

    /**
     * put a node in edit mode (input field to rename the node)
     * @name edit(obj [, default_text, callback])
     * @param  {mixed} obj
     * @param  {String} default_text the text to populate the input with (if omitted or set to a non-string value the node's text value is used)
     * @param  {Function} callback a function to be called once the text box is blurred, it is called in the instance's scope and receives the node, a status parameter (true if the rename is successful, false otherwise), a boolean indicating if the user cancelled the edit and the original unescaped value provided by the user. You can also access the node's title using .text
     */
    edit: function (obj, default_text, callback) {
      var rtl,
          w,
          a,
          s,
          t,
          h1,
          h2,
          fn,
          tmp,
          cancel = false;
      obj = this.get_node(obj);

      if (!obj) {
        return false;
      }

      if (!this.check("edit", obj, this.get_parent(obj))) {
        this.settings.core.error.call(this, this._data.core.last_error);
        return false;
      }

      tmp = obj;
      default_text = typeof default_text === 'string' ? default_text : obj.text;
      this.set_text(obj, "");
      obj = this._open_to(obj);
      tmp.text = default_text;
      rtl = this._data.core.rtl;
      w = this.element.width();
      this._data.core.focused = tmp.id;
      a = obj.children('.jstree-anchor').focus();
      s = $('<span></span>');
      /*!
      oi = obj.children("i:visible"),
      ai = a.children("i:visible"),
      w1 = oi.width() * oi.length,
      w2 = ai.width() * ai.length,
      */

      t = default_text;
      h1 = $("<" + "div></div>", {
        css: {
          "position": "absolute",
          "top": "-200px",
          "left": rtl ? "0px" : "-1000px",
          "visibility": "hidden"
        }
      }).appendTo(document.body);
      h2 = $("<" + "input />", {
        "value": t,
        "class": "jstree-rename-input",
        // "size" : t.length,
        "css": {
          "padding": "0",
          "border": "1px solid silver",
          "box-sizing": "border-box",
          "display": "inline-block",
          "height": this._data.core.li_height + "px",
          "lineHeight": this._data.core.li_height + "px",
          "width": "150px" // will be set a bit further down

        },
        "blur": $.proxy(function (e) {
          e.stopImmediatePropagation();
          e.preventDefault();
          var i = s.children(".jstree-rename-input"),
              v = i.val(),
              f = this.settings.core.force_text,
              nv;

          if (v === "") {
            v = t;
          }

          h1.remove();
          s.replaceWith(a);
          s.remove();
          t = f ? t : $('<div></div>').append($.parseHTML(t)).html();
          obj = this.get_node(obj);
          this.set_text(obj, t);
          nv = !!this.rename_node(obj, f ? $('<div></div>').text(v).text() : $('<div></div>').append($.parseHTML(v)).html());

          if (!nv) {
            this.set_text(obj, t); // move this up? and fix #483
          }

          this._data.core.focused = tmp.id;
          setTimeout($.proxy(function () {
            var node = this.get_node(tmp.id, true);

            if (node.length) {
              this._data.core.focused = tmp.id;
              node.children('.jstree-anchor').focus();
            }
          }, this), 0);

          if (callback) {
            callback.call(this, tmp, nv, cancel, v);
          }

          h2 = null;
        }, this),
        "keydown": function (e) {
          var key = e.which;

          if (key === 27) {
            cancel = true;
            this.value = t;
          }

          if (key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {
            e.stopImmediatePropagation();
          }

          if (key === 27 || key === 13) {
            e.preventDefault();
            this.blur();
          }
        },
        "click": function (e) {
          e.stopImmediatePropagation();
        },
        "mousedown": function (e) {
          e.stopImmediatePropagation();
        },
        "keyup": function (e) {
          h2.width(Math.min(h1.text("pW" + this.value).width(), w));
        },
        "keypress": function (e) {
          if (e.which === 13) {
            return false;
          }
        }
      });
      fn = {
        fontFamily: a.css('fontFamily') || '',
        fontSize: a.css('fontSize') || '',
        fontWeight: a.css('fontWeight') || '',
        fontStyle: a.css('fontStyle') || '',
        fontStretch: a.css('fontStretch') || '',
        fontVariant: a.css('fontVariant') || '',
        letterSpacing: a.css('letterSpacing') || '',
        wordSpacing: a.css('wordSpacing') || ''
      };
      s.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);
      a.replaceWith(s);
      h1.css(fn);
      h2.css(fn).width(Math.min(h1.text("pW" + h2[0].value).width(), w))[0].select();
      $(document).one('mousedown.jstree touchstart.jstree dnd_start.vakata', function (e) {
        if (h2 && e.target !== h2) {
          $(h2).blur();
        }
      });
    },

    /**
     * changes the theme
     * @name set_theme(theme_name [, theme_url])
     * @param {String} theme_name the name of the new theme to apply
     * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.
     * @trigger set_theme.jstree
     */
    set_theme: function (theme_name, theme_url) {
      if (!theme_name) {
        return false;
      }

      if (theme_url === true) {
        var dir = this.settings.core.themes.dir;

        if (!dir) {
          dir = $.jstree.path + '/themes';
        }

        theme_url = dir + '/' + theme_name + '/style.css';
      }

      if (theme_url && $.inArray(theme_url, themes_loaded) === -1) {
        $('head').append('<' + 'link rel="stylesheet" href="' + theme_url + '" type="text/css" />');
        themes_loaded.push(theme_url);
      }

      if (this._data.core.themes.name) {
        this.element.removeClass('jstree-' + this._data.core.themes.name);
      }

      this._data.core.themes.name = theme_name;
      this.element.addClass('jstree-' + theme_name);
      this.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass']('jstree-' + theme_name + '-responsive');
      /**
       * triggered when a theme is set
       * @event
       * @name set_theme.jstree
       * @param {String} theme the new theme
       */

      this.trigger('set_theme', {
        'theme': theme_name
      });
    },

    /**
     * gets the name of the currently applied theme name
     * @name get_theme()
     * @return {String}
     */
    get_theme: function () {
      return this._data.core.themes.name;
    },

    /**
     * changes the theme variant (if the theme has variants)
     * @name set_theme_variant(variant_name)
     * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)
     */
    set_theme_variant: function (variant_name) {
      if (this._data.core.themes.variant) {
        this.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);
      }

      this._data.core.themes.variant = variant_name;

      if (variant_name) {
        this.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);
      }
    },

    /**
     * gets the name of the currently applied theme variant
     * @name get_theme()
     * @return {String}
     */
    get_theme_variant: function () {
      return this._data.core.themes.variant;
    },

    /**
     * shows a striped background on the container (if the theme supports it)
     * @name show_stripes()
     */
    show_stripes: function () {
      this._data.core.themes.stripes = true;
      this.get_container_ul().addClass("jstree-striped");
      /**
       * triggered when stripes are shown
       * @event
       * @name show_stripes.jstree
       */

      this.trigger('show_stripes');
    },

    /**
     * hides the striped background on the container
     * @name hide_stripes()
     */
    hide_stripes: function () {
      this._data.core.themes.stripes = false;
      this.get_container_ul().removeClass("jstree-striped");
      /**
       * triggered when stripes are hidden
       * @event
       * @name hide_stripes.jstree
       */

      this.trigger('hide_stripes');
    },

    /**
     * toggles the striped background on the container
     * @name toggle_stripes()
     */
    toggle_stripes: function () {
      if (this._data.core.themes.stripes) {
        this.hide_stripes();
      } else {
        this.show_stripes();
      }
    },

    /**
     * shows the connecting dots (if the theme supports it)
     * @name show_dots()
     */
    show_dots: function () {
      this._data.core.themes.dots = true;
      this.get_container_ul().removeClass("jstree-no-dots");
      /**
       * triggered when dots are shown
       * @event
       * @name show_dots.jstree
       */

      this.trigger('show_dots');
    },

    /**
     * hides the connecting dots
     * @name hide_dots()
     */
    hide_dots: function () {
      this._data.core.themes.dots = false;
      this.get_container_ul().addClass("jstree-no-dots");
      /**
       * triggered when dots are hidden
       * @event
       * @name hide_dots.jstree
       */

      this.trigger('hide_dots');
    },

    /**
     * toggles the connecting dots
     * @name toggle_dots()
     */
    toggle_dots: function () {
      if (this._data.core.themes.dots) {
        this.hide_dots();
      } else {
        this.show_dots();
      }
    },

    /**
     * show the node icons
     * @name show_icons()
     */
    show_icons: function () {
      this._data.core.themes.icons = true;
      this.get_container_ul().removeClass("jstree-no-icons");
      /**
       * triggered when icons are shown
       * @event
       * @name show_icons.jstree
       */

      this.trigger('show_icons');
    },

    /**
     * hide the node icons
     * @name hide_icons()
     */
    hide_icons: function () {
      this._data.core.themes.icons = false;
      this.get_container_ul().addClass("jstree-no-icons");
      /**
       * triggered when icons are hidden
       * @event
       * @name hide_icons.jstree
       */

      this.trigger('hide_icons');
    },

    /**
     * toggle the node icons
     * @name toggle_icons()
     */
    toggle_icons: function () {
      if (this._data.core.themes.icons) {
        this.hide_icons();
      } else {
        this.show_icons();
      }
    },

    /**
     * show the node ellipsis
     * @name show_icons()
     */
    show_ellipsis: function () {
      this._data.core.themes.ellipsis = true;
      this.get_container_ul().addClass("jstree-ellipsis");
      /**
       * triggered when ellisis is shown
       * @event
       * @name show_ellipsis.jstree
       */

      this.trigger('show_ellipsis');
    },

    /**
     * hide the node ellipsis
     * @name hide_ellipsis()
     */
    hide_ellipsis: function () {
      this._data.core.themes.ellipsis = false;
      this.get_container_ul().removeClass("jstree-ellipsis");
      /**
       * triggered when ellisis is hidden
       * @event
       * @name hide_ellipsis.jstree
       */

      this.trigger('hide_ellipsis');
    },

    /**
     * toggle the node ellipsis
     * @name toggle_icons()
     */
    toggle_ellipsis: function () {
      if (this._data.core.themes.ellipsis) {
        this.hide_ellipsis();
      } else {
        this.show_ellipsis();
      }
    },

    /**
     * set the node icon for a node
     * @name set_icon(obj, icon)
     * @param {mixed} obj
     * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class
     */
    set_icon: function (obj, icon) {
      var t1, t2, dom, old;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.set_icon(obj[t1], icon);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      old = obj.icon;
      obj.icon = icon === true || icon === null || icon === undefined || icon === '' ? true : icon;
      dom = this.get_node(obj, true).children(".jstree-anchor").children(".jstree-themeicon");

      if (icon === false) {
        dom.removeClass('jstree-themeicon-custom ' + old).css("background", "").removeAttr("rel");
        this.hide_icon(obj);
      } else if (icon === true || icon === null || icon === undefined || icon === '') {
        dom.removeClass('jstree-themeicon-custom ' + old).css("background", "").removeAttr("rel");

        if (old === false) {
          this.show_icon(obj);
        }
      } else if (icon.indexOf("/") === -1 && icon.indexOf(".") === -1) {
        dom.removeClass(old).css("background", "");
        dom.addClass(icon + ' jstree-themeicon-custom').attr("rel", icon);

        if (old === false) {
          this.show_icon(obj);
        }
      } else {
        dom.removeClass(old).css("background", "");
        dom.addClass('jstree-themeicon-custom').css("background", "url('" + icon + "') center center no-repeat").attr("rel", icon);

        if (old === false) {
          this.show_icon(obj);
        }
      }

      return true;
    },

    /**
     * get the node icon for a node
     * @name get_icon(obj)
     * @param {mixed} obj
     * @return {String}
     */
    get_icon: function (obj) {
      obj = this.get_node(obj);
      return !obj || obj.id === $.jstree.root ? false : obj.icon;
    },

    /**
     * hide the icon on an individual node
     * @name hide_icon(obj)
     * @param {mixed} obj
     */
    hide_icon: function (obj) {
      var t1, t2;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.hide_icon(obj[t1]);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj === $.jstree.root) {
        return false;
      }

      obj.icon = false;
      this.get_node(obj, true).children(".jstree-anchor").children(".jstree-themeicon").addClass('jstree-themeicon-hidden');
      return true;
    },

    /**
     * show the icon on an individual node
     * @name show_icon(obj)
     * @param {mixed} obj
     */
    show_icon: function (obj) {
      var t1, t2, dom;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.show_icon(obj[t1]);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj === $.jstree.root) {
        return false;
      }

      dom = this.get_node(obj, true);
      obj.icon = dom.length ? dom.children(".jstree-anchor").children(".jstree-themeicon").attr('rel') : true;

      if (!obj.icon) {
        obj.icon = true;
      }

      dom.children(".jstree-anchor").children(".jstree-themeicon").removeClass('jstree-themeicon-hidden');
      return true;
    }
  }; // helpers

  $.vakata = {}; // collect attributes

  $.vakata.attributes = function (node, with_values) {
    node = $(node)[0];
    var attr = with_values ? {} : [];

    if (node && node.attributes) {
      $.each(node.attributes, function (i, v) {
        if ($.inArray(v.name.toLowerCase(), ['style', 'contenteditable', 'hasfocus', 'tabindex']) !== -1) {
          return;
        }

        if (v.value !== null && $.vakata.trim(v.value) !== '') {
          if (with_values) {
            attr[v.name] = v.value;
          } else {
            attr.push(v.name);
          }
        }
      });
    }

    return attr;
  };

  $.vakata.array_unique = function (array) {
    var a = [],
        i,
        j,
        l,
        o = {};

    for (i = 0, l = array.length; i < l; i++) {
      if (o[array[i]] === undefined) {
        a.push(array[i]);
        o[array[i]] = true;
      }
    }

    return a;
  }; // remove item from array


  $.vakata.array_remove = function (array, from) {
    array.splice(from, 1);
    return array; //var rest = array.slice((to || from) + 1 || array.length);
    //array.length = from < 0 ? array.length + from : from;
    //array.push.apply(array, rest);
    //return array;
  }; // remove item from array


  $.vakata.array_remove_item = function (array, item) {
    var tmp = $.inArray(item, array);
    return tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;
  };

  $.vakata.array_filter = function (c, a, b, d, e) {
    if (c.filter) {
      return c.filter(a, b);
    }

    d = [];

    for (e in c) {
      if (~~e + '' === e + '' && e >= 0 && a.call(b, c[e], +e, c)) {
        d.push(c[e]);
      }
    }

    return d;
  };

  $.vakata.trim = function (text) {
    return String.prototype.trim ? String.prototype.trim.call(text.toString()) : text.toString().replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
  };
  /**
   * ### Changed plugin
   *
   * This plugin adds more information to the `changed.jstree` event. The new data is contained in the `changed` event data property, and contains a lists of `selected` and `deselected` nodes.
   */


  $.jstree.plugins.changed = function (options, parent) {
    var last = [];

    this.trigger = function (ev, data) {
      var i, j;

      if (!data) {
        data = {};
      }

      if (ev.replace('.jstree', '') === 'changed') {
        data.changed = {
          selected: [],
          deselected: []
        };
        var tmp = {};

        for (i = 0, j = last.length; i < j; i++) {
          tmp[last[i]] = 1;
        }

        for (i = 0, j = data.selected.length; i < j; i++) {
          if (!tmp[data.selected[i]]) {
            data.changed.selected.push(data.selected[i]);
          } else {
            tmp[data.selected[i]] = 2;
          }
        }

        for (i = 0, j = last.length; i < j; i++) {
          if (tmp[last[i]] === 1) {
            data.changed.deselected.push(last[i]);
          }
        }

        last = data.selected.slice();
      }
      /**
       * triggered when selection changes (the "changed" plugin enhances the original event with more data)
       * @event
       * @name changed.jstree
       * @param {Object} node
       * @param {Object} action the action that caused the selection to change
       * @param {Array} selected the current selection
       * @param {Object} changed an object containing two properties `selected` and `deselected` - both arrays of node IDs, which were selected or deselected since the last changed event
       * @param {Object} event the event (if any) that triggered this changed event
       * @plugin changed
       */


      parent.trigger.call(this, ev, data);
    };

    this.refresh = function (skip_loading, forget_state) {
      last = [];
      return parent.refresh.apply(this, arguments);
    };
  };
  /**
   * ### Checkbox plugin
   *
   * This plugin renders checkbox icons in front of each node, making multiple selection much easier.
   * It also supports tri-state behavior, meaning that if a node has a few of its children checked it will be rendered as undetermined, and state will be propagated up.
   */


  var _i = document.createElement('I');

  _i.className = 'jstree-icon jstree-checkbox';

  _i.setAttribute('role', 'presentation');
  /**
   * stores all defaults for the checkbox plugin
   * @name $.jstree.defaults.checkbox
   * @plugin checkbox
   */


  $.jstree.defaults.checkbox = {
    /**
     * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.
     * @name $.jstree.defaults.checkbox.visible
     * @plugin checkbox
     */
    visible: true,

    /**
     * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.
     * @name $.jstree.defaults.checkbox.three_state
     * @plugin checkbox
     */
    three_state: true,

    /**
     * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.
     * @name $.jstree.defaults.checkbox.whole_node
     * @plugin checkbox
     */
    whole_node: true,

    /**
     * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.
     * @name $.jstree.defaults.checkbox.keep_selected_style
     * @plugin checkbox
     */
    keep_selected_style: true,

    /**
     * This setting controls how cascading and undetermined nodes are applied.
     * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used.
     * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.
     * @name $.jstree.defaults.checkbox.cascade
     * @plugin checkbox
     */
    cascade: '',

    /**
     * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing.
     * @name $.jstree.defaults.checkbox.tie_selection
     * @plugin checkbox
     */
    tie_selection: true,

    /**
     * This setting controls if cascading down affects disabled checkboxes
     * @name $.jstree.defaults.checkbox.cascade_to_disabled
     * @plugin checkbox
     */
    cascade_to_disabled: true,

    /**
     * This setting controls if cascading down affects hidden checkboxes
     * @name $.jstree.defaults.checkbox.cascade_to_hidden
     * @plugin checkbox
     */
    cascade_to_hidden: true
  };

  $.jstree.plugins.checkbox = function (options, parent) {
    this.bind = function () {
      parent.bind.call(this);
      this._data.checkbox.uto = false;
      this._data.checkbox.selected = [];

      if (this.settings.checkbox.three_state) {
        this.settings.checkbox.cascade = 'up+down+undetermined';
      }

      this.element.on("init.jstree", $.proxy(function () {
        this._data.checkbox.visible = this.settings.checkbox.visible;

        if (!this.settings.checkbox.keep_selected_style) {
          this.element.addClass('jstree-checkbox-no-clicked');
        }

        if (this.settings.checkbox.tie_selection) {
          this.element.addClass('jstree-checkbox-selection');
        }
      }, this)).on("loading.jstree", $.proxy(function () {
        this[this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes']();
      }, this));

      if (this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {
        this.element.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {
          // only if undetermined is in setting
          if (this._data.checkbox.uto) {
            clearTimeout(this._data.checkbox.uto);
          }

          this._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);
        }, this));
      }

      if (!this.settings.checkbox.tie_selection) {
        this.element.on('model.jstree', $.proxy(function (e, data) {
          var m = this._model.data,
              p = m[data.parent],
              dpc = data.nodes,
              i,
              j;

          for (i = 0, j = dpc.length; i < j; i++) {
            m[dpc[i]].state.checked = m[dpc[i]].state.checked || m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked;

            if (m[dpc[i]].state.checked) {
              this._data.checkbox.selected.push(dpc[i]);
            }
          }
        }, this));
      }

      if (this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {
        this.element.on('model.jstree', $.proxy(function (e, data) {
          var m = this._model.data,
              p = m[data.parent],
              dpc = data.nodes,
              chd = [],
              c,
              i,
              j,
              k,
              l,
              tmp,
              s = this.settings.checkbox.cascade,
              t = this.settings.checkbox.tie_selection;

          if (s.indexOf('down') !== -1) {
            // apply down
            if (p.state[t ? 'selected' : 'checked']) {
              for (i = 0, j = dpc.length; i < j; i++) {
                m[dpc[i]].state[t ? 'selected' : 'checked'] = true;
              }

              this._data[t ? 'core' : 'checkbox'].selected = this._data[t ? 'core' : 'checkbox'].selected.concat(dpc);
            } else {
              for (i = 0, j = dpc.length; i < j; i++) {
                if (m[dpc[i]].state[t ? 'selected' : 'checked']) {
                  for (k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {
                    m[m[dpc[i]].children_d[k]].state[t ? 'selected' : 'checked'] = true;
                  }

                  this._data[t ? 'core' : 'checkbox'].selected = this._data[t ? 'core' : 'checkbox'].selected.concat(m[dpc[i]].children_d);
                }
              }
            }
          }

          if (s.indexOf('up') !== -1) {
            // apply up
            for (i = 0, j = p.children_d.length; i < j; i++) {
              if (!m[p.children_d[i]].children.length) {
                chd.push(m[p.children_d[i]].parent);
              }
            }

            chd = $.vakata.array_unique(chd);

            for (k = 0, l = chd.length; k < l; k++) {
              p = m[chd[k]];

              while (p && p.id !== $.jstree.root) {
                c = 0;

                for (i = 0, j = p.children.length; i < j; i++) {
                  c += m[p.children[i]].state[t ? 'selected' : 'checked'];
                }

                if (c === j) {
                  p.state[t ? 'selected' : 'checked'] = true;

                  this._data[t ? 'core' : 'checkbox'].selected.push(p.id);

                  tmp = this.get_node(p, true);

                  if (tmp && tmp.length) {
                    tmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');
                  }
                } else {
                  break;
                }

                p = this.get_node(p.parent);
              }
            }
          }

          this._data[t ? 'core' : 'checkbox'].selected = $.vakata.array_unique(this._data[t ? 'core' : 'checkbox'].selected);
        }, this)).on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {
          var self = this,
              obj = data.node,
              m = this._model.data,
              par = this.get_node(obj.parent),
              i,
              j,
              c,
              tmp,
              s = this.settings.checkbox.cascade,
              t = this.settings.checkbox.tie_selection,
              sel = {},
              cur = this._data[t ? 'core' : 'checkbox'].selected;

          for (i = 0, j = cur.length; i < j; i++) {
            sel[cur[i]] = true;
          } // apply down


          if (s.indexOf('down') !== -1) {
            //this._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));
            var selectedIds = this._cascade_new_checked_state(obj.id, true);

            var temp = obj.children_d.concat(obj.id);

            for (i = 0, j = temp.length; i < j; i++) {
              if (selectedIds.indexOf(temp[i]) > -1) {
                sel[temp[i]] = true;
              } else {
                delete sel[temp[i]];
              }
            }
          } // apply up


          if (s.indexOf('up') !== -1) {
            while (par && par.id !== $.jstree.root) {
              c = 0;

              for (i = 0, j = par.children.length; i < j; i++) {
                c += m[par.children[i]].state[t ? 'selected' : 'checked'];
              }

              if (c === j) {
                par.state[t ? 'selected' : 'checked'] = true;
                sel[par.id] = true; //this._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);

                tmp = this.get_node(par, true);

                if (tmp && tmp.length) {
                  tmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');
                }
              } else {
                break;
              }

              par = this.get_node(par.parent);
            }
          }

          cur = [];

          for (i in sel) {
            if (sel.hasOwnProperty(i)) {
              cur.push(i);
            }
          }

          this._data[t ? 'core' : 'checkbox'].selected = cur;
        }, this)).on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {
          var obj = this.get_node($.jstree.root),
              m = this._model.data,
              i,
              j,
              tmp;

          for (i = 0, j = obj.children_d.length; i < j; i++) {
            tmp = m[obj.children_d[i]];

            if (tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {
              tmp.original.state.undetermined = false;
            }
          }
        }, this)).on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {
          var self = this,
              obj = data.node,
              dom = this.get_node(obj, true),
              i,
              j,
              tmp,
              s = this.settings.checkbox.cascade,
              t = this.settings.checkbox.tie_selection,
              cur = this._data[t ? 'core' : 'checkbox'].selected,
              sel = {},
              stillSelectedIds = [],
              allIds = obj.children_d.concat(obj.id); // apply down

          if (s.indexOf('down') !== -1) {
            var selectedIds = this._cascade_new_checked_state(obj.id, false);

            cur = $.vakata.array_filter(cur, function (id) {
              return allIds.indexOf(id) === -1 || selectedIds.indexOf(id) > -1;
            });
          } // only apply up if cascade up is enabled and if this node is not selected
          // (if all child nodes are disabled and cascade_to_disabled === false then this node will till be selected).


          if (s.indexOf('up') !== -1 && cur.indexOf(obj.id) === -1) {
            for (i = 0, j = obj.parents.length; i < j; i++) {
              tmp = this._model.data[obj.parents[i]];
              tmp.state[t ? 'selected' : 'checked'] = false;

              if (tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {
                tmp.original.state.undetermined = false;
              }

              tmp = this.get_node(obj.parents[i], true);

              if (tmp && tmp.length) {
                tmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');
              }
            }

            cur = $.vakata.array_filter(cur, function (id) {
              return obj.parents.indexOf(id) === -1;
            });
          }

          this._data[t ? 'core' : 'checkbox'].selected = cur;
        }, this));
      }

      if (this.settings.checkbox.cascade.indexOf('up') !== -1) {
        this.element.on('delete_node.jstree', $.proxy(function (e, data) {
          // apply up (whole handler)
          var p = this.get_node(data.parent),
              m = this._model.data,
              i,
              j,
              c,
              tmp,
              t = this.settings.checkbox.tie_selection;

          while (p && p.id !== $.jstree.root && !p.state[t ? 'selected' : 'checked']) {
            c = 0;

            for (i = 0, j = p.children.length; i < j; i++) {
              c += m[p.children[i]].state[t ? 'selected' : 'checked'];
            }

            if (j > 0 && c === j) {
              p.state[t ? 'selected' : 'checked'] = true;

              this._data[t ? 'core' : 'checkbox'].selected.push(p.id);

              tmp = this.get_node(p, true);

              if (tmp && tmp.length) {
                tmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');
              }
            } else {
              break;
            }

            p = this.get_node(p.parent);
          }
        }, this)).on('move_node.jstree', $.proxy(function (e, data) {
          // apply up (whole handler)
          var is_multi = data.is_multi,
              old_par = data.old_parent,
              new_par = this.get_node(data.parent),
              m = this._model.data,
              p,
              c,
              i,
              j,
              tmp,
              t = this.settings.checkbox.tie_selection;

          if (!is_multi) {
            p = this.get_node(old_par);

            while (p && p.id !== $.jstree.root && !p.state[t ? 'selected' : 'checked']) {
              c = 0;

              for (i = 0, j = p.children.length; i < j; i++) {
                c += m[p.children[i]].state[t ? 'selected' : 'checked'];
              }

              if (j > 0 && c === j) {
                p.state[t ? 'selected' : 'checked'] = true;

                this._data[t ? 'core' : 'checkbox'].selected.push(p.id);

                tmp = this.get_node(p, true);

                if (tmp && tmp.length) {
                  tmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');
                }
              } else {
                break;
              }

              p = this.get_node(p.parent);
            }
          }

          p = new_par;

          while (p && p.id !== $.jstree.root) {
            c = 0;

            for (i = 0, j = p.children.length; i < j; i++) {
              c += m[p.children[i]].state[t ? 'selected' : 'checked'];
            }

            if (c === j) {
              if (!p.state[t ? 'selected' : 'checked']) {
                p.state[t ? 'selected' : 'checked'] = true;

                this._data[t ? 'core' : 'checkbox'].selected.push(p.id);

                tmp = this.get_node(p, true);

                if (tmp && tmp.length) {
                  tmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');
                }
              }
            } else {
              if (p.state[t ? 'selected' : 'checked']) {
                p.state[t ? 'selected' : 'checked'] = false;
                this._data[t ? 'core' : 'checkbox'].selected = $.vakata.array_remove_item(this._data[t ? 'core' : 'checkbox'].selected, p.id);
                tmp = this.get_node(p, true);

                if (tmp && tmp.length) {
                  tmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');
                }
              } else {
                break;
              }
            }

            p = this.get_node(p.parent);
          }
        }, this));
      }
    };
    /**
     * get an array of all nodes whose state is "undetermined"
     * @name get_undetermined([full])
     * @param  {boolean} full: if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned
     * @return {Array}
     * @plugin checkbox
     */


    this.get_undetermined = function (full) {
      if (this.settings.checkbox.cascade.indexOf('undetermined') === -1) {
        return [];
      }

      var i,
          j,
          k,
          l,
          o = {},
          m = this._model.data,
          t = this.settings.checkbox.tie_selection,
          s = this._data[t ? 'core' : 'checkbox'].selected,
          p = [],
          tt = this,
          r = [];

      for (i = 0, j = s.length; i < j; i++) {
        if (m[s[i]] && m[s[i]].parents) {
          for (k = 0, l = m[s[i]].parents.length; k < l; k++) {
            if (o[m[s[i]].parents[k]] !== undefined) {
              break;
            }

            if (m[s[i]].parents[k] !== $.jstree.root) {
              o[m[s[i]].parents[k]] = true;
              p.push(m[s[i]].parents[k]);
            }
          }
        }
      } // attempt for server side undetermined state


      this.element.find('.jstree-closed').not(':has(.jstree-children)').each(function () {
        var tmp = tt.get_node(this),
            tmp2;

        if (!tmp) {
          return;
        }

        if (!tmp.state.loaded) {
          if (tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {
            if (o[tmp.id] === undefined && tmp.id !== $.jstree.root) {
              o[tmp.id] = true;
              p.push(tmp.id);
            }

            for (k = 0, l = tmp.parents.length; k < l; k++) {
              if (o[tmp.parents[k]] === undefined && tmp.parents[k] !== $.jstree.root) {
                o[tmp.parents[k]] = true;
                p.push(tmp.parents[k]);
              }
            }
          }
        } else {
          for (i = 0, j = tmp.children_d.length; i < j; i++) {
            tmp2 = m[tmp.children_d[i]];

            if (!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {
              if (o[tmp2.id] === undefined && tmp2.id !== $.jstree.root) {
                o[tmp2.id] = true;
                p.push(tmp2.id);
              }

              for (k = 0, l = tmp2.parents.length; k < l; k++) {
                if (o[tmp2.parents[k]] === undefined && tmp2.parents[k] !== $.jstree.root) {
                  o[tmp2.parents[k]] = true;
                  p.push(tmp2.parents[k]);
                }
              }
            }
          }
        }
      });

      for (i = 0, j = p.length; i < j; i++) {
        if (!m[p[i]].state[t ? 'selected' : 'checked']) {
          r.push(full ? m[p[i]] : p[i]);
        }
      }

      return r;
    };
    /**
     * set the undetermined state where and if necessary. Used internally.
     * @private
     * @name _undetermined()
     * @plugin checkbox
     */


    this._undetermined = function () {
      if (this.element === null) {
        return;
      }

      var p = this.get_undetermined(false),
          i,
          j,
          s;
      this.element.find('.jstree-undetermined').removeClass('jstree-undetermined');

      for (i = 0, j = p.length; i < j; i++) {
        s = this.get_node(p[i], true);

        if (s && s.length) {
          s.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');
        }
      }
    };

    this.redraw_node = function (obj, deep, is_callback, force_render) {
      obj = parent.redraw_node.apply(this, arguments);

      if (obj) {
        var i,
            j,
            tmp = null,
            icon = null;

        for (i = 0, j = obj.childNodes.length; i < j; i++) {
          if (obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf("jstree-anchor") !== -1) {
            tmp = obj.childNodes[i];
            break;
          }
        }

        if (tmp) {
          if (!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) {
            tmp.className += ' jstree-checked';
          }

          icon = _i.cloneNode(false);

          if (this._model.data[obj.id].state.checkbox_disabled) {
            icon.className += ' jstree-checkbox-disabled';
          }

          tmp.insertBefore(icon, tmp.childNodes[0]);
        }
      }

      if (!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {
        if (this._data.checkbox.uto) {
          clearTimeout(this._data.checkbox.uto);
        }

        this._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);
      }

      return obj;
    };
    /**
     * show the node checkbox icons
     * @name show_checkboxes()
     * @plugin checkbox
     */


    this.show_checkboxes = function () {
      this._data.core.themes.checkboxes = true;
      this.get_container_ul().removeClass("jstree-no-checkboxes");
    };
    /**
     * hide the node checkbox icons
     * @name hide_checkboxes()
     * @plugin checkbox
     */


    this.hide_checkboxes = function () {
      this._data.core.themes.checkboxes = false;
      this.get_container_ul().addClass("jstree-no-checkboxes");
    };
    /**
     * toggle the node icons
     * @name toggle_checkboxes()
     * @plugin checkbox
     */


    this.toggle_checkboxes = function () {
      if (this._data.core.themes.checkboxes) {
        this.hide_checkboxes();
      } else {
        this.show_checkboxes();
      }
    };
    /**
     * checks if a node is in an undetermined state
     * @name is_undetermined(obj)
     * @param  {mixed} obj
     * @return {Boolean}
     */


    this.is_undetermined = function (obj) {
      obj = this.get_node(obj);
      var s = this.settings.checkbox.cascade,
          i,
          j,
          t = this.settings.checkbox.tie_selection,
          d = this._data[t ? 'core' : 'checkbox'].selected,
          m = this._model.data;

      if (!obj || obj.state[t ? 'selected' : 'checked'] === true || s.indexOf('undetermined') === -1 || s.indexOf('down') === -1 && s.indexOf('up') === -1) {
        return false;
      }

      if (!obj.state.loaded && obj.original.state.undetermined === true) {
        return true;
      }

      for (i = 0, j = obj.children_d.length; i < j; i++) {
        if ($.inArray(obj.children_d[i], d) !== -1 || !m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined) {
          return true;
        }
      }

      return false;
    };
    /**
     * disable a node's checkbox
     * @name disable_checkbox(obj)
     * @param {mixed} obj an array can be used too
     * @trigger disable_checkbox.jstree
     * @plugin checkbox
     */


    this.disable_checkbox = function (obj) {
      var t1, t2, dom;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.disable_checkbox(obj[t1]);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      dom = this.get_node(obj, true);

      if (!obj.state.checkbox_disabled) {
        obj.state.checkbox_disabled = true;

        if (dom && dom.length) {
          dom.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-checkbox-disabled');
        }
        /**
         * triggered when an node's checkbox is disabled
         * @event
         * @name disable_checkbox.jstree
         * @param {Object} node
         * @plugin checkbox
         */


        this.trigger('disable_checkbox', {
          'node': obj
        });
      }
    };
    /**
     * enable a node's checkbox
     * @name enable_checkbox(obj)
     * @param {mixed} obj an array can be used too
     * @trigger enable_checkbox.jstree
     * @plugin checkbox
     */


    this.enable_checkbox = function (obj) {
      var t1, t2, dom;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.enable_checkbox(obj[t1]);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      dom = this.get_node(obj, true);

      if (obj.state.checkbox_disabled) {
        obj.state.checkbox_disabled = false;

        if (dom && dom.length) {
          dom.children('.jstree-anchor').children('.jstree-checkbox').removeClass('jstree-checkbox-disabled');
        }
        /**
         * triggered when an node's checkbox is enabled
         * @event
         * @name enable_checkbox.jstree
         * @param {Object} node
         * @plugin checkbox
         */


        this.trigger('enable_checkbox', {
          'node': obj
        });
      }
    };

    this.activate_node = function (obj, e) {
      if ($(e.target).hasClass('jstree-checkbox-disabled')) {
        return false;
      }

      if (this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {
        e.ctrlKey = true;
      }

      if (this.settings.checkbox.tie_selection || !this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox')) {
        return parent.activate_node.call(this, obj, e);
      }

      if (this.is_disabled(obj)) {
        return false;
      }

      if (this.is_checked(obj)) {
        this.uncheck_node(obj, e);
      } else {
        this.check_node(obj, e);
      }

      this.trigger('activate_node', {
        'node': this.get_node(obj)
      });
    };
    /**
     * Cascades checked state to a node and all its descendants. This function does NOT affect hidden and disabled nodes (or their descendants).
     * However if these unaffected nodes are already selected their ids will be included in the returned array.
     * @private
     * @param {string} id the node ID
     * @param {bool} checkedState should the nodes be checked or not
     * @returns {Array} Array of all node id's (in this tree branch) that are checked.
     */


    this._cascade_new_checked_state = function (id, checkedState) {
      var self = this;
      var t = this.settings.checkbox.tie_selection;
      var node = this._model.data[id];
      var selectedNodeIds = [];
      var selectedChildrenIds = [],
          i,
          j,
          selectedChildIds;

      if ((this.settings.checkbox.cascade_to_disabled || !node.state.disabled) && (this.settings.checkbox.cascade_to_hidden || !node.state.hidden)) {
        //First try and check/uncheck the children
        if (node.children) {
          for (i = 0, j = node.children.length; i < j; i++) {
            var childId = node.children[i];
            selectedChildIds = self._cascade_new_checked_state(childId, checkedState);
            selectedNodeIds = selectedNodeIds.concat(selectedChildIds);

            if (selectedChildIds.indexOf(childId) > -1) {
              selectedChildrenIds.push(childId);
            }
          }
        }

        var dom = self.get_node(node, true); //A node's state is undetermined if some but not all of it's children are checked/selected .

        var undetermined = selectedChildrenIds.length > 0 && selectedChildrenIds.length < node.children.length;

        if (node.original && node.original.state && node.original.state.undetermined) {
          node.original.state.undetermined = undetermined;
        } //If a node is undetermined then remove selected class


        if (undetermined) {
          node.state[t ? 'selected' : 'checked'] = false;
          dom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');
        } //Otherwise, if the checkedState === true (i.e. the node is being checked now) and all of the node's children are checked (if it has any children),
        //check the node and style it correctly.
        else if (checkedState && selectedChildrenIds.length === node.children.length) {
            node.state[t ? 'selected' : 'checked'] = checkedState;
            selectedNodeIds.push(node.id);
            dom.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');
          } else {
            node.state[t ? 'selected' : 'checked'] = false;
            dom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');
          }
      } else {
        selectedChildIds = this.get_checked_descendants(id);

        if (node.state[t ? 'selected' : 'checked']) {
          selectedChildIds.push(node.id);
        }

        selectedNodeIds = selectedNodeIds.concat(selectedChildIds);
      }

      return selectedNodeIds;
    };
    /**
     * Gets ids of nodes selected in branch (of tree) specified by id (does not include the node specified by id)
     * @name get_checked_descendants(obj)
     * @param {string} id the node ID
     * @return {Array} array of IDs
     * @plugin checkbox
     */


    this.get_checked_descendants = function (id) {
      var self = this;
      var t = self.settings.checkbox.tie_selection;
      var node = self._model.data[id];
      return $.vakata.array_filter(node.children_d, function (_id) {
        return self._model.data[_id].state[t ? 'selected' : 'checked'];
      });
    };
    /**
     * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)
     * @name check_node(obj)
     * @param {mixed} obj an array can be used to check multiple nodes
     * @trigger check_node.jstree
     * @plugin checkbox
     */


    this.check_node = function (obj, e) {
      if (this.settings.checkbox.tie_selection) {
        return this.select_node(obj, false, true, e);
      }

      var dom, t1, t2, th;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.check_node(obj[t1], e);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      dom = this.get_node(obj, true);

      if (!obj.state.checked) {
        obj.state.checked = true;

        this._data.checkbox.selected.push(obj.id);

        if (dom && dom.length) {
          dom.children('.jstree-anchor').addClass('jstree-checked');
        }
        /**
         * triggered when an node is checked (only if tie_selection in checkbox settings is false)
         * @event
         * @name check_node.jstree
         * @param {Object} node
         * @param {Array} selected the current selection
         * @param {Object} event the event (if any) that triggered this check_node
         * @plugin checkbox
         */


        this.trigger('check_node', {
          'node': obj,
          'selected': this._data.checkbox.selected,
          'event': e
        });
      }
    };
    /**
     * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)
     * @name uncheck_node(obj)
     * @param {mixed} obj an array can be used to uncheck multiple nodes
     * @trigger uncheck_node.jstree
     * @plugin checkbox
     */


    this.uncheck_node = function (obj, e) {
      if (this.settings.checkbox.tie_selection) {
        return this.deselect_node(obj, false, e);
      }

      var t1, t2, dom;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.uncheck_node(obj[t1], e);
        }

        return true;
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      dom = this.get_node(obj, true);

      if (obj.state.checked) {
        obj.state.checked = false;
        this._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);

        if (dom.length) {
          dom.children('.jstree-anchor').removeClass('jstree-checked');
        }
        /**
         * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)
         * @event
         * @name uncheck_node.jstree
         * @param {Object} node
         * @param {Array} selected the current selection
         * @param {Object} event the event (if any) that triggered this uncheck_node
         * @plugin checkbox
         */


        this.trigger('uncheck_node', {
          'node': obj,
          'selected': this._data.checkbox.selected,
          'event': e
        });
      }
    };
    /**
     * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)
     * @name check_all()
     * @trigger check_all.jstree, changed.jstree
     * @plugin checkbox
     */


    this.check_all = function () {
      if (this.settings.checkbox.tie_selection) {
        return this.select_all();
      }

      var tmp = this._data.checkbox.selected.concat([]),
          i,
          j;

      this._data.checkbox.selected = this._model.data[$.jstree.root].children_d.concat();

      for (i = 0, j = this._data.checkbox.selected.length; i < j; i++) {
        if (this._model.data[this._data.checkbox.selected[i]]) {
          this._model.data[this._data.checkbox.selected[i]].state.checked = true;
        }
      }

      this.redraw(true);
      /**
       * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)
       * @event
       * @name check_all.jstree
       * @param {Array} selected the current selection
       * @plugin checkbox
       */

      this.trigger('check_all', {
        'selected': this._data.checkbox.selected
      });
    };
    /**
     * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)
     * @name uncheck_all()
     * @trigger uncheck_all.jstree
     * @plugin checkbox
     */


    this.uncheck_all = function () {
      if (this.settings.checkbox.tie_selection) {
        return this.deselect_all();
      }

      var tmp = this._data.checkbox.selected.concat([]),
          i,
          j;

      for (i = 0, j = this._data.checkbox.selected.length; i < j; i++) {
        if (this._model.data[this._data.checkbox.selected[i]]) {
          this._model.data[this._data.checkbox.selected[i]].state.checked = false;
        }
      }

      this._data.checkbox.selected = [];
      this.element.find('.jstree-checked').removeClass('jstree-checked');
      /**
       * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)
       * @event
       * @name uncheck_all.jstree
       * @param {Object} node the previous selection
       * @param {Array} selected the current selection
       * @plugin checkbox
       */

      this.trigger('uncheck_all', {
        'selected': this._data.checkbox.selected,
        'node': tmp
      });
    };
    /**
     * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)
     * @name is_checked(obj)
     * @param  {mixed}  obj
     * @return {Boolean}
     * @plugin checkbox
     */


    this.is_checked = function (obj) {
      if (this.settings.checkbox.tie_selection) {
        return this.is_selected(obj);
      }

      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      return obj.state.checked;
    };
    /**
     * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)
     * @name get_checked([full])
     * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned
     * @return {Array}
     * @plugin checkbox
     */


    this.get_checked = function (full) {
      if (this.settings.checkbox.tie_selection) {
        return this.get_selected(full);
      }

      return full ? $.map(this._data.checkbox.selected, $.proxy(function (i) {
        return this.get_node(i);
      }, this)) : this._data.checkbox.selected.slice();
    };
    /**
     * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)
     * @name get_top_checked([full])
     * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned
     * @return {Array}
     * @plugin checkbox
     */


    this.get_top_checked = function (full) {
      if (this.settings.checkbox.tie_selection) {
        return this.get_top_selected(full);
      }

      var tmp = this.get_checked(true),
          obj = {},
          i,
          j,
          k,
          l;

      for (i = 0, j = tmp.length; i < j; i++) {
        obj[tmp[i].id] = tmp[i];
      }

      for (i = 0, j = tmp.length; i < j; i++) {
        for (k = 0, l = tmp[i].children_d.length; k < l; k++) {
          if (obj[tmp[i].children_d[k]]) {
            delete obj[tmp[i].children_d[k]];
          }
        }
      }

      tmp = [];

      for (i in obj) {
        if (obj.hasOwnProperty(i)) {
          tmp.push(i);
        }
      }

      return full ? $.map(tmp, $.proxy(function (i) {
        return this.get_node(i);
      }, this)) : tmp;
    };
    /**
     * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)
     * @name get_bottom_checked([full])
     * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned
     * @return {Array}
     * @plugin checkbox
     */


    this.get_bottom_checked = function (full) {
      if (this.settings.checkbox.tie_selection) {
        return this.get_bottom_selected(full);
      }

      var tmp = this.get_checked(true),
          obj = [],
          i,
          j;

      for (i = 0, j = tmp.length; i < j; i++) {
        if (!tmp[i].children.length) {
          obj.push(tmp[i].id);
        }
      }

      return full ? $.map(obj, $.proxy(function (i) {
        return this.get_node(i);
      }, this)) : obj;
    };

    this.load_node = function (obj, callback) {
      var k, l, i, j, c, tmp;

      if (!$.isArray(obj) && !this.settings.checkbox.tie_selection) {
        tmp = this.get_node(obj);

        if (tmp && tmp.state.loaded) {
          for (k = 0, l = tmp.children_d.length; k < l; k++) {
            if (this._model.data[tmp.children_d[k]].state.checked) {
              c = true;
              this._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, tmp.children_d[k]);
            }
          }
        }
      }

      return parent.load_node.apply(this, arguments);
    };

    this.get_state = function () {
      var state = parent.get_state.apply(this, arguments);

      if (this.settings.checkbox.tie_selection) {
        return state;
      }

      state.checkbox = this._data.checkbox.selected.slice();
      return state;
    };

    this.set_state = function (state, callback) {
      var res = parent.set_state.apply(this, arguments);

      if (res && state.checkbox) {
        if (!this.settings.checkbox.tie_selection) {
          this.uncheck_all();

          var _this = this;

          $.each(state.checkbox, function (i, v) {
            _this.check_node(v);
          });
        }

        delete state.checkbox;
        this.set_state(state, callback);
        return false;
      }

      return res;
    };

    this.refresh = function (skip_loading, forget_state) {
      if (this.settings.checkbox.tie_selection) {
        this._data.checkbox.selected = [];
      }

      return parent.refresh.apply(this, arguments);
    };
  }; // include the checkbox plugin by default
  // $.jstree.defaults.plugins.push("checkbox");

  /**
   * ### Conditionalselect plugin
   *
   * This plugin allows defining a callback to allow or deny node selection by user input (activate node method).
   */

  /**
   * a callback (function) which is invoked in the instance's scope and receives two arguments - the node and the event that triggered the `activate_node` call. Returning false prevents working with the node, returning true allows invoking activate_node. Defaults to returning `true`.
   * @name $.jstree.defaults.checkbox.visible
   * @plugin checkbox
   */


  $.jstree.defaults.conditionalselect = function () {
    return true;
  };

  $.jstree.plugins.conditionalselect = function (options, parent) {
    // own function
    this.activate_node = function (obj, e) {
      if (this.settings.conditionalselect.call(this, this.get_node(obj), e)) {
        return parent.activate_node.call(this, obj, e);
      }
    };
  };
  /**
   * ### Contextmenu plugin
   *
   * Shows a context menu when a node is right-clicked.
   */

  /**
   * stores all defaults for the contextmenu plugin
   * @name $.jstree.defaults.contextmenu
   * @plugin contextmenu
   */


  $.jstree.defaults.contextmenu = {
    /**
     * a boolean indicating if the node should be selected when the context menu is invoked on it. Defaults to `true`.
     * @name $.jstree.defaults.contextmenu.select_node
     * @plugin contextmenu
     */
    select_node: true,

    /**
     * a boolean indicating if the menu should be shown aligned with the node. Defaults to `true`, otherwise the mouse coordinates are used.
     * @name $.jstree.defaults.contextmenu.show_at_node
     * @plugin contextmenu
     */
    show_at_node: true,

    /**
     * an object of actions, or a function that accepts a node and a callback function and calls the callback function with an object of actions available for that node (you can also return the items too).
     *
     * Each action consists of a key (a unique name) and a value which is an object with the following properties (only label and action are required). Once a menu item is activated the `action` function will be invoked with an object containing the following keys: item - the contextmenu item definition as seen below, reference - the DOM node that was used (the tree node), element - the contextmenu DOM element, position - an object with x/y properties indicating the position of the menu.
     *
     * * `separator_before` - a boolean indicating if there should be a separator before this item
     * * `separator_after` - a boolean indicating if there should be a separator after this item
     * * `_disabled` - a boolean indicating if this action should be disabled
     * * `label` - a string - the name of the action (could be a function returning a string)
     * * `title` - a string - an optional tooltip for the item
     * * `action` - a function to be executed if this item is chosen, the function will receive 
     * * `icon` - a string, can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class
     * * `shortcut` - keyCode which will trigger the action if the menu is open (for example `113` for rename, which equals F2)
     * * `shortcut_label` - shortcut label (like for example `F2` for rename)
     * * `submenu` - an object with the same structure as $.jstree.defaults.contextmenu.items which can be used to create a submenu - each key will be rendered as a separate option in a submenu that will appear once the current item is hovered
     *
     * @name $.jstree.defaults.contextmenu.items
     * @plugin contextmenu
     */
    items: function (o, cb) {
      // Could be an object directly
      return {
        "create": {
          "separator_before": false,
          "separator_after": true,
          "_disabled": false,
          //(this.check("create_node", data.reference, {}, "last")),
          "label": "Create",
          "action": function (data) {
            var inst = $.jstree.reference(data.reference),
                obj = inst.get_node(data.reference);
            inst.create_node(obj, {}, "last", function (new_node) {
              try {
                inst.edit(new_node);
              } catch (ex) {
                setTimeout(function () {
                  inst.edit(new_node);
                }, 0);
              }
            });
          }
        },
        "rename": {
          "separator_before": false,
          "separator_after": false,
          "_disabled": false,
          //(this.check("rename_node", data.reference, this.get_parent(data.reference), "")),
          "label": "Rename",

          /*!
          "shortcut"			: 113,
          "shortcut_label"	: 'F2',
          "icon"				: "glyphicon glyphicon-leaf",
          */
          "action": function (data) {
            var inst = $.jstree.reference(data.reference),
                obj = inst.get_node(data.reference);
            inst.edit(obj);
          }
        },
        "remove": {
          "separator_before": false,
          "icon": false,
          "separator_after": false,
          "_disabled": false,
          //(this.check("delete_node", data.reference, this.get_parent(data.reference), "")),
          "label": "Delete",
          "action": function (data) {
            var inst = $.jstree.reference(data.reference),
                obj = inst.get_node(data.reference);

            if (inst.is_selected(obj)) {
              inst.delete_node(inst.get_selected());
            } else {
              inst.delete_node(obj);
            }
          }
        },
        "ccp": {
          "separator_before": true,
          "icon": false,
          "separator_after": false,
          "label": "Edit",
          "action": false,
          "submenu": {
            "cut": {
              "separator_before": false,
              "separator_after": false,
              "label": "Cut",
              "action": function (data) {
                var inst = $.jstree.reference(data.reference),
                    obj = inst.get_node(data.reference);

                if (inst.is_selected(obj)) {
                  inst.cut(inst.get_top_selected());
                } else {
                  inst.cut(obj);
                }
              }
            },
            "copy": {
              "separator_before": false,
              "icon": false,
              "separator_after": false,
              "label": "Copy",
              "action": function (data) {
                var inst = $.jstree.reference(data.reference),
                    obj = inst.get_node(data.reference);

                if (inst.is_selected(obj)) {
                  inst.copy(inst.get_top_selected());
                } else {
                  inst.copy(obj);
                }
              }
            },
            "paste": {
              "separator_before": false,
              "icon": false,
              "_disabled": function (data) {
                return !$.jstree.reference(data.reference).can_paste();
              },
              "separator_after": false,
              "label": "Paste",
              "action": function (data) {
                var inst = $.jstree.reference(data.reference),
                    obj = inst.get_node(data.reference);
                inst.paste(obj);
              }
            }
          }
        }
      };
    }
  };

  $.jstree.plugins.contextmenu = function (options, parent) {
    this.bind = function () {
      parent.bind.call(this);
      var last_ts = 0,
          cto = null,
          ex,
          ey;
      this.element.on("init.jstree loading.jstree ready.jstree", $.proxy(function () {
        this.get_container_ul().addClass('jstree-contextmenu');
      }, this)).on("contextmenu.jstree", ".jstree-anchor", $.proxy(function (e, data) {
        if (e.target.tagName.toLowerCase() === 'input') {
          return;
        }

        e.preventDefault();
        last_ts = e.ctrlKey ? +new Date() : 0;

        if (data || cto) {
          last_ts = +new Date() + 10000;
        }

        if (cto) {
          clearTimeout(cto);
        }

        if (!this.is_loading(e.currentTarget)) {
          this.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);
        }
      }, this)).on("click.jstree", ".jstree-anchor", $.proxy(function (e) {
        if (this._data.contextmenu.visible && (!last_ts || +new Date() - last_ts > 250)) {
          // work around safari & macOS ctrl+click
          $.vakata.context.hide();
        }

        last_ts = 0;
      }, this)).on("touchstart.jstree", ".jstree-anchor", function (e) {
        if (!e.originalEvent || !e.originalEvent.changedTouches || !e.originalEvent.changedTouches[0]) {
          return;
        }

        ex = e.originalEvent.changedTouches[0].clientX;
        ey = e.originalEvent.changedTouches[0].clientY;
        cto = setTimeout(function () {
          $(e.currentTarget).trigger('contextmenu', true);
        }, 750);
      }).on('touchmove.vakata.jstree', function (e) {
        if (cto && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0] && (Math.abs(ex - e.originalEvent.changedTouches[0].clientX) > 10 || Math.abs(ey - e.originalEvent.changedTouches[0].clientY) > 10)) {
          clearTimeout(cto);
          $.vakata.context.hide();
        }
      }).on('touchend.vakata.jstree', function (e) {
        if (cto) {
          clearTimeout(cto);
        }
      });
      /*!
      if(!('oncontextmenu' in document.body) && ('ontouchstart' in document.body)) {
      	var el = null, tm = null;
      	this.element
      		.on("touchstart", ".jstree-anchor", function (e) {
      			el = e.currentTarget;
      			tm = +new Date();
      			$(document).one("touchend", function (e) {
      				e.target = document.elementFromPoint(e.originalEvent.targetTouches[0].pageX - window.pageXOffset, e.originalEvent.targetTouches[0].pageY - window.pageYOffset);
      				e.currentTarget = e.target;
      				tm = ((+(new Date())) - tm);
      				if(e.target === el && tm > 600 && tm < 1000) {
      					e.preventDefault();
      					$(el).trigger('contextmenu', e);
      				}
      				el = null;
      				tm = null;
      			});
      		});
      }
      */

      $(document).on("context_hide.vakata.jstree", $.proxy(function (e, data) {
        this._data.contextmenu.visible = false;
        $(data.reference).removeClass('jstree-context');
      }, this));
    };

    this.teardown = function () {
      if (this._data.contextmenu.visible) {
        $.vakata.context.hide();
      }

      parent.teardown.call(this);
    };
    /**
     * prepare and show the context menu for a node
     * @name show_contextmenu(obj [, x, y])
     * @param {mixed} obj the node
     * @param {Number} x the x-coordinate relative to the document to show the menu at
     * @param {Number} y the y-coordinate relative to the document to show the menu at
     * @param {Object} e the event if available that triggered the contextmenu
     * @plugin contextmenu
     * @trigger show_contextmenu.jstree
     */


    this.show_contextmenu = function (obj, x, y, e) {
      obj = this.get_node(obj);

      if (!obj || obj.id === $.jstree.root) {
        return false;
      }

      var s = this.settings.contextmenu,
          d = this.get_node(obj, true),
          a = d.children(".jstree-anchor"),
          o = false,
          i = false;

      if (s.show_at_node || x === undefined || y === undefined) {
        o = a.offset();
        x = o.left;
        y = o.top + this._data.core.li_height;
      }

      if (this.settings.contextmenu.select_node && !this.is_selected(obj)) {
        this.activate_node(obj, e);
      }

      i = s.items;

      if ($.isFunction(i)) {
        i = i.call(this, obj, $.proxy(function (i) {
          this._show_contextmenu(obj, x, y, i);
        }, this));
      }

      if ($.isPlainObject(i)) {
        this._show_contextmenu(obj, x, y, i);
      }
    };
    /**
     * show the prepared context menu for a node
     * @name _show_contextmenu(obj, x, y, i)
     * @param {mixed} obj the node
     * @param {Number} x the x-coordinate relative to the document to show the menu at
     * @param {Number} y the y-coordinate relative to the document to show the menu at
     * @param {Number} i the object of items to show
     * @plugin contextmenu
     * @trigger show_contextmenu.jstree
     * @private
     */


    this._show_contextmenu = function (obj, x, y, i) {
      var d = this.get_node(obj, true),
          a = d.children(".jstree-anchor");
      $(document).one("context_show.vakata.jstree", $.proxy(function (e, data) {
        var cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';
        $(data.element).addClass(cls);
        a.addClass('jstree-context');
      }, this));
      this._data.contextmenu.visible = true;
      $.vakata.context.show(a, {
        'x': x,
        'y': y
      }, i);
      /**
       * triggered when the contextmenu is shown for a node
       * @event
       * @name show_contextmenu.jstree
       * @param {Object} node the node
       * @param {Number} x the x-coordinate of the menu relative to the document
       * @param {Number} y the y-coordinate of the menu relative to the document
       * @plugin contextmenu
       */

      this.trigger('show_contextmenu', {
        "node": obj,
        "x": x,
        "y": y
      });
    };
  }; // contextmenu helper


  (function ($) {
    var right_to_left = false,
        vakata_context = {
      element: false,
      reference: false,
      position_x: 0,
      position_y: 0,
      items: [],
      html: "",
      is_visible: false
    };
    $.vakata.context = {
      settings: {
        hide_onmouseleave: 0,
        icons: true
      },
      _trigger: function (event_name) {
        $(document).triggerHandler("context_" + event_name + ".vakata", {
          "reference": vakata_context.reference,
          "element": vakata_context.element,
          "position": {
            "x": vakata_context.position_x,
            "y": vakata_context.position_y
          }
        });
      },
      _execute: function (i) {
        i = vakata_context.items[i];
        return i && (!i._disabled || $.isFunction(i._disabled) && !i._disabled({
          "item": i,
          "reference": vakata_context.reference,
          "element": vakata_context.element
        })) && i.action ? i.action.call(null, {
          "item": i,
          "reference": vakata_context.reference,
          "element": vakata_context.element,
          "position": {
            "x": vakata_context.position_x,
            "y": vakata_context.position_y
          }
        }) : false;
      },
      _parse: function (o, is_callback) {
        if (!o) {
          return false;
        }

        if (!is_callback) {
          vakata_context.html = "";
          vakata_context.items = [];
        }

        var str = "",
            sep = false,
            tmp;

        if (is_callback) {
          str += "<" + "ul>";
        }

        $.each(o, function (i, val) {
          if (!val) {
            return true;
          }

          vakata_context.items.push(val);

          if (!sep && val.separator_before) {
            str += "<" + "li class='vakata-context-separator'><" + "a href='#' " + ($.vakata.context.settings.icons ? '' : 'style="margin-left:0px;"') + ">&#160;<" + "/a><" + "/li>";
          }

          sep = false;
          str += "<" + "li class='" + (val._class || "") + (val._disabled === true || $.isFunction(val._disabled) && val._disabled({
            "item": val,
            "reference": vakata_context.reference,
            "element": vakata_context.element
          }) ? " vakata-contextmenu-disabled " : "") + "' " + (val.shortcut ? " data-shortcut='" + val.shortcut + "' " : '') + ">";
          str += "<" + "a href='#' rel='" + (vakata_context.items.length - 1) + "' " + (val.title ? "title='" + val.title + "'" : "") + ">";

          if ($.vakata.context.settings.icons) {
            str += "<" + "i ";

            if (val.icon) {
              if (val.icon.indexOf("/") !== -1 || val.icon.indexOf(".") !== -1) {
                str += " style='background:url(\"" + val.icon + "\") center center no-repeat' ";
              } else {
                str += " class='" + val.icon + "' ";
              }
            }

            str += "><" + "/i><" + "span class='vakata-contextmenu-sep'>&#160;<" + "/span>";
          }

          str += ($.isFunction(val.label) ? val.label({
            "item": i,
            "reference": vakata_context.reference,
            "element": vakata_context.element
          }) : val.label) + (val.shortcut ? ' <span class="vakata-contextmenu-shortcut vakata-contextmenu-shortcut-' + val.shortcut + '">' + (val.shortcut_label || '') + '</span>' : '') + "<" + "/a>";

          if (val.submenu) {
            tmp = $.vakata.context._parse(val.submenu, true);

            if (tmp) {
              str += tmp;
            }
          }

          str += "<" + "/li>";

          if (val.separator_after) {
            str += "<" + "li class='vakata-context-separator'><" + "a href='#' " + ($.vakata.context.settings.icons ? '' : 'style="margin-left:0px;"') + ">&#160;<" + "/a><" + "/li>";
            sep = true;
          }
        });
        str = str.replace(/<li class\='vakata-context-separator'\><\/li\>$/, "");

        if (is_callback) {
          str += "</ul>";
        }
        /**
         * triggered on the document when the contextmenu is parsed (HTML is built)
         * @event
         * @plugin contextmenu
         * @name context_parse.vakata
         * @param {jQuery} reference the element that was right clicked
         * @param {jQuery} element the DOM element of the menu itself
         * @param {Object} position the x & y coordinates of the menu
         */


        if (!is_callback) {
          vakata_context.html = str;

          $.vakata.context._trigger("parse");
        }

        return str.length > 10 ? str : false;
      },
      _show_submenu: function (o) {
        o = $(o);

        if (!o.length || !o.children("ul").length) {
          return;
        }

        var e = o.children("ul"),
            xl = o.offset().left,
            x = xl + o.outerWidth(),
            y = o.offset().top,
            w = e.width(),
            h = e.height(),
            dw = $(window).width() + $(window).scrollLeft(),
            dh = $(window).height() + $(window).scrollTop(); // може да се спести е една проверка - дали няма някой от класовете вече нагоре

        if (right_to_left) {
          o[x - (w + 10 + o.outerWidth()) < 0 ? "addClass" : "removeClass"]("vakata-context-left");
        } else {
          o[x + w > dw && xl > dw - x ? "addClass" : "removeClass"]("vakata-context-right");
        }

        if (y + h + 10 > dh) {
          e.css("bottom", "-1px");
        } //if does not fit - stick it to the side


        if (o.hasClass('vakata-context-right')) {
          if (xl < w) {
            e.css("margin-right", xl - w);
          }
        } else {
          if (dw - x < w) {
            e.css("margin-left", dw - x - w);
          }
        }

        e.show();
      },
      show: function (reference, position, data) {
        var o,
            e,
            x,
            y,
            w,
            h,
            dw,
            dh,
            cond = true;

        if (vakata_context.element && vakata_context.element.length) {
          vakata_context.element.width('');
        }

        switch (cond) {
          case !position && !reference:
            return false;

          case !!position && !!reference:
            vakata_context.reference = reference;
            vakata_context.position_x = position.x;
            vakata_context.position_y = position.y;
            break;

          case !position && !!reference:
            vakata_context.reference = reference;
            o = reference.offset();
            vakata_context.position_x = o.left + reference.outerHeight();
            vakata_context.position_y = o.top;
            break;

          case !!position && !reference:
            vakata_context.position_x = position.x;
            vakata_context.position_y = position.y;
            break;
        }

        if (!!reference && !data && $(reference).data('vakata_contextmenu')) {
          data = $(reference).data('vakata_contextmenu');
        }

        if ($.vakata.context._parse(data)) {
          vakata_context.element.html(vakata_context.html);
        }

        if (vakata_context.items.length) {
          vakata_context.element.appendTo(document.body);
          e = vakata_context.element;
          x = vakata_context.position_x;
          y = vakata_context.position_y;
          w = e.width();
          h = e.height();
          dw = $(window).width() + $(window).scrollLeft();
          dh = $(window).height() + $(window).scrollTop();

          if (right_to_left) {
            x -= e.outerWidth() - $(reference).outerWidth();

            if (x < $(window).scrollLeft() + 20) {
              x = $(window).scrollLeft() + 20;
            }
          }

          if (x + w + 20 > dw) {
            x = dw - (w + 20);
          }

          if (y + h + 20 > dh) {
            y = dh - (h + 20);
          }

          vakata_context.element.css({
            "left": x,
            "top": y
          }).show().find('a').first().focus().parent().addClass("vakata-context-hover");
          vakata_context.is_visible = true;
          /**
           * triggered on the document when the contextmenu is shown
           * @event
           * @plugin contextmenu
           * @name context_show.vakata
           * @param {jQuery} reference the element that was right clicked
           * @param {jQuery} element the DOM element of the menu itself
           * @param {Object} position the x & y coordinates of the menu
           */

          $.vakata.context._trigger("show");
        }
      },
      hide: function () {
        if (vakata_context.is_visible) {
          vakata_context.element.hide().find("ul").hide().end().find(':focus').blur().end().detach();
          vakata_context.is_visible = false;
          /**
           * triggered on the document when the contextmenu is hidden
           * @event
           * @plugin contextmenu
           * @name context_hide.vakata
           * @param {jQuery} reference the element that was right clicked
           * @param {jQuery} element the DOM element of the menu itself
           * @param {Object} position the x & y coordinates of the menu
           */

          $.vakata.context._trigger("hide");
        }
      }
    };
    $(function () {
      right_to_left = $(document.body).css("direction") === "rtl";
      var to = false;
      vakata_context.element = $("<ul class='vakata-context'></ul>");
      vakata_context.element.on("mouseenter", "li", function (e) {
        e.stopImmediatePropagation();

        if ($.contains(this, e.relatedTarget)) {
          // премахнато заради delegate mouseleave по-долу
          // $(this).find(".vakata-context-hover").removeClass("vakata-context-hover");
          return;
        }

        if (to) {
          clearTimeout(to);
        }

        vakata_context.element.find(".vakata-context-hover").removeClass("vakata-context-hover").end();
        $(this).siblings().find("ul").hide().end().end().parentsUntil(".vakata-context", "li").addBack().addClass("vakata-context-hover");

        $.vakata.context._show_submenu(this);
      }) // тестово - дали не натоварва?
      .on("mouseleave", "li", function (e) {
        if ($.contains(this, e.relatedTarget)) {
          return;
        }

        $(this).find(".vakata-context-hover").addBack().removeClass("vakata-context-hover");
      }).on("mouseleave", function (e) {
        $(this).find(".vakata-context-hover").removeClass("vakata-context-hover");

        if ($.vakata.context.settings.hide_onmouseleave) {
          to = setTimeout(function (t) {
            return function () {
              $.vakata.context.hide();
            };
          }(this), $.vakata.context.settings.hide_onmouseleave);
        }
      }).on("click", "a", function (e) {
        e.preventDefault(); //})
        //.on("mouseup", "a", function (e) {

        if (!$(this).blur().parent().hasClass("vakata-context-disabled") && $.vakata.context._execute($(this).attr("rel")) !== false) {
          $.vakata.context.hide();
        }
      }).on('keydown', 'a', function (e) {
        var o = null;

        switch (e.which) {
          case 13:
          case 32:
            e.type = "click";
            e.preventDefault();
            $(e.currentTarget).trigger(e);
            break;

          case 37:
            if (vakata_context.is_visible) {
              vakata_context.element.find(".vakata-context-hover").last().closest("li").first().find("ul").hide().find(".vakata-context-hover").removeClass("vakata-context-hover").end().end().children('a').focus();
              e.stopImmediatePropagation();
              e.preventDefault();
            }

            break;

          case 38:
            if (vakata_context.is_visible) {
              o = vakata_context.element.find("ul:visible").addBack().last().children(".vakata-context-hover").removeClass("vakata-context-hover").prevAll("li:not(.vakata-context-separator)").first();

              if (!o.length) {
                o = vakata_context.element.find("ul:visible").addBack().last().children("li:not(.vakata-context-separator)").last();
              }

              o.addClass("vakata-context-hover").children('a').focus();
              e.stopImmediatePropagation();
              e.preventDefault();
            }

            break;

          case 39:
            if (vakata_context.is_visible) {
              vakata_context.element.find(".vakata-context-hover").last().children("ul").show().children("li:not(.vakata-context-separator)").removeClass("vakata-context-hover").first().addClass("vakata-context-hover").children('a').focus();
              e.stopImmediatePropagation();
              e.preventDefault();
            }

            break;

          case 40:
            if (vakata_context.is_visible) {
              o = vakata_context.element.find("ul:visible").addBack().last().children(".vakata-context-hover").removeClass("vakata-context-hover").nextAll("li:not(.vakata-context-separator)").first();

              if (!o.length) {
                o = vakata_context.element.find("ul:visible").addBack().last().children("li:not(.vakata-context-separator)").first();
              }

              o.addClass("vakata-context-hover").children('a').focus();
              e.stopImmediatePropagation();
              e.preventDefault();
            }

            break;

          case 27:
            $.vakata.context.hide();
            e.preventDefault();
            break;

          default:
            //console.log(e.which);
            break;
        }
      }).on('keydown', function (e) {
        e.preventDefault();
        var a = vakata_context.element.find('.vakata-contextmenu-shortcut-' + e.which).parent();

        if (a.parent().not('.vakata-context-disabled')) {
          a.click();
        }
      });
      $(document).on("mousedown.vakata.jstree", function (e) {
        if (vakata_context.is_visible && vakata_context.element[0] !== e.target && !$.contains(vakata_context.element[0], e.target)) {
          $.vakata.context.hide();
        }
      }).on("context_show.vakata.jstree", function (e, data) {
        vakata_context.element.find("li:has(ul)").children("a").addClass("vakata-context-parent");

        if (right_to_left) {
          vakata_context.element.addClass("vakata-context-rtl").css("direction", "rtl");
        } // also apply a RTL class?


        vakata_context.element.find("ul").hide().end();
      });
    });
  })($); // $.jstree.defaults.plugins.push("contextmenu");

  /**
   * ### Drag'n'drop plugin
   *
   * Enables dragging and dropping of nodes in the tree, resulting in a move or copy operations.
   */

  /**
   * stores all defaults for the drag'n'drop plugin
   * @name $.jstree.defaults.dnd
   * @plugin dnd
   */


  $.jstree.defaults.dnd = {
    /**
     * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.
     * @name $.jstree.defaults.dnd.copy
     * @plugin dnd
     */
    copy: true,

    /**
     * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.
     * @name $.jstree.defaults.dnd.open_timeout
     * @plugin dnd
     */
    open_timeout: 500,

    /**
     * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) and the event that started the drag - return `false` to prevent dragging
     * @name $.jstree.defaults.dnd.is_draggable
     * @plugin dnd
     */
    is_draggable: true,

    /**
     * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`
     * @name $.jstree.defaults.dnd.check_while_dragging
     * @plugin dnd
     */
    check_while_dragging: true,

    /**
     * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`
     * @name $.jstree.defaults.dnd.always_copy
     * @plugin dnd
     */
    always_copy: false,

    /**
     * when dropping a node "inside", this setting indicates the position the node should go to - it can be an integer or a string: "first" (same as 0) or "last", default is `0`
     * @name $.jstree.defaults.dnd.inside_pos
     * @plugin dnd
     */
    inside_pos: 0,

    /**
     * when starting the drag on a node that is selected this setting controls if all selected nodes are dragged or only the single node, default is `true`, which means all selected nodes are dragged when the drag is started on a selected node
     * @name $.jstree.defaults.dnd.drag_selection
     * @plugin dnd
     */
    drag_selection: true,

    /**
     * controls whether dnd works on touch devices. If left as boolean true dnd will work the same as in desktop browsers, which in some cases may impair scrolling. If set to boolean false dnd will not work on touch devices. There is a special third option - string "selected" which means only selected nodes can be dragged on touch devices.
     * @name $.jstree.defaults.dnd.touch
     * @plugin dnd
     */
    touch: true,

    /**
     * controls whether items can be dropped anywhere on the node, not just on the anchor, by default only the node anchor is a valid drop target. Works best with the wholerow plugin. If enabled on mobile depending on the interface it might be hard for the user to cancel the drop, since the whole tree container will be a valid drop target.
     * @name $.jstree.defaults.dnd.large_drop_target
     * @plugin dnd
     */
    large_drop_target: false,

    /**
     * controls whether a drag can be initiated from any part of the node and not just the text/icon part, works best with the wholerow plugin. Keep in mind it can cause problems with tree scrolling on mobile depending on the interface - in that case set the touch option to "selected".
     * @name $.jstree.defaults.dnd.large_drag_target
     * @plugin dnd
     */
    large_drag_target: false,

    /**
     * controls whether use HTML5 dnd api instead of classical. That will allow better integration of dnd events with other HTML5 controls.
     * @reference http://caniuse.com/#feat=dragndrop
     * @name $.jstree.defaults.dnd.use_html5
     * @plugin dnd
     */
    use_html5: false
  };
  var drg, elm; // TODO: now check works by checking for each node individually, how about max_children, unique, etc?

  $.jstree.plugins.dnd = function (options, parent) {
    this.init = function (el, options) {
      parent.init.call(this, el, options);
      this.settings.dnd.use_html5 = this.settings.dnd.use_html5 && 'draggable' in document.createElement('span');
    };

    this.bind = function () {
      parent.bind.call(this);
      this.element.on(this.settings.dnd.use_html5 ? 'dragstart.jstree' : 'mousedown.jstree touchstart.jstree', this.settings.dnd.large_drag_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {
        if (this.settings.dnd.large_drag_target && $(e.target).closest('.jstree-node')[0] !== e.currentTarget) {
          return true;
        }

        if (e.type === "touchstart" && (!this.settings.dnd.touch || this.settings.dnd.touch === 'selected' && !$(e.currentTarget).closest('.jstree-node').children('.jstree-anchor').hasClass('jstree-clicked'))) {
          return true;
        }

        var obj = this.get_node(e.target),
            mlt = this.is_selected(obj) && this.settings.dnd.drag_selection ? this.get_top_selected().length : 1,
            txt = mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget);

        if (this.settings.core.force_text) {
          txt = $.vakata.html.escape(txt);
        }

        if (obj && obj.id && obj.id !== $.jstree.root && (e.which === 1 || e.type === "touchstart" || e.type === "dragstart") && (this.settings.dnd.is_draggable === true || $.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, mlt > 1 ? this.get_top_selected(true) : [obj], e))) {
          drg = {
            'jstree': true,
            'origin': this,
            'obj': this.get_node(obj, true),
            'nodes': mlt > 1 ? this.get_top_selected() : [obj.id]
          };
          elm = e.currentTarget;

          if (this.settings.dnd.use_html5) {
            $.vakata.dnd._trigger('start', e, {
              'helper': $(),
              'element': elm,
              'data': drg
            });
          } else {
            this.element.trigger('mousedown.jstree');
            return $.vakata.dnd.start(e, drg, '<div id="jstree-dnd" class="jstree-' + this.get_theme() + ' jstree-' + this.get_theme() + '-' + this.get_theme_variant() + ' ' + (this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '') + '"><i class="jstree-icon jstree-er"></i>' + txt + '<ins class="jstree-copy" style="display:none;">+</ins></div>');
          }
        }
      }, this));

      if (this.settings.dnd.use_html5) {
        this.element.on('dragover.jstree', function (e) {
          e.preventDefault();

          $.vakata.dnd._trigger('move', e, {
            'helper': $(),
            'element': elm,
            'data': drg
          });

          return false;
        }) //.on('dragenter.jstree', this.settings.dnd.large_drop_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {
        //		e.preventDefault();
        //		$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });
        //		return false;
        //	}, this))
        .on('drop.jstree', $.proxy(function (e) {
          e.preventDefault();

          $.vakata.dnd._trigger('stop', e, {
            'helper': $(),
            'element': elm,
            'data': drg
          });

          return false;
        }, this));
      }
    };

    this.redraw_node = function (obj, deep, callback, force_render) {
      obj = parent.redraw_node.apply(this, arguments);

      if (obj && this.settings.dnd.use_html5) {
        if (this.settings.dnd.large_drag_target) {
          obj.setAttribute('draggable', true);
        } else {
          var i,
              j,
              tmp = null;

          for (i = 0, j = obj.childNodes.length; i < j; i++) {
            if (obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf("jstree-anchor") !== -1) {
              tmp = obj.childNodes[i];
              break;
            }
          }

          if (tmp) {
            tmp.setAttribute('draggable', true);
          }
        }
      }

      return obj;
    };
  };

  $(function () {
    // bind only once for all instances
    var lastmv = false,
        laster = false,
        lastev = false,
        opento = false,
        marker = $('<div id="jstree-marker">&#160;</div>').hide(); //.appendTo('body');

    $(document).on('dragover.vakata.jstree', function (e) {
      if (elm) {
        $.vakata.dnd._trigger('move', e, {
          'helper': $(),
          'element': elm,
          'data': drg
        });
      }
    }).on('drop.vakata.jstree', function (e) {
      if (elm) {
        $.vakata.dnd._trigger('stop', e, {
          'helper': $(),
          'element': elm,
          'data': drg
        });

        elm = null;
        drg = null;
      }
    }).on('dnd_start.vakata.jstree', function (e, data) {
      lastmv = false;
      lastev = false;

      if (!data || !data.data || !data.data.jstree) {
        return;
      }

      marker.appendTo(document.body); //.show();
    }).on('dnd_move.vakata.jstree', function (e, data) {
      var isDifferentNode = data.event.target !== lastev.target;

      if (opento) {
        if (!data.event || data.event.type !== 'dragover' || isDifferentNode) {
          clearTimeout(opento);
        }
      }

      if (!data || !data.data || !data.data.jstree) {
        return;
      } // if we are hovering the marker image do nothing (can happen on "inside" drags)


      if (data.event.target.id && data.event.target.id === 'jstree-marker') {
        return;
      }

      lastev = data.event;
      var ins = $.jstree.reference(data.event.target),
          ref = false,
          off = false,
          rel = false,
          tmp,
          l,
          t,
          h,
          p,
          i,
          o,
          ok,
          t1,
          t2,
          op,
          ps,
          pr,
          ip,
          tm,
          is_copy,
          pn,
          c; // if we are over an instance

      if (ins && ins._data && ins._data.dnd) {
        marker.attr('class', 'jstree-' + ins.get_theme() + (ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : ''));
        is_copy = data.data.origin && (data.data.origin.settings.dnd.always_copy || data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey));
        data.helper.children().attr('class', 'jstree-' + ins.get_theme() + ' jstree-' + ins.get_theme() + '-' + ins.get_theme_variant() + ' ' + (ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '')).find('.jstree-copy').first()[is_copy ? 'show' : 'hide'](); // if are hovering the container itself add a new root node
        //console.log(data.event);

        if ((data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {
          ok = true;

          for (t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {
            ok = ok && ins.check(data.data.origin && (data.data.origin.settings.dnd.always_copy || data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ? "copy_node" : "move_node", data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1], $.jstree.root, 'last', {
              'dnd': true,
              'ref': ins.get_node($.jstree.root),
              'pos': 'i',
              'origin': data.data.origin,
              'is_multi': data.data.origin && data.data.origin !== ins,
              'is_foreign': !data.data.origin
            });

            if (!ok) {
              break;
            }
          }

          if (ok) {
            lastmv = {
              'ins': ins,
              'par': $.jstree.root,
              'pos': 'last'
            };
            marker.hide();
            data.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');

            if (data.event.originalEvent && data.event.originalEvent.dataTransfer) {
              data.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';
            }

            return;
          }
        } else {
          // if we are hovering a tree node
          ref = ins.settings.dnd.large_drop_target ? $(data.event.target).closest('.jstree-node').children('.jstree-anchor') : $(data.event.target).closest('.jstree-anchor');

          if (ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {
            off = ref.offset();
            rel = (data.event.pageY !== undefined ? data.event.pageY : data.event.originalEvent.pageY) - off.top;
            h = ref.outerHeight();

            if (rel < h / 3) {
              o = ['b', 'i', 'a'];
            } else if (rel > h - h / 3) {
              o = ['a', 'i', 'b'];
            } else {
              o = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];
            }

            $.each(o, function (j, v) {
              switch (v) {
                case 'b':
                  l = off.left - 6;
                  t = off.top;
                  p = ins.get_parent(ref);
                  i = ref.parent().index();
                  c = 'jstree-below';
                  break;

                case 'i':
                  ip = ins.settings.dnd.inside_pos;
                  tm = ins.get_node(ref.parent());
                  l = off.left - 2;
                  t = off.top + h / 2 + 1;
                  p = tm.id;
                  i = ip === 'first' ? 0 : ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length);
                  c = 'jstree-inside';
                  break;

                case 'a':
                  l = off.left - 6;
                  t = off.top + h;
                  p = ins.get_parent(ref);
                  i = ref.parent().index() + 1;
                  c = 'jstree-above';
                  break;
              }

              ok = true;

              for (t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {
                op = data.data.origin && (data.data.origin.settings.dnd.always_copy || data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ? "copy_node" : "move_node";
                ps = i;

                if (op === "move_node" && v === 'a' && data.data.origin && data.data.origin === ins && p === ins.get_parent(data.data.nodes[t1])) {
                  pr = ins.get_node(p);

                  if (ps > $.inArray(data.data.nodes[t1], pr.children)) {
                    ps -= 1;
                  }
                }

                ok = ok && (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false || ins.check(op, data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1], p, ps, {
                  'dnd': true,
                  'ref': ins.get_node(ref.parent()),
                  'pos': v,
                  'origin': data.data.origin,
                  'is_multi': data.data.origin && data.data.origin !== ins,
                  'is_foreign': !data.data.origin
                }));

                if (!ok) {
                  if (ins && ins.last_error) {
                    laster = ins.last_error();
                  }

                  break;
                }
              }

              if (v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {
                if (!data.event || data.event.type !== 'dragover' || isDifferentNode) {
                  if (opento) {
                    clearTimeout(opento);
                  }

                  opento = setTimeout(function (x, z) {
                    return function () {
                      x.open_node(z);
                    };
                  }(ins, ref), ins.settings.dnd.open_timeout);
                }
              }

              if (ok) {
                pn = ins.get_node(p, true);

                if (!pn.hasClass('.jstree-dnd-parent')) {
                  $('.jstree-dnd-parent').removeClass('jstree-dnd-parent');
                  pn.addClass('jstree-dnd-parent');
                }

                lastmv = {
                  'ins': ins,
                  'par': p,
                  'pos': v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i
                };
                marker.css({
                  'left': l + 'px',
                  'top': t + 'px'
                }).show();
                marker.removeClass('jstree-above jstree-inside jstree-below').addClass(c);
                data.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');

                if (data.event.originalEvent && data.event.originalEvent.dataTransfer) {
                  data.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';
                }

                laster = {};
                o = true;
                return false;
              }
            });

            if (o === true) {
              return;
            }
          }
        }
      }

      $('.jstree-dnd-parent').removeClass('jstree-dnd-parent');
      lastmv = false;
      data.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');

      if (data.event.originalEvent && data.event.originalEvent.dataTransfer) {//data.event.originalEvent.dataTransfer.dropEffect = 'none';
      }

      marker.hide();
    }).on('dnd_scroll.vakata.jstree', function (e, data) {
      if (!data || !data.data || !data.data.jstree) {
        return;
      }

      marker.hide();
      lastmv = false;
      lastev = false;
      data.helper.find('.jstree-icon').first().removeClass('jstree-ok').addClass('jstree-er');
    }).on('dnd_stop.vakata.jstree', function (e, data) {
      $('.jstree-dnd-parent').removeClass('jstree-dnd-parent');

      if (opento) {
        clearTimeout(opento);
      }

      if (!data || !data.data || !data.data.jstree) {
        return;
      }

      marker.hide().detach();
      var i,
          j,
          nodes = [];

      if (lastmv) {
        for (i = 0, j = data.data.nodes.length; i < j; i++) {
          nodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];
        }

        lastmv.ins[data.data.origin && (data.data.origin.settings.dnd.always_copy || data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ? 'copy_node' : 'move_node'](nodes, lastmv.par, lastmv.pos, false, false, false, data.data.origin);
      } else {
        i = $(data.event.target).closest('.jstree');

        if (i.length && laster && laster.error && laster.error === 'check') {
          i = i.jstree(true);

          if (i) {
            i.settings.core.error.call(this, laster);
          }
        }
      }

      lastev = false;
      lastmv = false;
    }).on('keyup.jstree keydown.jstree', function (e, data) {
      data = $.vakata.dnd._get();

      if (data && data.data && data.data.jstree) {
        if (e.type === "keyup" && e.which === 27) {
          if (opento) {
            clearTimeout(opento);
          }

          lastmv = false;
          laster = false;
          lastev = false;
          opento = false;
          marker.hide().detach();

          $.vakata.dnd._clean();
        } else {
          data.helper.find('.jstree-copy').first()[data.data.origin && (data.data.origin.settings.dnd.always_copy || data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey)) ? 'show' : 'hide']();

          if (lastev) {
            lastev.metaKey = e.metaKey;
            lastev.ctrlKey = e.ctrlKey;

            $.vakata.dnd._trigger('move', lastev);
          }
        }
      }
    });
  }); // helpers

  (function ($) {
    $.vakata.html = {
      div: $('<div></div>'),
      escape: function (str) {
        return $.vakata.html.div.text(str).html();
      },
      strip: function (str) {
        return $.vakata.html.div.empty().append($.parseHTML(str)).text();
      }
    }; // private variable

    var vakata_dnd = {
      element: false,
      target: false,
      is_down: false,
      is_drag: false,
      helper: false,
      helper_w: 0,
      data: false,
      init_x: 0,
      init_y: 0,
      scroll_l: 0,
      scroll_t: 0,
      scroll_e: false,
      scroll_i: false,
      is_touch: false
    };
    $.vakata.dnd = {
      settings: {
        scroll_speed: 10,
        scroll_proximity: 20,
        helper_left: 5,
        helper_top: 10,
        threshold: 5,
        threshold_touch: 10
      },
      _trigger: function (event_name, e, data) {
        if (data === undefined) {
          data = $.vakata.dnd._get();
        }

        data.event = e;
        $(document).triggerHandler("dnd_" + event_name + ".vakata", data);
      },
      _get: function () {
        return {
          "data": vakata_dnd.data,
          "element": vakata_dnd.element,
          "helper": vakata_dnd.helper
        };
      },
      _clean: function () {
        if (vakata_dnd.helper) {
          vakata_dnd.helper.remove();
        }

        if (vakata_dnd.scroll_i) {
          clearInterval(vakata_dnd.scroll_i);
          vakata_dnd.scroll_i = false;
        }

        vakata_dnd = {
          element: false,
          target: false,
          is_down: false,
          is_drag: false,
          helper: false,
          helper_w: 0,
          data: false,
          init_x: 0,
          init_y: 0,
          scroll_l: 0,
          scroll_t: 0,
          scroll_e: false,
          scroll_i: false,
          is_touch: false
        };
        elm = null;
        $(document).off("mousemove.vakata.jstree touchmove.vakata.jstree", $.vakata.dnd.drag);
        $(document).off("mouseup.vakata.jstree touchend.vakata.jstree", $.vakata.dnd.stop);
      },
      _scroll: function (init_only) {
        if (!vakata_dnd.scroll_e || !vakata_dnd.scroll_l && !vakata_dnd.scroll_t) {
          if (vakata_dnd.scroll_i) {
            clearInterval(vakata_dnd.scroll_i);
            vakata_dnd.scroll_i = false;
          }

          return false;
        }

        if (!vakata_dnd.scroll_i) {
          vakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);
          return false;
        }

        if (init_only === true) {
          return false;
        }

        var i = vakata_dnd.scroll_e.scrollTop(),
            j = vakata_dnd.scroll_e.scrollLeft();
        vakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);
        vakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);

        if (i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {
          /**
           * triggered on the document when a drag causes an element to scroll
           * @event
           * @plugin dnd
           * @name dnd_scroll.vakata
           * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start
           * @param {DOM} element the DOM element being dragged
           * @param {jQuery} helper the helper shown next to the mouse
           * @param {jQuery} event the element that is scrolling
           */
          $.vakata.dnd._trigger("scroll", vakata_dnd.scroll_e);
        }
      },
      start: function (e, data, html) {
        if (e.type === "touchstart" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {
          e.pageX = e.originalEvent.changedTouches[0].pageX;
          e.pageY = e.originalEvent.changedTouches[0].pageY;
          e.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);
        }

        if (vakata_dnd.is_drag) {
          $.vakata.dnd.stop({});
        }

        try {
          e.currentTarget.unselectable = "on";

          e.currentTarget.onselectstart = function () {
            return false;
          };

          if (e.currentTarget.style) {
            e.currentTarget.style.touchAction = "none";
            e.currentTarget.style.msTouchAction = "none";
            e.currentTarget.style.MozUserSelect = "none";
          }
        } catch (ignore) {}

        vakata_dnd.init_x = e.pageX;
        vakata_dnd.init_y = e.pageY;
        vakata_dnd.data = data;
        vakata_dnd.is_down = true;
        vakata_dnd.element = e.currentTarget;
        vakata_dnd.target = e.target;
        vakata_dnd.is_touch = e.type === "touchstart";

        if (html !== false) {
          vakata_dnd.helper = $("<div id='vakata-dnd'></div>").html(html).css({
            "display": "block",
            "margin": "0",
            "padding": "0",
            "position": "absolute",
            "top": "-2000px",
            "lineHeight": "16px",
            "zIndex": "10000"
          });
        }

        $(document).on("mousemove.vakata.jstree touchmove.vakata.jstree", $.vakata.dnd.drag);
        $(document).on("mouseup.vakata.jstree touchend.vakata.jstree", $.vakata.dnd.stop);
        return false;
      },
      drag: function (e) {
        if (e.type === "touchmove" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {
          e.pageX = e.originalEvent.changedTouches[0].pageX;
          e.pageY = e.originalEvent.changedTouches[0].pageY;
          e.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);
        }

        if (!vakata_dnd.is_down) {
          return;
        }

        if (!vakata_dnd.is_drag) {
          if (Math.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) || Math.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)) {
            if (vakata_dnd.helper) {
              vakata_dnd.helper.appendTo(document.body);
              vakata_dnd.helper_w = vakata_dnd.helper.outerWidth();
            }

            vakata_dnd.is_drag = true;
            $(vakata_dnd.target).one('click.vakata', false);
            /**
             * triggered on the document when a drag starts
             * @event
             * @plugin dnd
             * @name dnd_start.vakata
             * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start
             * @param {DOM} element the DOM element being dragged
             * @param {jQuery} helper the helper shown next to the mouse
             * @param {Object} event the event that caused the start (probably mousemove)
             */

            $.vakata.dnd._trigger("start", e);
          } else {
            return;
          }
        }

        var d = false,
            w = false,
            dh = false,
            wh = false,
            dw = false,
            ww = false,
            dt = false,
            dl = false,
            ht = false,
            hl = false;
        vakata_dnd.scroll_t = 0;
        vakata_dnd.scroll_l = 0;
        vakata_dnd.scroll_e = false;
        $($(e.target).parentsUntil("body").addBack().get().reverse()).filter(function () {
          return /^auto|scroll$/.test($(this).css("overflow")) && (this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);
        }).each(function () {
          var t = $(this),
              o = t.offset();

          if (this.scrollHeight > this.offsetHeight) {
            if (o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity) {
              vakata_dnd.scroll_t = 1;
            }

            if (e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity) {
              vakata_dnd.scroll_t = -1;
            }
          }

          if (this.scrollWidth > this.offsetWidth) {
            if (o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity) {
              vakata_dnd.scroll_l = 1;
            }

            if (e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity) {
              vakata_dnd.scroll_l = -1;
            }
          }

          if (vakata_dnd.scroll_t || vakata_dnd.scroll_l) {
            vakata_dnd.scroll_e = $(this);
            return false;
          }
        });

        if (!vakata_dnd.scroll_e) {
          d = $(document);
          w = $(window);
          dh = d.height();
          wh = w.height();
          dw = d.width();
          ww = w.width();
          dt = d.scrollTop();
          dl = d.scrollLeft();

          if (dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity) {
            vakata_dnd.scroll_t = -1;
          }

          if (dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity) {
            vakata_dnd.scroll_t = 1;
          }

          if (dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity) {
            vakata_dnd.scroll_l = -1;
          }

          if (dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity) {
            vakata_dnd.scroll_l = 1;
          }

          if (vakata_dnd.scroll_t || vakata_dnd.scroll_l) {
            vakata_dnd.scroll_e = d;
          }
        }

        if (vakata_dnd.scroll_e) {
          $.vakata.dnd._scroll(true);
        }

        if (vakata_dnd.helper) {
          ht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);
          hl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);

          if (dh && ht + 25 > dh) {
            ht = dh - 50;
          }

          if (dw && hl + vakata_dnd.helper_w > dw) {
            hl = dw - (vakata_dnd.helper_w + 2);
          }

          vakata_dnd.helper.css({
            left: hl + "px",
            top: ht + "px"
          });
        }
        /**
         * triggered on the document when a drag is in progress
         * @event
         * @plugin dnd
         * @name dnd_move.vakata
         * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start
         * @param {DOM} element the DOM element being dragged
         * @param {jQuery} helper the helper shown next to the mouse
         * @param {Object} event the event that caused this to trigger (most likely mousemove)
         */


        $.vakata.dnd._trigger("move", e);

        return false;
      },
      stop: function (e) {
        if (e.type === "touchend" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {
          e.pageX = e.originalEvent.changedTouches[0].pageX;
          e.pageY = e.originalEvent.changedTouches[0].pageY;
          e.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);
        }

        if (vakata_dnd.is_drag) {
          /**
           * triggered on the document when a drag stops (the dragged element is dropped)
           * @event
           * @plugin dnd
           * @name dnd_stop.vakata
           * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start
           * @param {DOM} element the DOM element being dragged
           * @param {jQuery} helper the helper shown next to the mouse
           * @param {Object} event the event that caused the stop
           */
          if (e.target !== vakata_dnd.target) {
            $(vakata_dnd.target).off('click.vakata');
          }

          $.vakata.dnd._trigger("stop", e);
        } else {
          if (e.type === "touchend" && e.target === vakata_dnd.target) {
            var to = setTimeout(function () {
              $(e.target).click();
            }, 100);
            $(e.target).one('click', function () {
              if (to) {
                clearTimeout(to);
              }
            });
          }
        }

        $.vakata.dnd._clean();

        return false;
      }
    };
  })($); // include the dnd plugin by default
  // $.jstree.defaults.plugins.push("dnd");

  /**
   * ### Massload plugin
   *
   * Adds massload functionality to jsTree, so that multiple nodes can be loaded in a single request (only useful with lazy loading).
   */

  /**
   * massload configuration
   *
   * It is possible to set this to a standard jQuery-like AJAX config.
   * In addition to the standard jQuery ajax options here you can supply functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node IDs need to be loaded, the return value of those functions will be used.
   *
   * You can also set this to a function, that function will receive the node IDs being loaded as argument and a second param which is a function (callback) which should be called with the result.
   *
   * Both the AJAX and the function approach rely on the same return value - an object where the keys are the node IDs, and the value is the children of that node as an array.
   *
   *	{
   *		"id1" : [{ "text" : "Child of ID1", "id" : "c1" }, { "text" : "Another child of ID1", "id" : "c2" }],
   *		"id2" : [{ "text" : "Child of ID2", "id" : "c3" }]
   *	}
   * 
   * @name $.jstree.defaults.massload
   * @plugin massload
   */


  $.jstree.defaults.massload = null;

  $.jstree.plugins.massload = function (options, parent) {
    this.init = function (el, options) {
      this._data.massload = {};
      parent.init.call(this, el, options);
    };

    this._load_nodes = function (nodes, callback, is_callback, force_reload) {
      var s = this.settings.massload,
          toLoad = [],
          m = this._model.data,
          i,
          j,
          dom;

      if (!is_callback) {
        for (i = 0, j = nodes.length; i < j; i++) {
          if (!m[nodes[i]] || !m[nodes[i]].state.loaded && !m[nodes[i]].state.failed || force_reload) {
            toLoad.push(nodes[i]);
            dom = this.get_node(nodes[i], true);

            if (dom && dom.length) {
              dom.addClass("jstree-loading").attr('aria-busy', true);
            }
          }
        }

        this._data.massload = {};

        if (toLoad.length) {
          if ($.isFunction(s)) {
            return s.call(this, toLoad, $.proxy(function (data) {
              var i, j;

              if (data) {
                for (i in data) {
                  if (data.hasOwnProperty(i)) {
                    this._data.massload[i] = data[i];
                  }
                }
              }

              for (i = 0, j = nodes.length; i < j; i++) {
                dom = this.get_node(nodes[i], true);

                if (dom && dom.length) {
                  dom.removeClass("jstree-loading").attr('aria-busy', false);
                }
              }

              parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);
            }, this));
          }

          if (typeof s === 'object' && s && s.url) {
            s = $.extend(true, {}, s);

            if ($.isFunction(s.url)) {
              s.url = s.url.call(this, toLoad);
            }

            if ($.isFunction(s.data)) {
              s.data = s.data.call(this, toLoad);
            }

            return $.ajax(s).done($.proxy(function (data, t, x) {
              var i, j;

              if (data) {
                for (i in data) {
                  if (data.hasOwnProperty(i)) {
                    this._data.massload[i] = data[i];
                  }
                }
              }

              for (i = 0, j = nodes.length; i < j; i++) {
                dom = this.get_node(nodes[i], true);

                if (dom && dom.length) {
                  dom.removeClass("jstree-loading").attr('aria-busy', false);
                }
              }

              parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);
            }, this)).fail($.proxy(function (f) {
              parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);
            }, this));
          }
        }
      }

      return parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);
    };

    this._load_node = function (obj, callback) {
      var data = this._data.massload[obj.id],
          rslt = null,
          dom;

      if (data) {
        rslt = this[typeof data === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof data === 'string' ? $($.parseHTML(data)).filter(function () {
          return this.nodeType !== 3;
        }) : data, function (status) {
          callback.call(this, status);
        });
        dom = this.get_node(obj.id, true);

        if (dom && dom.length) {
          dom.removeClass("jstree-loading").attr('aria-busy', false);
        }

        delete this._data.massload[obj.id];
        return rslt;
      }

      return parent._load_node.call(this, obj, callback);
    };
  };
  /**
   * ### Search plugin
   *
   * Adds search functionality to jsTree.
   */

  /**
   * stores all defaults for the search plugin
   * @name $.jstree.defaults.search
   * @plugin search
   */


  $.jstree.defaults.search = {
    /**
     * a jQuery-like AJAX config, which jstree uses if a server should be queried for results.
     *
     * A `str` (which is the search string) parameter will be added with the request, an optional `inside` parameter will be added if the search is limited to a node id. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.
     * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 3 parameters - the search string, the callback to call with the array of nodes to load, and the optional node ID to limit the search to
     * @name $.jstree.defaults.search.ajax
     * @plugin search
     */
    ajax: false,

    /**
     * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.
     * @name $.jstree.defaults.search.fuzzy
     * @plugin search
     */
    fuzzy: false,

    /**
     * Indicates if the search should be case sensitive. Default is `false`.
     * @name $.jstree.defaults.search.case_sensitive
     * @plugin search
     */
    case_sensitive: false,

    /**
     * Indicates if the tree should be filtered (by default) to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers).
     * This setting can be changed at runtime when calling the search method. Default is `false`.
     * @name $.jstree.defaults.search.show_only_matches
     * @plugin search
     */
    show_only_matches: false,

    /**
     * Indicates if the children of matched element are shown (when show_only_matches is true)
     * This setting can be changed at runtime when calling the search method. Default is `false`.
     * @name $.jstree.defaults.search.show_only_matches_children
     * @plugin search
     */
    show_only_matches_children: false,

    /**
     * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.
     * @name $.jstree.defaults.search.close_opened_onclear
     * @plugin search
     */
    close_opened_onclear: true,

    /**
     * Indicates if only leaf nodes should be included in search results. Default is `false`.
     * @name $.jstree.defaults.search.search_leaves_only
     * @plugin search
     */
    search_leaves_only: false,

    /**
     * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).
     * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.
     * @name $.jstree.defaults.search.search_callback
     * @plugin search
     */
    search_callback: false
  };

  $.jstree.plugins.search = function (options, parent) {
    this.bind = function () {
      parent.bind.call(this);
      this._data.search.str = "";
      this._data.search.dom = $();
      this._data.search.res = [];
      this._data.search.opn = [];
      this._data.search.som = false;
      this._data.search.smc = false;
      this._data.search.hdn = [];
      this.element.on("search.jstree", $.proxy(function (e, data) {
        if (this._data.search.som && data.res.length) {
          var m = this._model.data,
              i,
              j,
              p = [],
              k,
              l;

          for (i = 0, j = data.res.length; i < j; i++) {
            if (m[data.res[i]] && !m[data.res[i]].state.hidden) {
              p.push(data.res[i]);
              p = p.concat(m[data.res[i]].parents);

              if (this._data.search.smc) {
                for (k = 0, l = m[data.res[i]].children_d.length; k < l; k++) {
                  if (m[m[data.res[i]].children_d[k]] && !m[m[data.res[i]].children_d[k]].state.hidden) {
                    p.push(m[data.res[i]].children_d[k]);
                  }
                }
              }
            }
          }

          p = $.vakata.array_remove_item($.vakata.array_unique(p), $.jstree.root);
          this._data.search.hdn = this.hide_all(true);
          this.show_node(p, true);
          this.redraw(true);
        }
      }, this)).on("clear_search.jstree", $.proxy(function (e, data) {
        if (this._data.search.som && data.res.length) {
          this.show_node(this._data.search.hdn, true);
          this.redraw(true);
        }
      }, this));
    };
    /**
     * used to search the tree nodes for a given string
     * @name search(str [, skip_async])
     * @param {String} str the search string
     * @param {Boolean} skip_async if set to true server will not be queried even if configured
     * @param {Boolean} show_only_matches if set to true only matching nodes will be shown (keep in mind this can be very slow on large trees or old browsers)
     * @param {mixed} inside an optional node to whose children to limit the search
     * @param {Boolean} append if set to true the results of this search are appended to the previous search
     * @plugin search
     * @trigger search.jstree
     */


    this.search = function (str, skip_async, show_only_matches, inside, append, show_only_matches_children) {
      if (str === false || $.vakata.trim(str.toString()) === "") {
        return this.clear_search();
      }

      inside = this.get_node(inside);
      inside = inside && inside.id ? inside.id : null;
      str = str.toString();
      var s = this.settings.search,
          a = s.ajax ? s.ajax : false,
          m = this._model.data,
          f = null,
          r = [],
          p = [],
          i,
          j;

      if (this._data.search.res.length && !append) {
        this.clear_search();
      }

      if (show_only_matches === undefined) {
        show_only_matches = s.show_only_matches;
      }

      if (show_only_matches_children === undefined) {
        show_only_matches_children = s.show_only_matches_children;
      }

      if (!skip_async && a !== false) {
        if ($.isFunction(a)) {
          return a.call(this, str, $.proxy(function (d) {
            if (d && d.d) {
              d = d.d;
            }

            this._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {
              this.search(str, true, show_only_matches, inside, append, show_only_matches_children);
            });
          }, this), inside);
        } else {
          a = $.extend({}, a);

          if (!a.data) {
            a.data = {};
          }

          a.data.str = str;

          if (inside) {
            a.data.inside = inside;
          }

          if (this._data.search.lastRequest) {
            this._data.search.lastRequest.abort();
          }

          this._data.search.lastRequest = $.ajax(a).fail($.proxy(function () {
            this._data.core.last_error = {
              'error': 'ajax',
              'plugin': 'search',
              'id': 'search_01',
              'reason': 'Could not load search parents',
              'data': JSON.stringify(a)
            };
            this.settings.core.error.call(this, this._data.core.last_error);
          }, this)).done($.proxy(function (d) {
            if (d && d.d) {
              d = d.d;
            }

            this._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {
              this.search(str, true, show_only_matches, inside, append, show_only_matches_children);
            });
          }, this));
          return this._data.search.lastRequest;
        }
      }

      if (!append) {
        this._data.search.str = str;
        this._data.search.dom = $();
        this._data.search.res = [];
        this._data.search.opn = [];
        this._data.search.som = show_only_matches;
        this._data.search.smc = show_only_matches_children;
      }

      f = new $.vakata.search(str, true, {
        caseSensitive: s.case_sensitive,
        fuzzy: s.fuzzy
      });
      $.each(m[inside ? inside : $.jstree.root].children_d, function (ii, i) {
        var v = m[i];

        if (v.text && !v.state.hidden && (!s.search_leaves_only || v.state.loaded && v.children.length === 0) && (s.search_callback && s.search_callback.call(this, str, v) || !s.search_callback && f.search(v.text).isMatch)) {
          r.push(i);
          p = p.concat(v.parents);
        }
      });

      if (r.length) {
        p = $.vakata.array_unique(p);

        for (i = 0, j = p.length; i < j; i++) {
          if (p[i] !== $.jstree.root && m[p[i]] && this.open_node(p[i], null, 0) === true) {
            this._data.search.opn.push(p[i]);
          }
        }

        if (!append) {
          this._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) {
            return "0123456789".indexOf(v[0]) !== -1 ? '\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex, '\\$&') : v.replace($.jstree.idregex, '\\$&');
          }).join(', #')));
          this._data.search.res = r;
        } else {
          this._data.search.dom = this._data.search.dom.add($(this.element[0].querySelectorAll('#' + $.map(r, function (v) {
            return "0123456789".indexOf(v[0]) !== -1 ? '\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex, '\\$&') : v.replace($.jstree.idregex, '\\$&');
          }).join(', #'))));
          this._data.search.res = $.vakata.array_unique(this._data.search.res.concat(r));
        }

        this._data.search.dom.children(".jstree-anchor").addClass('jstree-search');
      }
      /**
       * triggered after search is complete
       * @event
       * @name search.jstree
       * @param {jQuery} nodes a jQuery collection of matching nodes
       * @param {String} str the search string
       * @param {Array} res a collection of objects represeing the matching nodes
       * @plugin search
       */


      this.trigger('search', {
        nodes: this._data.search.dom,
        str: str,
        res: this._data.search.res,
        show_only_matches: show_only_matches
      });
    };
    /**
     * used to clear the last search (removes classes and shows all nodes if filtering is on)
     * @name clear_search()
     * @plugin search
     * @trigger clear_search.jstree
     */


    this.clear_search = function () {
      if (this.settings.search.close_opened_onclear) {
        this.close_node(this._data.search.opn, 0);
      }
      /**
       * triggered after search is complete
       * @event
       * @name clear_search.jstree
       * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)
       * @param {String} str the search string (the last search string)
       * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)
       * @plugin search
       */


      this.trigger('clear_search', {
        'nodes': this._data.search.dom,
        str: this._data.search.str,
        res: this._data.search.res
      });

      if (this._data.search.res.length) {
        this._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(this._data.search.res, function (v) {
          return "0123456789".indexOf(v[0]) !== -1 ? '\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex, '\\$&') : v.replace($.jstree.idregex, '\\$&');
        }).join(', #')));

        this._data.search.dom.children(".jstree-anchor").removeClass("jstree-search");
      }

      this._data.search.str = "";
      this._data.search.res = [];
      this._data.search.opn = [];
      this._data.search.dom = $();
    };

    this.redraw_node = function (obj, deep, callback, force_render) {
      obj = parent.redraw_node.apply(this, arguments);

      if (obj) {
        if ($.inArray(obj.id, this._data.search.res) !== -1) {
          var i,
              j,
              tmp = null;

          for (i = 0, j = obj.childNodes.length; i < j; i++) {
            if (obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf("jstree-anchor") !== -1) {
              tmp = obj.childNodes[i];
              break;
            }
          }

          if (tmp) {
            tmp.className += ' jstree-search';
          }
        }
      }

      return obj;
    };
  }; // helpers


  (function ($) {
    // from http://kiro.me/projects/fuse.html
    $.vakata.search = function (pattern, txt, options) {
      options = options || {};
      options = $.extend({}, $.vakata.search.defaults, options);

      if (options.fuzzy !== false) {
        options.fuzzy = true;
      }

      pattern = options.caseSensitive ? pattern : pattern.toLowerCase();
      var MATCH_LOCATION = options.location,
          MATCH_DISTANCE = options.distance,
          MATCH_THRESHOLD = options.threshold,
          patternLen = pattern.length,
          matchmask,
          pattern_alphabet,
          match_bitapScore,
          search;

      if (patternLen > 32) {
        options.fuzzy = false;
      }

      if (options.fuzzy) {
        matchmask = 1 << patternLen - 1;

        pattern_alphabet = function () {
          var mask = {},
              i = 0;

          for (i = 0; i < patternLen; i++) {
            mask[pattern.charAt(i)] = 0;
          }

          for (i = 0; i < patternLen; i++) {
            mask[pattern.charAt(i)] |= 1 << patternLen - i - 1;
          }

          return mask;
        }();

        match_bitapScore = function (e, x) {
          var accuracy = e / patternLen,
              proximity = Math.abs(MATCH_LOCATION - x);

          if (!MATCH_DISTANCE) {
            return proximity ? 1.0 : accuracy;
          }

          return accuracy + proximity / MATCH_DISTANCE;
        };
      }

      search = function (text) {
        text = options.caseSensitive ? text : text.toLowerCase();

        if (pattern === text || text.indexOf(pattern) !== -1) {
          return {
            isMatch: true,
            score: 0
          };
        }

        if (!options.fuzzy) {
          return {
            isMatch: false,
            score: 1
          };
        }

        var i,
            j,
            textLen = text.length,
            scoreThreshold = MATCH_THRESHOLD,
            bestLoc = text.indexOf(pattern, MATCH_LOCATION),
            binMin,
            binMid,
            binMax = patternLen + textLen,
            lastRd,
            start,
            finish,
            rd,
            charMatch,
            score = 1,
            locations = [];

        if (bestLoc !== -1) {
          scoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);
          bestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);

          if (bestLoc !== -1) {
            scoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);
          }
        }

        bestLoc = -1;

        for (i = 0; i < patternLen; i++) {
          binMin = 0;
          binMid = binMax;

          while (binMin < binMid) {
            if (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {
              binMin = binMid;
            } else {
              binMax = binMid;
            }

            binMid = Math.floor((binMax - binMin) / 2 + binMin);
          }

          binMax = binMid;
          start = Math.max(1, MATCH_LOCATION - binMid + 1);
          finish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;
          rd = new Array(finish + 2);
          rd[finish + 1] = (1 << i) - 1;

          for (j = finish; j >= start; j--) {
            charMatch = pattern_alphabet[text.charAt(j - 1)];

            if (i === 0) {
              rd[j] = (rd[j + 1] << 1 | 1) & charMatch;
            } else {
              rd[j] = (rd[j + 1] << 1 | 1) & charMatch | ((lastRd[j + 1] | lastRd[j]) << 1 | 1) | lastRd[j + 1];
            }

            if (rd[j] & matchmask) {
              score = match_bitapScore(i, j - 1);

              if (score <= scoreThreshold) {
                scoreThreshold = score;
                bestLoc = j - 1;
                locations.push(bestLoc);

                if (bestLoc > MATCH_LOCATION) {
                  start = Math.max(1, 2 * MATCH_LOCATION - bestLoc);
                } else {
                  break;
                }
              }
            }
          }

          if (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {
            break;
          }

          lastRd = rd;
        }

        return {
          isMatch: bestLoc >= 0,
          score: score
        };
      };

      return txt === true ? {
        'search': search
      } : search(txt);
    };

    $.vakata.search.defaults = {
      location: 0,
      distance: 100,
      threshold: 0.6,
      fuzzy: false,
      caseSensitive: false
    };
  })($); // include the search plugin by default
  // $.jstree.defaults.plugins.push("search");

  /**
   * ### Sort plugin
   *
   * Automatically sorts all siblings in the tree according to a sorting function.
   */

  /**
   * the settings function used to sort the nodes.
   * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.
   * @name $.jstree.defaults.sort
   * @plugin sort
   */


  $.jstree.defaults.sort = function (a, b) {
    //return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);
    return this.get_text(a) > this.get_text(b) ? 1 : -1;
  };

  $.jstree.plugins.sort = function (options, parent) {
    this.bind = function () {
      parent.bind.call(this);
      this.element.on("model.jstree", $.proxy(function (e, data) {
        this.sort(data.parent, true);
      }, this)).on("rename_node.jstree create_node.jstree", $.proxy(function (e, data) {
        this.sort(data.parent || data.node.parent, false);
        this.redraw_node(data.parent || data.node.parent, true);
      }, this)).on("move_node.jstree copy_node.jstree", $.proxy(function (e, data) {
        this.sort(data.parent, false);
        this.redraw_node(data.parent, true);
      }, this));
    };
    /**
     * used to sort a node's children
     * @private
     * @name sort(obj [, deep])
     * @param  {mixed} obj the node
     * @param {Boolean} deep if set to `true` nodes are sorted recursively.
     * @plugin sort
     * @trigger search.jstree
     */


    this.sort = function (obj, deep) {
      var i, j;
      obj = this.get_node(obj);

      if (obj && obj.children && obj.children.length) {
        obj.children.sort($.proxy(this.settings.sort, this));

        if (deep) {
          for (i = 0, j = obj.children_d.length; i < j; i++) {
            this.sort(obj.children_d[i], false);
          }
        }
      }
    };
  }; // include the sort plugin by default
  // $.jstree.defaults.plugins.push("sort");

  /**
   * ### State plugin
   *
   * Saves the state of the tree (selected nodes, opened nodes) on the user's computer using available options (localStorage, cookies, etc)
   */


  var to = false;
  /**
   * stores all defaults for the state plugin
   * @name $.jstree.defaults.state
   * @plugin state
   */

  $.jstree.defaults.state = {
    /**
     * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.
     * @name $.jstree.defaults.state.key
     * @plugin state
     */
    key: 'jstree',

    /**
     * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.
     * @name $.jstree.defaults.state.events
     * @plugin state
     */
    events: 'changed.jstree open_node.jstree close_node.jstree check_node.jstree uncheck_node.jstree',

    /**
     * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.
     * @name $.jstree.defaults.state.ttl
     * @plugin state
     */
    ttl: false,

    /**
     * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.
     * @name $.jstree.defaults.state.filter
     * @plugin state
     */
    filter: false,

    /**
     * Should loaded nodes be restored (setting this to true means that it is possible that the whole tree will be loaded for some users - use with caution). Defaults to `false`
     * @name $.jstree.defaults.state.preserve_loaded
     * @plugin state
     */
    preserve_loaded: false
  };

  $.jstree.plugins.state = function (options, parent) {
    this.bind = function () {
      parent.bind.call(this);
      var bind = $.proxy(function () {
        this.element.on(this.settings.state.events, $.proxy(function () {
          if (to) {
            clearTimeout(to);
          }

          to = setTimeout($.proxy(function () {
            this.save_state();
          }, this), 100);
        }, this));
        /**
         * triggered when the state plugin is finished restoring the state (and immediately after ready if there is no state to restore).
         * @event
         * @name state_ready.jstree
         * @plugin state
         */

        this.trigger('state_ready');
      }, this);
      this.element.on("ready.jstree", $.proxy(function (e, data) {
        this.element.one("restore_state.jstree", bind);

        if (!this.restore_state()) {
          bind();
        }
      }, this));
    };
    /**
     * save the state
     * @name save_state()
     * @plugin state
     */


    this.save_state = function () {
      var tm = this.get_state();

      if (!this.settings.state.preserve_loaded) {
        delete tm.core.loaded;
      }

      var st = {
        'state': tm,
        'ttl': this.settings.state.ttl,
        'sec': +new Date()
      };
      $.vakata.storage.set(this.settings.state.key, JSON.stringify(st));
    };
    /**
     * restore the state from the user's computer
     * @name restore_state()
     * @plugin state
     */


    this.restore_state = function () {
      var k = $.vakata.storage.get(this.settings.state.key);

      if (!!k) {
        try {
          k = JSON.parse(k);
        } catch (ex) {
          return false;
        }
      }

      if (!!k && k.ttl && k.sec && +new Date() - k.sec > k.ttl) {
        return false;
      }

      if (!!k && k.state) {
        k = k.state;
      }

      if (!!k && $.isFunction(this.settings.state.filter)) {
        k = this.settings.state.filter.call(this, k);
      }

      if (!!k) {
        if (!this.settings.state.preserve_loaded) {
          delete k.core.loaded;
        }

        this.element.one("set_state.jstree", function (e, data) {
          data.instance.trigger('restore_state', {
            'state': $.extend(true, {}, k)
          });
        });
        this.set_state(k);
        return true;
      }

      return false;
    };
    /**
     * clear the state on the user's computer
     * @name clear_state()
     * @plugin state
     */


    this.clear_state = function () {
      return $.vakata.storage.del(this.settings.state.key);
    };
  };

  (function ($, undefined) {
    $.vakata.storage = {
      // simply specifying the functions in FF throws an error
      set: function (key, val) {
        return window.localStorage.setItem(key, val);
      },
      get: function (key) {
        return window.localStorage.getItem(key);
      },
      del: function (key) {
        return window.localStorage.removeItem(key);
      }
    };
  })($); // include the state plugin by default
  // $.jstree.defaults.plugins.push("state");

  /**
   * ### Types plugin
   *
   * Makes it possible to add predefined types for groups of nodes, which make it possible to easily control nesting rules and icon for each group.
   */

  /**
   * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).
   *
   * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.
   * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.
   * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.
   * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.
   * * `li_attr` an object of values which will be used to add HTML attributes on the resulting LI DOM node (merged with the node's own data)
   * * `a_attr` an object of values which will be used to add HTML attributes on the resulting A DOM node (merged with the node's own data)
   *
   * There are two predefined types:
   *
   * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.
   * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.
   *
   * @name $.jstree.defaults.types
   * @plugin types
   */


  $.jstree.defaults.types = {
    'default': {}
  };
  $.jstree.defaults.types[$.jstree.root] = {};

  $.jstree.plugins.types = function (options, parent) {
    this.init = function (el, options) {
      var i, j;

      if (options && options.types && options.types['default']) {
        for (i in options.types) {
          if (i !== "default" && i !== $.jstree.root && options.types.hasOwnProperty(i)) {
            for (j in options.types['default']) {
              if (options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {
                options.types[i][j] = options.types['default'][j];
              }
            }
          }
        }
      }

      parent.init.call(this, el, options);
      this._model.data[$.jstree.root].type = $.jstree.root;
    };

    this.refresh = function (skip_loading, forget_state) {
      parent.refresh.call(this, skip_loading, forget_state);
      this._model.data[$.jstree.root].type = $.jstree.root;
    };

    this.bind = function () {
      this.element.on('model.jstree', $.proxy(function (e, data) {
        var m = this._model.data,
            dpc = data.nodes,
            t = this.settings.types,
            i,
            j,
            c = 'default',
            k;

        for (i = 0, j = dpc.length; i < j; i++) {
          c = 'default';

          if (m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {
            c = m[dpc[i]].original.type;
          }

          if (m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {
            c = m[dpc[i]].data.jstree.type;
          }

          m[dpc[i]].type = c;

          if (m[dpc[i]].icon === true && t[c].icon !== undefined) {
            m[dpc[i]].icon = t[c].icon;
          }

          if (t[c].li_attr !== undefined && typeof t[c].li_attr === 'object') {
            for (k in t[c].li_attr) {
              if (t[c].li_attr.hasOwnProperty(k)) {
                if (k === 'id') {
                  continue;
                } else if (m[dpc[i]].li_attr[k] === undefined) {
                  m[dpc[i]].li_attr[k] = t[c].li_attr[k];
                } else if (k === 'class') {
                  m[dpc[i]].li_attr['class'] = t[c].li_attr['class'] + ' ' + m[dpc[i]].li_attr['class'];
                }
              }
            }
          }

          if (t[c].a_attr !== undefined && typeof t[c].a_attr === 'object') {
            for (k in t[c].a_attr) {
              if (t[c].a_attr.hasOwnProperty(k)) {
                if (k === 'id') {
                  continue;
                } else if (m[dpc[i]].a_attr[k] === undefined) {
                  m[dpc[i]].a_attr[k] = t[c].a_attr[k];
                } else if (k === 'href' && m[dpc[i]].a_attr[k] === '#') {
                  m[dpc[i]].a_attr['href'] = t[c].a_attr['href'];
                } else if (k === 'class') {
                  m[dpc[i]].a_attr['class'] = t[c].a_attr['class'] + ' ' + m[dpc[i]].a_attr['class'];
                }
              }
            }
          }
        }

        m[$.jstree.root].type = $.jstree.root;
      }, this));
      parent.bind.call(this);
    };

    this.get_json = function (obj, options, flat) {
      var i,
          j,
          m = this._model.data,
          opt = options ? $.extend(true, {}, options, {
        no_id: false
      }) : {},
          tmp = parent.get_json.call(this, obj, opt, flat);

      if (tmp === false) {
        return false;
      }

      if ($.isArray(tmp)) {
        for (i = 0, j = tmp.length; i < j; i++) {
          tmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : "default";

          if (options && options.no_id) {
            delete tmp[i].id;

            if (tmp[i].li_attr && tmp[i].li_attr.id) {
              delete tmp[i].li_attr.id;
            }

            if (tmp[i].a_attr && tmp[i].a_attr.id) {
              delete tmp[i].a_attr.id;
            }
          }
        }
      } else {
        tmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : "default";

        if (options && options.no_id) {
          tmp = this._delete_ids(tmp);
        }
      }

      return tmp;
    };

    this._delete_ids = function (tmp) {
      if ($.isArray(tmp)) {
        for (var i = 0, j = tmp.length; i < j; i++) {
          tmp[i] = this._delete_ids(tmp[i]);
        }

        return tmp;
      }

      delete tmp.id;

      if (tmp.li_attr && tmp.li_attr.id) {
        delete tmp.li_attr.id;
      }

      if (tmp.a_attr && tmp.a_attr.id) {
        delete tmp.a_attr.id;
      }

      if (tmp.children && $.isArray(tmp.children)) {
        tmp.children = this._delete_ids(tmp.children);
      }

      return tmp;
    };

    this.check = function (chk, obj, par, pos, more) {
      if (parent.check.call(this, chk, obj, par, pos, more) === false) {
        return false;
      }

      obj = obj && obj.id ? obj : this.get_node(obj);
      par = par && par.id ? par : this.get_node(par);
      var m = obj && obj.id ? more && more.origin ? more.origin : $.jstree.reference(obj.id) : null,
          tmp,
          d,
          i,
          j;
      m = m && m._model && m._model.data ? m._model.data : null;

      switch (chk) {
        case "create_node":
        case "move_node":
        case "copy_node":
          if (chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {
            tmp = this.get_rules(par);

            if (tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {
              this._data.core.last_error = {
                'error': 'check',
                'plugin': 'types',
                'id': 'types_01',
                'reason': 'max_children prevents function: ' + chk,
                'data': JSON.stringify({
                  'chk': chk,
                  'pos': pos,
                  'obj': obj && obj.id ? obj.id : false,
                  'par': par && par.id ? par.id : false
                })
              };
              return false;
            }

            if (tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray(obj.type || 'default', tmp.valid_children) === -1) {
              this._data.core.last_error = {
                'error': 'check',
                'plugin': 'types',
                'id': 'types_02',
                'reason': 'valid_children prevents function: ' + chk,
                'data': JSON.stringify({
                  'chk': chk,
                  'pos': pos,
                  'obj': obj && obj.id ? obj.id : false,
                  'par': par && par.id ? par.id : false
                })
              };
              return false;
            }

            if (m && obj.children_d && obj.parents) {
              d = 0;

              for (i = 0, j = obj.children_d.length; i < j; i++) {
                d = Math.max(d, m[obj.children_d[i]].parents.length);
              }

              d = d - obj.parents.length + 1;
            }

            if (d <= 0 || d === undefined) {
              d = 1;
            }

            do {
              if (tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {
                this._data.core.last_error = {
                  'error': 'check',
                  'plugin': 'types',
                  'id': 'types_03',
                  'reason': 'max_depth prevents function: ' + chk,
                  'data': JSON.stringify({
                    'chk': chk,
                    'pos': pos,
                    'obj': obj && obj.id ? obj.id : false,
                    'par': par && par.id ? par.id : false
                  })
                };
                return false;
              }

              par = this.get_node(par.parent);
              tmp = this.get_rules(par);
              d++;
            } while (par);
          }

          break;
      }

      return true;
    };
    /**
     * used to retrieve the type settings object for a node
     * @name get_rules(obj)
     * @param {mixed} obj the node to find the rules for
     * @return {Object}
     * @plugin types
     */


    this.get_rules = function (obj) {
      obj = this.get_node(obj);

      if (!obj) {
        return false;
      }

      var tmp = this.get_type(obj, true);

      if (tmp.max_depth === undefined) {
        tmp.max_depth = -1;
      }

      if (tmp.max_children === undefined) {
        tmp.max_children = -1;
      }

      if (tmp.valid_children === undefined) {
        tmp.valid_children = -1;
      }

      return tmp;
    };
    /**
     * used to retrieve the type string or settings object for a node
     * @name get_type(obj [, rules])
     * @param {mixed} obj the node to find the rules for
     * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned
     * @return {String|Object}
     * @plugin types
     */


    this.get_type = function (obj, rules) {
      obj = this.get_node(obj);
      return !obj ? false : rules ? $.extend({
        'type': obj.type
      }, this.settings.types[obj.type]) : obj.type;
    };
    /**
     * used to change a node's type
     * @name set_type(obj, type)
     * @param {mixed} obj the node to change
     * @param {String} type the new type
     * @plugin types
     */


    this.set_type = function (obj, type) {
      var m = this._model.data,
          t,
          t1,
          t2,
          old_type,
          old_icon,
          k,
          d,
          a;

      if ($.isArray(obj)) {
        obj = obj.slice();

        for (t1 = 0, t2 = obj.length; t1 < t2; t1++) {
          this.set_type(obj[t1], type);
        }

        return true;
      }

      t = this.settings.types;
      obj = this.get_node(obj);

      if (!t[type] || !obj) {
        return false;
      }

      d = this.get_node(obj, true);

      if (d && d.length) {
        a = d.children('.jstree-anchor');
      }

      old_type = obj.type;
      old_icon = this.get_icon(obj);
      obj.type = type;

      if (old_icon === true || !t[old_type] || t[old_type].icon !== undefined && old_icon === t[old_type].icon) {
        this.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);
      } // remove old type props


      if (t[old_type] && t[old_type].li_attr !== undefined && typeof t[old_type].li_attr === 'object') {
        for (k in t[old_type].li_attr) {
          if (t[old_type].li_attr.hasOwnProperty(k)) {
            if (k === 'id') {
              continue;
            } else if (k === 'class') {
              m[obj.id].li_attr['class'] = (m[obj.id].li_attr['class'] || '').replace(t[old_type].li_attr[k], '');

              if (d) {
                d.removeClass(t[old_type].li_attr[k]);
              }
            } else if (m[obj.id].li_attr[k] === t[old_type].li_attr[k]) {
              m[obj.id].li_attr[k] = null;

              if (d) {
                d.removeAttr(k);
              }
            }
          }
        }
      }

      if (t[old_type] && t[old_type].a_attr !== undefined && typeof t[old_type].a_attr === 'object') {
        for (k in t[old_type].a_attr) {
          if (t[old_type].a_attr.hasOwnProperty(k)) {
            if (k === 'id') {
              continue;
            } else if (k === 'class') {
              m[obj.id].a_attr['class'] = (m[obj.id].a_attr['class'] || '').replace(t[old_type].a_attr[k], '');

              if (a) {
                a.removeClass(t[old_type].a_attr[k]);
              }
            } else if (m[obj.id].a_attr[k] === t[old_type].a_attr[k]) {
              if (k === 'href') {
                m[obj.id].a_attr[k] = '#';

                if (a) {
                  a.attr('href', '#');
                }
              } else {
                delete m[obj.id].a_attr[k];

                if (a) {
                  a.removeAttr(k);
                }
              }
            }
          }
        }
      } // add new props


      if (t[type].li_attr !== undefined && typeof t[type].li_attr === 'object') {
        for (k in t[type].li_attr) {
          if (t[type].li_attr.hasOwnProperty(k)) {
            if (k === 'id') {
              continue;
            } else if (m[obj.id].li_attr[k] === undefined) {
              m[obj.id].li_attr[k] = t[type].li_attr[k];

              if (d) {
                if (k === 'class') {
                  d.addClass(t[type].li_attr[k]);
                } else {
                  d.attr(k, t[type].li_attr[k]);
                }
              }
            } else if (k === 'class') {
              m[obj.id].li_attr['class'] = t[type].li_attr[k] + ' ' + m[obj.id].li_attr['class'];

              if (d) {
                d.addClass(t[type].li_attr[k]);
              }
            }
          }
        }
      }

      if (t[type].a_attr !== undefined && typeof t[type].a_attr === 'object') {
        for (k in t[type].a_attr) {
          if (t[type].a_attr.hasOwnProperty(k)) {
            if (k === 'id') {
              continue;
            } else if (m[obj.id].a_attr[k] === undefined) {
              m[obj.id].a_attr[k] = t[type].a_attr[k];

              if (a) {
                if (k === 'class') {
                  a.addClass(t[type].a_attr[k]);
                } else {
                  a.attr(k, t[type].a_attr[k]);
                }
              }
            } else if (k === 'href' && m[obj.id].a_attr[k] === '#') {
              m[obj.id].a_attr['href'] = t[type].a_attr['href'];

              if (a) {
                a.attr('href', t[type].a_attr['href']);
              }
            } else if (k === 'class') {
              m[obj.id].a_attr['class'] = t[type].a_attr['class'] + ' ' + m[obj.id].a_attr['class'];

              if (a) {
                a.addClass(t[type].a_attr[k]);
              }
            }
          }
        }
      }

      return true;
    };
  }; // include the types plugin by default
  // $.jstree.defaults.plugins.push("types");

  /**
   * ### Unique plugin
   *
   * Enforces that no nodes with the same name can coexist as siblings.
   */

  /**
   * stores all defaults for the unique plugin
   * @name $.jstree.defaults.unique
   * @plugin unique
   */


  $.jstree.defaults.unique = {
    /**
     * Indicates if the comparison should be case sensitive. Default is `false`.
     * @name $.jstree.defaults.unique.case_sensitive
     * @plugin unique
     */
    case_sensitive: false,

    /**
     * Indicates if white space should be trimmed before the comparison. Default is `false`.
     * @name $.jstree.defaults.unique.trim_whitespace
     * @plugin unique
     */
    trim_whitespace: false,

    /**
     * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.
     * @name $.jstree.defaults.unique.duplicate
     * @plugin unique
     */
    duplicate: function (name, counter) {
      return name + ' (' + counter + ')';
    }
  };

  $.jstree.plugins.unique = function (options, parent) {
    this.check = function (chk, obj, par, pos, more) {
      if (parent.check.call(this, chk, obj, par, pos, more) === false) {
        return false;
      }

      obj = obj && obj.id ? obj : this.get_node(obj);
      par = par && par.id ? par : this.get_node(par);

      if (!par || !par.children) {
        return true;
      }

      var n = chk === "rename_node" ? pos : obj.text,
          c = [],
          s = this.settings.unique.case_sensitive,
          w = this.settings.unique.trim_whitespace,
          m = this._model.data,
          i,
          j,
          t;

      for (i = 0, j = par.children.length; i < j; i++) {
        t = m[par.children[i]].text;

        if (!s) {
          t = t.toLowerCase();
        }

        if (w) {
          t = t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
        }

        c.push(t);
      }

      if (!s) {
        n = n.toLowerCase();
      }

      if (w) {
        n = n.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
      }

      switch (chk) {
        case "delete_node":
          return true;

        case "rename_node":
          t = obj.text || '';

          if (!s) {
            t = t.toLowerCase();
          }

          if (w) {
            t = t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
          }

          i = $.inArray(n, c) === -1 || obj.text && t === n;

          if (!i) {
            this._data.core.last_error = {
              'error': 'check',
              'plugin': 'unique',
              'id': 'unique_01',
              'reason': 'Child with name ' + n + ' already exists. Preventing: ' + chk,
              'data': JSON.stringify({
                'chk': chk,
                'pos': pos,
                'obj': obj && obj.id ? obj.id : false,
                'par': par && par.id ? par.id : false
              })
            };
          }

          return i;

        case "create_node":
          i = $.inArray(n, c) === -1;

          if (!i) {
            this._data.core.last_error = {
              'error': 'check',
              'plugin': 'unique',
              'id': 'unique_04',
              'reason': 'Child with name ' + n + ' already exists. Preventing: ' + chk,
              'data': JSON.stringify({
                'chk': chk,
                'pos': pos,
                'obj': obj && obj.id ? obj.id : false,
                'par': par && par.id ? par.id : false
              })
            };
          }

          return i;

        case "copy_node":
          i = $.inArray(n, c) === -1;

          if (!i) {
            this._data.core.last_error = {
              'error': 'check',
              'plugin': 'unique',
              'id': 'unique_02',
              'reason': 'Child with name ' + n + ' already exists. Preventing: ' + chk,
              'data': JSON.stringify({
                'chk': chk,
                'pos': pos,
                'obj': obj && obj.id ? obj.id : false,
                'par': par && par.id ? par.id : false
              })
            };
          }

          return i;

        case "move_node":
          i = obj.parent === par.id && (!more || !more.is_multi) || $.inArray(n, c) === -1;

          if (!i) {
            this._data.core.last_error = {
              'error': 'check',
              'plugin': 'unique',
              'id': 'unique_03',
              'reason': 'Child with name ' + n + ' already exists. Preventing: ' + chk,
              'data': JSON.stringify({
                'chk': chk,
                'pos': pos,
                'obj': obj && obj.id ? obj.id : false,
                'par': par && par.id ? par.id : false
              })
            };
          }

          return i;
      }

      return true;
    };

    this.create_node = function (par, node, pos, callback, is_loaded) {
      if (!node || node.text === undefined) {
        if (par === null) {
          par = $.jstree.root;
        }

        par = this.get_node(par);

        if (!par) {
          return parent.create_node.call(this, par, node, pos, callback, is_loaded);
        }

        pos = pos === undefined ? "last" : pos;

        if (!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {
          return parent.create_node.call(this, par, node, pos, callback, is_loaded);
        }

        if (!node) {
          node = {};
        }

        var tmp,
            n,
            dpc,
            i,
            j,
            m = this._model.data,
            s = this.settings.unique.case_sensitive,
            w = this.settings.unique.trim_whitespace,
            cb = this.settings.unique.duplicate,
            t;
        n = tmp = this.get_string('New node');
        dpc = [];

        for (i = 0, j = par.children.length; i < j; i++) {
          t = m[par.children[i]].text;

          if (!s) {
            t = t.toLowerCase();
          }

          if (w) {
            t = t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
          }

          dpc.push(t);
        }

        i = 1;
        t = n;

        if (!s) {
          t = t.toLowerCase();
        }

        if (w) {
          t = t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
        }

        while ($.inArray(t, dpc) !== -1) {
          n = cb.call(this, tmp, ++i).toString();
          t = n;

          if (!s) {
            t = t.toLowerCase();
          }

          if (w) {
            t = t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, '');
          }
        }

        node.text = n;
      }

      return parent.create_node.call(this, par, node, pos, callback, is_loaded);
    };
  }; // include the unique plugin by default
  // $.jstree.defaults.plugins.push("unique");

  /**
   * ### Wholerow plugin
   *
   * Makes each node appear block level. Making selection easier. May cause slow down for large trees in old browsers.
   */


  var div = document.createElement('DIV');
  div.setAttribute('unselectable', 'on');
  div.setAttribute('role', 'presentation');
  div.className = 'jstree-wholerow';
  div.innerHTML = '&#160;';

  $.jstree.plugins.wholerow = function (options, parent) {
    this.bind = function () {
      parent.bind.call(this);
      this.element.on('ready.jstree set_state.jstree', $.proxy(function () {
        this.hide_dots();
      }, this)).on("init.jstree loading.jstree ready.jstree", $.proxy(function () {
        //div.style.height = this._data.core.li_height + 'px';
        this.get_container_ul().addClass('jstree-wholerow-ul');
      }, this)).on("deselect_all.jstree", $.proxy(function (e, data) {
        this.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');
      }, this)).on("changed.jstree", $.proxy(function (e, data) {
        this.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');
        var tmp = false,
            i,
            j;

        for (i = 0, j = data.selected.length; i < j; i++) {
          tmp = this.get_node(data.selected[i], true);

          if (tmp && tmp.length) {
            tmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');
          }
        }
      }, this)).on("open_node.jstree", $.proxy(function (e, data) {
        this.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');
      }, this)).on("hover_node.jstree dehover_node.jstree", $.proxy(function (e, data) {
        if (e.type === "hover_node" && this.is_disabled(data.node)) {
          return;
        }

        this.get_node(data.node, true).children('.jstree-wholerow')[e.type === "hover_node" ? "addClass" : "removeClass"]('jstree-wholerow-hovered');
      }, this)).on("contextmenu.jstree", ".jstree-wholerow", $.proxy(function (e) {
        if (this._data.contextmenu) {
          e.preventDefault();
          var tmp = $.Event('contextmenu', {
            metaKey: e.metaKey,
            ctrlKey: e.ctrlKey,
            altKey: e.altKey,
            shiftKey: e.shiftKey,
            pageX: e.pageX,
            pageY: e.pageY
          });
          $(e.currentTarget).closest(".jstree-node").children(".jstree-anchor").first().trigger(tmp);
        }
      }, this))
      /*!
      .on("mousedown.jstree touchstart.jstree", ".jstree-wholerow", function (e) {
      		if(e.target === e.currentTarget) {
      			var a = $(e.currentTarget).closest(".jstree-node").children(".jstree-anchor");
      			e.target = a[0];
      			a.trigger(e);
      		}
      	})
      */
      .on("click.jstree", ".jstree-wholerow", function (e) {
        e.stopImmediatePropagation();
        var tmp = $.Event('click', {
          metaKey: e.metaKey,
          ctrlKey: e.ctrlKey,
          altKey: e.altKey,
          shiftKey: e.shiftKey
        });
        $(e.currentTarget).closest(".jstree-node").children(".jstree-anchor").first().trigger(tmp).focus();
      }).on("dblclick.jstree", ".jstree-wholerow", function (e) {
        e.stopImmediatePropagation();
        var tmp = $.Event('dblclick', {
          metaKey: e.metaKey,
          ctrlKey: e.ctrlKey,
          altKey: e.altKey,
          shiftKey: e.shiftKey
        });
        $(e.currentTarget).closest(".jstree-node").children(".jstree-anchor").first().trigger(tmp).focus();
      }).on("click.jstree", ".jstree-leaf > .jstree-ocl", $.proxy(function (e) {
        e.stopImmediatePropagation();
        var tmp = $.Event('click', {
          metaKey: e.metaKey,
          ctrlKey: e.ctrlKey,
          altKey: e.altKey,
          shiftKey: e.shiftKey
        });
        $(e.currentTarget).closest(".jstree-node").children(".jstree-anchor").first().trigger(tmp).focus();
      }, this)).on("mouseover.jstree", ".jstree-wholerow, .jstree-icon", $.proxy(function (e) {
        e.stopImmediatePropagation();

        if (!this.is_disabled(e.currentTarget)) {
          this.hover_node(e.currentTarget);
        }

        return false;
      }, this)).on("mouseleave.jstree", ".jstree-node", $.proxy(function (e) {
        this.dehover_node(e.currentTarget);
      }, this));
    };

    this.teardown = function () {
      if (this.settings.wholerow) {
        this.element.find(".jstree-wholerow").remove();
      }

      parent.teardown.call(this);
    };

    this.redraw_node = function (obj, deep, callback, force_render) {
      obj = parent.redraw_node.apply(this, arguments);

      if (obj) {
        var tmp = div.cloneNode(true); //tmp.style.height = this._data.core.li_height + 'px';

        if ($.inArray(obj.id, this._data.core.selected) !== -1) {
          tmp.className += ' jstree-wholerow-clicked';
        }

        if (this._data.core.focused && this._data.core.focused === obj.id) {
          tmp.className += ' jstree-wholerow-hovered';
        }

        obj.insertBefore(tmp, obj.childNodes[0]);
      }

      return obj;
    };
  }; // include the wholerow plugin by default
  // $.jstree.defaults.plugins.push("wholerow");


  if (window.customElements && Object && Object.create) {
    var proto = Object.create(HTMLElement.prototype);

    proto.createdCallback = function () {
      var c = {
        core: {},
        plugins: []
      },
          i;

      for (i in $.jstree.plugins) {
        if ($.jstree.plugins.hasOwnProperty(i) && this.attributes[i]) {
          c.plugins.push(i);

          if (this.getAttribute(i) && JSON.parse(this.getAttribute(i))) {
            c[i] = JSON.parse(this.getAttribute(i));
          }
        }
      }

      for (i in $.jstree.defaults.core) {
        if ($.jstree.defaults.core.hasOwnProperty(i) && this.attributes[i]) {
          c.core[i] = JSON.parse(this.getAttribute(i)) || this.getAttribute(i);
        }
      }

      $(this).jstree(c);
    }; // proto.attributeChangedCallback = function (name, previous, value) { };


    try {
      window.customElements.define("vakata-jstree", function () {}, {
        prototype: proto
      });
    } catch (ignore) {}
  }
});

},{"jquery":38}],40:[function(require,module,exports){
var hasMap = typeof Map === 'function' && Map.prototype;
var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
var mapForEach = hasMap && Map.prototype.forEach;
var hasSet = typeof Set === 'function' && Set.prototype;
var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
var setForEach = hasSet && Set.prototype.forEach;
var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
var booleanValueOf = Boolean.prototype.valueOf;
var objectToString = Object.prototype.toString;
var functionToString = Function.prototype.toString;
var match = String.prototype.match;
var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
var gOPS = Object.getOwnPropertySymbols;
var symToString = typeof Symbol === 'function' ? Symbol.prototype.toString : null;
var isEnumerable = Object.prototype.propertyIsEnumerable;

var inspectCustom = require('./util.inspect').custom;
var inspectSymbol = inspectCustom && isSymbol(inspectCustom) ? inspectCustom : null;

module.exports = function inspect_(obj, options, depth, seen) {
    var opts = options || {};

    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
        throw new TypeError('option "quoteStyle" must be "single" or "double"');
    }
    if (
        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'
            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
            : opts.maxStringLength !== null
        )
    ) {
        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
    }
    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;
    if (typeof customInspect !== 'boolean') {
        throw new TypeError('option "customInspect", if provided, must be `true` or `false`');
    }

    if (
        has(opts, 'indent')
        && opts.indent !== null
        && opts.indent !== '\t'
        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
    ) {
        throw new TypeError('options "indent" must be "\\t", an integer > 0, or `null`');
    }

    if (typeof obj === 'undefined') {
        return 'undefined';
    }
    if (obj === null) {
        return 'null';
    }
    if (typeof obj === 'boolean') {
        return obj ? 'true' : 'false';
    }

    if (typeof obj === 'string') {
        return inspectString(obj, opts);
    }
    if (typeof obj === 'number') {
        if (obj === 0) {
            return Infinity / obj > 0 ? '0' : '-0';
        }
        return String(obj);
    }
    if (typeof obj === 'bigint') {
        return String(obj) + 'n';
    }

    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
    if (typeof depth === 'undefined') { depth = 0; }
    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
        return isArray(obj) ? '[Array]' : '[Object]';
    }

    var indent = getIndent(opts, depth);

    if (typeof seen === 'undefined') {
        seen = [];
    } else if (indexOf(seen, obj) >= 0) {
        return '[Circular]';
    }

    function inspect(value, from, noIndent) {
        if (from) {
            seen = seen.slice();
            seen.push(from);
        }
        if (noIndent) {
            var newOpts = {
                depth: opts.depth
            };
            if (has(opts, 'quoteStyle')) {
                newOpts.quoteStyle = opts.quoteStyle;
            }
            return inspect_(value, newOpts, depth + 1, seen);
        }
        return inspect_(value, opts, depth + 1, seen);
    }

    if (typeof obj === 'function') {
        var name = nameOf(obj);
        var keys = arrObjKeys(obj, inspect);
        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + keys.join(', ') + ' }' : '');
    }
    if (isSymbol(obj)) {
        var symString = symToString.call(obj);
        return typeof obj === 'object' ? markBoxed(symString) : symString;
    }
    if (isElement(obj)) {
        var s = '<' + String(obj.nodeName).toLowerCase();
        var attrs = obj.attributes || [];
        for (var i = 0; i < attrs.length; i++) {
            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
        }
        s += '>';
        if (obj.childNodes && obj.childNodes.length) { s += '...'; }
        s += '</' + String(obj.nodeName).toLowerCase() + '>';
        return s;
    }
    if (isArray(obj)) {
        if (obj.length === 0) { return '[]'; }
        var xs = arrObjKeys(obj, inspect);
        if (indent && !singleLineValues(xs)) {
            return '[' + indentedJoin(xs, indent) + ']';
        }
        return '[ ' + xs.join(', ') + ' ]';
    }
    if (isError(obj)) {
        var parts = arrObjKeys(obj, inspect);
        if (parts.length === 0) { return '[' + String(obj) + ']'; }
        return '{ [' + String(obj) + '] ' + parts.join(', ') + ' }';
    }
    if (typeof obj === 'object' && customInspect) {
        if (inspectSymbol && typeof obj[inspectSymbol] === 'function') {
            return obj[inspectSymbol]();
        } else if (typeof obj.inspect === 'function') {
            return obj.inspect();
        }
    }
    if (isMap(obj)) {
        var mapParts = [];
        mapForEach.call(obj, function (value, key) {
            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
        });
        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
    }
    if (isSet(obj)) {
        var setParts = [];
        setForEach.call(obj, function (value) {
            setParts.push(inspect(value, obj));
        });
        return collectionOf('Set', setSize.call(obj), setParts, indent);
    }
    if (isWeakMap(obj)) {
        return weakCollectionOf('WeakMap');
    }
    if (isWeakSet(obj)) {
        return weakCollectionOf('WeakSet');
    }
    if (isNumber(obj)) {
        return markBoxed(inspect(Number(obj)));
    }
    if (isBigInt(obj)) {
        return markBoxed(inspect(bigIntValueOf.call(obj)));
    }
    if (isBoolean(obj)) {
        return markBoxed(booleanValueOf.call(obj));
    }
    if (isString(obj)) {
        return markBoxed(inspect(String(obj)));
    }
    if (!isDate(obj) && !isRegExp(obj)) {
        var ys = arrObjKeys(obj, inspect);
        if (ys.length === 0) { return '{}'; }
        if (indent) {
            return '{' + indentedJoin(ys, indent) + '}';
        }
        return '{ ' + ys.join(', ') + ' }';
    }
    return String(obj);
};

function wrapQuotes(s, defaultStyle, opts) {
    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
    return quoteChar + s + quoteChar;
}

function quote(s) {
    return String(s).replace(/"/g, '&quot;');
}

function isArray(obj) { return toStr(obj) === '[object Array]'; }
function isDate(obj) { return toStr(obj) === '[object Date]'; }
function isRegExp(obj) { return toStr(obj) === '[object RegExp]'; }
function isError(obj) { return toStr(obj) === '[object Error]'; }
function isSymbol(obj) { return toStr(obj) === '[object Symbol]'; }
function isString(obj) { return toStr(obj) === '[object String]'; }
function isNumber(obj) { return toStr(obj) === '[object Number]'; }
function isBigInt(obj) { return toStr(obj) === '[object BigInt]'; }
function isBoolean(obj) { return toStr(obj) === '[object Boolean]'; }

var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
function has(obj, key) {
    return hasOwn.call(obj, key);
}

function toStr(obj) {
    return objectToString.call(obj);
}

function nameOf(f) {
    if (f.name) { return f.name; }
    var m = match.call(functionToString.call(f), /^function\s*([\w$]+)/);
    if (m) { return m[1]; }
    return null;
}

function indexOf(xs, x) {
    if (xs.indexOf) { return xs.indexOf(x); }
    for (var i = 0, l = xs.length; i < l; i++) {
        if (xs[i] === x) { return i; }
    }
    return -1;
}

function isMap(x) {
    if (!mapSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        mapSize.call(x);
        try {
            setSize.call(x);
        } catch (s) {
            return true;
        }
        return x instanceof Map; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakMap(x) {
    if (!weakMapHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakMapHas.call(x, weakMapHas);
        try {
            weakSetHas.call(x, weakSetHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isSet(x) {
    if (!setSize || !x || typeof x !== 'object') {
        return false;
    }
    try {
        setSize.call(x);
        try {
            mapSize.call(x);
        } catch (m) {
            return true;
        }
        return x instanceof Set; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isWeakSet(x) {
    if (!weakSetHas || !x || typeof x !== 'object') {
        return false;
    }
    try {
        weakSetHas.call(x, weakSetHas);
        try {
            weakMapHas.call(x, weakMapHas);
        } catch (s) {
            return true;
        }
        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
    } catch (e) {}
    return false;
}

function isElement(x) {
    if (!x || typeof x !== 'object') { return false; }
    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
        return true;
    }
    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
}

function inspectString(str, opts) {
    if (str.length > opts.maxStringLength) {
        var remaining = str.length - opts.maxStringLength;
        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
        return inspectString(str.slice(0, opts.maxStringLength), opts) + trailer;
    }
    // eslint-disable-next-line no-control-regex
    var s = str.replace(/(['\\])/g, '\\$1').replace(/[\x00-\x1f]/g, lowbyte);
    return wrapQuotes(s, 'single', opts);
}

function lowbyte(c) {
    var n = c.charCodeAt(0);
    var x = {
        8: 'b',
        9: 't',
        10: 'n',
        12: 'f',
        13: 'r'
    }[n];
    if (x) { return '\\' + x; }
    return '\\x' + (n < 0x10 ? '0' : '') + n.toString(16).toUpperCase();
}

function markBoxed(str) {
    return 'Object(' + str + ')';
}

function weakCollectionOf(type) {
    return type + ' { ? }';
}

function collectionOf(type, size, entries, indent) {
    var joinedEntries = indent ? indentedJoin(entries, indent) : entries.join(', ');
    return type + ' (' + size + ') {' + joinedEntries + '}';
}

function singleLineValues(xs) {
    for (var i = 0; i < xs.length; i++) {
        if (indexOf(xs[i], '\n') >= 0) {
            return false;
        }
    }
    return true;
}

function getIndent(opts, depth) {
    var baseIndent;
    if (opts.indent === '\t') {
        baseIndent = '\t';
    } else if (typeof opts.indent === 'number' && opts.indent > 0) {
        baseIndent = Array(opts.indent + 1).join(' ');
    } else {
        return null;
    }
    return {
        base: baseIndent,
        prev: Array(depth + 1).join(baseIndent)
    };
}

function indentedJoin(xs, indent) {
    if (xs.length === 0) { return ''; }
    var lineJoiner = '\n' + indent.prev + indent.base;
    return lineJoiner + xs.join(',' + lineJoiner) + '\n' + indent.prev;
}

function arrObjKeys(obj, inspect) {
    var isArr = isArray(obj);
    var xs = [];
    if (isArr) {
        xs.length = obj.length;
        for (var i = 0; i < obj.length; i++) {
            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
        }
    }
    for (var key in obj) { // eslint-disable-line no-restricted-syntax
        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
        if ((/[^\w$]/).test(key)) {
            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
        } else {
            xs.push(key + ': ' + inspect(obj[key], obj));
        }
    }
    if (typeof gOPS === 'function') {
        var syms = gOPS(obj);
        for (var j = 0; j < syms.length; j++) {
            if (isEnumerable.call(obj, syms[j])) {
                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
            }
        }
    }
    return xs;
}

},{"./util.inspect":6}],41:[function(require,module,exports){
'use strict';

var numberIsNaN = function (value) {
	return value !== value;
};

module.exports = function is(a, b) {
	if (a === 0 && b === 0) {
		return 1 / a === 1 / b;
	}
	if (a === b) {
		return true;
	}
	if (numberIsNaN(a) && numberIsNaN(b)) {
		return true;
	}
	return false;
};


},{}],42:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var callBind = require('call-bind');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var polyfill = callBind(getPolyfill(), Object);

define(polyfill, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = polyfill;

},{"./implementation":41,"./polyfill":43,"./shim":44,"call-bind":9,"define-properties":12}],43:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

module.exports = function getPolyfill() {
	return typeof Object.is === 'function' ? Object.is : implementation;
};

},{"./implementation":41}],44:[function(require,module,exports){
'use strict';

var getPolyfill = require('./polyfill');
var define = require('define-properties');

module.exports = function shimObjectIs() {
	var polyfill = getPolyfill();
	define(Object, { is: polyfill }, {
		is: function testObjectIs() {
			return Object.is !== polyfill;
		}
	});
	return polyfill;
};

},{"./polyfill":43,"define-properties":12}],45:[function(require,module,exports){
'use strict';

var keysShim;
if (!Object.keys) {
	// modified from https://github.com/es-shims/es5-shim
	var has = Object.prototype.hasOwnProperty;
	var toStr = Object.prototype.toString;
	var isArgs = require('./isArguments'); // eslint-disable-line global-require
	var isEnumerable = Object.prototype.propertyIsEnumerable;
	var hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');
	var hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');
	var dontEnums = [
		'toString',
		'toLocaleString',
		'valueOf',
		'hasOwnProperty',
		'isPrototypeOf',
		'propertyIsEnumerable',
		'constructor'
	];
	var equalsConstructorPrototype = function (o) {
		var ctor = o.constructor;
		return ctor && ctor.prototype === o;
	};
	var excludedKeys = {
		$applicationCache: true,
		$console: true,
		$external: true,
		$frame: true,
		$frameElement: true,
		$frames: true,
		$innerHeight: true,
		$innerWidth: true,
		$onmozfullscreenchange: true,
		$onmozfullscreenerror: true,
		$outerHeight: true,
		$outerWidth: true,
		$pageXOffset: true,
		$pageYOffset: true,
		$parent: true,
		$scrollLeft: true,
		$scrollTop: true,
		$scrollX: true,
		$scrollY: true,
		$self: true,
		$webkitIndexedDB: true,
		$webkitStorageInfo: true,
		$window: true
	};
	var hasAutomationEqualityBug = (function () {
		/* global window */
		if (typeof window === 'undefined') { return false; }
		for (var k in window) {
			try {
				if (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {
					try {
						equalsConstructorPrototype(window[k]);
					} catch (e) {
						return true;
					}
				}
			} catch (e) {
				return true;
			}
		}
		return false;
	}());
	var equalsConstructorPrototypeIfNotBuggy = function (o) {
		/* global window */
		if (typeof window === 'undefined' || !hasAutomationEqualityBug) {
			return equalsConstructorPrototype(o);
		}
		try {
			return equalsConstructorPrototype(o);
		} catch (e) {
			return false;
		}
	};

	keysShim = function keys(object) {
		var isObject = object !== null && typeof object === 'object';
		var isFunction = toStr.call(object) === '[object Function]';
		var isArguments = isArgs(object);
		var isString = isObject && toStr.call(object) === '[object String]';
		var theKeys = [];

		if (!isObject && !isFunction && !isArguments) {
			throw new TypeError('Object.keys called on a non-object');
		}

		var skipProto = hasProtoEnumBug && isFunction;
		if (isString && object.length > 0 && !has.call(object, 0)) {
			for (var i = 0; i < object.length; ++i) {
				theKeys.push(String(i));
			}
		}

		if (isArguments && object.length > 0) {
			for (var j = 0; j < object.length; ++j) {
				theKeys.push(String(j));
			}
		} else {
			for (var name in object) {
				if (!(skipProto && name === 'prototype') && has.call(object, name)) {
					theKeys.push(String(name));
				}
			}
		}

		if (hasDontEnumBug) {
			var skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);

			for (var k = 0; k < dontEnums.length; ++k) {
				if (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {
					theKeys.push(dontEnums[k]);
				}
			}
		}
		return theKeys;
	};
}
module.exports = keysShim;

},{"./isArguments":47}],46:[function(require,module,exports){
'use strict';

var slice = Array.prototype.slice;
var isArgs = require('./isArguments');

var origKeys = Object.keys;
var keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');

var originalKeys = Object.keys;

keysShim.shim = function shimObjectKeys() {
	if (Object.keys) {
		var keysWorksWithArguments = (function () {
			// Safari 5.0 bug
			var args = Object.keys(arguments);
			return args && args.length === arguments.length;
		}(1, 2));
		if (!keysWorksWithArguments) {
			Object.keys = function keys(object) { // eslint-disable-line func-name-matching
				if (isArgs(object)) {
					return originalKeys(slice.call(object));
				}
				return originalKeys(object);
			};
		}
	} else {
		Object.keys = keysShim;
	}
	return Object.keys || keysShim;
};

module.exports = keysShim;

},{"./implementation":45,"./isArguments":47}],47:[function(require,module,exports){
'use strict';

var toStr = Object.prototype.toString;

module.exports = function isArguments(value) {
	var str = toStr.call(value);
	var isArgs = str === '[object Arguments]';
	if (!isArgs) {
		isArgs = str !== '[object Array]' &&
			value !== null &&
			typeof value === 'object' &&
			typeof value.length === 'number' &&
			value.length >= 0 &&
			toStr.call(value.callee) === '[object Function]';
	}
	return isArgs;
};

},{}],48:[function(require,module,exports){
'use strict';

// modified from https://github.com/es-shims/es6-shim
var keys = require('object-keys');
var canBeObject = function (obj) {
	return typeof obj !== 'undefined' && obj !== null;
};
var hasSymbols = require('has-symbols/shams')();
var callBound = require('call-bind/callBound');
var toObject = Object;
var $push = callBound('Array.prototype.push');
var $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');
var originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;

// eslint-disable-next-line no-unused-vars
module.exports = function assign(target, source1) {
	if (!canBeObject(target)) { throw new TypeError('target must be an object'); }
	var objTarget = toObject(target);
	var s, source, i, props, syms, value, key;
	for (s = 1; s < arguments.length; ++s) {
		source = toObject(arguments[s]);
		props = keys(source);
		var getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);
		if (getSymbols) {
			syms = getSymbols(source);
			for (i = 0; i < syms.length; ++i) {
				key = syms[i];
				if ($propIsEnumerable(source, key)) {
					$push(props, key);
				}
			}
		}
		for (i = 0; i < props.length; ++i) {
			key = props[i];
			value = source[key];
			if ($propIsEnumerable(source, key)) {
				objTarget[key] = value;
			}
		}
	}
	return objTarget;
};

},{"call-bind/callBound":8,"has-symbols/shams":22,"object-keys":46}],49:[function(require,module,exports){
'use strict';

var defineProperties = require('define-properties');
var callBind = require('call-bind');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var polyfill = callBind.apply(getPolyfill());
// eslint-disable-next-line no-unused-vars
var bound = function assign(target, source1) {
	return polyfill(Object, arguments);
};

defineProperties(bound, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = bound;

},{"./implementation":48,"./polyfill":50,"./shim":51,"call-bind":9,"define-properties":12}],50:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var lacksProperEnumerationOrder = function () {
	if (!Object.assign) {
		return false;
	}
	/*
	 * v8, specifically in node 4.x, has a bug with incorrect property enumeration order
	 * note: this does not detect the bug unless there's 20 characters
	 */
	var str = 'abcdefghijklmnopqrst';
	var letters = str.split('');
	var map = {};
	for (var i = 0; i < letters.length; ++i) {
		map[letters[i]] = letters[i];
	}
	var obj = Object.assign({}, map);
	var actual = '';
	for (var k in obj) {
		actual += k;
	}
	return str !== actual;
};

var assignHasPendingExceptions = function () {
	if (!Object.assign || !Object.preventExtensions) {
		return false;
	}
	/*
	 * Firefox 37 still has "pending exception" logic in its Object.assign implementation,
	 * which is 72% slower than our shim, and Firefox 40's native implementation.
	 */
	var thrower = Object.preventExtensions({ 1: 2 });
	try {
		Object.assign(thrower, 'xy');
	} catch (e) {
		return thrower[1] === 'y';
	}
	return false;
};

module.exports = function getPolyfill() {
	if (!Object.assign) {
		return implementation;
	}
	if (lacksProperEnumerationOrder()) {
		return implementation;
	}
	if (assignHasPendingExceptions()) {
		return implementation;
	}
	return Object.assign;
};

},{"./implementation":48}],51:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var getPolyfill = require('./polyfill');

module.exports = function shimAssign() {
	var polyfill = getPolyfill();
	define(
		Object,
		{ assign: polyfill },
		{ assign: function () { return Object.assign !== polyfill; } }
	);
	return polyfill;
};

},{"./polyfill":50,"define-properties":12}],52:[function(require,module,exports){
// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };

},{}],53:[function(require,module,exports){
(function (global){(function (){
/*! https://mths.be/punycode v1.4.1 by @mathias */
;(function(root) {

	/** Detect free variables */
	var freeExports = typeof exports == 'object' && exports &&
		!exports.nodeType && exports;
	var freeModule = typeof module == 'object' && module &&
		!module.nodeType && module;
	var freeGlobal = typeof global == 'object' && global;
	if (
		freeGlobal.global === freeGlobal ||
		freeGlobal.window === freeGlobal ||
		freeGlobal.self === freeGlobal
	) {
		root = freeGlobal;
	}

	/**
	 * The `punycode` object.
	 * @name punycode
	 * @type Object
	 */
	var punycode,

	/** Highest positive signed 32-bit float value */
	maxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1

	/** Bootstring parameters */
	base = 36,
	tMin = 1,
	tMax = 26,
	skew = 38,
	damp = 700,
	initialBias = 72,
	initialN = 128, // 0x80
	delimiter = '-', // '\x2D'

	/** Regular expressions */
	regexPunycode = /^xn--/,
	regexNonASCII = /[^\x20-\x7E]/, // unprintable ASCII chars + non-ASCII chars
	regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g, // RFC 3490 separators

	/** Error messages */
	errors = {
		'overflow': 'Overflow: input needs wider integers to process',
		'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
		'invalid-input': 'Invalid input'
	},

	/** Convenience shortcuts */
	baseMinusTMin = base - tMin,
	floor = Math.floor,
	stringFromCharCode = String.fromCharCode,

	/** Temporary variable */
	key;

	/*--------------------------------------------------------------------------*/

	/**
	 * A generic error utility function.
	 * @private
	 * @param {String} type The error type.
	 * @returns {Error} Throws a `RangeError` with the applicable error message.
	 */
	function error(type) {
		throw new RangeError(errors[type]);
	}

	/**
	 * A generic `Array#map` utility function.
	 * @private
	 * @param {Array} array The array to iterate over.
	 * @param {Function} callback The function that gets called for every array
	 * item.
	 * @returns {Array} A new array of values returned by the callback function.
	 */
	function map(array, fn) {
		var length = array.length;
		var result = [];
		while (length--) {
			result[length] = fn(array[length]);
		}
		return result;
	}

	/**
	 * A simple `Array#map`-like wrapper to work with domain name strings or email
	 * addresses.
	 * @private
	 * @param {String} domain The domain name or email address.
	 * @param {Function} callback The function that gets called for every
	 * character.
	 * @returns {Array} A new string of characters returned by the callback
	 * function.
	 */
	function mapDomain(string, fn) {
		var parts = string.split('@');
		var result = '';
		if (parts.length > 1) {
			// In email addresses, only the domain name should be punycoded. Leave
			// the local part (i.e. everything up to `@`) intact.
			result = parts[0] + '@';
			string = parts[1];
		}
		// Avoid `split(regex)` for IE8 compatibility. See #17.
		string = string.replace(regexSeparators, '\x2E');
		var labels = string.split('.');
		var encoded = map(labels, fn).join('.');
		return result + encoded;
	}

	/**
	 * Creates an array containing the numeric code points of each Unicode
	 * character in the string. While JavaScript uses UCS-2 internally,
	 * this function will convert a pair of surrogate halves (each of which
	 * UCS-2 exposes as separate characters) into a single code point,
	 * matching UTF-16.
	 * @see `punycode.ucs2.encode`
	 * @see <https://mathiasbynens.be/notes/javascript-encoding>
	 * @memberOf punycode.ucs2
	 * @name decode
	 * @param {String} string The Unicode input string (UCS-2).
	 * @returns {Array} The new array of code points.
	 */
	function ucs2decode(string) {
		var output = [],
		    counter = 0,
		    length = string.length,
		    value,
		    extra;
		while (counter < length) {
			value = string.charCodeAt(counter++);
			if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
				// high surrogate, and there is a next character
				extra = string.charCodeAt(counter++);
				if ((extra & 0xFC00) == 0xDC00) { // low surrogate
					output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
				} else {
					// unmatched surrogate; only append this code unit, in case the next
					// code unit is the high surrogate of a surrogate pair
					output.push(value);
					counter--;
				}
			} else {
				output.push(value);
			}
		}
		return output;
	}

	/**
	 * Creates a string based on an array of numeric code points.
	 * @see `punycode.ucs2.decode`
	 * @memberOf punycode.ucs2
	 * @name encode
	 * @param {Array} codePoints The array of numeric code points.
	 * @returns {String} The new Unicode string (UCS-2).
	 */
	function ucs2encode(array) {
		return map(array, function(value) {
			var output = '';
			if (value > 0xFFFF) {
				value -= 0x10000;
				output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
				value = 0xDC00 | value & 0x3FF;
			}
			output += stringFromCharCode(value);
			return output;
		}).join('');
	}

	/**
	 * Converts a basic code point into a digit/integer.
	 * @see `digitToBasic()`
	 * @private
	 * @param {Number} codePoint The basic numeric code point value.
	 * @returns {Number} The numeric value of a basic code point (for use in
	 * representing integers) in the range `0` to `base - 1`, or `base` if
	 * the code point does not represent a value.
	 */
	function basicToDigit(codePoint) {
		if (codePoint - 48 < 10) {
			return codePoint - 22;
		}
		if (codePoint - 65 < 26) {
			return codePoint - 65;
		}
		if (codePoint - 97 < 26) {
			return codePoint - 97;
		}
		return base;
	}

	/**
	 * Converts a digit/integer into a basic code point.
	 * @see `basicToDigit()`
	 * @private
	 * @param {Number} digit The numeric value of a basic code point.
	 * @returns {Number} The basic code point whose value (when used for
	 * representing integers) is `digit`, which needs to be in the range
	 * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
	 * used; else, the lowercase form is used. The behavior is undefined
	 * if `flag` is non-zero and `digit` has no uppercase form.
	 */
	function digitToBasic(digit, flag) {
		//  0..25 map to ASCII a..z or A..Z
		// 26..35 map to ASCII 0..9
		return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
	}

	/**
	 * Bias adaptation function as per section 3.4 of RFC 3492.
	 * https://tools.ietf.org/html/rfc3492#section-3.4
	 * @private
	 */
	function adapt(delta, numPoints, firstTime) {
		var k = 0;
		delta = firstTime ? floor(delta / damp) : delta >> 1;
		delta += floor(delta / numPoints);
		for (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {
			delta = floor(delta / baseMinusTMin);
		}
		return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
	}

	/**
	 * Converts a Punycode string of ASCII-only symbols to a string of Unicode
	 * symbols.
	 * @memberOf punycode
	 * @param {String} input The Punycode string of ASCII-only symbols.
	 * @returns {String} The resulting string of Unicode symbols.
	 */
	function decode(input) {
		// Don't use UCS-2
		var output = [],
		    inputLength = input.length,
		    out,
		    i = 0,
		    n = initialN,
		    bias = initialBias,
		    basic,
		    j,
		    index,
		    oldi,
		    w,
		    k,
		    digit,
		    t,
		    /** Cached calculation results */
		    baseMinusT;

		// Handle the basic code points: let `basic` be the number of input code
		// points before the last delimiter, or `0` if there is none, then copy
		// the first basic code points to the output.

		basic = input.lastIndexOf(delimiter);
		if (basic < 0) {
			basic = 0;
		}

		for (j = 0; j < basic; ++j) {
			// if it's not a basic code point
			if (input.charCodeAt(j) >= 0x80) {
				error('not-basic');
			}
			output.push(input.charCodeAt(j));
		}

		// Main decoding loop: start just after the last delimiter if any basic code
		// points were copied; start at the beginning otherwise.

		for (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {

			// `index` is the index of the next character to be consumed.
			// Decode a generalized variable-length integer into `delta`,
			// which gets added to `i`. The overflow checking is easier
			// if we increase `i` as we go, then subtract off its starting
			// value at the end to obtain `delta`.
			for (oldi = i, w = 1, k = base; /* no condition */; k += base) {

				if (index >= inputLength) {
					error('invalid-input');
				}

				digit = basicToDigit(input.charCodeAt(index++));

				if (digit >= base || digit > floor((maxInt - i) / w)) {
					error('overflow');
				}

				i += digit * w;
				t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);

				if (digit < t) {
					break;
				}

				baseMinusT = base - t;
				if (w > floor(maxInt / baseMinusT)) {
					error('overflow');
				}

				w *= baseMinusT;

			}

			out = output.length + 1;
			bias = adapt(i - oldi, out, oldi == 0);

			// `i` was supposed to wrap around from `out` to `0`,
			// incrementing `n` each time, so we'll fix that now:
			if (floor(i / out) > maxInt - n) {
				error('overflow');
			}

			n += floor(i / out);
			i %= out;

			// Insert `n` at position `i` of the output
			output.splice(i++, 0, n);

		}

		return ucs2encode(output);
	}

	/**
	 * Converts a string of Unicode symbols (e.g. a domain name label) to a
	 * Punycode string of ASCII-only symbols.
	 * @memberOf punycode
	 * @param {String} input The string of Unicode symbols.
	 * @returns {String} The resulting Punycode string of ASCII-only symbols.
	 */
	function encode(input) {
		var n,
		    delta,
		    handledCPCount,
		    basicLength,
		    bias,
		    j,
		    m,
		    q,
		    k,
		    t,
		    currentValue,
		    output = [],
		    /** `inputLength` will hold the number of code points in `input`. */
		    inputLength,
		    /** Cached calculation results */
		    handledCPCountPlusOne,
		    baseMinusT,
		    qMinusT;

		// Convert the input in UCS-2 to Unicode
		input = ucs2decode(input);

		// Cache the length
		inputLength = input.length;

		// Initialize the state
		n = initialN;
		delta = 0;
		bias = initialBias;

		// Handle the basic code points
		for (j = 0; j < inputLength; ++j) {
			currentValue = input[j];
			if (currentValue < 0x80) {
				output.push(stringFromCharCode(currentValue));
			}
		}

		handledCPCount = basicLength = output.length;

		// `handledCPCount` is the number of code points that have been handled;
		// `basicLength` is the number of basic code points.

		// Finish the basic string - if it is not empty - with a delimiter
		if (basicLength) {
			output.push(delimiter);
		}

		// Main encoding loop:
		while (handledCPCount < inputLength) {

			// All non-basic code points < n have been handled already. Find the next
			// larger one:
			for (m = maxInt, j = 0; j < inputLength; ++j) {
				currentValue = input[j];
				if (currentValue >= n && currentValue < m) {
					m = currentValue;
				}
			}

			// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
			// but guard against overflow
			handledCPCountPlusOne = handledCPCount + 1;
			if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
				error('overflow');
			}

			delta += (m - n) * handledCPCountPlusOne;
			n = m;

			for (j = 0; j < inputLength; ++j) {
				currentValue = input[j];

				if (currentValue < n && ++delta > maxInt) {
					error('overflow');
				}

				if (currentValue == n) {
					// Represent delta as a generalized variable-length integer
					for (q = delta, k = base; /* no condition */; k += base) {
						t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
						if (q < t) {
							break;
						}
						qMinusT = q - t;
						baseMinusT = base - t;
						output.push(
							stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))
						);
						q = floor(qMinusT / baseMinusT);
					}

					output.push(stringFromCharCode(digitToBasic(q, 0)));
					bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
					delta = 0;
					++handledCPCount;
				}
			}

			++delta;
			++n;

		}
		return output.join('');
	}

	/**
	 * Converts a Punycode string representing a domain name or an email address
	 * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
	 * it doesn't matter if you call it on a string that has already been
	 * converted to Unicode.
	 * @memberOf punycode
	 * @param {String} input The Punycoded domain name or email address to
	 * convert to Unicode.
	 * @returns {String} The Unicode representation of the given Punycode
	 * string.
	 */
	function toUnicode(input) {
		return mapDomain(input, function(string) {
			return regexPunycode.test(string)
				? decode(string.slice(4).toLowerCase())
				: string;
		});
	}

	/**
	 * Converts a Unicode string representing a domain name or an email address to
	 * Punycode. Only the non-ASCII parts of the domain name will be converted,
	 * i.e. it doesn't matter if you call it with a domain that's already in
	 * ASCII.
	 * @memberOf punycode
	 * @param {String} input The domain name or email address to convert, as a
	 * Unicode string.
	 * @returns {String} The Punycode representation of the given domain name or
	 * email address.
	 */
	function toASCII(input) {
		return mapDomain(input, function(string) {
			return regexNonASCII.test(string)
				? 'xn--' + encode(string)
				: string;
		});
	}

	/*--------------------------------------------------------------------------*/

	/** Define the public API */
	punycode = {
		/**
		 * A string representing the current Punycode.js version number.
		 * @memberOf punycode
		 * @type String
		 */
		'version': '1.4.1',
		/**
		 * An object of methods to convert from JavaScript's internal character
		 * representation (UCS-2) to Unicode code points, and back.
		 * @see <https://mathiasbynens.be/notes/javascript-encoding>
		 * @memberOf punycode
		 * @type Object
		 */
		'ucs2': {
			'decode': ucs2decode,
			'encode': ucs2encode
		},
		'decode': decode,
		'encode': encode,
		'toASCII': toASCII,
		'toUnicode': toUnicode
	};

	/** Expose `punycode` */
	// Some AMD build optimizers, like r.js, check for specific condition patterns
	// like the following:
	if (
		typeof define == 'function' &&
		typeof define.amd == 'object' &&
		define.amd
	) {
		define('punycode', function() {
			return punycode;
		});
	} else if (freeExports && freeModule) {
		if (module.exports == freeExports) {
			// in Node.js, io.js, or RingoJS v0.8.0+
			freeModule.exports = punycode;
		} else {
			// in Narwhal or RingoJS v0.7.0-
			for (key in punycode) {
				punycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);
			}
		}
	} else {
		// in Rhino or a web browser
		root.punycode = punycode;
	}

}(this));

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{}],54:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

// If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707
function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function(qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);

  var maxKeys = 1000;
  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length;
  // maxKeys <= 0 means that we should not limit keys count
  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr, vstr, k, v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

},{}],55:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var stringifyPrimitive = function(v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function(obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';
  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function(k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
      if (isArray(obj[k])) {
        return map(obj[k], function(v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);

  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq +
         encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map (xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];
  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }
  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];
  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }
  return res;
};

},{}],56:[function(require,module,exports){
'use strict';

exports.decode = exports.parse = require('./decode');
exports.encode = exports.stringify = require('./encode');

},{"./decode":54,"./encode":55}],57:[function(require,module,exports){
'use strict';

var $Object = Object;
var $TypeError = TypeError;

module.exports = function flags() {
	if (this != null && this !== $Object(this)) {
		throw new $TypeError('RegExp.prototype.flags getter called on non-object');
	}
	var result = '';
	if (this.global) {
		result += 'g';
	}
	if (this.ignoreCase) {
		result += 'i';
	}
	if (this.multiline) {
		result += 'm';
	}
	if (this.dotAll) {
		result += 's';
	}
	if (this.unicode) {
		result += 'u';
	}
	if (this.sticky) {
		result += 'y';
	}
	return result;
};

},{}],58:[function(require,module,exports){
'use strict';

var define = require('define-properties');
var callBind = require('call-bind');

var implementation = require('./implementation');
var getPolyfill = require('./polyfill');
var shim = require('./shim');

var flagsBound = callBind(implementation);

define(flagsBound, {
	getPolyfill: getPolyfill,
	implementation: implementation,
	shim: shim
});

module.exports = flagsBound;

},{"./implementation":57,"./polyfill":59,"./shim":60,"call-bind":9,"define-properties":12}],59:[function(require,module,exports){
'use strict';

var implementation = require('./implementation');

var supportsDescriptors = require('define-properties').supportsDescriptors;
var $gOPD = Object.getOwnPropertyDescriptor;
var $TypeError = TypeError;

module.exports = function getPolyfill() {
	if (!supportsDescriptors) {
		throw new $TypeError('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
	}
	if ((/a/mig).flags === 'gim') {
		var descriptor = $gOPD(RegExp.prototype, 'flags');
		if (descriptor && typeof descriptor.get === 'function' && typeof (/a/).dotAll === 'boolean') {
			return descriptor.get;
		}
	}
	return implementation;
};

},{"./implementation":57,"define-properties":12}],60:[function(require,module,exports){
'use strict';

var supportsDescriptors = require('define-properties').supportsDescriptors;
var getPolyfill = require('./polyfill');
var gOPD = Object.getOwnPropertyDescriptor;
var defineProperty = Object.defineProperty;
var TypeErr = TypeError;
var getProto = Object.getPrototypeOf;
var regex = /a/;

module.exports = function shimFlags() {
	if (!supportsDescriptors || !getProto) {
		throw new TypeErr('RegExp.prototype.flags requires a true ES5 environment that supports property descriptors');
	}
	var polyfill = getPolyfill();
	var proto = getProto(regex);
	var descriptor = gOPD(proto, 'flags');
	if (!descriptor || descriptor.get !== polyfill) {
		defineProperty(proto, 'flags', {
			configurable: true,
			enumerable: false,
			get: polyfill
		});
	}
	return polyfill;
};

},{"./polyfill":59,"define-properties":12}],61:[function(require,module,exports){
(function (Buffer){(function (){
'use strict'
module.exports = rfdc

function copyBuffer (cur) {
  if (cur instanceof Buffer) {
    return Buffer.from(cur)
  }

  return new cur.constructor(cur.buffer.slice(), cur.byteOffset, cur.length)
}

function rfdc (opts) {
  opts = opts || {}

  if (opts.circles) return rfdcCircles(opts)
  return opts.proto ? cloneProto : clone

  function cloneArray (a, fn) {
    var keys = Object.keys(a)
    var a2 = new Array(keys.length)
    for (var i = 0; i < keys.length; i++) {
      var k = keys[i]
      var cur = a[k]
      if (typeof cur !== 'object' || cur === null) {
        a2[k] = cur
      } else if (cur instanceof Date) {
        a2[k] = new Date(cur)
      } else if (ArrayBuffer.isView(cur)) {
        a2[k] = copyBuffer(cur)
      } else {
        a2[k] = fn(cur)
      }
    }
    return a2
  }

  function clone (o) {
    if (typeof o !== 'object' || o === null) return o
    if (o instanceof Date) return new Date(o)
    if (Array.isArray(o)) return cloneArray(o, clone)
    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))
    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))
    var o2 = {}
    for (var k in o) {
      if (Object.hasOwnProperty.call(o, k) === false) continue
      var cur = o[k]
      if (typeof cur !== 'object' || cur === null) {
        o2[k] = cur
      } else if (cur instanceof Date) {
        o2[k] = new Date(cur)
      } else if (cur instanceof Map) {
        o2[k] = new Map(cloneArray(Array.from(cur), clone))
      } else if (cur instanceof Set) {
        o2[k] = new Set(cloneArray(Array.from(cur), clone))
      } else if (ArrayBuffer.isView(cur)) {
        o2[k] = copyBuffer(cur)
      } else {
        o2[k] = clone(cur)
      }
    }
    return o2
  }

  function cloneProto (o) {
    if (typeof o !== 'object' || o === null) return o
    if (o instanceof Date) return new Date(o)
    if (Array.isArray(o)) return cloneArray(o, cloneProto)
    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))
    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))
    var o2 = {}
    for (var k in o) {
      var cur = o[k]
      if (typeof cur !== 'object' || cur === null) {
        o2[k] = cur
      } else if (cur instanceof Date) {
        o2[k] = new Date(cur)
      } else if (cur instanceof Map) {
        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))
      } else if (cur instanceof Set) {
        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))
      } else if (ArrayBuffer.isView(cur)) {
        o2[k] = copyBuffer(cur)
      } else {
        o2[k] = cloneProto(cur)
      }
    }
    return o2
  }
}

function rfdcCircles (opts) {
  var refs = []
  var refsNew = []

  return opts.proto ? cloneProto : clone

  function cloneArray (a, fn) {
    var keys = Object.keys(a)
    var a2 = new Array(keys.length)
    for (var i = 0; i < keys.length; i++) {
      var k = keys[i]
      var cur = a[k]
      if (typeof cur !== 'object' || cur === null) {
        a2[k] = cur
      } else if (cur instanceof Date) {
        a2[k] = new Date(cur)
      } else if (ArrayBuffer.isView(cur)) {
        a2[k] = copyBuffer(cur)
      } else {
        var index = refs.indexOf(cur)
        if (index !== -1) {
          a2[k] = refsNew[index]
        } else {
          a2[k] = fn(cur)
        }
      }
    }
    return a2
  }

  function clone (o) {
    if (typeof o !== 'object' || o === null) return o
    if (o instanceof Date) return new Date(o)
    if (Array.isArray(o)) return cloneArray(o, clone)
    if (o instanceof Map) return new Map(cloneArray(Array.from(o), clone))
    if (o instanceof Set) return new Set(cloneArray(Array.from(o), clone))
    var o2 = {}
    refs.push(o)
    refsNew.push(o2)
    for (var k in o) {
      if (Object.hasOwnProperty.call(o, k) === false) continue
      var cur = o[k]
      if (typeof cur !== 'object' || cur === null) {
        o2[k] = cur
      } else if (cur instanceof Date) {
        o2[k] = new Date(cur)
      } else if (cur instanceof Map) {
        o2[k] = new Map(cloneArray(Array.from(cur), clone))
      } else if (cur instanceof Set) {
        o2[k] = new Set(cloneArray(Array.from(cur), clone))
      } else if (ArrayBuffer.isView(cur)) {
        o2[k] = copyBuffer(cur)
      } else {
        var i = refs.indexOf(cur)
        if (i !== -1) {
          o2[k] = refsNew[i]
        } else {
          o2[k] = clone(cur)
        }
      }
    }
    refs.pop()
    refsNew.pop()
    return o2
  }

  function cloneProto (o) {
    if (typeof o !== 'object' || o === null) return o
    if (o instanceof Date) return new Date(o)
    if (Array.isArray(o)) return cloneArray(o, cloneProto)
    if (o instanceof Map) return new Map(cloneArray(Array.from(o), cloneProto))
    if (o instanceof Set) return new Set(cloneArray(Array.from(o), cloneProto))
    var o2 = {}
    refs.push(o)
    refsNew.push(o2)
    for (var k in o) {
      var cur = o[k]
      if (typeof cur !== 'object' || cur === null) {
        o2[k] = cur
      } else if (cur instanceof Date) {
        o2[k] = new Date(cur)
      } else if (cur instanceof Map) {
        o2[k] = new Map(cloneArray(Array.from(cur), cloneProto))
      } else if (cur instanceof Set) {
        o2[k] = new Set(cloneArray(Array.from(cur), cloneProto))
      } else if (ArrayBuffer.isView(cur)) {
        o2[k] = copyBuffer(cur)
      } else {
        var i = refs.indexOf(cur)
        if (i !== -1) {
          o2[k] = refsNew[i]
        } else {
          o2[k] = cloneProto(cur)
        }
      }
    }
    refs.pop()
    refsNew.pop()
    return o2
  }
}

}).call(this)}).call(this,require("buffer").Buffer)
},{"buffer":7}],62:[function(require,module,exports){
/*!
 * Select2 4.1.0-rc.0
 * https://select2.github.io
 *
 * Released under the MIT license
 * https://github.com/select2/select2/blob/master/LICENSE.md
 */
;(function (factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['jquery'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // Node/CommonJS
    module.exports = function (root, jQuery) {
      if (jQuery === undefined) {
        // require('jQuery') returns a factory that requires window to
        // build a jQuery instance, we normalize how we use modules
        // that require this pattern but the window provided is a noop
        // if it's defined (how jquery works)
        if (typeof window !== 'undefined') {
          jQuery = require('jquery');
        }
        else {
          jQuery = require('jquery')(root);
        }
      }
      factory(jQuery);
      return jQuery;
    };
  } else {
    // Browser globals
    factory(jQuery);
  }
} (function (jQuery) {
  // This is needed so we can catch the AMD loader configuration and use it
  // The inner file should be wrapped (by `banner.start.js`) in a function that
  // returns the AMD loader references.
  var S2 =(function () {
  // Restore the Select2 AMD loader so it can be used
  // Needed mostly in the language files, where the loader is not inserted
  if (jQuery && jQuery.fn && jQuery.fn.select2 && jQuery.fn.select2.amd) {
    var S2 = jQuery.fn.select2.amd;
  }
var S2;(function () { if (!S2 || !S2.requirejs) {
if (!S2) { S2 = {}; } else { require = S2; }
/**
 * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/almond/LICENSE
 */
//Going sloppy to avoid 'use strict' string cost, but strict practices should
//be followed.
/*global setTimeout: false */

var requirejs, require, define;
(function (undef) {
    var main, req, makeMap, handlers,
        defined = {},
        waiting = {},
        config = {},
        defining = {},
        hasOwn = Object.prototype.hasOwnProperty,
        aps = [].slice,
        jsSuffixRegExp = /\.js$/;

    function hasProp(obj, prop) {
        return hasOwn.call(obj, prop);
    }

    /**
     * Given a relative module name, like ./something, normalize it to
     * a real name that can be mapped to a path.
     * @param {String} name the relative name
     * @param {String} baseName a real name that the name arg is relative
     * to.
     * @returns {String} normalized name
     */
    function normalize(name, baseName) {
        var nameParts, nameSegment, mapValue, foundMap, lastIndex,
            foundI, foundStarMap, starI, i, j, part, normalizedBaseParts,
            baseParts = baseName && baseName.split("/"),
            map = config.map,
            starMap = (map && map['*']) || {};

        //Adjust any relative paths.
        if (name) {
            name = name.split('/');
            lastIndex = name.length - 1;

            // If wanting node ID compatibility, strip .js from end
            // of IDs. Have to do this here, and not in nameToUrl
            // because node allows either .js or non .js to map
            // to same file.
            if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {
                name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');
            }

            // Starts with a '.' so need the baseName
            if (name[0].charAt(0) === '.' && baseParts) {
                //Convert baseName to array, and lop off the last part,
                //so that . matches that 'directory' and not name of the baseName's
                //module. For instance, baseName of 'one/two/three', maps to
                //'one/two/three.js', but we want the directory, 'one/two' for
                //this normalization.
                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);
                name = normalizedBaseParts.concat(name);
            }

            //start trimDots
            for (i = 0; i < name.length; i++) {
                part = name[i];
                if (part === '.') {
                    name.splice(i, 1);
                    i -= 1;
                } else if (part === '..') {
                    // If at the start, or previous value is still ..,
                    // keep them so that when converted to a path it may
                    // still work when converted to a path, even though
                    // as an ID it is less than ideal. In larger point
                    // releases, may be better to just kick out an error.
                    if (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {
                        continue;
                    } else if (i > 0) {
                        name.splice(i - 1, 2);
                        i -= 2;
                    }
                }
            }
            //end trimDots

            name = name.join('/');
        }

        //Apply map config if available.
        if ((baseParts || starMap) && map) {
            nameParts = name.split('/');

            for (i = nameParts.length; i > 0; i -= 1) {
                nameSegment = nameParts.slice(0, i).join("/");

                if (baseParts) {
                    //Find the longest baseName segment match in the config.
                    //So, do joins on the biggest to smallest lengths of baseParts.
                    for (j = baseParts.length; j > 0; j -= 1) {
                        mapValue = map[baseParts.slice(0, j).join('/')];

                        //baseName segment has  config, find if it has one for
                        //this name.
                        if (mapValue) {
                            mapValue = mapValue[nameSegment];
                            if (mapValue) {
                                //Match, update name to the new value.
                                foundMap = mapValue;
                                foundI = i;
                                break;
                            }
                        }
                    }
                }

                if (foundMap) {
                    break;
                }

                //Check for a star map match, but just hold on to it,
                //if there is a shorter segment match later in a matching
                //config, then favor over this star map.
                if (!foundStarMap && starMap && starMap[nameSegment]) {
                    foundStarMap = starMap[nameSegment];
                    starI = i;
                }
            }

            if (!foundMap && foundStarMap) {
                foundMap = foundStarMap;
                foundI = starI;
            }

            if (foundMap) {
                nameParts.splice(0, foundI, foundMap);
                name = nameParts.join('/');
            }
        }

        return name;
    }

    function makeRequire(relName, forceSync) {
        return function () {
            //A version of a require function that passes a moduleName
            //value for items that may need to
            //look up paths relative to the moduleName
            var args = aps.call(arguments, 0);

            //If first arg is not require('string'), and there is only
            //one arg, it is the array form without a callback. Insert
            //a null so that the following concat is correct.
            if (typeof args[0] !== 'string' && args.length === 1) {
                args.push(null);
            }
            return req.apply(undef, args.concat([relName, forceSync]));
        };
    }

    function makeNormalize(relName) {
        return function (name) {
            return normalize(name, relName);
        };
    }

    function makeLoad(depName) {
        return function (value) {
            defined[depName] = value;
        };
    }

    function callDep(name) {
        if (hasProp(waiting, name)) {
            var args = waiting[name];
            delete waiting[name];
            defining[name] = true;
            main.apply(undef, args);
        }

        if (!hasProp(defined, name) && !hasProp(defining, name)) {
            throw new Error('No ' + name);
        }
        return defined[name];
    }

    //Turns a plugin!resource to [plugin, resource]
    //with the plugin being undefined if the name
    //did not have a plugin prefix.
    function splitPrefix(name) {
        var prefix,
            index = name ? name.indexOf('!') : -1;
        if (index > -1) {
            prefix = name.substring(0, index);
            name = name.substring(index + 1, name.length);
        }
        return [prefix, name];
    }

    //Creates a parts array for a relName where first part is plugin ID,
    //second part is resource ID. Assumes relName has already been normalized.
    function makeRelParts(relName) {
        return relName ? splitPrefix(relName) : [];
    }

    /**
     * Makes a name map, normalizing the name, and using a plugin
     * for normalization if necessary. Grabs a ref to plugin
     * too, as an optimization.
     */
    makeMap = function (name, relParts) {
        var plugin,
            parts = splitPrefix(name),
            prefix = parts[0],
            relResourceName = relParts[1];

        name = parts[1];

        if (prefix) {
            prefix = normalize(prefix, relResourceName);
            plugin = callDep(prefix);
        }

        //Normalize according
        if (prefix) {
            if (plugin && plugin.normalize) {
                name = plugin.normalize(name, makeNormalize(relResourceName));
            } else {
                name = normalize(name, relResourceName);
            }
        } else {
            name = normalize(name, relResourceName);
            parts = splitPrefix(name);
            prefix = parts[0];
            name = parts[1];
            if (prefix) {
                plugin = callDep(prefix);
            }
        }

        //Using ridiculous property names for space reasons
        return {
            f: prefix ? prefix + '!' + name : name, //fullName
            n: name,
            pr: prefix,
            p: plugin
        };
    };

    function makeConfig(name) {
        return function () {
            return (config && config.config && config.config[name]) || {};
        };
    }

    handlers = {
        require: function (name) {
            return makeRequire(name);
        },
        exports: function (name) {
            var e = defined[name];
            if (typeof e !== 'undefined') {
                return e;
            } else {
                return (defined[name] = {});
            }
        },
        module: function (name) {
            return {
                id: name,
                uri: '',
                exports: defined[name],
                config: makeConfig(name)
            };
        }
    };

    main = function (name, deps, callback, relName) {
        var cjsModule, depName, ret, map, i, relParts,
            args = [],
            callbackType = typeof callback,
            usingExports;

        //Use name if no relName
        relName = relName || name;
        relParts = makeRelParts(relName);

        //Call the callback to define the module, if necessary.
        if (callbackType === 'undefined' || callbackType === 'function') {
            //Pull out the defined dependencies and pass the ordered
            //values to the callback.
            //Default to [require, exports, module] if no deps
            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;
            for (i = 0; i < deps.length; i += 1) {
                map = makeMap(deps[i], relParts);
                depName = map.f;

                //Fast path CommonJS standard dependencies.
                if (depName === "require") {
                    args[i] = handlers.require(name);
                } else if (depName === "exports") {
                    //CommonJS module spec 1.1
                    args[i] = handlers.exports(name);
                    usingExports = true;
                } else if (depName === "module") {
                    //CommonJS module spec 1.1
                    cjsModule = args[i] = handlers.module(name);
                } else if (hasProp(defined, depName) ||
                           hasProp(waiting, depName) ||
                           hasProp(defining, depName)) {
                    args[i] = callDep(depName);
                } else if (map.p) {
                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});
                    args[i] = defined[depName];
                } else {
                    throw new Error(name + ' missing ' + depName);
                }
            }

            ret = callback ? callback.apply(defined[name], args) : undefined;

            if (name) {
                //If setting exports via "module" is in play,
                //favor that over return value and exports. After that,
                //favor a non-undefined return value over exports use.
                if (cjsModule && cjsModule.exports !== undef &&
                        cjsModule.exports !== defined[name]) {
                    defined[name] = cjsModule.exports;
                } else if (ret !== undef || !usingExports) {
                    //Use the return value from the function.
                    defined[name] = ret;
                }
            }
        } else if (name) {
            //May just be an object definition for the module. Only
            //worry about defining if have a module name.
            defined[name] = callback;
        }
    };

    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {
        if (typeof deps === "string") {
            if (handlers[deps]) {
                //callback in this case is really relName
                return handlers[deps](callback);
            }
            //Just return the module wanted. In this scenario, the
            //deps arg is the module name, and second arg (if passed)
            //is just the relName.
            //Normalize module name, if it contains . or ..
            return callDep(makeMap(deps, makeRelParts(callback)).f);
        } else if (!deps.splice) {
            //deps is a config object, not an array.
            config = deps;
            if (config.deps) {
                req(config.deps, config.callback);
            }
            if (!callback) {
                return;
            }

            if (callback.splice) {
                //callback is an array, which means it is a dependency list.
                //Adjust args if there are dependencies
                deps = callback;
                callback = relName;
                relName = null;
            } else {
                deps = undef;
            }
        }

        //Support require(['a'])
        callback = callback || function () {};

        //If relName is a function, it is an errback handler,
        //so remove it.
        if (typeof relName === 'function') {
            relName = forceSync;
            forceSync = alt;
        }

        //Simulate async callback;
        if (forceSync) {
            main(undef, deps, callback, relName);
        } else {
            //Using a non-zero value because of concern for what old browsers
            //do, and latest browsers "upgrade" to 4 if lower value is used:
            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:
            //If want a value immediately, use require('id') instead -- something
            //that works in almond on the global level, but not guaranteed and
            //unlikely to work in other AMD implementations.
            setTimeout(function () {
                main(undef, deps, callback, relName);
            }, 4);
        }

        return req;
    };

    /**
     * Just drops the config on the floor, but returns req in case
     * the config return value is used.
     */
    req.config = function (cfg) {
        return req(cfg);
    };

    /**
     * Expose module registry for debugging and tooling
     */
    requirejs._defined = defined;

    define = function (name, deps, callback) {
        if (typeof name !== 'string') {
            throw new Error('See almond README: incorrect module build, no module name');
        }

        //This module may not have dependencies
        if (!deps.splice) {
            //deps is not an array, so probably means
            //an object literal or factory function for
            //the value. Adjust args.
            callback = deps;
            deps = [];
        }

        if (!hasProp(defined, name) && !hasProp(waiting, name)) {
            waiting[name] = [name, deps, callback];
        }
    };

    define.amd = {
        jQuery: true
    };
}());

S2.requirejs = requirejs;S2.require = require;S2.define = define;
}
}());
S2.define("almond", function(){});

/* global jQuery:false, $:false */
S2.define('jquery',[],function () {
  var _$ = jQuery || $;

  if (_$ == null && console && console.error) {
    console.error(
      'Select2: An instance of jQuery or a jQuery-compatible library was not ' +
      'found. Make sure that you are including jQuery before Select2 on your ' +
      'web page.'
    );
  }

  return _$;
});

S2.define('select2/utils',[
  'jquery'
], function ($) {
  var Utils = {};

  Utils.Extend = function (ChildClass, SuperClass) {
    var __hasProp = {}.hasOwnProperty;

    function BaseConstructor () {
      this.constructor = ChildClass;
    }

    for (var key in SuperClass) {
      if (__hasProp.call(SuperClass, key)) {
        ChildClass[key] = SuperClass[key];
      }
    }

    BaseConstructor.prototype = SuperClass.prototype;
    ChildClass.prototype = new BaseConstructor();
    ChildClass.__super__ = SuperClass.prototype;

    return ChildClass;
  };

  function getMethods (theClass) {
    var proto = theClass.prototype;

    var methods = [];

    for (var methodName in proto) {
      var m = proto[methodName];

      if (typeof m !== 'function') {
        continue;
      }

      if (methodName === 'constructor') {
        continue;
      }

      methods.push(methodName);
    }

    return methods;
  }

  Utils.Decorate = function (SuperClass, DecoratorClass) {
    var decoratedMethods = getMethods(DecoratorClass);
    var superMethods = getMethods(SuperClass);

    function DecoratedClass () {
      var unshift = Array.prototype.unshift;

      var argCount = DecoratorClass.prototype.constructor.length;

      var calledConstructor = SuperClass.prototype.constructor;

      if (argCount > 0) {
        unshift.call(arguments, SuperClass.prototype.constructor);

        calledConstructor = DecoratorClass.prototype.constructor;
      }

      calledConstructor.apply(this, arguments);
    }

    DecoratorClass.displayName = SuperClass.displayName;

    function ctr () {
      this.constructor = DecoratedClass;
    }

    DecoratedClass.prototype = new ctr();

    for (var m = 0; m < superMethods.length; m++) {
      var superMethod = superMethods[m];

      DecoratedClass.prototype[superMethod] =
        SuperClass.prototype[superMethod];
    }

    var calledMethod = function (methodName) {
      // Stub out the original method if it's not decorating an actual method
      var originalMethod = function () {};

      if (methodName in DecoratedClass.prototype) {
        originalMethod = DecoratedClass.prototype[methodName];
      }

      var decoratedMethod = DecoratorClass.prototype[methodName];

      return function () {
        var unshift = Array.prototype.unshift;

        unshift.call(arguments, originalMethod);

        return decoratedMethod.apply(this, arguments);
      };
    };

    for (var d = 0; d < decoratedMethods.length; d++) {
      var decoratedMethod = decoratedMethods[d];

      DecoratedClass.prototype[decoratedMethod] = calledMethod(decoratedMethod);
    }

    return DecoratedClass;
  };

  var Observable = function () {
    this.listeners = {};
  };

  Observable.prototype.on = function (event, callback) {
    this.listeners = this.listeners || {};

    if (event in this.listeners) {
      this.listeners[event].push(callback);
    } else {
      this.listeners[event] = [callback];
    }
  };

  Observable.prototype.trigger = function (event) {
    var slice = Array.prototype.slice;
    var params = slice.call(arguments, 1);

    this.listeners = this.listeners || {};

    // Params should always come in as an array
    if (params == null) {
      params = [];
    }

    // If there are no arguments to the event, use a temporary object
    if (params.length === 0) {
      params.push({});
    }

    // Set the `_type` of the first object to the event
    params[0]._type = event;

    if (event in this.listeners) {
      this.invoke(this.listeners[event], slice.call(arguments, 1));
    }

    if ('*' in this.listeners) {
      this.invoke(this.listeners['*'], arguments);
    }
  };

  Observable.prototype.invoke = function (listeners, params) {
    for (var i = 0, len = listeners.length; i < len; i++) {
      listeners[i].apply(this, params);
    }
  };

  Utils.Observable = Observable;

  Utils.generateChars = function (length) {
    var chars = '';

    for (var i = 0; i < length; i++) {
      var randomChar = Math.floor(Math.random() * 36);
      chars += randomChar.toString(36);
    }

    return chars;
  };

  Utils.bind = function (func, context) {
    return function () {
      func.apply(context, arguments);
    };
  };

  Utils._convertData = function (data) {
    for (var originalKey in data) {
      var keys = originalKey.split('-');

      var dataLevel = data;

      if (keys.length === 1) {
        continue;
      }

      for (var k = 0; k < keys.length; k++) {
        var key = keys[k];

        // Lowercase the first letter
        // By default, dash-separated becomes camelCase
        key = key.substring(0, 1).toLowerCase() + key.substring(1);

        if (!(key in dataLevel)) {
          dataLevel[key] = {};
        }

        if (k == keys.length - 1) {
          dataLevel[key] = data[originalKey];
        }

        dataLevel = dataLevel[key];
      }

      delete data[originalKey];
    }

    return data;
  };

  Utils.hasScroll = function (index, el) {
    // Adapted from the function created by @ShadowScripter
    // and adapted by @BillBarry on the Stack Exchange Code Review website.
    // The original code can be found at
    // http://codereview.stackexchange.com/q/13338
    // and was designed to be used with the Sizzle selector engine.

    var $el = $(el);
    var overflowX = el.style.overflowX;
    var overflowY = el.style.overflowY;

    //Check both x and y declarations
    if (overflowX === overflowY &&
        (overflowY === 'hidden' || overflowY === 'visible')) {
      return false;
    }

    if (overflowX === 'scroll' || overflowY === 'scroll') {
      return true;
    }

    return ($el.innerHeight() < el.scrollHeight ||
      $el.innerWidth() < el.scrollWidth);
  };

  Utils.escapeMarkup = function (markup) {
    var replaceMap = {
      '\\': '&#92;',
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      '\'': '&#39;',
      '/': '&#47;'
    };

    // Do not try to escape the markup if it's not a string
    if (typeof markup !== 'string') {
      return markup;
    }

    return String(markup).replace(/[&<>"'\/\\]/g, function (match) {
      return replaceMap[match];
    });
  };

  // Cache objects in Utils.__cache instead of $.data (see #4346)
  Utils.__cache = {};

  var id = 0;
  Utils.GetUniqueElementId = function (element) {
    // Get a unique element Id. If element has no id,
    // creates a new unique number, stores it in the id
    // attribute and returns the new id with a prefix.
    // If an id already exists, it simply returns it with a prefix.

    var select2Id = element.getAttribute('data-select2-id');

    if (select2Id != null) {
      return select2Id;
    }

    // If element has id, use it.
    if (element.id) {
      select2Id = 'select2-data-' + element.id;
    } else {
      select2Id = 'select2-data-' + (++id).toString() +
        '-' + Utils.generateChars(4);
    }

    element.setAttribute('data-select2-id', select2Id);

    return select2Id;
  };

  Utils.StoreData = function (element, name, value) {
    // Stores an item in the cache for a specified element.
    // name is the cache key.
    var id = Utils.GetUniqueElementId(element);
    if (!Utils.__cache[id]) {
      Utils.__cache[id] = {};
    }

    Utils.__cache[id][name] = value;
  };

  Utils.GetData = function (element, name) {
    // Retrieves a value from the cache by its key (name)
    // name is optional. If no name specified, return
    // all cache items for the specified element.
    // and for a specified element.
    var id = Utils.GetUniqueElementId(element);
    if (name) {
      if (Utils.__cache[id]) {
        if (Utils.__cache[id][name] != null) {
          return Utils.__cache[id][name];
        }
        return $(element).data(name); // Fallback to HTML5 data attribs.
      }
      return $(element).data(name); // Fallback to HTML5 data attribs.
    } else {
      return Utils.__cache[id];
    }
  };

  Utils.RemoveData = function (element) {
    // Removes all cached items for a specified element.
    var id = Utils.GetUniqueElementId(element);
    if (Utils.__cache[id] != null) {
      delete Utils.__cache[id];
    }

    element.removeAttribute('data-select2-id');
  };

  Utils.copyNonInternalCssClasses = function (dest, src) {
    var classes;

    var destinationClasses = dest.getAttribute('class').trim().split(/\s+/);

    destinationClasses = destinationClasses.filter(function (clazz) {
      // Save all Select2 classes
      return clazz.indexOf('select2-') === 0;
    });

    var sourceClasses = src.getAttribute('class').trim().split(/\s+/);

    sourceClasses = sourceClasses.filter(function (clazz) {
      // Only copy non-Select2 classes
      return clazz.indexOf('select2-') !== 0;
    });

    var replacements = destinationClasses.concat(sourceClasses);

    dest.setAttribute('class', replacements.join(' '));
  };

  return Utils;
});

S2.define('select2/results',[
  'jquery',
  './utils'
], function ($, Utils) {
  function Results ($element, options, dataAdapter) {
    this.$element = $element;
    this.data = dataAdapter;
    this.options = options;

    Results.__super__.constructor.call(this);
  }

  Utils.Extend(Results, Utils.Observable);

  Results.prototype.render = function () {
    var $results = $(
      '<ul class="select2-results__options" role="listbox"></ul>'
    );

    if (this.options.get('multiple')) {
      $results.attr('aria-multiselectable', 'true');
    }

    this.$results = $results;

    return $results;
  };

  Results.prototype.clear = function () {
    this.$results.empty();
  };

  Results.prototype.displayMessage = function (params) {
    var escapeMarkup = this.options.get('escapeMarkup');

    this.clear();
    this.hideLoading();

    var $message = $(
      '<li role="alert" aria-live="assertive"' +
      ' class="select2-results__option"></li>'
    );

    var message = this.options.get('translations').get(params.message);

    $message.append(
      escapeMarkup(
        message(params.args)
      )
    );

    $message[0].className += ' select2-results__message';

    this.$results.append($message);
  };

  Results.prototype.hideMessages = function () {
    this.$results.find('.select2-results__message').remove();
  };

  Results.prototype.append = function (data) {
    this.hideLoading();

    var $options = [];

    if (data.results == null || data.results.length === 0) {
      if (this.$results.children().length === 0) {
        this.trigger('results:message', {
          message: 'noResults'
        });
      }

      return;
    }

    data.results = this.sort(data.results);

    for (var d = 0; d < data.results.length; d++) {
      var item = data.results[d];

      var $option = this.option(item);

      $options.push($option);
    }

    this.$results.append($options);
  };

  Results.prototype.position = function ($results, $dropdown) {
    var $resultsContainer = $dropdown.find('.select2-results');
    $resultsContainer.append($results);
  };

  Results.prototype.sort = function (data) {
    var sorter = this.options.get('sorter');

    return sorter(data);
  };

  Results.prototype.highlightFirstItem = function () {
    var $options = this.$results
      .find('.select2-results__option--selectable');

    var $selected = $options.filter('.select2-results__option--selected');

    // Check if there are any selected options
    if ($selected.length > 0) {
      // If there are selected options, highlight the first
      $selected.first().trigger('mouseenter');
    } else {
      // If there are no selected options, highlight the first option
      // in the dropdown
      $options.first().trigger('mouseenter');
    }

    this.ensureHighlightVisible();
  };

  Results.prototype.setClasses = function () {
    var self = this;

    this.data.current(function (selected) {
      var selectedIds = selected.map(function (s) {
        return s.id.toString();
      });

      var $options = self.$results
        .find('.select2-results__option--selectable');

      $options.each(function () {
        var $option = $(this);

        var item = Utils.GetData(this, 'data');

        // id needs to be converted to a string when comparing
        var id = '' + item.id;

        if ((item.element != null && item.element.selected) ||
            (item.element == null && selectedIds.indexOf(id) > -1)) {
          this.classList.add('select2-results__option--selected');
          $option.attr('aria-selected', 'true');
        } else {
          this.classList.remove('select2-results__option--selected');
          $option.attr('aria-selected', 'false');
        }
      });

    });
  };

  Results.prototype.showLoading = function (params) {
    this.hideLoading();

    var loadingMore = this.options.get('translations').get('searching');

    var loading = {
      disabled: true,
      loading: true,
      text: loadingMore(params)
    };
    var $loading = this.option(loading);
    $loading.className += ' loading-results';

    this.$results.prepend($loading);
  };

  Results.prototype.hideLoading = function () {
    this.$results.find('.loading-results').remove();
  };

  Results.prototype.option = function (data) {
    var option = document.createElement('li');
    option.classList.add('select2-results__option');
    option.classList.add('select2-results__option--selectable');

    var attrs = {
      'role': 'option'
    };

    var matches = window.Element.prototype.matches ||
      window.Element.prototype.msMatchesSelector ||
      window.Element.prototype.webkitMatchesSelector;

    if ((data.element != null && matches.call(data.element, ':disabled')) ||
        (data.element == null && data.disabled)) {
      attrs['aria-disabled'] = 'true';

      option.classList.remove('select2-results__option--selectable');
      option.classList.add('select2-results__option--disabled');
    }

    if (data.id == null) {
      option.classList.remove('select2-results__option--selectable');
    }

    if (data._resultId != null) {
      option.id = data._resultId;
    }

    if (data.title) {
      option.title = data.title;
    }

    if (data.children) {
      attrs.role = 'group';
      attrs['aria-label'] = data.text;

      option.classList.remove('select2-results__option--selectable');
      option.classList.add('select2-results__option--group');
    }

    for (var attr in attrs) {
      var val = attrs[attr];

      option.setAttribute(attr, val);
    }

    if (data.children) {
      var $option = $(option);

      var label = document.createElement('strong');
      label.className = 'select2-results__group';

      this.template(data, label);

      var $children = [];

      for (var c = 0; c < data.children.length; c++) {
        var child = data.children[c];

        var $child = this.option(child);

        $children.push($child);
      }

      var $childrenContainer = $('<ul></ul>', {
        'class': 'select2-results__options select2-results__options--nested',
        'role': 'none'
      });

      $childrenContainer.append($children);

      $option.append(label);
      $option.append($childrenContainer);
    } else {
      this.template(data, option);
    }

    Utils.StoreData(option, 'data', data);

    return option;
  };

  Results.prototype.bind = function (container, $container) {
    var self = this;

    var id = container.id + '-results';

    this.$results.attr('id', id);

    container.on('results:all', function (params) {
      self.clear();
      self.append(params.data);

      if (container.isOpen()) {
        self.setClasses();
        self.highlightFirstItem();
      }
    });

    container.on('results:append', function (params) {
      self.append(params.data);

      if (container.isOpen()) {
        self.setClasses();
      }
    });

    container.on('query', function (params) {
      self.hideMessages();
      self.showLoading(params);
    });

    container.on('select', function () {
      if (!container.isOpen()) {
        return;
      }

      self.setClasses();

      if (self.options.get('scrollAfterSelect')) {
        self.highlightFirstItem();
      }
    });

    container.on('unselect', function () {
      if (!container.isOpen()) {
        return;
      }

      self.setClasses();

      if (self.options.get('scrollAfterSelect')) {
        self.highlightFirstItem();
      }
    });

    container.on('open', function () {
      // When the dropdown is open, aria-expended="true"
      self.$results.attr('aria-expanded', 'true');
      self.$results.attr('aria-hidden', 'false');

      self.setClasses();
      self.ensureHighlightVisible();
    });

    container.on('close', function () {
      // When the dropdown is closed, aria-expended="false"
      self.$results.attr('aria-expanded', 'false');
      self.$results.attr('aria-hidden', 'true');
      self.$results.removeAttr('aria-activedescendant');
    });

    container.on('results:toggle', function () {
      var $highlighted = self.getHighlightedResults();

      if ($highlighted.length === 0) {
        return;
      }

      $highlighted.trigger('mouseup');
    });

    container.on('results:select', function () {
      var $highlighted = self.getHighlightedResults();

      if ($highlighted.length === 0) {
        return;
      }

      var data = Utils.GetData($highlighted[0], 'data');

      if ($highlighted.hasClass('select2-results__option--selected')) {
        self.trigger('close', {});
      } else {
        self.trigger('select', {
          data: data
        });
      }
    });

    container.on('results:previous', function () {
      var $highlighted = self.getHighlightedResults();

      var $options = self.$results.find('.select2-results__option--selectable');

      var currentIndex = $options.index($highlighted);

      // If we are already at the top, don't move further
      // If no options, currentIndex will be -1
      if (currentIndex <= 0) {
        return;
      }

      var nextIndex = currentIndex - 1;

      // If none are highlighted, highlight the first
      if ($highlighted.length === 0) {
        nextIndex = 0;
      }

      var $next = $options.eq(nextIndex);

      $next.trigger('mouseenter');

      var currentOffset = self.$results.offset().top;
      var nextTop = $next.offset().top;
      var nextOffset = self.$results.scrollTop() + (nextTop - currentOffset);

      if (nextIndex === 0) {
        self.$results.scrollTop(0);
      } else if (nextTop - currentOffset < 0) {
        self.$results.scrollTop(nextOffset);
      }
    });

    container.on('results:next', function () {
      var $highlighted = self.getHighlightedResults();

      var $options = self.$results.find('.select2-results__option--selectable');

      var currentIndex = $options.index($highlighted);

      var nextIndex = currentIndex + 1;

      // If we are at the last option, stay there
      if (nextIndex >= $options.length) {
        return;
      }

      var $next = $options.eq(nextIndex);

      $next.trigger('mouseenter');

      var currentOffset = self.$results.offset().top +
        self.$results.outerHeight(false);
      var nextBottom = $next.offset().top + $next.outerHeight(false);
      var nextOffset = self.$results.scrollTop() + nextBottom - currentOffset;

      if (nextIndex === 0) {
        self.$results.scrollTop(0);
      } else if (nextBottom > currentOffset) {
        self.$results.scrollTop(nextOffset);
      }
    });

    container.on('results:focus', function (params) {
      params.element[0].classList.add('select2-results__option--highlighted');
      params.element[0].setAttribute('aria-selected', 'true');
    });

    container.on('results:message', function (params) {
      self.displayMessage(params);
    });

    if ($.fn.mousewheel) {
      this.$results.on('mousewheel', function (e) {
        var top = self.$results.scrollTop();

        var bottom = self.$results.get(0).scrollHeight - top + e.deltaY;

        var isAtTop = e.deltaY > 0 && top - e.deltaY <= 0;
        var isAtBottom = e.deltaY < 0 && bottom <= self.$results.height();

        if (isAtTop) {
          self.$results.scrollTop(0);

          e.preventDefault();
          e.stopPropagation();
        } else if (isAtBottom) {
          self.$results.scrollTop(
            self.$results.get(0).scrollHeight - self.$results.height()
          );

          e.preventDefault();
          e.stopPropagation();
        }
      });
    }

    this.$results.on('mouseup', '.select2-results__option--selectable',
      function (evt) {
      var $this = $(this);

      var data = Utils.GetData(this, 'data');

      if ($this.hasClass('select2-results__option--selected')) {
        if (self.options.get('multiple')) {
          self.trigger('unselect', {
            originalEvent: evt,
            data: data
          });
        } else {
          self.trigger('close', {});
        }

        return;
      }

      self.trigger('select', {
        originalEvent: evt,
        data: data
      });
    });

    this.$results.on('mouseenter', '.select2-results__option--selectable',
      function (evt) {
      var data = Utils.GetData(this, 'data');

      self.getHighlightedResults()
          .removeClass('select2-results__option--highlighted')
          .attr('aria-selected', 'false');

      self.trigger('results:focus', {
        data: data,
        element: $(this)
      });
    });
  };

  Results.prototype.getHighlightedResults = function () {
    var $highlighted = this.$results
    .find('.select2-results__option--highlighted');

    return $highlighted;
  };

  Results.prototype.destroy = function () {
    this.$results.remove();
  };

  Results.prototype.ensureHighlightVisible = function () {
    var $highlighted = this.getHighlightedResults();

    if ($highlighted.length === 0) {
      return;
    }

    var $options = this.$results.find('.select2-results__option--selectable');

    var currentIndex = $options.index($highlighted);

    var currentOffset = this.$results.offset().top;
    var nextTop = $highlighted.offset().top;
    var nextOffset = this.$results.scrollTop() + (nextTop - currentOffset);

    var offsetDelta = nextTop - currentOffset;
    nextOffset -= $highlighted.outerHeight(false) * 2;

    if (currentIndex <= 2) {
      this.$results.scrollTop(0);
    } else if (offsetDelta > this.$results.outerHeight() || offsetDelta < 0) {
      this.$results.scrollTop(nextOffset);
    }
  };

  Results.prototype.template = function (result, container) {
    var template = this.options.get('templateResult');
    var escapeMarkup = this.options.get('escapeMarkup');

    var content = template(result, container);

    if (content == null) {
      container.style.display = 'none';
    } else if (typeof content === 'string') {
      container.innerHTML = escapeMarkup(content);
    } else {
      $(container).append(content);
    }
  };

  return Results;
});

S2.define('select2/keys',[

], function () {
  var KEYS = {
    BACKSPACE: 8,
    TAB: 9,
    ENTER: 13,
    SHIFT: 16,
    CTRL: 17,
    ALT: 18,
    ESC: 27,
    SPACE: 32,
    PAGE_UP: 33,
    PAGE_DOWN: 34,
    END: 35,
    HOME: 36,
    LEFT: 37,
    UP: 38,
    RIGHT: 39,
    DOWN: 40,
    DELETE: 46
  };

  return KEYS;
});

S2.define('select2/selection/base',[
  'jquery',
  '../utils',
  '../keys'
], function ($, Utils, KEYS) {
  function BaseSelection ($element, options) {
    this.$element = $element;
    this.options = options;

    BaseSelection.__super__.constructor.call(this);
  }

  Utils.Extend(BaseSelection, Utils.Observable);

  BaseSelection.prototype.render = function () {
    var $selection = $(
      '<span class="select2-selection" role="combobox" ' +
      ' aria-haspopup="true" aria-expanded="false">' +
      '</span>'
    );

    this._tabindex = 0;

    if (Utils.GetData(this.$element[0], 'old-tabindex') != null) {
      this._tabindex = Utils.GetData(this.$element[0], 'old-tabindex');
    } else if (this.$element.attr('tabindex') != null) {
      this._tabindex = this.$element.attr('tabindex');
    }

    $selection.attr('title', this.$element.attr('title'));
    $selection.attr('tabindex', this._tabindex);
    $selection.attr('aria-disabled', 'false');

    this.$selection = $selection;

    return $selection;
  };

  BaseSelection.prototype.bind = function (container, $container) {
    var self = this;

    var resultsId = container.id + '-results';

    this.container = container;

    this.$selection.on('focus', function (evt) {
      self.trigger('focus', evt);
    });

    this.$selection.on('blur', function (evt) {
      self._handleBlur(evt);
    });

    this.$selection.on('keydown', function (evt) {
      self.trigger('keypress', evt);

      if (evt.which === KEYS.SPACE) {
        evt.preventDefault();
      }
    });

    container.on('results:focus', function (params) {
      self.$selection.attr('aria-activedescendant', params.data._resultId);
    });

    container.on('selection:update', function (params) {
      self.update(params.data);
    });

    container.on('open', function () {
      // When the dropdown is open, aria-expanded="true"
      self.$selection.attr('aria-expanded', 'true');
      self.$selection.attr('aria-owns', resultsId);

      self._attachCloseHandler(container);
    });

    container.on('close', function () {
      // When the dropdown is closed, aria-expanded="false"
      self.$selection.attr('aria-expanded', 'false');
      self.$selection.removeAttr('aria-activedescendant');
      self.$selection.removeAttr('aria-owns');

      self.$selection.trigger('focus');

      self._detachCloseHandler(container);
    });

    container.on('enable', function () {
      self.$selection.attr('tabindex', self._tabindex);
      self.$selection.attr('aria-disabled', 'false');
    });

    container.on('disable', function () {
      self.$selection.attr('tabindex', '-1');
      self.$selection.attr('aria-disabled', 'true');
    });
  };

  BaseSelection.prototype._handleBlur = function (evt) {
    var self = this;

    // This needs to be delayed as the active element is the body when the tab
    // key is pressed, possibly along with others.
    window.setTimeout(function () {
      // Don't trigger `blur` if the focus is still in the selection
      if (
        (document.activeElement == self.$selection[0]) ||
        ($.contains(self.$selection[0], document.activeElement))
      ) {
        return;
      }

      self.trigger('blur', evt);
    }, 1);
  };

  BaseSelection.prototype._attachCloseHandler = function (container) {

    $(document.body).on('mousedown.select2.' + container.id, function (e) {
      var $target = $(e.target);

      var $select = $target.closest('.select2');

      var $all = $('.select2.select2-container--open');

      $all.each(function () {
        if (this == $select[0]) {
          return;
        }

        var $element = Utils.GetData(this, 'element');

        $element.select2('close');
      });
    });
  };

  BaseSelection.prototype._detachCloseHandler = function (container) {
    $(document.body).off('mousedown.select2.' + container.id);
  };

  BaseSelection.prototype.position = function ($selection, $container) {
    var $selectionContainer = $container.find('.selection');
    $selectionContainer.append($selection);
  };

  BaseSelection.prototype.destroy = function () {
    this._detachCloseHandler(this.container);
  };

  BaseSelection.prototype.update = function (data) {
    throw new Error('The `update` method must be defined in child classes.');
  };

  /**
   * Helper method to abstract the "enabled" (not "disabled") state of this
   * object.
   *
   * @return {true} if the instance is not disabled.
   * @return {false} if the instance is disabled.
   */
  BaseSelection.prototype.isEnabled = function () {
    return !this.isDisabled();
  };

  /**
   * Helper method to abstract the "disabled" state of this object.
   *
   * @return {true} if the disabled option is true.
   * @return {false} if the disabled option is false.
   */
  BaseSelection.prototype.isDisabled = function () {
    return this.options.get('disabled');
  };

  return BaseSelection;
});

S2.define('select2/selection/single',[
  'jquery',
  './base',
  '../utils',
  '../keys'
], function ($, BaseSelection, Utils, KEYS) {
  function SingleSelection () {
    SingleSelection.__super__.constructor.apply(this, arguments);
  }

  Utils.Extend(SingleSelection, BaseSelection);

  SingleSelection.prototype.render = function () {
    var $selection = SingleSelection.__super__.render.call(this);

    $selection[0].classList.add('select2-selection--single');

    $selection.html(
      '<span class="select2-selection__rendered"></span>' +
      '<span class="select2-selection__arrow" role="presentation">' +
        '<b role="presentation"></b>' +
      '</span>'
    );

    return $selection;
  };

  SingleSelection.prototype.bind = function (container, $container) {
    var self = this;

    SingleSelection.__super__.bind.apply(this, arguments);

    var id = container.id + '-container';

    this.$selection.find('.select2-selection__rendered')
      .attr('id', id)
      .attr('role', 'textbox')
      .attr('aria-readonly', 'true');
    this.$selection.attr('aria-labelledby', id);
    this.$selection.attr('aria-controls', id);

    this.$selection.on('mousedown', function (evt) {
      // Only respond to left clicks
      if (evt.which !== 1) {
        return;
      }

      self.trigger('toggle', {
        originalEvent: evt
      });
    });

    this.$selection.on('focus', function (evt) {
      // User focuses on the container
    });

    this.$selection.on('blur', function (evt) {
      // User exits the container
    });

    container.on('focus', function (evt) {
      if (!container.isOpen()) {
        self.$selection.trigger('focus');
      }
    });
  };

  SingleSelection.prototype.clear = function () {
    var $rendered = this.$selection.find('.select2-selection__rendered');
    $rendered.empty();
    $rendered.removeAttr('title'); // clear tooltip on empty
  };

  SingleSelection.prototype.display = function (data, container) {
    var template = this.options.get('templateSelection');
    var escapeMarkup = this.options.get('escapeMarkup');

    return escapeMarkup(template(data, container));
  };

  SingleSelection.prototype.selectionContainer = function () {
    return $('<span></span>');
  };

  SingleSelection.prototype.update = function (data) {
    if (data.length === 0) {
      this.clear();
      return;
    }

    var selection = data[0];

    var $rendered = this.$selection.find('.select2-selection__rendered');
    var formatted = this.display(selection, $rendered);

    $rendered.empty().append(formatted);

    var title = selection.title || selection.text;

    if (title) {
      $rendered.attr('title', title);
    } else {
      $rendered.removeAttr('title');
    }
  };

  return SingleSelection;
});

S2.define('select2/selection/multiple',[
  'jquery',
  './base',
  '../utils'
], function ($, BaseSelection, Utils) {
  function MultipleSelection ($element, options) {
    MultipleSelection.__super__.constructor.apply(this, arguments);
  }

  Utils.Extend(MultipleSelection, BaseSelection);

  MultipleSelection.prototype.render = function () {
    var $selection = MultipleSelection.__super__.render.call(this);

    $selection[0].classList.add('select2-selection--multiple');

    $selection.html(
      '<ul class="select2-selection__rendered"></ul>'
    );

    return $selection;
  };

  MultipleSelection.prototype.bind = function (container, $container) {
    var self = this;

    MultipleSelection.__super__.bind.apply(this, arguments);

    var id = container.id + '-container';
    this.$selection.find('.select2-selection__rendered').attr('id', id);

    this.$selection.on('click', function (evt) {
      self.trigger('toggle', {
        originalEvent: evt
      });
    });

    this.$selection.on(
      'click',
      '.select2-selection__choice__remove',
      function (evt) {
        // Ignore the event if it is disabled
        if (self.isDisabled()) {
          return;
        }

        var $remove = $(this);
        var $selection = $remove.parent();

        var data = Utils.GetData($selection[0], 'data');

        self.trigger('unselect', {
          originalEvent: evt,
          data: data
        });
      }
    );

    this.$selection.on(
      'keydown',
      '.select2-selection__choice__remove',
      function (evt) {
        // Ignore the event if it is disabled
        if (self.isDisabled()) {
          return;
        }

        evt.stopPropagation();
      }
    );
  };

  MultipleSelection.prototype.clear = function () {
    var $rendered = this.$selection.find('.select2-selection__rendered');
    $rendered.empty();
    $rendered.removeAttr('title');
  };

  MultipleSelection.prototype.display = function (data, container) {
    var template = this.options.get('templateSelection');
    var escapeMarkup = this.options.get('escapeMarkup');

    return escapeMarkup(template(data, container));
  };

  MultipleSelection.prototype.selectionContainer = function () {
    var $container = $(
      '<li class="select2-selection__choice">' +
        '<button type="button" class="select2-selection__choice__remove" ' +
        'tabindex="-1">' +
          '<span aria-hidden="true">&times;</span>' +
        '</button>' +
        '<span class="select2-selection__choice__display"></span>' +
      '</li>'
    );

    return $container;
  };

  MultipleSelection.prototype.update = function (data) {
    this.clear();

    if (data.length === 0) {
      return;
    }

    var $selections = [];

    var selectionIdPrefix = this.$selection.find('.select2-selection__rendered')
      .attr('id') + '-choice-';

    for (var d = 0; d < data.length; d++) {
      var selection = data[d];

      var $selection = this.selectionContainer();
      var formatted = this.display(selection, $selection);

      var selectionId = selectionIdPrefix + Utils.generateChars(4) + '-';

      if (selection.id) {
        selectionId += selection.id;
      } else {
        selectionId += Utils.generateChars(4);
      }

      $selection.find('.select2-selection__choice__display')
        .append(formatted)
        .attr('id', selectionId);

      var title = selection.title || selection.text;

      if (title) {
        $selection.attr('title', title);
      }

      var removeItem = this.options.get('translations').get('removeItem');

      var $remove = $selection.find('.select2-selection__choice__remove');

      $remove.attr('title', removeItem());
      $remove.attr('aria-label', removeItem());
      $remove.attr('aria-describedby', selectionId);

      Utils.StoreData($selection[0], 'data', selection);

      $selections.push($selection);
    }

    var $rendered = this.$selection.find('.select2-selection__rendered');

    $rendered.append($selections);
  };

  return MultipleSelection;
});

S2.define('select2/selection/placeholder',[

], function () {
  function Placeholder (decorated, $element, options) {
    this.placeholder = this.normalizePlaceholder(options.get('placeholder'));

    decorated.call(this, $element, options);
  }

  Placeholder.prototype.normalizePlaceholder = function (_, placeholder) {
    if (typeof placeholder === 'string') {
      placeholder = {
        id: '',
        text: placeholder
      };
    }

    return placeholder;
  };

  Placeholder.prototype.createPlaceholder = function (decorated, placeholder) {
    var $placeholder = this.selectionContainer();

    $placeholder.html(this.display(placeholder));
    $placeholder[0].classList.add('select2-selection__placeholder');
    $placeholder[0].classList.remove('select2-selection__choice');

    var placeholderTitle = placeholder.title ||
      placeholder.text ||
      $placeholder.text();

    this.$selection.find('.select2-selection__rendered').attr(
      'title',
      placeholderTitle
    );

    return $placeholder;
  };

  Placeholder.prototype.update = function (decorated, data) {
    var singlePlaceholder = (
      data.length == 1 && data[0].id != this.placeholder.id
    );
    var multipleSelections = data.length > 1;

    if (multipleSelections || singlePlaceholder) {
      return decorated.call(this, data);
    }

    this.clear();

    var $placeholder = this.createPlaceholder(this.placeholder);

    this.$selection.find('.select2-selection__rendered').append($placeholder);
  };

  return Placeholder;
});

S2.define('select2/selection/allowClear',[
  'jquery',
  '../keys',
  '../utils'
], function ($, KEYS, Utils) {
  function AllowClear () { }

  AllowClear.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    if (this.placeholder == null) {
      if (this.options.get('debug') && window.console && console.error) {
        console.error(
          'Select2: The `allowClear` option should be used in combination ' +
          'with the `placeholder` option.'
        );
      }
    }

    this.$selection.on('mousedown', '.select2-selection__clear',
      function (evt) {
        self._handleClear(evt);
    });

    container.on('keypress', function (evt) {
      self._handleKeyboardClear(evt, container);
    });
  };

  AllowClear.prototype._handleClear = function (_, evt) {
    // Ignore the event if it is disabled
    if (this.isDisabled()) {
      return;
    }

    var $clear = this.$selection.find('.select2-selection__clear');

    // Ignore the event if nothing has been selected
    if ($clear.length === 0) {
      return;
    }

    evt.stopPropagation();

    var data = Utils.GetData($clear[0], 'data');

    var previousVal = this.$element.val();
    this.$element.val(this.placeholder.id);

    var unselectData = {
      data: data
    };
    this.trigger('clear', unselectData);
    if (unselectData.prevented) {
      this.$element.val(previousVal);
      return;
    }

    for (var d = 0; d < data.length; d++) {
      unselectData = {
        data: data[d]
      };

      // Trigger the `unselect` event, so people can prevent it from being
      // cleared.
      this.trigger('unselect', unselectData);

      // If the event was prevented, don't clear it out.
      if (unselectData.prevented) {
        this.$element.val(previousVal);
        return;
      }
    }

    this.$element.trigger('input').trigger('change');

    this.trigger('toggle', {});
  };

  AllowClear.prototype._handleKeyboardClear = function (_, evt, container) {
    if (container.isOpen()) {
      return;
    }

    if (evt.which == KEYS.DELETE || evt.which == KEYS.BACKSPACE) {
      this._handleClear(evt);
    }
  };

  AllowClear.prototype.update = function (decorated, data) {
    decorated.call(this, data);

    this.$selection.find('.select2-selection__clear').remove();
    this.$selection[0].classList.remove('select2-selection--clearable');

    if (this.$selection.find('.select2-selection__placeholder').length > 0 ||
        data.length === 0) {
      return;
    }

    var selectionId = this.$selection.find('.select2-selection__rendered')
      .attr('id');

    var removeAll = this.options.get('translations').get('removeAllItems');

    var $remove = $(
      '<button type="button" class="select2-selection__clear" tabindex="-1">' +
        '<span aria-hidden="true">&times;</span>' +
      '</button>'
    );
    $remove.attr('title', removeAll());
    $remove.attr('aria-label', removeAll());
    $remove.attr('aria-describedby', selectionId);
    Utils.StoreData($remove[0], 'data', data);

    this.$selection.prepend($remove);
    this.$selection[0].classList.add('select2-selection--clearable');
  };

  return AllowClear;
});

S2.define('select2/selection/search',[
  'jquery',
  '../utils',
  '../keys'
], function ($, Utils, KEYS) {
  function Search (decorated, $element, options) {
    decorated.call(this, $element, options);
  }

  Search.prototype.render = function (decorated) {
    var searchLabel = this.options.get('translations').get('search');
    var $search = $(
      '<span class="select2-search select2-search--inline">' +
        '<textarea class="select2-search__field"'+
        ' type="search" tabindex="-1"' +
        ' autocorrect="off" autocapitalize="none"' +
        ' spellcheck="false" role="searchbox" aria-autocomplete="list" >' +
        '</textarea>' +
      '</span>'
    );

    this.$searchContainer = $search;
    this.$search = $search.find('textarea');

    this.$search.prop('autocomplete', this.options.get('autocomplete'));
    this.$search.attr('aria-label', searchLabel());

    var $rendered = decorated.call(this);

    this._transferTabIndex();
    $rendered.append(this.$searchContainer);

    return $rendered;
  };

  Search.prototype.bind = function (decorated, container, $container) {
    var self = this;

    var resultsId = container.id + '-results';
    var selectionId = container.id + '-container';

    decorated.call(this, container, $container);

    self.$search.attr('aria-describedby', selectionId);

    container.on('open', function () {
      self.$search.attr('aria-controls', resultsId);
      self.$search.trigger('focus');
    });

    container.on('close', function () {
      self.$search.val('');
      self.resizeSearch();
      self.$search.removeAttr('aria-controls');
      self.$search.removeAttr('aria-activedescendant');
      self.$search.trigger('focus');
    });

    container.on('enable', function () {
      self.$search.prop('disabled', false);

      self._transferTabIndex();
    });

    container.on('disable', function () {
      self.$search.prop('disabled', true);
    });

    container.on('focus', function (evt) {
      self.$search.trigger('focus');
    });

    container.on('results:focus', function (params) {
      if (params.data._resultId) {
        self.$search.attr('aria-activedescendant', params.data._resultId);
      } else {
        self.$search.removeAttr('aria-activedescendant');
      }
    });

    this.$selection.on('focusin', '.select2-search--inline', function (evt) {
      self.trigger('focus', evt);
    });

    this.$selection.on('focusout', '.select2-search--inline', function (evt) {
      self._handleBlur(evt);
    });

    this.$selection.on('keydown', '.select2-search--inline', function (evt) {
      evt.stopPropagation();

      self.trigger('keypress', evt);

      self._keyUpPrevented = evt.isDefaultPrevented();

      var key = evt.which;

      if (key === KEYS.BACKSPACE && self.$search.val() === '') {
        var $previousChoice = self.$selection
          .find('.select2-selection__choice').last();

        if ($previousChoice.length > 0) {
          var item = Utils.GetData($previousChoice[0], 'data');

          self.searchRemoveChoice(item);

          evt.preventDefault();
        }
      }
    });

    this.$selection.on('click', '.select2-search--inline', function (evt) {
      if (self.$search.val()) {
        evt.stopPropagation();
      }
    });

    // Try to detect the IE version should the `documentMode` property that
    // is stored on the document. This is only implemented in IE and is
    // slightly cleaner than doing a user agent check.
    // This property is not available in Edge, but Edge also doesn't have
    // this bug.
    var msie = document.documentMode;
    var disableInputEvents = msie && msie <= 11;

    // Workaround for browsers which do not support the `input` event
    // This will prevent double-triggering of events for browsers which support
    // both the `keyup` and `input` events.
    this.$selection.on(
      'input.searchcheck',
      '.select2-search--inline',
      function (evt) {
        // IE will trigger the `input` event when a placeholder is used on a
        // search box. To get around this issue, we are forced to ignore all
        // `input` events in IE and keep using `keyup`.
        if (disableInputEvents) {
          self.$selection.off('input.search input.searchcheck');
          return;
        }

        // Unbind the duplicated `keyup` event
        self.$selection.off('keyup.search');
      }
    );

    this.$selection.on(
      'keyup.search input.search',
      '.select2-search--inline',
      function (evt) {
        // IE will trigger the `input` event when a placeholder is used on a
        // search box. To get around this issue, we are forced to ignore all
        // `input` events in IE and keep using `keyup`.
        if (disableInputEvents && evt.type === 'input') {
          self.$selection.off('input.search input.searchcheck');
          return;
        }

        var key = evt.which;

        // We can freely ignore events from modifier keys
        if (key == KEYS.SHIFT || key == KEYS.CTRL || key == KEYS.ALT) {
          return;
        }

        // Tabbing will be handled during the `keydown` phase
        if (key == KEYS.TAB) {
          return;
        }

        self.handleSearch(evt);
      }
    );
  };

  /**
   * This method will transfer the tabindex attribute from the rendered
   * selection to the search box. This allows for the search box to be used as
   * the primary focus instead of the selection container.
   *
   * @private
   */
  Search.prototype._transferTabIndex = function (decorated) {
    this.$search.attr('tabindex', this.$selection.attr('tabindex'));
    this.$selection.attr('tabindex', '-1');
  };

  Search.prototype.createPlaceholder = function (decorated, placeholder) {
    this.$search.attr('placeholder', placeholder.text);
  };

  Search.prototype.update = function (decorated, data) {
    var searchHadFocus = this.$search[0] == document.activeElement;

    this.$search.attr('placeholder', '');

    decorated.call(this, data);

    this.resizeSearch();
    if (searchHadFocus) {
      this.$search.trigger('focus');
    }
  };

  Search.prototype.handleSearch = function () {
    this.resizeSearch();

    if (!this._keyUpPrevented) {
      var input = this.$search.val();

      this.trigger('query', {
        term: input
      });
    }

    this._keyUpPrevented = false;
  };

  Search.prototype.searchRemoveChoice = function (decorated, item) {
    this.trigger('unselect', {
      data: item
    });

    this.$search.val(item.text);
    this.handleSearch();
  };

  Search.prototype.resizeSearch = function () {
    this.$search.css('width', '25px');

    var width = '100%';

    if (this.$search.attr('placeholder') === '') {
      var minimumWidth = this.$search.val().length + 1;

      width = (minimumWidth * 0.75) + 'em';
    }

    this.$search.css('width', width);
  };

  return Search;
});

S2.define('select2/selection/selectionCss',[
  '../utils'
], function (Utils) {
  function SelectionCSS () { }

  SelectionCSS.prototype.render = function (decorated) {
    var $selection = decorated.call(this);

    var selectionCssClass = this.options.get('selectionCssClass') || '';

    if (selectionCssClass.indexOf(':all:') !== -1) {
      selectionCssClass = selectionCssClass.replace(':all:', '');

      Utils.copyNonInternalCssClasses($selection[0], this.$element[0]);
    }

    $selection.addClass(selectionCssClass);

    return $selection;
  };

  return SelectionCSS;
});

S2.define('select2/selection/eventRelay',[
  'jquery'
], function ($) {
  function EventRelay () { }

  EventRelay.prototype.bind = function (decorated, container, $container) {
    var self = this;
    var relayEvents = [
      'open', 'opening',
      'close', 'closing',
      'select', 'selecting',
      'unselect', 'unselecting',
      'clear', 'clearing'
    ];

    var preventableEvents = [
      'opening', 'closing', 'selecting', 'unselecting', 'clearing'
    ];

    decorated.call(this, container, $container);

    container.on('*', function (name, params) {
      // Ignore events that should not be relayed
      if (relayEvents.indexOf(name) === -1) {
        return;
      }

      // The parameters should always be an object
      params = params || {};

      // Generate the jQuery event for the Select2 event
      var evt = $.Event('select2:' + name, {
        params: params
      });

      self.$element.trigger(evt);

      // Only handle preventable events if it was one
      if (preventableEvents.indexOf(name) === -1) {
        return;
      }

      params.prevented = evt.isDefaultPrevented();
    });
  };

  return EventRelay;
});

S2.define('select2/translation',[
  'jquery',
  'require'
], function ($, require) {
  function Translation (dict) {
    this.dict = dict || {};
  }

  Translation.prototype.all = function () {
    return this.dict;
  };

  Translation.prototype.get = function (key) {
    return this.dict[key];
  };

  Translation.prototype.extend = function (translation) {
    this.dict = $.extend({}, translation.all(), this.dict);
  };

  // Static functions

  Translation._cache = {};

  Translation.loadPath = function (path) {
    if (!(path in Translation._cache)) {
      var translations = require(path);

      Translation._cache[path] = translations;
    }

    return new Translation(Translation._cache[path]);
  };

  return Translation;
});

S2.define('select2/diacritics',[

], function () {
  var diacritics = {
    '\u24B6': 'A',
    '\uFF21': 'A',
    '\u00C0': 'A',
    '\u00C1': 'A',
    '\u00C2': 'A',
    '\u1EA6': 'A',
    '\u1EA4': 'A',
    '\u1EAA': 'A',
    '\u1EA8': 'A',
    '\u00C3': 'A',
    '\u0100': 'A',
    '\u0102': 'A',
    '\u1EB0': 'A',
    '\u1EAE': 'A',
    '\u1EB4': 'A',
    '\u1EB2': 'A',
    '\u0226': 'A',
    '\u01E0': 'A',
    '\u00C4': 'A',
    '\u01DE': 'A',
    '\u1EA2': 'A',
    '\u00C5': 'A',
    '\u01FA': 'A',
    '\u01CD': 'A',
    '\u0200': 'A',
    '\u0202': 'A',
    '\u1EA0': 'A',
    '\u1EAC': 'A',
    '\u1EB6': 'A',
    '\u1E00': 'A',
    '\u0104': 'A',
    '\u023A': 'A',
    '\u2C6F': 'A',
    '\uA732': 'AA',
    '\u00C6': 'AE',
    '\u01FC': 'AE',
    '\u01E2': 'AE',
    '\uA734': 'AO',
    '\uA736': 'AU',
    '\uA738': 'AV',
    '\uA73A': 'AV',
    '\uA73C': 'AY',
    '\u24B7': 'B',
    '\uFF22': 'B',
    '\u1E02': 'B',
    '\u1E04': 'B',
    '\u1E06': 'B',
    '\u0243': 'B',
    '\u0182': 'B',
    '\u0181': 'B',
    '\u24B8': 'C',
    '\uFF23': 'C',
    '\u0106': 'C',
    '\u0108': 'C',
    '\u010A': 'C',
    '\u010C': 'C',
    '\u00C7': 'C',
    '\u1E08': 'C',
    '\u0187': 'C',
    '\u023B': 'C',
    '\uA73E': 'C',
    '\u24B9': 'D',
    '\uFF24': 'D',
    '\u1E0A': 'D',
    '\u010E': 'D',
    '\u1E0C': 'D',
    '\u1E10': 'D',
    '\u1E12': 'D',
    '\u1E0E': 'D',
    '\u0110': 'D',
    '\u018B': 'D',
    '\u018A': 'D',
    '\u0189': 'D',
    '\uA779': 'D',
    '\u01F1': 'DZ',
    '\u01C4': 'DZ',
    '\u01F2': 'Dz',
    '\u01C5': 'Dz',
    '\u24BA': 'E',
    '\uFF25': 'E',
    '\u00C8': 'E',
    '\u00C9': 'E',
    '\u00CA': 'E',
    '\u1EC0': 'E',
    '\u1EBE': 'E',
    '\u1EC4': 'E',
    '\u1EC2': 'E',
    '\u1EBC': 'E',
    '\u0112': 'E',
    '\u1E14': 'E',
    '\u1E16': 'E',
    '\u0114': 'E',
    '\u0116': 'E',
    '\u00CB': 'E',
    '\u1EBA': 'E',
    '\u011A': 'E',
    '\u0204': 'E',
    '\u0206': 'E',
    '\u1EB8': 'E',
    '\u1EC6': 'E',
    '\u0228': 'E',
    '\u1E1C': 'E',
    '\u0118': 'E',
    '\u1E18': 'E',
    '\u1E1A': 'E',
    '\u0190': 'E',
    '\u018E': 'E',
    '\u24BB': 'F',
    '\uFF26': 'F',
    '\u1E1E': 'F',
    '\u0191': 'F',
    '\uA77B': 'F',
    '\u24BC': 'G',
    '\uFF27': 'G',
    '\u01F4': 'G',
    '\u011C': 'G',
    '\u1E20': 'G',
    '\u011E': 'G',
    '\u0120': 'G',
    '\u01E6': 'G',
    '\u0122': 'G',
    '\u01E4': 'G',
    '\u0193': 'G',
    '\uA7A0': 'G',
    '\uA77D': 'G',
    '\uA77E': 'G',
    '\u24BD': 'H',
    '\uFF28': 'H',
    '\u0124': 'H',
    '\u1E22': 'H',
    '\u1E26': 'H',
    '\u021E': 'H',
    '\u1E24': 'H',
    '\u1E28': 'H',
    '\u1E2A': 'H',
    '\u0126': 'H',
    '\u2C67': 'H',
    '\u2C75': 'H',
    '\uA78D': 'H',
    '\u24BE': 'I',
    '\uFF29': 'I',
    '\u00CC': 'I',
    '\u00CD': 'I',
    '\u00CE': 'I',
    '\u0128': 'I',
    '\u012A': 'I',
    '\u012C': 'I',
    '\u0130': 'I',
    '\u00CF': 'I',
    '\u1E2E': 'I',
    '\u1EC8': 'I',
    '\u01CF': 'I',
    '\u0208': 'I',
    '\u020A': 'I',
    '\u1ECA': 'I',
    '\u012E': 'I',
    '\u1E2C': 'I',
    '\u0197': 'I',
    '\u24BF': 'J',
    '\uFF2A': 'J',
    '\u0134': 'J',
    '\u0248': 'J',
    '\u24C0': 'K',
    '\uFF2B': 'K',
    '\u1E30': 'K',
    '\u01E8': 'K',
    '\u1E32': 'K',
    '\u0136': 'K',
    '\u1E34': 'K',
    '\u0198': 'K',
    '\u2C69': 'K',
    '\uA740': 'K',
    '\uA742': 'K',
    '\uA744': 'K',
    '\uA7A2': 'K',
    '\u24C1': 'L',
    '\uFF2C': 'L',
    '\u013F': 'L',
    '\u0139': 'L',
    '\u013D': 'L',
    '\u1E36': 'L',
    '\u1E38': 'L',
    '\u013B': 'L',
    '\u1E3C': 'L',
    '\u1E3A': 'L',
    '\u0141': 'L',
    '\u023D': 'L',
    '\u2C62': 'L',
    '\u2C60': 'L',
    '\uA748': 'L',
    '\uA746': 'L',
    '\uA780': 'L',
    '\u01C7': 'LJ',
    '\u01C8': 'Lj',
    '\u24C2': 'M',
    '\uFF2D': 'M',
    '\u1E3E': 'M',
    '\u1E40': 'M',
    '\u1E42': 'M',
    '\u2C6E': 'M',
    '\u019C': 'M',
    '\u24C3': 'N',
    '\uFF2E': 'N',
    '\u01F8': 'N',
    '\u0143': 'N',
    '\u00D1': 'N',
    '\u1E44': 'N',
    '\u0147': 'N',
    '\u1E46': 'N',
    '\u0145': 'N',
    '\u1E4A': 'N',
    '\u1E48': 'N',
    '\u0220': 'N',
    '\u019D': 'N',
    '\uA790': 'N',
    '\uA7A4': 'N',
    '\u01CA': 'NJ',
    '\u01CB': 'Nj',
    '\u24C4': 'O',
    '\uFF2F': 'O',
    '\u00D2': 'O',
    '\u00D3': 'O',
    '\u00D4': 'O',
    '\u1ED2': 'O',
    '\u1ED0': 'O',
    '\u1ED6': 'O',
    '\u1ED4': 'O',
    '\u00D5': 'O',
    '\u1E4C': 'O',
    '\u022C': 'O',
    '\u1E4E': 'O',
    '\u014C': 'O',
    '\u1E50': 'O',
    '\u1E52': 'O',
    '\u014E': 'O',
    '\u022E': 'O',
    '\u0230': 'O',
    '\u00D6': 'O',
    '\u022A': 'O',
    '\u1ECE': 'O',
    '\u0150': 'O',
    '\u01D1': 'O',
    '\u020C': 'O',
    '\u020E': 'O',
    '\u01A0': 'O',
    '\u1EDC': 'O',
    '\u1EDA': 'O',
    '\u1EE0': 'O',
    '\u1EDE': 'O',
    '\u1EE2': 'O',
    '\u1ECC': 'O',
    '\u1ED8': 'O',
    '\u01EA': 'O',
    '\u01EC': 'O',
    '\u00D8': 'O',
    '\u01FE': 'O',
    '\u0186': 'O',
    '\u019F': 'O',
    '\uA74A': 'O',
    '\uA74C': 'O',
    '\u0152': 'OE',
    '\u01A2': 'OI',
    '\uA74E': 'OO',
    '\u0222': 'OU',
    '\u24C5': 'P',
    '\uFF30': 'P',
    '\u1E54': 'P',
    '\u1E56': 'P',
    '\u01A4': 'P',
    '\u2C63': 'P',
    '\uA750': 'P',
    '\uA752': 'P',
    '\uA754': 'P',
    '\u24C6': 'Q',
    '\uFF31': 'Q',
    '\uA756': 'Q',
    '\uA758': 'Q',
    '\u024A': 'Q',
    '\u24C7': 'R',
    '\uFF32': 'R',
    '\u0154': 'R',
    '\u1E58': 'R',
    '\u0158': 'R',
    '\u0210': 'R',
    '\u0212': 'R',
    '\u1E5A': 'R',
    '\u1E5C': 'R',
    '\u0156': 'R',
    '\u1E5E': 'R',
    '\u024C': 'R',
    '\u2C64': 'R',
    '\uA75A': 'R',
    '\uA7A6': 'R',
    '\uA782': 'R',
    '\u24C8': 'S',
    '\uFF33': 'S',
    '\u1E9E': 'S',
    '\u015A': 'S',
    '\u1E64': 'S',
    '\u015C': 'S',
    '\u1E60': 'S',
    '\u0160': 'S',
    '\u1E66': 'S',
    '\u1E62': 'S',
    '\u1E68': 'S',
    '\u0218': 'S',
    '\u015E': 'S',
    '\u2C7E': 'S',
    '\uA7A8': 'S',
    '\uA784': 'S',
    '\u24C9': 'T',
    '\uFF34': 'T',
    '\u1E6A': 'T',
    '\u0164': 'T',
    '\u1E6C': 'T',
    '\u021A': 'T',
    '\u0162': 'T',
    '\u1E70': 'T',
    '\u1E6E': 'T',
    '\u0166': 'T',
    '\u01AC': 'T',
    '\u01AE': 'T',
    '\u023E': 'T',
    '\uA786': 'T',
    '\uA728': 'TZ',
    '\u24CA': 'U',
    '\uFF35': 'U',
    '\u00D9': 'U',
    '\u00DA': 'U',
    '\u00DB': 'U',
    '\u0168': 'U',
    '\u1E78': 'U',
    '\u016A': 'U',
    '\u1E7A': 'U',
    '\u016C': 'U',
    '\u00DC': 'U',
    '\u01DB': 'U',
    '\u01D7': 'U',
    '\u01D5': 'U',
    '\u01D9': 'U',
    '\u1EE6': 'U',
    '\u016E': 'U',
    '\u0170': 'U',
    '\u01D3': 'U',
    '\u0214': 'U',
    '\u0216': 'U',
    '\u01AF': 'U',
    '\u1EEA': 'U',
    '\u1EE8': 'U',
    '\u1EEE': 'U',
    '\u1EEC': 'U',
    '\u1EF0': 'U',
    '\u1EE4': 'U',
    '\u1E72': 'U',
    '\u0172': 'U',
    '\u1E76': 'U',
    '\u1E74': 'U',
    '\u0244': 'U',
    '\u24CB': 'V',
    '\uFF36': 'V',
    '\u1E7C': 'V',
    '\u1E7E': 'V',
    '\u01B2': 'V',
    '\uA75E': 'V',
    '\u0245': 'V',
    '\uA760': 'VY',
    '\u24CC': 'W',
    '\uFF37': 'W',
    '\u1E80': 'W',
    '\u1E82': 'W',
    '\u0174': 'W',
    '\u1E86': 'W',
    '\u1E84': 'W',
    '\u1E88': 'W',
    '\u2C72': 'W',
    '\u24CD': 'X',
    '\uFF38': 'X',
    '\u1E8A': 'X',
    '\u1E8C': 'X',
    '\u24CE': 'Y',
    '\uFF39': 'Y',
    '\u1EF2': 'Y',
    '\u00DD': 'Y',
    '\u0176': 'Y',
    '\u1EF8': 'Y',
    '\u0232': 'Y',
    '\u1E8E': 'Y',
    '\u0178': 'Y',
    '\u1EF6': 'Y',
    '\u1EF4': 'Y',
    '\u01B3': 'Y',
    '\u024E': 'Y',
    '\u1EFE': 'Y',
    '\u24CF': 'Z',
    '\uFF3A': 'Z',
    '\u0179': 'Z',
    '\u1E90': 'Z',
    '\u017B': 'Z',
    '\u017D': 'Z',
    '\u1E92': 'Z',
    '\u1E94': 'Z',
    '\u01B5': 'Z',
    '\u0224': 'Z',
    '\u2C7F': 'Z',
    '\u2C6B': 'Z',
    '\uA762': 'Z',
    '\u24D0': 'a',
    '\uFF41': 'a',
    '\u1E9A': 'a',
    '\u00E0': 'a',
    '\u00E1': 'a',
    '\u00E2': 'a',
    '\u1EA7': 'a',
    '\u1EA5': 'a',
    '\u1EAB': 'a',
    '\u1EA9': 'a',
    '\u00E3': 'a',
    '\u0101': 'a',
    '\u0103': 'a',
    '\u1EB1': 'a',
    '\u1EAF': 'a',
    '\u1EB5': 'a',
    '\u1EB3': 'a',
    '\u0227': 'a',
    '\u01E1': 'a',
    '\u00E4': 'a',
    '\u01DF': 'a',
    '\u1EA3': 'a',
    '\u00E5': 'a',
    '\u01FB': 'a',
    '\u01CE': 'a',
    '\u0201': 'a',
    '\u0203': 'a',
    '\u1EA1': 'a',
    '\u1EAD': 'a',
    '\u1EB7': 'a',
    '\u1E01': 'a',
    '\u0105': 'a',
    '\u2C65': 'a',
    '\u0250': 'a',
    '\uA733': 'aa',
    '\u00E6': 'ae',
    '\u01FD': 'ae',
    '\u01E3': 'ae',
    '\uA735': 'ao',
    '\uA737': 'au',
    '\uA739': 'av',
    '\uA73B': 'av',
    '\uA73D': 'ay',
    '\u24D1': 'b',
    '\uFF42': 'b',
    '\u1E03': 'b',
    '\u1E05': 'b',
    '\u1E07': 'b',
    '\u0180': 'b',
    '\u0183': 'b',
    '\u0253': 'b',
    '\u24D2': 'c',
    '\uFF43': 'c',
    '\u0107': 'c',
    '\u0109': 'c',
    '\u010B': 'c',
    '\u010D': 'c',
    '\u00E7': 'c',
    '\u1E09': 'c',
    '\u0188': 'c',
    '\u023C': 'c',
    '\uA73F': 'c',
    '\u2184': 'c',
    '\u24D3': 'd',
    '\uFF44': 'd',
    '\u1E0B': 'd',
    '\u010F': 'd',
    '\u1E0D': 'd',
    '\u1E11': 'd',
    '\u1E13': 'd',
    '\u1E0F': 'd',
    '\u0111': 'd',
    '\u018C': 'd',
    '\u0256': 'd',
    '\u0257': 'd',
    '\uA77A': 'd',
    '\u01F3': 'dz',
    '\u01C6': 'dz',
    '\u24D4': 'e',
    '\uFF45': 'e',
    '\u00E8': 'e',
    '\u00E9': 'e',
    '\u00EA': 'e',
    '\u1EC1': 'e',
    '\u1EBF': 'e',
    '\u1EC5': 'e',
    '\u1EC3': 'e',
    '\u1EBD': 'e',
    '\u0113': 'e',
    '\u1E15': 'e',
    '\u1E17': 'e',
    '\u0115': 'e',
    '\u0117': 'e',
    '\u00EB': 'e',
    '\u1EBB': 'e',
    '\u011B': 'e',
    '\u0205': 'e',
    '\u0207': 'e',
    '\u1EB9': 'e',
    '\u1EC7': 'e',
    '\u0229': 'e',
    '\u1E1D': 'e',
    '\u0119': 'e',
    '\u1E19': 'e',
    '\u1E1B': 'e',
    '\u0247': 'e',
    '\u025B': 'e',
    '\u01DD': 'e',
    '\u24D5': 'f',
    '\uFF46': 'f',
    '\u1E1F': 'f',
    '\u0192': 'f',
    '\uA77C': 'f',
    '\u24D6': 'g',
    '\uFF47': 'g',
    '\u01F5': 'g',
    '\u011D': 'g',
    '\u1E21': 'g',
    '\u011F': 'g',
    '\u0121': 'g',
    '\u01E7': 'g',
    '\u0123': 'g',
    '\u01E5': 'g',
    '\u0260': 'g',
    '\uA7A1': 'g',
    '\u1D79': 'g',
    '\uA77F': 'g',
    '\u24D7': 'h',
    '\uFF48': 'h',
    '\u0125': 'h',
    '\u1E23': 'h',
    '\u1E27': 'h',
    '\u021F': 'h',
    '\u1E25': 'h',
    '\u1E29': 'h',
    '\u1E2B': 'h',
    '\u1E96': 'h',
    '\u0127': 'h',
    '\u2C68': 'h',
    '\u2C76': 'h',
    '\u0265': 'h',
    '\u0195': 'hv',
    '\u24D8': 'i',
    '\uFF49': 'i',
    '\u00EC': 'i',
    '\u00ED': 'i',
    '\u00EE': 'i',
    '\u0129': 'i',
    '\u012B': 'i',
    '\u012D': 'i',
    '\u00EF': 'i',
    '\u1E2F': 'i',
    '\u1EC9': 'i',
    '\u01D0': 'i',
    '\u0209': 'i',
    '\u020B': 'i',
    '\u1ECB': 'i',
    '\u012F': 'i',
    '\u1E2D': 'i',
    '\u0268': 'i',
    '\u0131': 'i',
    '\u24D9': 'j',
    '\uFF4A': 'j',
    '\u0135': 'j',
    '\u01F0': 'j',
    '\u0249': 'j',
    '\u24DA': 'k',
    '\uFF4B': 'k',
    '\u1E31': 'k',
    '\u01E9': 'k',
    '\u1E33': 'k',
    '\u0137': 'k',
    '\u1E35': 'k',
    '\u0199': 'k',
    '\u2C6A': 'k',
    '\uA741': 'k',
    '\uA743': 'k',
    '\uA745': 'k',
    '\uA7A3': 'k',
    '\u24DB': 'l',
    '\uFF4C': 'l',
    '\u0140': 'l',
    '\u013A': 'l',
    '\u013E': 'l',
    '\u1E37': 'l',
    '\u1E39': 'l',
    '\u013C': 'l',
    '\u1E3D': 'l',
    '\u1E3B': 'l',
    '\u017F': 'l',
    '\u0142': 'l',
    '\u019A': 'l',
    '\u026B': 'l',
    '\u2C61': 'l',
    '\uA749': 'l',
    '\uA781': 'l',
    '\uA747': 'l',
    '\u01C9': 'lj',
    '\u24DC': 'm',
    '\uFF4D': 'm',
    '\u1E3F': 'm',
    '\u1E41': 'm',
    '\u1E43': 'm',
    '\u0271': 'm',
    '\u026F': 'm',
    '\u24DD': 'n',
    '\uFF4E': 'n',
    '\u01F9': 'n',
    '\u0144': 'n',
    '\u00F1': 'n',
    '\u1E45': 'n',
    '\u0148': 'n',
    '\u1E47': 'n',
    '\u0146': 'n',
    '\u1E4B': 'n',
    '\u1E49': 'n',
    '\u019E': 'n',
    '\u0272': 'n',
    '\u0149': 'n',
    '\uA791': 'n',
    '\uA7A5': 'n',
    '\u01CC': 'nj',
    '\u24DE': 'o',
    '\uFF4F': 'o',
    '\u00F2': 'o',
    '\u00F3': 'o',
    '\u00F4': 'o',
    '\u1ED3': 'o',
    '\u1ED1': 'o',
    '\u1ED7': 'o',
    '\u1ED5': 'o',
    '\u00F5': 'o',
    '\u1E4D': 'o',
    '\u022D': 'o',
    '\u1E4F': 'o',
    '\u014D': 'o',
    '\u1E51': 'o',
    '\u1E53': 'o',
    '\u014F': 'o',
    '\u022F': 'o',
    '\u0231': 'o',
    '\u00F6': 'o',
    '\u022B': 'o',
    '\u1ECF': 'o',
    '\u0151': 'o',
    '\u01D2': 'o',
    '\u020D': 'o',
    '\u020F': 'o',
    '\u01A1': 'o',
    '\u1EDD': 'o',
    '\u1EDB': 'o',
    '\u1EE1': 'o',
    '\u1EDF': 'o',
    '\u1EE3': 'o',
    '\u1ECD': 'o',
    '\u1ED9': 'o',
    '\u01EB': 'o',
    '\u01ED': 'o',
    '\u00F8': 'o',
    '\u01FF': 'o',
    '\u0254': 'o',
    '\uA74B': 'o',
    '\uA74D': 'o',
    '\u0275': 'o',
    '\u0153': 'oe',
    '\u01A3': 'oi',
    '\u0223': 'ou',
    '\uA74F': 'oo',
    '\u24DF': 'p',
    '\uFF50': 'p',
    '\u1E55': 'p',
    '\u1E57': 'p',
    '\u01A5': 'p',
    '\u1D7D': 'p',
    '\uA751': 'p',
    '\uA753': 'p',
    '\uA755': 'p',
    '\u24E0': 'q',
    '\uFF51': 'q',
    '\u024B': 'q',
    '\uA757': 'q',
    '\uA759': 'q',
    '\u24E1': 'r',
    '\uFF52': 'r',
    '\u0155': 'r',
    '\u1E59': 'r',
    '\u0159': 'r',
    '\u0211': 'r',
    '\u0213': 'r',
    '\u1E5B': 'r',
    '\u1E5D': 'r',
    '\u0157': 'r',
    '\u1E5F': 'r',
    '\u024D': 'r',
    '\u027D': 'r',
    '\uA75B': 'r',
    '\uA7A7': 'r',
    '\uA783': 'r',
    '\u24E2': 's',
    '\uFF53': 's',
    '\u00DF': 's',
    '\u015B': 's',
    '\u1E65': 's',
    '\u015D': 's',
    '\u1E61': 's',
    '\u0161': 's',
    '\u1E67': 's',
    '\u1E63': 's',
    '\u1E69': 's',
    '\u0219': 's',
    '\u015F': 's',
    '\u023F': 's',
    '\uA7A9': 's',
    '\uA785': 's',
    '\u1E9B': 's',
    '\u24E3': 't',
    '\uFF54': 't',
    '\u1E6B': 't',
    '\u1E97': 't',
    '\u0165': 't',
    '\u1E6D': 't',
    '\u021B': 't',
    '\u0163': 't',
    '\u1E71': 't',
    '\u1E6F': 't',
    '\u0167': 't',
    '\u01AD': 't',
    '\u0288': 't',
    '\u2C66': 't',
    '\uA787': 't',
    '\uA729': 'tz',
    '\u24E4': 'u',
    '\uFF55': 'u',
    '\u00F9': 'u',
    '\u00FA': 'u',
    '\u00FB': 'u',
    '\u0169': 'u',
    '\u1E79': 'u',
    '\u016B': 'u',
    '\u1E7B': 'u',
    '\u016D': 'u',
    '\u00FC': 'u',
    '\u01DC': 'u',
    '\u01D8': 'u',
    '\u01D6': 'u',
    '\u01DA': 'u',
    '\u1EE7': 'u',
    '\u016F': 'u',
    '\u0171': 'u',
    '\u01D4': 'u',
    '\u0215': 'u',
    '\u0217': 'u',
    '\u01B0': 'u',
    '\u1EEB': 'u',
    '\u1EE9': 'u',
    '\u1EEF': 'u',
    '\u1EED': 'u',
    '\u1EF1': 'u',
    '\u1EE5': 'u',
    '\u1E73': 'u',
    '\u0173': 'u',
    '\u1E77': 'u',
    '\u1E75': 'u',
    '\u0289': 'u',
    '\u24E5': 'v',
    '\uFF56': 'v',
    '\u1E7D': 'v',
    '\u1E7F': 'v',
    '\u028B': 'v',
    '\uA75F': 'v',
    '\u028C': 'v',
    '\uA761': 'vy',
    '\u24E6': 'w',
    '\uFF57': 'w',
    '\u1E81': 'w',
    '\u1E83': 'w',
    '\u0175': 'w',
    '\u1E87': 'w',
    '\u1E85': 'w',
    '\u1E98': 'w',
    '\u1E89': 'w',
    '\u2C73': 'w',
    '\u24E7': 'x',
    '\uFF58': 'x',
    '\u1E8B': 'x',
    '\u1E8D': 'x',
    '\u24E8': 'y',
    '\uFF59': 'y',
    '\u1EF3': 'y',
    '\u00FD': 'y',
    '\u0177': 'y',
    '\u1EF9': 'y',
    '\u0233': 'y',
    '\u1E8F': 'y',
    '\u00FF': 'y',
    '\u1EF7': 'y',
    '\u1E99': 'y',
    '\u1EF5': 'y',
    '\u01B4': 'y',
    '\u024F': 'y',
    '\u1EFF': 'y',
    '\u24E9': 'z',
    '\uFF5A': 'z',
    '\u017A': 'z',
    '\u1E91': 'z',
    '\u017C': 'z',
    '\u017E': 'z',
    '\u1E93': 'z',
    '\u1E95': 'z',
    '\u01B6': 'z',
    '\u0225': 'z',
    '\u0240': 'z',
    '\u2C6C': 'z',
    '\uA763': 'z',
    '\u0386': '\u0391',
    '\u0388': '\u0395',
    '\u0389': '\u0397',
    '\u038A': '\u0399',
    '\u03AA': '\u0399',
    '\u038C': '\u039F',
    '\u038E': '\u03A5',
    '\u03AB': '\u03A5',
    '\u038F': '\u03A9',
    '\u03AC': '\u03B1',
    '\u03AD': '\u03B5',
    '\u03AE': '\u03B7',
    '\u03AF': '\u03B9',
    '\u03CA': '\u03B9',
    '\u0390': '\u03B9',
    '\u03CC': '\u03BF',
    '\u03CD': '\u03C5',
    '\u03CB': '\u03C5',
    '\u03B0': '\u03C5',
    '\u03CE': '\u03C9',
    '\u03C2': '\u03C3',
    '\u2019': '\''
  };

  return diacritics;
});

S2.define('select2/data/base',[
  '../utils'
], function (Utils) {
  function BaseAdapter ($element, options) {
    BaseAdapter.__super__.constructor.call(this);
  }

  Utils.Extend(BaseAdapter, Utils.Observable);

  BaseAdapter.prototype.current = function (callback) {
    throw new Error('The `current` method must be defined in child classes.');
  };

  BaseAdapter.prototype.query = function (params, callback) {
    throw new Error('The `query` method must be defined in child classes.');
  };

  BaseAdapter.prototype.bind = function (container, $container) {
    // Can be implemented in subclasses
  };

  BaseAdapter.prototype.destroy = function () {
    // Can be implemented in subclasses
  };

  BaseAdapter.prototype.generateResultId = function (container, data) {
    var id = container.id + '-result-';

    id += Utils.generateChars(4);

    if (data.id != null) {
      id += '-' + data.id.toString();
    } else {
      id += '-' + Utils.generateChars(4);
    }
    return id;
  };

  return BaseAdapter;
});

S2.define('select2/data/select',[
  './base',
  '../utils',
  'jquery'
], function (BaseAdapter, Utils, $) {
  function SelectAdapter ($element, options) {
    this.$element = $element;
    this.options = options;

    SelectAdapter.__super__.constructor.call(this);
  }

  Utils.Extend(SelectAdapter, BaseAdapter);

  SelectAdapter.prototype.current = function (callback) {
    var self = this;

    var data = Array.prototype.map.call(
      this.$element[0].querySelectorAll(':checked'),
      function (selectedElement) {
        return self.item($(selectedElement));
      }
    );

    callback(data);
  };

  SelectAdapter.prototype.select = function (data) {
    var self = this;

    data.selected = true;

    // If data.element is a DOM node, use it instead
    if (
      data.element != null && data.element.tagName.toLowerCase() === 'option'
    ) {
      data.element.selected = true;

      this.$element.trigger('input').trigger('change');

      return;
    }

    if (this.$element.prop('multiple')) {
      this.current(function (currentData) {
        var val = [];

        data = [data];
        data.push.apply(data, currentData);

        for (var d = 0; d < data.length; d++) {
          var id = data[d].id;

          if (val.indexOf(id) === -1) {
            val.push(id);
          }
        }

        self.$element.val(val);
        self.$element.trigger('input').trigger('change');
      });
    } else {
      var val = data.id;

      this.$element.val(val);
      this.$element.trigger('input').trigger('change');
    }
  };

  SelectAdapter.prototype.unselect = function (data) {
    var self = this;

    if (!this.$element.prop('multiple')) {
      return;
    }

    data.selected = false;

    if (
      data.element != null &&
      data.element.tagName.toLowerCase() === 'option'
    ) {
      data.element.selected = false;

      this.$element.trigger('input').trigger('change');

      return;
    }

    this.current(function (currentData) {
      var val = [];

      for (var d = 0; d < currentData.length; d++) {
        var id = currentData[d].id;

        if (id !== data.id && val.indexOf(id) === -1) {
          val.push(id);
        }
      }

      self.$element.val(val);

      self.$element.trigger('input').trigger('change');
    });
  };

  SelectAdapter.prototype.bind = function (container, $container) {
    var self = this;

    this.container = container;

    container.on('select', function (params) {
      self.select(params.data);
    });

    container.on('unselect', function (params) {
      self.unselect(params.data);
    });
  };

  SelectAdapter.prototype.destroy = function () {
    // Remove anything added to child elements
    this.$element.find('*').each(function () {
      // Remove any custom data set by Select2
      Utils.RemoveData(this);
    });
  };

  SelectAdapter.prototype.query = function (params, callback) {
    var data = [];
    var self = this;

    var $options = this.$element.children();

    $options.each(function () {
      if (
        this.tagName.toLowerCase() !== 'option' &&
        this.tagName.toLowerCase() !== 'optgroup'
      ) {
        return;
      }

      var $option = $(this);

      var option = self.item($option);

      var matches = self.matches(params, option);

      if (matches !== null) {
        data.push(matches);
      }
    });

    callback({
      results: data
    });
  };

  SelectAdapter.prototype.addOptions = function ($options) {
    this.$element.append($options);
  };

  SelectAdapter.prototype.option = function (data) {
    var option;

    if (data.children) {
      option = document.createElement('optgroup');
      option.label = data.text;
    } else {
      option = document.createElement('option');

      if (option.textContent !== undefined) {
        option.textContent = data.text;
      } else {
        option.innerText = data.text;
      }
    }

    if (data.id !== undefined) {
      option.value = data.id;
    }

    if (data.disabled) {
      option.disabled = true;
    }

    if (data.selected) {
      option.selected = true;
    }

    if (data.title) {
      option.title = data.title;
    }

    var normalizedData = this._normalizeItem(data);
    normalizedData.element = option;

    // Override the option's data with the combined data
    Utils.StoreData(option, 'data', normalizedData);

    return $(option);
  };

  SelectAdapter.prototype.item = function ($option) {
    var data = {};

    data = Utils.GetData($option[0], 'data');

    if (data != null) {
      return data;
    }

    var option = $option[0];

    if (option.tagName.toLowerCase() === 'option') {
      data = {
        id: $option.val(),
        text: $option.text(),
        disabled: $option.prop('disabled'),
        selected: $option.prop('selected'),
        title: $option.prop('title')
      };
    } else if (option.tagName.toLowerCase() === 'optgroup') {
      data = {
        text: $option.prop('label'),
        children: [],
        title: $option.prop('title')
      };

      var $children = $option.children('option');
      var children = [];

      for (var c = 0; c < $children.length; c++) {
        var $child = $($children[c]);

        var child = this.item($child);

        children.push(child);
      }

      data.children = children;
    }

    data = this._normalizeItem(data);
    data.element = $option[0];

    Utils.StoreData($option[0], 'data', data);

    return data;
  };

  SelectAdapter.prototype._normalizeItem = function (item) {
    if (item !== Object(item)) {
      item = {
        id: item,
        text: item
      };
    }

    item = $.extend({}, {
      text: ''
    }, item);

    var defaults = {
      selected: false,
      disabled: false
    };

    if (item.id != null) {
      item.id = item.id.toString();
    }

    if (item.text != null) {
      item.text = item.text.toString();
    }

    if (item._resultId == null && item.id && this.container != null) {
      item._resultId = this.generateResultId(this.container, item);
    }

    return $.extend({}, defaults, item);
  };

  SelectAdapter.prototype.matches = function (params, data) {
    var matcher = this.options.get('matcher');

    return matcher(params, data);
  };

  return SelectAdapter;
});

S2.define('select2/data/array',[
  './select',
  '../utils',
  'jquery'
], function (SelectAdapter, Utils, $) {
  function ArrayAdapter ($element, options) {
    this._dataToConvert = options.get('data') || [];

    ArrayAdapter.__super__.constructor.call(this, $element, options);
  }

  Utils.Extend(ArrayAdapter, SelectAdapter);

  ArrayAdapter.prototype.bind = function (container, $container) {
    ArrayAdapter.__super__.bind.call(this, container, $container);

    this.addOptions(this.convertToOptions(this._dataToConvert));
  };

  ArrayAdapter.prototype.select = function (data) {
    var $option = this.$element.find('option').filter(function (i, elm) {
      return elm.value == data.id.toString();
    });

    if ($option.length === 0) {
      $option = this.option(data);

      this.addOptions($option);
    }

    ArrayAdapter.__super__.select.call(this, data);
  };

  ArrayAdapter.prototype.convertToOptions = function (data) {
    var self = this;

    var $existing = this.$element.find('option');
    var existingIds = $existing.map(function () {
      return self.item($(this)).id;
    }).get();

    var $options = [];

    // Filter out all items except for the one passed in the argument
    function onlyItem (item) {
      return function () {
        return $(this).val() == item.id;
      };
    }

    for (var d = 0; d < data.length; d++) {
      var item = this._normalizeItem(data[d]);

      // Skip items which were pre-loaded, only merge the data
      if (existingIds.indexOf(item.id) >= 0) {
        var $existingOption = $existing.filter(onlyItem(item));

        var existingData = this.item($existingOption);
        var newData = $.extend(true, {}, item, existingData);

        var $newOption = this.option(newData);

        $existingOption.replaceWith($newOption);

        continue;
      }

      var $option = this.option(item);

      if (item.children) {
        var $children = this.convertToOptions(item.children);

        $option.append($children);
      }

      $options.push($option);
    }

    return $options;
  };

  return ArrayAdapter;
});

S2.define('select2/data/ajax',[
  './array',
  '../utils',
  'jquery'
], function (ArrayAdapter, Utils, $) {
  function AjaxAdapter ($element, options) {
    this.ajaxOptions = this._applyDefaults(options.get('ajax'));

    if (this.ajaxOptions.processResults != null) {
      this.processResults = this.ajaxOptions.processResults;
    }

    AjaxAdapter.__super__.constructor.call(this, $element, options);
  }

  Utils.Extend(AjaxAdapter, ArrayAdapter);

  AjaxAdapter.prototype._applyDefaults = function (options) {
    var defaults = {
      data: function (params) {
        return $.extend({}, params, {
          q: params.term
        });
      },
      transport: function (params, success, failure) {
        var $request = $.ajax(params);

        $request.then(success);
        $request.fail(failure);

        return $request;
      }
    };

    return $.extend({}, defaults, options, true);
  };

  AjaxAdapter.prototype.processResults = function (results) {
    return results;
  };

  AjaxAdapter.prototype.query = function (params, callback) {
    var matches = [];
    var self = this;

    if (this._request != null) {
      // JSONP requests cannot always be aborted
      if (typeof this._request.abort === 'function') {
        this._request.abort();
      }

      this._request = null;
    }

    var options = $.extend({
      type: 'GET'
    }, this.ajaxOptions);

    if (typeof options.url === 'function') {
      options.url = options.url.call(this.$element, params);
    }

    if (typeof options.data === 'function') {
      options.data = options.data.call(this.$element, params);
    }

    function request () {
      var $request = options.transport(options, function (data) {
        var results = self.processResults(data, params);

        if (self.options.get('debug') && window.console && console.error) {
          // Check to make sure that the response included a `results` key.
          if (!results || !results.results || !Array.isArray(results.results)) {
            console.error(
              'Select2: The AJAX results did not return an array in the ' +
              '`results` key of the response.'
            );
          }
        }

        callback(results);
      }, function () {
        // Attempt to detect if a request was aborted
        // Only works if the transport exposes a status property
        if ('status' in $request &&
            ($request.status === 0 || $request.status === '0')) {
          return;
        }

        self.trigger('results:message', {
          message: 'errorLoading'
        });
      });

      self._request = $request;
    }

    if (this.ajaxOptions.delay && params.term != null) {
      if (this._queryTimeout) {
        window.clearTimeout(this._queryTimeout);
      }

      this._queryTimeout = window.setTimeout(request, this.ajaxOptions.delay);
    } else {
      request();
    }
  };

  return AjaxAdapter;
});

S2.define('select2/data/tags',[
  'jquery'
], function ($) {
  function Tags (decorated, $element, options) {
    var tags = options.get('tags');

    var createTag = options.get('createTag');

    if (createTag !== undefined) {
      this.createTag = createTag;
    }

    var insertTag = options.get('insertTag');

    if (insertTag !== undefined) {
        this.insertTag = insertTag;
    }

    decorated.call(this, $element, options);

    if (Array.isArray(tags)) {
      for (var t = 0; t < tags.length; t++) {
        var tag = tags[t];
        var item = this._normalizeItem(tag);

        var $option = this.option(item);

        this.$element.append($option);
      }
    }
  }

  Tags.prototype.query = function (decorated, params, callback) {
    var self = this;

    this._removeOldTags();

    if (params.term == null || params.page != null) {
      decorated.call(this, params, callback);
      return;
    }

    function wrapper (obj, child) {
      var data = obj.results;

      for (var i = 0; i < data.length; i++) {
        var option = data[i];

        var checkChildren = (
          option.children != null &&
          !wrapper({
            results: option.children
          }, true)
        );

        var optionText = (option.text || '').toUpperCase();
        var paramsTerm = (params.term || '').toUpperCase();

        var checkText = optionText === paramsTerm;

        if (checkText || checkChildren) {
          if (child) {
            return false;
          }

          obj.data = data;
          callback(obj);

          return;
        }
      }

      if (child) {
        return true;
      }

      var tag = self.createTag(params);

      if (tag != null) {
        var $option = self.option(tag);
        $option.attr('data-select2-tag', 'true');

        self.addOptions([$option]);

        self.insertTag(data, tag);
      }

      obj.results = data;

      callback(obj);
    }

    decorated.call(this, params, wrapper);
  };

  Tags.prototype.createTag = function (decorated, params) {
    if (params.term == null) {
      return null;
    }

    var term = params.term.trim();

    if (term === '') {
      return null;
    }

    return {
      id: term,
      text: term
    };
  };

  Tags.prototype.insertTag = function (_, data, tag) {
    data.unshift(tag);
  };

  Tags.prototype._removeOldTags = function (_) {
    var $options = this.$element.find('option[data-select2-tag]');

    $options.each(function () {
      if (this.selected) {
        return;
      }

      $(this).remove();
    });
  };

  return Tags;
});

S2.define('select2/data/tokenizer',[
  'jquery'
], function ($) {
  function Tokenizer (decorated, $element, options) {
    var tokenizer = options.get('tokenizer');

    if (tokenizer !== undefined) {
      this.tokenizer = tokenizer;
    }

    decorated.call(this, $element, options);
  }

  Tokenizer.prototype.bind = function (decorated, container, $container) {
    decorated.call(this, container, $container);

    this.$search =  container.dropdown.$search || container.selection.$search ||
      $container.find('.select2-search__field');
  };

  Tokenizer.prototype.query = function (decorated, params, callback) {
    var self = this;

    function createAndSelect (data) {
      // Normalize the data object so we can use it for checks
      var item = self._normalizeItem(data);

      // Check if the data object already exists as a tag
      // Select it if it doesn't
      var $existingOptions = self.$element.find('option').filter(function () {
        return $(this).val() === item.id;
      });

      // If an existing option wasn't found for it, create the option
      if (!$existingOptions.length) {
        var $option = self.option(item);
        $option.attr('data-select2-tag', true);

        self._removeOldTags();
        self.addOptions([$option]);
      }

      // Select the item, now that we know there is an option for it
      select(item);
    }

    function select (data) {
      self.trigger('select', {
        data: data
      });
    }

    params.term = params.term || '';

    var tokenData = this.tokenizer(params, this.options, createAndSelect);

    if (tokenData.term !== params.term) {
      // Replace the search term if we have the search box
      if (this.$search.length) {
        this.$search.val(tokenData.term);
        this.$search.trigger('focus');
      }

      params.term = tokenData.term;
    }

    decorated.call(this, params, callback);
  };

  Tokenizer.prototype.tokenizer = function (_, params, options, callback) {
    var separators = options.get('tokenSeparators') || [];
    var term = params.term;
    var i = 0;

    var createTag = this.createTag || function (params) {
      return {
        id: params.term,
        text: params.term
      };
    };

    while (i < term.length) {
      var termChar = term[i];

      if (separators.indexOf(termChar) === -1) {
        i++;

        continue;
      }

      var part = term.substr(0, i);
      var partParams = $.extend({}, params, {
        term: part
      });

      var data = createTag(partParams);

      if (data == null) {
        i++;
        continue;
      }

      callback(data);

      // Reset the term to not include the tokenized portion
      term = term.substr(i + 1) || '';
      i = 0;
    }

    return {
      term: term
    };
  };

  return Tokenizer;
});

S2.define('select2/data/minimumInputLength',[

], function () {
  function MinimumInputLength (decorated, $e, options) {
    this.minimumInputLength = options.get('minimumInputLength');

    decorated.call(this, $e, options);
  }

  MinimumInputLength.prototype.query = function (decorated, params, callback) {
    params.term = params.term || '';

    if (params.term.length < this.minimumInputLength) {
      this.trigger('results:message', {
        message: 'inputTooShort',
        args: {
          minimum: this.minimumInputLength,
          input: params.term,
          params: params
        }
      });

      return;
    }

    decorated.call(this, params, callback);
  };

  return MinimumInputLength;
});

S2.define('select2/data/maximumInputLength',[

], function () {
  function MaximumInputLength (decorated, $e, options) {
    this.maximumInputLength = options.get('maximumInputLength');

    decorated.call(this, $e, options);
  }

  MaximumInputLength.prototype.query = function (decorated, params, callback) {
    params.term = params.term || '';

    if (this.maximumInputLength > 0 &&
        params.term.length > this.maximumInputLength) {
      this.trigger('results:message', {
        message: 'inputTooLong',
        args: {
          maximum: this.maximumInputLength,
          input: params.term,
          params: params
        }
      });

      return;
    }

    decorated.call(this, params, callback);
  };

  return MaximumInputLength;
});

S2.define('select2/data/maximumSelectionLength',[

], function (){
  function MaximumSelectionLength (decorated, $e, options) {
    this.maximumSelectionLength = options.get('maximumSelectionLength');

    decorated.call(this, $e, options);
  }

  MaximumSelectionLength.prototype.bind =
    function (decorated, container, $container) {
      var self = this;

      decorated.call(this, container, $container);

      container.on('select', function () {
        self._checkIfMaximumSelected();
      });
  };

  MaximumSelectionLength.prototype.query =
    function (decorated, params, callback) {
      var self = this;

      this._checkIfMaximumSelected(function () {
        decorated.call(self, params, callback);
      });
  };

  MaximumSelectionLength.prototype._checkIfMaximumSelected =
    function (_, successCallback) {
      var self = this;

      this.current(function (currentData) {
        var count = currentData != null ? currentData.length : 0;
        if (self.maximumSelectionLength > 0 &&
          count >= self.maximumSelectionLength) {
          self.trigger('results:message', {
            message: 'maximumSelected',
            args: {
              maximum: self.maximumSelectionLength
            }
          });
          return;
        }

        if (successCallback) {
          successCallback();
        }
      });
  };

  return MaximumSelectionLength;
});

S2.define('select2/dropdown',[
  'jquery',
  './utils'
], function ($, Utils) {
  function Dropdown ($element, options) {
    this.$element = $element;
    this.options = options;

    Dropdown.__super__.constructor.call(this);
  }

  Utils.Extend(Dropdown, Utils.Observable);

  Dropdown.prototype.render = function () {
    var $dropdown = $(
      '<span class="select2-dropdown">' +
        '<span class="select2-results"></span>' +
      '</span>'
    );

    $dropdown.attr('dir', this.options.get('dir'));

    this.$dropdown = $dropdown;

    return $dropdown;
  };

  Dropdown.prototype.bind = function () {
    // Should be implemented in subclasses
  };

  Dropdown.prototype.position = function ($dropdown, $container) {
    // Should be implemented in subclasses
  };

  Dropdown.prototype.destroy = function () {
    // Remove the dropdown from the DOM
    this.$dropdown.remove();
  };

  return Dropdown;
});

S2.define('select2/dropdown/search',[
  'jquery'
], function ($) {
  function Search () { }

  Search.prototype.render = function (decorated) {
    var $rendered = decorated.call(this);
    var searchLabel = this.options.get('translations').get('search');

    var $search = $(
      '<span class="select2-search select2-search--dropdown">' +
        '<input class="select2-search__field" type="search" tabindex="-1"' +
        ' autocorrect="off" autocapitalize="none"' +
        ' spellcheck="false" role="searchbox" aria-autocomplete="list" />' +
      '</span>'
    );

    this.$searchContainer = $search;
    this.$search = $search.find('input');

    this.$search.prop('autocomplete', this.options.get('autocomplete'));
    this.$search.attr('aria-label', searchLabel());

    $rendered.prepend($search);

    return $rendered;
  };

  Search.prototype.bind = function (decorated, container, $container) {
    var self = this;

    var resultsId = container.id + '-results';

    decorated.call(this, container, $container);

    this.$search.on('keydown', function (evt) {
      self.trigger('keypress', evt);

      self._keyUpPrevented = evt.isDefaultPrevented();
    });

    // Workaround for browsers which do not support the `input` event
    // This will prevent double-triggering of events for browsers which support
    // both the `keyup` and `input` events.
    this.$search.on('input', function (evt) {
      // Unbind the duplicated `keyup` event
      $(this).off('keyup');
    });

    this.$search.on('keyup input', function (evt) {
      self.handleSearch(evt);
    });

    container.on('open', function () {
      self.$search.attr('tabindex', 0);
      self.$search.attr('aria-controls', resultsId);

      self.$search.trigger('focus');

      window.setTimeout(function () {
        self.$search.trigger('focus');
      }, 0);
    });

    container.on('close', function () {
      self.$search.attr('tabindex', -1);
      self.$search.removeAttr('aria-controls');
      self.$search.removeAttr('aria-activedescendant');

      self.$search.val('');
      self.$search.trigger('blur');
    });

    container.on('focus', function () {
      if (!container.isOpen()) {
        self.$search.trigger('focus');
      }
    });

    container.on('results:all', function (params) {
      if (params.query.term == null || params.query.term === '') {
        var showSearch = self.showSearch(params);

        if (showSearch) {
          self.$searchContainer[0].classList.remove('select2-search--hide');
        } else {
          self.$searchContainer[0].classList.add('select2-search--hide');
        }
      }
    });

    container.on('results:focus', function (params) {
      if (params.data._resultId) {
        self.$search.attr('aria-activedescendant', params.data._resultId);
      } else {
        self.$search.removeAttr('aria-activedescendant');
      }
    });
  };

  Search.prototype.handleSearch = function (evt) {
    if (!this._keyUpPrevented) {
      var input = this.$search.val();

      this.trigger('query', {
        term: input
      });
    }

    this._keyUpPrevented = false;
  };

  Search.prototype.showSearch = function (_, params) {
    return true;
  };

  return Search;
});

S2.define('select2/dropdown/hidePlaceholder',[

], function () {
  function HidePlaceholder (decorated, $element, options, dataAdapter) {
    this.placeholder = this.normalizePlaceholder(options.get('placeholder'));

    decorated.call(this, $element, options, dataAdapter);
  }

  HidePlaceholder.prototype.append = function (decorated, data) {
    data.results = this.removePlaceholder(data.results);

    decorated.call(this, data);
  };

  HidePlaceholder.prototype.normalizePlaceholder = function (_, placeholder) {
    if (typeof placeholder === 'string') {
      placeholder = {
        id: '',
        text: placeholder
      };
    }

    return placeholder;
  };

  HidePlaceholder.prototype.removePlaceholder = function (_, data) {
    var modifiedData = data.slice(0);

    for (var d = data.length - 1; d >= 0; d--) {
      var item = data[d];

      if (this.placeholder.id === item.id) {
        modifiedData.splice(d, 1);
      }
    }

    return modifiedData;
  };

  return HidePlaceholder;
});

S2.define('select2/dropdown/infiniteScroll',[
  'jquery'
], function ($) {
  function InfiniteScroll (decorated, $element, options, dataAdapter) {
    this.lastParams = {};

    decorated.call(this, $element, options, dataAdapter);

    this.$loadingMore = this.createLoadingMore();
    this.loading = false;
  }

  InfiniteScroll.prototype.append = function (decorated, data) {
    this.$loadingMore.remove();
    this.loading = false;

    decorated.call(this, data);

    if (this.showLoadingMore(data)) {
      this.$results.append(this.$loadingMore);
      this.loadMoreIfNeeded();
    }
  };

  InfiniteScroll.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    container.on('query', function (params) {
      self.lastParams = params;
      self.loading = true;
    });

    container.on('query:append', function (params) {
      self.lastParams = params;
      self.loading = true;
    });

    this.$results.on('scroll', this.loadMoreIfNeeded.bind(this));
  };

  InfiniteScroll.prototype.loadMoreIfNeeded = function () {
    var isLoadMoreVisible = $.contains(
      document.documentElement,
      this.$loadingMore[0]
    );

    if (this.loading || !isLoadMoreVisible) {
      return;
    }

    var currentOffset = this.$results.offset().top +
      this.$results.outerHeight(false);
    var loadingMoreOffset = this.$loadingMore.offset().top +
      this.$loadingMore.outerHeight(false);

    if (currentOffset + 50 >= loadingMoreOffset) {
      this.loadMore();
    }
  };

  InfiniteScroll.prototype.loadMore = function () {
    this.loading = true;

    var params = $.extend({}, {page: 1}, this.lastParams);

    params.page++;

    this.trigger('query:append', params);
  };

  InfiniteScroll.prototype.showLoadingMore = function (_, data) {
    return data.pagination && data.pagination.more;
  };

  InfiniteScroll.prototype.createLoadingMore = function () {
    var $option = $(
      '<li ' +
      'class="select2-results__option select2-results__option--load-more"' +
      'role="option" aria-disabled="true"></li>'
    );

    var message = this.options.get('translations').get('loadingMore');

    $option.html(message(this.lastParams));

    return $option;
  };

  return InfiniteScroll;
});

S2.define('select2/dropdown/attachBody',[
  'jquery',
  '../utils'
], function ($, Utils) {
  function AttachBody (decorated, $element, options) {
    this.$dropdownParent = $(options.get('dropdownParent') || document.body);

    decorated.call(this, $element, options);
  }

  AttachBody.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    container.on('open', function () {
      self._showDropdown();
      self._attachPositioningHandler(container);

      // Must bind after the results handlers to ensure correct sizing
      self._bindContainerResultHandlers(container);
    });

    container.on('close', function () {
      self._hideDropdown();
      self._detachPositioningHandler(container);
    });

    this.$dropdownContainer.on('mousedown', function (evt) {
      evt.stopPropagation();
    });
  };

  AttachBody.prototype.destroy = function (decorated) {
    decorated.call(this);

    this.$dropdownContainer.remove();
  };

  AttachBody.prototype.position = function (decorated, $dropdown, $container) {
    // Clone all of the container classes
    $dropdown.attr('class', $container.attr('class'));

    $dropdown[0].classList.remove('select2');
    $dropdown[0].classList.add('select2-container--open');

    $dropdown.css({
      position: 'absolute',
      top: -999999
    });

    this.$container = $container;
  };

  AttachBody.prototype.render = function (decorated) {
    var $container = $('<span></span>');

    var $dropdown = decorated.call(this);
    $container.append($dropdown);

    this.$dropdownContainer = $container;

    return $container;
  };

  AttachBody.prototype._hideDropdown = function (decorated) {
    this.$dropdownContainer.detach();
  };

  AttachBody.prototype._bindContainerResultHandlers =
      function (decorated, container) {

    // These should only be bound once
    if (this._containerResultsHandlersBound) {
      return;
    }

    var self = this;

    container.on('results:all', function () {
      self._positionDropdown();
      self._resizeDropdown();
    });

    container.on('results:append', function () {
      self._positionDropdown();
      self._resizeDropdown();
    });

    container.on('results:message', function () {
      self._positionDropdown();
      self._resizeDropdown();
    });

    container.on('select', function () {
      self._positionDropdown();
      self._resizeDropdown();
    });

    container.on('unselect', function () {
      self._positionDropdown();
      self._resizeDropdown();
    });

    this._containerResultsHandlersBound = true;
  };

  AttachBody.prototype._attachPositioningHandler =
      function (decorated, container) {
    var self = this;

    var scrollEvent = 'scroll.select2.' + container.id;
    var resizeEvent = 'resize.select2.' + container.id;
    var orientationEvent = 'orientationchange.select2.' + container.id;

    var $watchers = this.$container.parents().filter(Utils.hasScroll);
    $watchers.each(function () {
      Utils.StoreData(this, 'select2-scroll-position', {
        x: $(this).scrollLeft(),
        y: $(this).scrollTop()
      });
    });

    $watchers.on(scrollEvent, function (ev) {
      var position = Utils.GetData(this, 'select2-scroll-position');
      $(this).scrollTop(position.y);
    });

    $(window).on(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent,
      function (e) {
      self._positionDropdown();
      self._resizeDropdown();
    });
  };

  AttachBody.prototype._detachPositioningHandler =
      function (decorated, container) {
    var scrollEvent = 'scroll.select2.' + container.id;
    var resizeEvent = 'resize.select2.' + container.id;
    var orientationEvent = 'orientationchange.select2.' + container.id;

    var $watchers = this.$container.parents().filter(Utils.hasScroll);
    $watchers.off(scrollEvent);

    $(window).off(scrollEvent + ' ' + resizeEvent + ' ' + orientationEvent);
  };

  AttachBody.prototype._positionDropdown = function () {
    var $window = $(window);

    var isCurrentlyAbove = this.$dropdown[0].classList
      .contains('select2-dropdown--above');
    var isCurrentlyBelow = this.$dropdown[0].classList
      .contains('select2-dropdown--below');

    var newDirection = null;

    var offset = this.$container.offset();

    offset.bottom = offset.top + this.$container.outerHeight(false);

    var container = {
      height: this.$container.outerHeight(false)
    };

    container.top = offset.top;
    container.bottom = offset.top + container.height;

    var dropdown = {
      height: this.$dropdown.outerHeight(false)
    };

    var viewport = {
      top: $window.scrollTop(),
      bottom: $window.scrollTop() + $window.height()
    };

    var enoughRoomAbove = viewport.top < (offset.top - dropdown.height);
    var enoughRoomBelow = viewport.bottom > (offset.bottom + dropdown.height);

    var css = {
      left: offset.left,
      top: container.bottom
    };

    // Determine what the parent element is to use for calculating the offset
    var $offsetParent = this.$dropdownParent;

    // For statically positioned elements, we need to get the element
    // that is determining the offset
    if ($offsetParent.css('position') === 'static') {
      $offsetParent = $offsetParent.offsetParent();
    }

    var parentOffset = {
      top: 0,
      left: 0
    };

    if (
      $.contains(document.body, $offsetParent[0]) ||
      $offsetParent[0].isConnected
      ) {
      parentOffset = $offsetParent.offset();
    }

    css.top -= parentOffset.top;
    css.left -= parentOffset.left;

    if (!isCurrentlyAbove && !isCurrentlyBelow) {
      newDirection = 'below';
    }

    if (!enoughRoomBelow && enoughRoomAbove && !isCurrentlyAbove) {
      newDirection = 'above';
    } else if (!enoughRoomAbove && enoughRoomBelow && isCurrentlyAbove) {
      newDirection = 'below';
    }

    if (newDirection == 'above' ||
      (isCurrentlyAbove && newDirection !== 'below')) {
      css.top = container.top - parentOffset.top - dropdown.height;
    }

    if (newDirection != null) {
      this.$dropdown[0].classList.remove('select2-dropdown--below');
      this.$dropdown[0].classList.remove('select2-dropdown--above');
      this.$dropdown[0].classList.add('select2-dropdown--' + newDirection);

      this.$container[0].classList.remove('select2-container--below');
      this.$container[0].classList.remove('select2-container--above');
      this.$container[0].classList.add('select2-container--' + newDirection);
    }

    this.$dropdownContainer.css(css);
  };

  AttachBody.prototype._resizeDropdown = function () {
    var css = {
      width: this.$container.outerWidth(false) + 'px'
    };

    if (this.options.get('dropdownAutoWidth')) {
      css.minWidth = css.width;
      css.position = 'relative';
      css.width = 'auto';
    }

    this.$dropdown.css(css);
  };

  AttachBody.prototype._showDropdown = function (decorated) {
    this.$dropdownContainer.appendTo(this.$dropdownParent);

    this._positionDropdown();
    this._resizeDropdown();
  };

  return AttachBody;
});

S2.define('select2/dropdown/minimumResultsForSearch',[

], function () {
  function countResults (data) {
    var count = 0;

    for (var d = 0; d < data.length; d++) {
      var item = data[d];

      if (item.children) {
        count += countResults(item.children);
      } else {
        count++;
      }
    }

    return count;
  }

  function MinimumResultsForSearch (decorated, $element, options, dataAdapter) {
    this.minimumResultsForSearch = options.get('minimumResultsForSearch');

    if (this.minimumResultsForSearch < 0) {
      this.minimumResultsForSearch = Infinity;
    }

    decorated.call(this, $element, options, dataAdapter);
  }

  MinimumResultsForSearch.prototype.showSearch = function (decorated, params) {
    if (countResults(params.data.results) < this.minimumResultsForSearch) {
      return false;
    }

    return decorated.call(this, params);
  };

  return MinimumResultsForSearch;
});

S2.define('select2/dropdown/selectOnClose',[
  '../utils'
], function (Utils) {
  function SelectOnClose () { }

  SelectOnClose.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    container.on('close', function (params) {
      self._handleSelectOnClose(params);
    });
  };

  SelectOnClose.prototype._handleSelectOnClose = function (_, params) {
    if (params && params.originalSelect2Event != null) {
      var event = params.originalSelect2Event;

      // Don't select an item if the close event was triggered from a select or
      // unselect event
      if (event._type === 'select' || event._type === 'unselect') {
        return;
      }
    }

    var $highlightedResults = this.getHighlightedResults();

    // Only select highlighted results
    if ($highlightedResults.length < 1) {
      return;
    }

    var data = Utils.GetData($highlightedResults[0], 'data');

    // Don't re-select already selected resulte
    if (
      (data.element != null && data.element.selected) ||
      (data.element == null && data.selected)
    ) {
      return;
    }

    this.trigger('select', {
        data: data
    });
  };

  return SelectOnClose;
});

S2.define('select2/dropdown/closeOnSelect',[

], function () {
  function CloseOnSelect () { }

  CloseOnSelect.prototype.bind = function (decorated, container, $container) {
    var self = this;

    decorated.call(this, container, $container);

    container.on('select', function (evt) {
      self._selectTriggered(evt);
    });

    container.on('unselect', function (evt) {
      self._selectTriggered(evt);
    });
  };

  CloseOnSelect.prototype._selectTriggered = function (_, evt) {
    var originalEvent = evt.originalEvent;

    // Don't close if the control key is being held
    if (originalEvent && (originalEvent.ctrlKey || originalEvent.metaKey)) {
      return;
    }

    this.trigger('close', {
      originalEvent: originalEvent,
      originalSelect2Event: evt
    });
  };

  return CloseOnSelect;
});

S2.define('select2/dropdown/dropdownCss',[
  '../utils'
], function (Utils) {
  function DropdownCSS () { }

  DropdownCSS.prototype.render = function (decorated) {
    var $dropdown = decorated.call(this);

    var dropdownCssClass = this.options.get('dropdownCssClass') || '';

    if (dropdownCssClass.indexOf(':all:') !== -1) {
      dropdownCssClass = dropdownCssClass.replace(':all:', '');

      Utils.copyNonInternalCssClasses($dropdown[0], this.$element[0]);
    }

    $dropdown.addClass(dropdownCssClass);

    return $dropdown;
  };

  return DropdownCSS;
});

S2.define('select2/dropdown/tagsSearchHighlight',[
  '../utils'
], function (Utils) {
  function TagsSearchHighlight () { }

  TagsSearchHighlight.prototype.highlightFirstItem = function (decorated) {
    var $options = this.$results
    .find(
      '.select2-results__option--selectable' +
      ':not(.select2-results__option--selected)'
    );

    if ($options.length > 0) {
      var $firstOption = $options.first();
      var data = Utils.GetData($firstOption[0], 'data');
      var firstElement = data.element;

      if (firstElement && firstElement.getAttribute) {
        if (firstElement.getAttribute('data-select2-tag') === 'true') {
          $firstOption.trigger('mouseenter');

          return;
        }
      }
    }

    decorated.call(this);
  };

  return TagsSearchHighlight;
});

S2.define('select2/i18n/en',[],function () {
  // English
  return {
    errorLoading: function () {
      return 'The results could not be loaded.';
    },
    inputTooLong: function (args) {
      var overChars = args.input.length - args.maximum;

      var message = 'Please delete ' + overChars + ' character';

      if (overChars != 1) {
        message += 's';
      }

      return message;
    },
    inputTooShort: function (args) {
      var remainingChars = args.minimum - args.input.length;

      var message = 'Please enter ' + remainingChars + ' or more characters';

      return message;
    },
    loadingMore: function () {
      return 'Loading more results…';
    },
    maximumSelected: function (args) {
      var message = 'You can only select ' + args.maximum + ' item';

      if (args.maximum != 1) {
        message += 's';
      }

      return message;
    },
    noResults: function () {
      return 'No results found';
    },
    searching: function () {
      return 'Searching…';
    },
    removeAllItems: function () {
      return 'Remove all items';
    },
    removeItem: function () {
      return 'Remove item';
    },
    search: function() {
      return 'Search';
    }
  };
});

S2.define('select2/defaults',[
  'jquery',

  './results',

  './selection/single',
  './selection/multiple',
  './selection/placeholder',
  './selection/allowClear',
  './selection/search',
  './selection/selectionCss',
  './selection/eventRelay',

  './utils',
  './translation',
  './diacritics',

  './data/select',
  './data/array',
  './data/ajax',
  './data/tags',
  './data/tokenizer',
  './data/minimumInputLength',
  './data/maximumInputLength',
  './data/maximumSelectionLength',

  './dropdown',
  './dropdown/search',
  './dropdown/hidePlaceholder',
  './dropdown/infiniteScroll',
  './dropdown/attachBody',
  './dropdown/minimumResultsForSearch',
  './dropdown/selectOnClose',
  './dropdown/closeOnSelect',
  './dropdown/dropdownCss',
  './dropdown/tagsSearchHighlight',

  './i18n/en'
], function ($,

             ResultsList,

             SingleSelection, MultipleSelection, Placeholder, AllowClear,
             SelectionSearch, SelectionCSS, EventRelay,

             Utils, Translation, DIACRITICS,

             SelectData, ArrayData, AjaxData, Tags, Tokenizer,
             MinimumInputLength, MaximumInputLength, MaximumSelectionLength,

             Dropdown, DropdownSearch, HidePlaceholder, InfiniteScroll,
             AttachBody, MinimumResultsForSearch, SelectOnClose, CloseOnSelect,
             DropdownCSS, TagsSearchHighlight,

             EnglishTranslation) {
  function Defaults () {
    this.reset();
  }

  Defaults.prototype.apply = function (options) {
    options = $.extend(true, {}, this.defaults, options);

    if (options.dataAdapter == null) {
      if (options.ajax != null) {
        options.dataAdapter = AjaxData;
      } else if (options.data != null) {
        options.dataAdapter = ArrayData;
      } else {
        options.dataAdapter = SelectData;
      }

      if (options.minimumInputLength > 0) {
        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          MinimumInputLength
        );
      }

      if (options.maximumInputLength > 0) {
        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          MaximumInputLength
        );
      }

      if (options.maximumSelectionLength > 0) {
        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          MaximumSelectionLength
        );
      }

      if (options.tags) {
        options.dataAdapter = Utils.Decorate(options.dataAdapter, Tags);
      }

      if (options.tokenSeparators != null || options.tokenizer != null) {
        options.dataAdapter = Utils.Decorate(
          options.dataAdapter,
          Tokenizer
        );
      }
    }

    if (options.resultsAdapter == null) {
      options.resultsAdapter = ResultsList;

      if (options.ajax != null) {
        options.resultsAdapter = Utils.Decorate(
          options.resultsAdapter,
          InfiniteScroll
        );
      }

      if (options.placeholder != null) {
        options.resultsAdapter = Utils.Decorate(
          options.resultsAdapter,
          HidePlaceholder
        );
      }

      if (options.selectOnClose) {
        options.resultsAdapter = Utils.Decorate(
          options.resultsAdapter,
          SelectOnClose
        );
      }

      if (options.tags) {
        options.resultsAdapter = Utils.Decorate(
          options.resultsAdapter,
          TagsSearchHighlight
        );
      }
    }

    if (options.dropdownAdapter == null) {
      if (options.multiple) {
        options.dropdownAdapter = Dropdown;
      } else {
        var SearchableDropdown = Utils.Decorate(Dropdown, DropdownSearch);

        options.dropdownAdapter = SearchableDropdown;
      }

      if (options.minimumResultsForSearch !== 0) {
        options.dropdownAdapter = Utils.Decorate(
          options.dropdownAdapter,
          MinimumResultsForSearch
        );
      }

      if (options.closeOnSelect) {
        options.dropdownAdapter = Utils.Decorate(
          options.dropdownAdapter,
          CloseOnSelect
        );
      }

      if (options.dropdownCssClass != null) {
        options.dropdownAdapter = Utils.Decorate(
          options.dropdownAdapter,
          DropdownCSS
        );
      }

      options.dropdownAdapter = Utils.Decorate(
        options.dropdownAdapter,
        AttachBody
      );
    }

    if (options.selectionAdapter == null) {
      if (options.multiple) {
        options.selectionAdapter = MultipleSelection;
      } else {
        options.selectionAdapter = SingleSelection;
      }

      // Add the placeholder mixin if a placeholder was specified
      if (options.placeholder != null) {
        options.selectionAdapter = Utils.Decorate(
          options.selectionAdapter,
          Placeholder
        );
      }

      if (options.allowClear) {
        options.selectionAdapter = Utils.Decorate(
          options.selectionAdapter,
          AllowClear
        );
      }

      if (options.multiple) {
        options.selectionAdapter = Utils.Decorate(
          options.selectionAdapter,
          SelectionSearch
        );
      }

      if (options.selectionCssClass != null) {
        options.selectionAdapter = Utils.Decorate(
          options.selectionAdapter,
          SelectionCSS
        );
      }

      options.selectionAdapter = Utils.Decorate(
        options.selectionAdapter,
        EventRelay
      );
    }

    // If the defaults were not previously applied from an element, it is
    // possible for the language option to have not been resolved
    options.language = this._resolveLanguage(options.language);

    // Always fall back to English since it will always be complete
    options.language.push('en');

    var uniqueLanguages = [];

    for (var l = 0; l < options.language.length; l++) {
      var language = options.language[l];

      if (uniqueLanguages.indexOf(language) === -1) {
        uniqueLanguages.push(language);
      }
    }

    options.language = uniqueLanguages;

    options.translations = this._processTranslations(
      options.language,
      options.debug
    );

    return options;
  };

  Defaults.prototype.reset = function () {
    function stripDiacritics (text) {
      // Used 'uni range + named function' from http://jsperf.com/diacritics/18
      function match(a) {
        return DIACRITICS[a] || a;
      }

      return text.replace(/[^\u0000-\u007E]/g, match);
    }

    function matcher (params, data) {
      // Always return the object if there is nothing to compare
      if (params.term == null || params.term.trim() === '') {
        return data;
      }

      // Do a recursive check for options with children
      if (data.children && data.children.length > 0) {
        // Clone the data object if there are children
        // This is required as we modify the object to remove any non-matches
        var match = $.extend(true, {}, data);

        // Check each child of the option
        for (var c = data.children.length - 1; c >= 0; c--) {
          var child = data.children[c];

          var matches = matcher(params, child);

          // If there wasn't a match, remove the object in the array
          if (matches == null) {
            match.children.splice(c, 1);
          }
        }

        // If any children matched, return the new object
        if (match.children.length > 0) {
          return match;
        }

        // If there were no matching children, check just the plain object
        return matcher(params, match);
      }

      var original = stripDiacritics(data.text).toUpperCase();
      var term = stripDiacritics(params.term).toUpperCase();

      // Check if the text contains the term
      if (original.indexOf(term) > -1) {
        return data;
      }

      // If it doesn't contain the term, don't return anything
      return null;
    }

    this.defaults = {
      amdLanguageBase: './i18n/',
      autocomplete: 'off',
      closeOnSelect: true,
      debug: false,
      dropdownAutoWidth: false,
      escapeMarkup: Utils.escapeMarkup,
      language: {},
      matcher: matcher,
      minimumInputLength: 0,
      maximumInputLength: 0,
      maximumSelectionLength: 0,
      minimumResultsForSearch: 0,
      selectOnClose: false,
      scrollAfterSelect: false,
      sorter: function (data) {
        return data;
      },
      templateResult: function (result) {
        return result.text;
      },
      templateSelection: function (selection) {
        return selection.text;
      },
      theme: 'default',
      width: 'resolve'
    };
  };

  Defaults.prototype.applyFromElement = function (options, $element) {
    var optionLanguage = options.language;
    var defaultLanguage = this.defaults.language;
    var elementLanguage = $element.prop('lang');
    var parentLanguage = $element.closest('[lang]').prop('lang');

    var languages = Array.prototype.concat.call(
      this._resolveLanguage(elementLanguage),
      this._resolveLanguage(optionLanguage),
      this._resolveLanguage(defaultLanguage),
      this._resolveLanguage(parentLanguage)
    );

    options.language = languages;

    return options;
  };

  Defaults.prototype._resolveLanguage = function (language) {
    if (!language) {
      return [];
    }

    if ($.isEmptyObject(language)) {
      return [];
    }

    if ($.isPlainObject(language)) {
      return [language];
    }

    var languages;

    if (!Array.isArray(language)) {
      languages = [language];
    } else {
      languages = language;
    }

    var resolvedLanguages = [];

    for (var l = 0; l < languages.length; l++) {
      resolvedLanguages.push(languages[l]);

      if (typeof languages[l] === 'string' && languages[l].indexOf('-') > 0) {
        // Extract the region information if it is included
        var languageParts = languages[l].split('-');
        var baseLanguage = languageParts[0];

        resolvedLanguages.push(baseLanguage);
      }
    }

    return resolvedLanguages;
  };

  Defaults.prototype._processTranslations = function (languages, debug) {
    var translations = new Translation();

    for (var l = 0; l < languages.length; l++) {
      var languageData = new Translation();

      var language = languages[l];

      if (typeof language === 'string') {
        try {
          // Try to load it with the original name
          languageData = Translation.loadPath(language);
        } catch (e) {
          try {
            // If we couldn't load it, check if it wasn't the full path
            language = this.defaults.amdLanguageBase + language;
            languageData = Translation.loadPath(language);
          } catch (ex) {
            // The translation could not be loaded at all. Sometimes this is
            // because of a configuration problem, other times this can be
            // because of how Select2 helps load all possible translation files
            if (debug && window.console && console.warn) {
              console.warn(
                'Select2: The language file for "' + language + '" could ' +
                'not be automatically loaded. A fallback will be used instead.'
              );
            }
          }
        }
      } else if ($.isPlainObject(language)) {
        languageData = new Translation(language);
      } else {
        languageData = language;
      }

      translations.extend(languageData);
    }

    return translations;
  };

  Defaults.prototype.set = function (key, value) {
    var camelKey = $.camelCase(key);

    var data = {};
    data[camelKey] = value;

    var convertedData = Utils._convertData(data);

    $.extend(true, this.defaults, convertedData);
  };

  var defaults = new Defaults();

  return defaults;
});

S2.define('select2/options',[
  'jquery',
  './defaults',
  './utils'
], function ($, Defaults, Utils) {
  function Options (options, $element) {
    this.options = options;

    if ($element != null) {
      this.fromElement($element);
    }

    if ($element != null) {
      this.options = Defaults.applyFromElement(this.options, $element);
    }

    this.options = Defaults.apply(this.options);
  }

  Options.prototype.fromElement = function ($e) {
    var excludedData = ['select2'];

    if (this.options.multiple == null) {
      this.options.multiple = $e.prop('multiple');
    }

    if (this.options.disabled == null) {
      this.options.disabled = $e.prop('disabled');
    }

    if (this.options.autocomplete == null && $e.prop('autocomplete')) {
      this.options.autocomplete = $e.prop('autocomplete');
    }

    if (this.options.dir == null) {
      if ($e.prop('dir')) {
        this.options.dir = $e.prop('dir');
      } else if ($e.closest('[dir]').prop('dir')) {
        this.options.dir = $e.closest('[dir]').prop('dir');
      } else {
        this.options.dir = 'ltr';
      }
    }

    $e.prop('disabled', this.options.disabled);
    $e.prop('multiple', this.options.multiple);

    if (Utils.GetData($e[0], 'select2Tags')) {
      if (this.options.debug && window.console && console.warn) {
        console.warn(
          'Select2: The `data-select2-tags` attribute has been changed to ' +
          'use the `data-data` and `data-tags="true"` attributes and will be ' +
          'removed in future versions of Select2.'
        );
      }

      Utils.StoreData($e[0], 'data', Utils.GetData($e[0], 'select2Tags'));
      Utils.StoreData($e[0], 'tags', true);
    }

    if (Utils.GetData($e[0], 'ajaxUrl')) {
      if (this.options.debug && window.console && console.warn) {
        console.warn(
          'Select2: The `data-ajax-url` attribute has been changed to ' +
          '`data-ajax--url` and support for the old attribute will be removed' +
          ' in future versions of Select2.'
        );
      }

      $e.attr('ajax--url', Utils.GetData($e[0], 'ajaxUrl'));
      Utils.StoreData($e[0], 'ajax-Url', Utils.GetData($e[0], 'ajaxUrl'));
    }

    var dataset = {};

    function upperCaseLetter(_, letter) {
      return letter.toUpperCase();
    }

    // Pre-load all of the attributes which are prefixed with `data-`
    for (var attr = 0; attr < $e[0].attributes.length; attr++) {
      var attributeName = $e[0].attributes[attr].name;
      var prefix = 'data-';

      if (attributeName.substr(0, prefix.length) == prefix) {
        // Get the contents of the attribute after `data-`
        var dataName = attributeName.substring(prefix.length);

        // Get the data contents from the consistent source
        // This is more than likely the jQuery data helper
        var dataValue = Utils.GetData($e[0], dataName);

        // camelCase the attribute name to match the spec
        var camelDataName = dataName.replace(/-([a-z])/g, upperCaseLetter);

        // Store the data attribute contents into the dataset since
        dataset[camelDataName] = dataValue;
      }
    }

    // Prefer the element's `dataset` attribute if it exists
    // jQuery 1.x does not correctly handle data attributes with multiple dashes
    if ($.fn.jquery && $.fn.jquery.substr(0, 2) == '1.' && $e[0].dataset) {
      dataset = $.extend(true, {}, $e[0].dataset, dataset);
    }

    // Prefer our internal data cache if it exists
    var data = $.extend(true, {}, Utils.GetData($e[0]), dataset);

    data = Utils._convertData(data);

    for (var key in data) {
      if (excludedData.indexOf(key) > -1) {
        continue;
      }

      if ($.isPlainObject(this.options[key])) {
        $.extend(this.options[key], data[key]);
      } else {
        this.options[key] = data[key];
      }
    }

    return this;
  };

  Options.prototype.get = function (key) {
    return this.options[key];
  };

  Options.prototype.set = function (key, val) {
    this.options[key] = val;
  };

  return Options;
});

S2.define('select2/core',[
  'jquery',
  './options',
  './utils',
  './keys'
], function ($, Options, Utils, KEYS) {
  var Select2 = function ($element, options) {
    if (Utils.GetData($element[0], 'select2') != null) {
      Utils.GetData($element[0], 'select2').destroy();
    }

    this.$element = $element;

    this.id = this._generateId($element);

    options = options || {};

    this.options = new Options(options, $element);

    Select2.__super__.constructor.call(this);

    // Set up the tabindex

    var tabindex = $element.attr('tabindex') || 0;
    Utils.StoreData($element[0], 'old-tabindex', tabindex);
    $element.attr('tabindex', '-1');

    // Set up containers and adapters

    var DataAdapter = this.options.get('dataAdapter');
    this.dataAdapter = new DataAdapter($element, this.options);

    var $container = this.render();

    this._placeContainer($container);

    var SelectionAdapter = this.options.get('selectionAdapter');
    this.selection = new SelectionAdapter($element, this.options);
    this.$selection = this.selection.render();

    this.selection.position(this.$selection, $container);

    var DropdownAdapter = this.options.get('dropdownAdapter');
    this.dropdown = new DropdownAdapter($element, this.options);
    this.$dropdown = this.dropdown.render();

    this.dropdown.position(this.$dropdown, $container);

    var ResultsAdapter = this.options.get('resultsAdapter');
    this.results = new ResultsAdapter($element, this.options, this.dataAdapter);
    this.$results = this.results.render();

    this.results.position(this.$results, this.$dropdown);

    // Bind events

    var self = this;

    // Bind the container to all of the adapters
    this._bindAdapters();

    // Register any DOM event handlers
    this._registerDomEvents();

    // Register any internal event handlers
    this._registerDataEvents();
    this._registerSelectionEvents();
    this._registerDropdownEvents();
    this._registerResultsEvents();
    this._registerEvents();

    // Set the initial state
    this.dataAdapter.current(function (initialData) {
      self.trigger('selection:update', {
        data: initialData
      });
    });

    // Hide the original select
    $element[0].classList.add('select2-hidden-accessible');
    $element.attr('aria-hidden', 'true');

    // Synchronize any monitored attributes
    this._syncAttributes();

    Utils.StoreData($element[0], 'select2', this);

    // Ensure backwards compatibility with $element.data('select2').
    $element.data('select2', this);
  };

  Utils.Extend(Select2, Utils.Observable);

  Select2.prototype._generateId = function ($element) {
    var id = '';

    if ($element.attr('id') != null) {
      id = $element.attr('id');
    } else if ($element.attr('name') != null) {
      id = $element.attr('name') + '-' + Utils.generateChars(2);
    } else {
      id = Utils.generateChars(4);
    }

    id = id.replace(/(:|\.|\[|\]|,)/g, '');
    id = 'select2-' + id;

    return id;
  };

  Select2.prototype._placeContainer = function ($container) {
    $container.insertAfter(this.$element);

    var width = this._resolveWidth(this.$element, this.options.get('width'));

    if (width != null) {
      $container.css('width', width);
    }
  };

  Select2.prototype._resolveWidth = function ($element, method) {
    var WIDTH = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;

    if (method == 'resolve') {
      var styleWidth = this._resolveWidth($element, 'style');

      if (styleWidth != null) {
        return styleWidth;
      }

      return this._resolveWidth($element, 'element');
    }

    if (method == 'element') {
      var elementWidth = $element.outerWidth(false);

      if (elementWidth <= 0) {
        return 'auto';
      }

      return elementWidth + 'px';
    }

    if (method == 'style') {
      var style = $element.attr('style');

      if (typeof(style) !== 'string') {
        return null;
      }

      var attrs = style.split(';');

      for (var i = 0, l = attrs.length; i < l; i = i + 1) {
        var attr = attrs[i].replace(/\s/g, '');
        var matches = attr.match(WIDTH);

        if (matches !== null && matches.length >= 1) {
          return matches[1];
        }
      }

      return null;
    }

    if (method == 'computedstyle') {
      var computedStyle = window.getComputedStyle($element[0]);

      return computedStyle.width;
    }

    return method;
  };

  Select2.prototype._bindAdapters = function () {
    this.dataAdapter.bind(this, this.$container);
    this.selection.bind(this, this.$container);

    this.dropdown.bind(this, this.$container);
    this.results.bind(this, this.$container);
  };

  Select2.prototype._registerDomEvents = function () {
    var self = this;

    this.$element.on('change.select2', function () {
      self.dataAdapter.current(function (data) {
        self.trigger('selection:update', {
          data: data
        });
      });
    });

    this.$element.on('focus.select2', function (evt) {
      self.trigger('focus', evt);
    });

    this._syncA = Utils.bind(this._syncAttributes, this);
    this._syncS = Utils.bind(this._syncSubtree, this);

    this._observer = new window.MutationObserver(function (mutations) {
      self._syncA();
      self._syncS(mutations);
    });
    this._observer.observe(this.$element[0], {
      attributes: true,
      childList: true,
      subtree: false
    });
  };

  Select2.prototype._registerDataEvents = function () {
    var self = this;

    this.dataAdapter.on('*', function (name, params) {
      self.trigger(name, params);
    });
  };

  Select2.prototype._registerSelectionEvents = function () {
    var self = this;
    var nonRelayEvents = ['toggle', 'focus'];

    this.selection.on('toggle', function () {
      self.toggleDropdown();
    });

    this.selection.on('focus', function (params) {
      self.focus(params);
    });

    this.selection.on('*', function (name, params) {
      if (nonRelayEvents.indexOf(name) !== -1) {
        return;
      }

      self.trigger(name, params);
    });
  };

  Select2.prototype._registerDropdownEvents = function () {
    var self = this;

    this.dropdown.on('*', function (name, params) {
      self.trigger(name, params);
    });
  };

  Select2.prototype._registerResultsEvents = function () {
    var self = this;

    this.results.on('*', function (name, params) {
      self.trigger(name, params);
    });
  };

  Select2.prototype._registerEvents = function () {
    var self = this;

    this.on('open', function () {
      self.$container[0].classList.add('select2-container--open');
    });

    this.on('close', function () {
      self.$container[0].classList.remove('select2-container--open');
    });

    this.on('enable', function () {
      self.$container[0].classList.remove('select2-container--disabled');
    });

    this.on('disable', function () {
      self.$container[0].classList.add('select2-container--disabled');
    });

    this.on('blur', function () {
      self.$container[0].classList.remove('select2-container--focus');
    });

    this.on('query', function (params) {
      if (!self.isOpen()) {
        self.trigger('open', {});
      }

      this.dataAdapter.query(params, function (data) {
        self.trigger('results:all', {
          data: data,
          query: params
        });
      });
    });

    this.on('query:append', function (params) {
      this.dataAdapter.query(params, function (data) {
        self.trigger('results:append', {
          data: data,
          query: params
        });
      });
    });

    this.on('keypress', function (evt) {
      var key = evt.which;

      if (self.isOpen()) {
        if (key === KEYS.ESC || (key === KEYS.UP && evt.altKey)) {
          self.close(evt);

          evt.preventDefault();
        } else if (key === KEYS.ENTER || key === KEYS.TAB) {
          self.trigger('results:select', {});

          evt.preventDefault();
        } else if ((key === KEYS.SPACE && evt.ctrlKey)) {
          self.trigger('results:toggle', {});

          evt.preventDefault();
        } else if (key === KEYS.UP) {
          self.trigger('results:previous', {});

          evt.preventDefault();
        } else if (key === KEYS.DOWN) {
          self.trigger('results:next', {});

          evt.preventDefault();
        }
      } else {
        if (key === KEYS.ENTER || key === KEYS.SPACE ||
            (key === KEYS.DOWN && evt.altKey)) {
          self.open();

          evt.preventDefault();
        }
      }
    });
  };

  Select2.prototype._syncAttributes = function () {
    this.options.set('disabled', this.$element.prop('disabled'));

    if (this.isDisabled()) {
      if (this.isOpen()) {
        this.close();
      }

      this.trigger('disable', {});
    } else {
      this.trigger('enable', {});
    }
  };

  Select2.prototype._isChangeMutation = function (mutations) {
    var self = this;

    if (mutations.addedNodes && mutations.addedNodes.length > 0) {
      for (var n = 0; n < mutations.addedNodes.length; n++) {
        var node = mutations.addedNodes[n];

        if (node.selected) {
          return true;
        }
      }
    } else if (mutations.removedNodes && mutations.removedNodes.length > 0) {
      return true;
    } else if (Array.isArray(mutations)) {
      return mutations.some(function (mutation) {
        return self._isChangeMutation(mutation);
      });
    }

    return false;
  };

  Select2.prototype._syncSubtree = function (mutations) {
    var changed = this._isChangeMutation(mutations);
    var self = this;

    // Only re-pull the data if we think there is a change
    if (changed) {
      this.dataAdapter.current(function (currentData) {
        self.trigger('selection:update', {
          data: currentData
        });
      });
    }
  };

  /**
   * Override the trigger method to automatically trigger pre-events when
   * there are events that can be prevented.
   */
  Select2.prototype.trigger = function (name, args) {
    var actualTrigger = Select2.__super__.trigger;
    var preTriggerMap = {
      'open': 'opening',
      'close': 'closing',
      'select': 'selecting',
      'unselect': 'unselecting',
      'clear': 'clearing'
    };

    if (args === undefined) {
      args = {};
    }

    if (name in preTriggerMap) {
      var preTriggerName = preTriggerMap[name];
      var preTriggerArgs = {
        prevented: false,
        name: name,
        args: args
      };

      actualTrigger.call(this, preTriggerName, preTriggerArgs);

      if (preTriggerArgs.prevented) {
        args.prevented = true;

        return;
      }
    }

    actualTrigger.call(this, name, args);
  };

  Select2.prototype.toggleDropdown = function () {
    if (this.isDisabled()) {
      return;
    }

    if (this.isOpen()) {
      this.close();
    } else {
      this.open();
    }
  };

  Select2.prototype.open = function () {
    if (this.isOpen()) {
      return;
    }

    if (this.isDisabled()) {
      return;
    }

    this.trigger('query', {});
  };

  Select2.prototype.close = function (evt) {
    if (!this.isOpen()) {
      return;
    }

    this.trigger('close', { originalEvent : evt });
  };

  /**
   * Helper method to abstract the "enabled" (not "disabled") state of this
   * object.
   *
   * @return {true} if the instance is not disabled.
   * @return {false} if the instance is disabled.
   */
  Select2.prototype.isEnabled = function () {
    return !this.isDisabled();
  };

  /**
   * Helper method to abstract the "disabled" state of this object.
   *
   * @return {true} if the disabled option is true.
   * @return {false} if the disabled option is false.
   */
  Select2.prototype.isDisabled = function () {
    return this.options.get('disabled');
  };

  Select2.prototype.isOpen = function () {
    return this.$container[0].classList.contains('select2-container--open');
  };

  Select2.prototype.hasFocus = function () {
    return this.$container[0].classList.contains('select2-container--focus');
  };

  Select2.prototype.focus = function (data) {
    // No need to re-trigger focus events if we are already focused
    if (this.hasFocus()) {
      return;
    }

    this.$container[0].classList.add('select2-container--focus');
    this.trigger('focus', {});
  };

  Select2.prototype.enable = function (args) {
    if (this.options.get('debug') && window.console && console.warn) {
      console.warn(
        'Select2: The `select2("enable")` method has been deprecated and will' +
        ' be removed in later Select2 versions. Use $element.prop("disabled")' +
        ' instead.'
      );
    }

    if (args == null || args.length === 0) {
      args = [true];
    }

    var disabled = !args[0];

    this.$element.prop('disabled', disabled);
  };

  Select2.prototype.data = function () {
    if (this.options.get('debug') &&
        arguments.length > 0 && window.console && console.warn) {
      console.warn(
        'Select2: Data can no longer be set using `select2("data")`. You ' +
        'should consider setting the value instead using `$element.val()`.'
      );
    }

    var data = [];

    this.dataAdapter.current(function (currentData) {
      data = currentData;
    });

    return data;
  };

  Select2.prototype.val = function (args) {
    if (this.options.get('debug') && window.console && console.warn) {
      console.warn(
        'Select2: The `select2("val")` method has been deprecated and will be' +
        ' removed in later Select2 versions. Use $element.val() instead.'
      );
    }

    if (args == null || args.length === 0) {
      return this.$element.val();
    }

    var newVal = args[0];

    if (Array.isArray(newVal)) {
      newVal = newVal.map(function (obj) {
        return obj.toString();
      });
    }

    this.$element.val(newVal).trigger('input').trigger('change');
  };

  Select2.prototype.destroy = function () {
    Utils.RemoveData(this.$container[0]);
    this.$container.remove();

    this._observer.disconnect();
    this._observer = null;

    this._syncA = null;
    this._syncS = null;

    this.$element.off('.select2');
    this.$element.attr('tabindex',
    Utils.GetData(this.$element[0], 'old-tabindex'));

    this.$element[0].classList.remove('select2-hidden-accessible');
    this.$element.attr('aria-hidden', 'false');
    Utils.RemoveData(this.$element[0]);
    this.$element.removeData('select2');

    this.dataAdapter.destroy();
    this.selection.destroy();
    this.dropdown.destroy();
    this.results.destroy();

    this.dataAdapter = null;
    this.selection = null;
    this.dropdown = null;
    this.results = null;
  };

  Select2.prototype.render = function () {
    var $container = $(
      '<span class="select2 select2-container">' +
        '<span class="selection"></span>' +
        '<span class="dropdown-wrapper" aria-hidden="true"></span>' +
      '</span>'
    );

    $container.attr('dir', this.options.get('dir'));

    this.$container = $container;

    this.$container[0].classList
      .add('select2-container--' + this.options.get('theme'));

    Utils.StoreData($container[0], 'element', this.$element);

    return $container;
  };

  return Select2;
});

S2.define('jquery-mousewheel',[
  'jquery'
], function ($) {
  // Used to shim jQuery.mousewheel for non-full builds.
  return $;
});

S2.define('jquery.select2',[
  'jquery',
  'jquery-mousewheel',

  './select2/core',
  './select2/defaults',
  './select2/utils'
], function ($, _, Select2, Defaults, Utils) {
  if ($.fn.select2 == null) {
    // All methods that should return the element
    var thisMethods = ['open', 'close', 'destroy'];

    $.fn.select2 = function (options) {
      options = options || {};

      if (typeof options === 'object') {
        this.each(function () {
          var instanceOptions = $.extend(true, {}, options);

          var instance = new Select2($(this), instanceOptions);
        });

        return this;
      } else if (typeof options === 'string') {
        var ret;
        var args = Array.prototype.slice.call(arguments, 1);

        this.each(function () {
          var instance = Utils.GetData(this, 'select2');

          if (instance == null && window.console && console.error) {
            console.error(
              'The select2(\'' + options + '\') method was called on an ' +
              'element that is not using Select2.'
            );
          }

          ret = instance[options].apply(instance, args);
        });

        // Check if we should be returning `this`
        if (thisMethods.indexOf(options) > -1) {
          return this;
        }

        return ret;
      } else {
        throw new Error('Invalid arguments for Select2: ' + options);
      }
    };
  }

  if ($.fn.select2.defaults == null) {
    $.fn.select2.defaults = Defaults;
  }

  return Select2;
});

  // Return the AMD loader configuration so it can be used outside of this file
  return {
    define: S2.define,
    require: S2.require
  };
}());

  // Autoload the jQuery bindings
  // We know that all of the modules exist above this, so we're safe
  var select2 = S2.require('jquery.select2');

  // Hold the AMD module references on the jQuery function that was just loaded
  // This allows Select2 to use the internal loader outside of this file, such
  // as in the language files.
  jQuery.fn.select2.amd = S2;

  // Return the Select2 instance for anyone who is importing it.
  return select2;
}));

},{"jquery":38}],63:[function(require,module,exports){
'use strict';

var GetIntrinsic = require('get-intrinsic');
var callBound = require('call-bind/callBound');
var inspect = require('object-inspect');

var $TypeError = GetIntrinsic('%TypeError%');
var $WeakMap = GetIntrinsic('%WeakMap%', true);
var $Map = GetIntrinsic('%Map%', true);

var $weakMapGet = callBound('WeakMap.prototype.get', true);
var $weakMapSet = callBound('WeakMap.prototype.set', true);
var $weakMapHas = callBound('WeakMap.prototype.has', true);
var $mapGet = callBound('Map.prototype.get', true);
var $mapSet = callBound('Map.prototype.set', true);
var $mapHas = callBound('Map.prototype.has', true);

/*
 * This function traverses the list returning the node corresponding to the
 * given key.
 *
 * That node is also moved to the head of the list, so that if it's accessed
 * again we don't need to traverse the whole list. By doing so, all the recently
 * used nodes can be accessed relatively quickly.
 */
var listGetNode = function (list, key) { // eslint-disable-line consistent-return
	for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
		if (curr.key === key) {
			prev.next = curr.next;
			curr.next = list.next;
			list.next = curr; // eslint-disable-line no-param-reassign
			return curr;
		}
	}
};

var listGet = function (objects, key) {
	var node = listGetNode(objects, key);
	return node && node.value;
};
var listSet = function (objects, key, value) {
	var node = listGetNode(objects, key);
	if (node) {
		node.value = value;
	} else {
		// Prepend the new node to the beginning of the list
		objects.next = { // eslint-disable-line no-param-reassign
			key: key,
			next: objects.next,
			value: value
		};
	}
};
var listHas = function (objects, key) {
	return !!listGetNode(objects, key);
};

module.exports = function getSideChannel() {
	var $wm;
	var $m;
	var $o;
	var channel = {
		assert: function (key) {
			if (!channel.has(key)) {
				throw new $TypeError('Side channel does not contain ' + inspect(key));
			}
		},
		get: function (key) { // eslint-disable-line consistent-return
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if ($wm) {
					return $weakMapGet($wm, key);
				}
			} else if ($Map) {
				if ($m) {
					return $mapGet($m, key);
				}
			} else {
				if ($o) { // eslint-disable-line no-lonely-if
					return listGet($o, key);
				}
			}
		},
		has: function (key) {
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if ($wm) {
					return $weakMapHas($wm, key);
				}
			} else if ($Map) {
				if ($m) {
					return $mapHas($m, key);
				}
			} else {
				if ($o) { // eslint-disable-line no-lonely-if
					return listHas($o, key);
				}
			}
			return false;
		},
		set: function (key, value) {
			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
				if (!$wm) {
					$wm = new $WeakMap();
				}
				$weakMapSet($wm, key, value);
			} else if ($Map) {
				if (!$m) {
					$m = new $Map();
				}
				$mapSet($m, key, value);
			} else {
				if (!$o) {
					/*
					 * Initialize the linked list as an empty node, so that we don't have
					 * to special-case handling of the first node: we can always refer to
					 * it as (previous node).next, instead of something like (list).head
					 */
					$o = { key: {}, next: null };
				}
				listSet($o, key, value);
			}
		}
	};
	return channel;
};

},{"call-bind/callBound":8,"get-intrinsic":20,"object-inspect":40}],64:[function(require,module,exports){
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

'use strict';

var punycode = require('punycode');
var util = require('./util');

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;

exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
}

// Reference: RFC 3986, RFC 1808, RFC 2396

// define these here so at least they only have to be
// compiled once on the first module load.
var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,

    // Special case for a simple path URL
    simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,

    // RFC 2396: characters reserved for delimiting URLs.
    // We actually just auto-escape these.
    delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],

    // RFC 2396: characters not allowed for various reasons.
    unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),

    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
    autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
    // Note that any invalid chars are also handled, but these
    // are the ones that are *expected* to be seen, so we fast-path
    // them.
    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
    unsafeProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that never have a hostname.
    hostlessProtocol = {
      'javascript': true,
      'javascript:': true
    },
    // protocols that always contain a // bit.
    slashedProtocol = {
      'http': true,
      'https': true,
      'ftp': true,
      'gopher': true,
      'file': true,
      'http:': true,
      'https:': true,
      'ftp:': true,
      'gopher:': true,
      'file:': true
    },
    querystring = require('querystring');

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;

  var u = new Url;
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  }

  // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916
  var queryIndex = url.indexOf('?'),
      splitter =
          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);

  var rest = url;

  // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"
  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);
    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];
      if (simplePath[2]) {
        this.search = simplePath[2];
        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }
      return this;
    }
  }

  var proto = protocolPattern.exec(rest);
  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  }

  // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.
  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';
    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] &&
      (slashes || (proto && !slashedProtocol[proto]))) {

    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c

    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.

    // find the first instance of any hostEndingChars
    var hostEnd = -1;
    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }

    // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.
    var auth, atSign;
    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    }

    // Now we have a portion which is definitely the auth.
    // Pull that off.
    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    }

    // the host is the remaining to the left of the first non-host char
    hostEnd = -1;
    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))
        hostEnd = hec;
    }
    // if we still have not hit it, then the entire thing is a host.
    if (hostEnd === -1)
      hostEnd = rest.length;

    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd);

    // pull out port.
    this.parseHost();

    // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.
    this.hostname = this.hostname || '';

    // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.
    var ipv6Hostname = this.hostname[0] === '[' &&
        this.hostname[this.hostname.length - 1] === ']';

    // validate a little.
    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);
      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;
        if (!part.match(hostnamePartPattern)) {
          var newpart = '';
          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          }
          // we test again with ASCII char only
          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);
            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }
            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }
            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host;

    // strip [ and ] from the hostname
    // the host field still retains them, though
    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);
      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  }

  // now rest is set to the post-host stuff.
  // chop off any delim chars.
  if (!unsafeProtocol[lowerProto]) {

    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1)
        continue;
      var esc = encodeURIComponent(ae);
      if (esc === ae) {
        esc = escape(ae);
      }
      rest = rest.split(ae).join(esc);
    }
  }


  // chop off from the tail first.
  var hash = rest.indexOf('#');
  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }
  var qm = rest.indexOf('?');
  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);
    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }
    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }
  if (rest) this.pathname = rest;
  if (slashedProtocol[lowerProto] &&
      this.hostname && !this.pathname) {
    this.pathname = '/';
  }

  //to support http.request
  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  }

  // finally, reconstruct the href based on what has been validated.
  this.href = this.format();
  return this;
};

// format a parsed object into a url string
function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function() {
  var auth = this.auth || '';
  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ?
        this.hostname :
        '[' + this.hostname + ']');
    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query &&
      util.isObject(this.query) &&
      Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || (query && ('?' + query)) || '';

  if (protocol && protocol.substr(-1) !== ':') protocol += ':';

  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.
  if (this.slashes ||
      (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;

  pathname = pathname.replace(/[?#]/g, function(match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');

  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function(relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function(relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);
  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  }

  // hash is always overridden, no matter what.
  // even href="" will remove it.
  result.hash = relative.hash;

  // if the relative url is empty, then there's nothing left to do here.
  if (relative.href === '') {
    result.href = result.format();
    return result;
  }

  // hrefs like //foo/bar always cut to the protocol.
  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);
    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol')
        result[rkey] = relative[rkey];
    }

    //urlParse appends trailing / to urls like http://www.example.com
    if (slashedProtocol[result.protocol] &&
        result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);
      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }
      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;
    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');
      while (relPath.length && !(relative.host = relPath.shift()));
      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }
    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port;
    // to support http.request
    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }
    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),
      isRelAbs = (
          relative.host ||
          relative.pathname && relative.pathname.charAt(0) === '/'
      ),
      mustEndAbs = (isRelAbs || isSourceAbs ||
                    (result.host && relative.pathname)),
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol];

  // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.
  if (psychotic) {
    result.hostname = '';
    result.port = null;
    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;
      else srcPath.unshift(result.host);
    }
    result.host = '';
    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;
      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;
        else relPath.unshift(relative.host);
      }
      relative.host = null;
    }
    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = (relative.host || relative.host === '') ?
                  relative.host : result.host;
    result.hostname = (relative.hostname || relative.hostname === '') ?
                      relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath;
    // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift();
      //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
      var authInHost = result.host && result.host.indexOf('@') > 0 ?
                       result.host.split('@') : false;
      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }
    result.search = relative.search;
    result.query = relative.query;
    //to support http.request
    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') +
                    (result.search ? result.search : '');
    }
    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null;
    //to support http.request
    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }
    result.href = result.format();
    return result;
  }

  // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.
  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (
      (result.host || relative.host || srcPath.length > 1) &&
      (last === '.' || last === '..') || last === '');

  // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];
    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' &&
      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' ||
      (srcPath[0] && srcPath[0].charAt(0) === '/');

  // put the host back
  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' :
                                    srcPath.length ? srcPath.shift() : '';
    //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')
    var authInHost = result.host && result.host.indexOf('@') > 0 ?
                     result.host.split('@') : false;
    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || (result.host && srcPath.length);

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  }

  //to support request.http
  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') +
                  (result.search ? result.search : '');
  }
  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function() {
  var host = this.host;
  var port = portPattern.exec(host);
  if (port) {
    port = port[0];
    if (port !== ':') {
      this.port = port.substr(1);
    }
    host = host.substr(0, host.length - port.length);
  }
  if (host) this.hostname = host;
};

},{"./util":65,"punycode":53,"querystring":56}],65:[function(require,module,exports){
'use strict';

module.exports = {
  isString: function(arg) {
    return typeof(arg) === 'string';
  },
  isObject: function(arg) {
    return typeof(arg) === 'object' && arg !== null;
  },
  isNull: function(arg) {
    return arg === null;
  },
  isNullOrUndefined: function(arg) {
    return arg == null;
  }
};

},{}],66:[function(require,module,exports){
'use strict';

var isString = require('is-string');
var isNumber = require('is-number-object');
var isBoolean = require('is-boolean-object');
var isSymbol = require('is-symbol');
var isBigInt = require('is-bigint');

// eslint-disable-next-line consistent-return
module.exports = function whichBoxedPrimitive(value) {
	// eslint-disable-next-line eqeqeq
	if (value == null || (typeof value !== 'object' && typeof value !== 'function')) {
		return null;
	}
	if (isString(value)) {
		return 'String';
	}
	if (isNumber(value)) {
		return 'Number';
	}
	if (isBoolean(value)) {
		return 'Boolean';
	}
	if (isSymbol(value)) {
		return 'Symbol';
	}
	if (isBigInt(value)) {
		return 'BigInt';
	}
};

},{"is-bigint":26,"is-boolean-object":27,"is-number-object":30,"is-string":33,"is-symbol":34}],67:[function(require,module,exports){
'use strict';

var isMap = require('is-map');
var isSet = require('is-set');
var isWeakMap = require('is-weakmap');
var isWeakSet = require('is-weakset');

module.exports = function whichCollection(value) {
	if (value && typeof value === 'object') {
		if (isMap(value)) {
			return 'Map';
		}
		if (isSet(value)) {
			return 'Set';
		}
		if (isWeakMap(value)) {
			return 'WeakMap';
		}
		if (isWeakSet(value)) {
			return 'WeakSet';
		}
	}
	return false;
};

},{"is-map":29,"is-set":32,"is-weakmap":36,"is-weakset":37}],68:[function(require,module,exports){
(function (global){(function (){
'use strict';

var forEach = require('foreach');
var availableTypedArrays = require('available-typed-arrays');
var callBound = require('call-bind/callBound');

var $toString = callBound('Object.prototype.toString');
var hasSymbols = require('has-symbols')();
var hasToStringTag = hasSymbols && typeof Symbol.toStringTag === 'symbol';

var typedArrays = availableTypedArrays();

var $slice = callBound('String.prototype.slice');
var toStrTags = {};
var gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');
var getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');
if (hasToStringTag && gOPD && getPrototypeOf) {
	forEach(typedArrays, function (typedArray) {
		if (typeof global[typedArray] === 'function') {
			var arr = new global[typedArray]();
			if (!(Symbol.toStringTag in arr)) {
				throw new EvalError('this engine has support for Symbol.toStringTag, but ' + typedArray + ' does not have the property! Please report this.');
			}
			var proto = getPrototypeOf(arr);
			var descriptor = gOPD(proto, Symbol.toStringTag);
			if (!descriptor) {
				var superProto = getPrototypeOf(proto);
				descriptor = gOPD(superProto, Symbol.toStringTag);
			}
			toStrTags[typedArray] = descriptor.get;
		}
	});
}

var tryTypedArrays = function tryAllTypedArrays(value) {
	var foundName = false;
	forEach(toStrTags, function (getter, typedArray) {
		if (!foundName) {
			try {
				var name = getter.call(value);
				if (name === typedArray) {
					foundName = name;
				}
			} catch (e) {}
		}
	});
	return foundName;
};

var isTypedArray = require('is-typed-array');

module.exports = function whichTypedArray(value) {
	if (!isTypedArray(value)) { return false; }
	if (!hasToStringTag) { return $slice($toString(value), 8, -1); }
	return tryTypedArrays(value);
};

}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"available-typed-arrays":4,"call-bind/callBound":8,"es-abstract/helpers/getOwnPropertyDescriptor":14,"foreach":17,"has-symbols":21,"is-typed-array":35}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Database = void 0;
const types_1 = require("./types");
const utils_1 = require("./utils");
const typeMappings_1 = require("./schema/typeMappings");
let mapps = typeMappings_1.TypeMappings.getMappings();
class Database {
    constructor() {
        this.mappings = {};
        for (let type of utils_1.values(types_1.ItemTypesMap)) {
            this.mappings[type] = {};
        }
        this.errors = [];
    }
    static changeIdRecursive(targ, type, oldId, newId) {
        let changed = false;
        for (let key of utils_1.keys(targ)) {
            let val = targ[key];
            if (val && (typeof val === "object" || Array.isArray(val))) {
                changed = changed || Database.changeIdRecursive(val, type, oldId, newId);
            }
            if (Array.isArray(val) && val.length > 0 && typeof val[0] === "number") {
                let _type = typeMappings_1.TypeMappings.fieldType(this, key.toString());
                if (_type !== type)
                    continue;
                // debugger;
                for (let i = 0; i < val.length; i++) {
                    if (val[i] === oldId)
                        val[i] = newId;
                    changed = true;
                }
            }
            else if (typeof val === "number" && val === oldId) {
                let _type = typeMappings_1.TypeMappings.fieldType(targ, key.toString());
                if (_type !== type)
                    continue;
                // debugger;
                targ[key] = newId;
                changed = true;
            }
        }
        return changed;
    }
    async tryAddFile(path, data) {
        var _a, _b, _c;
        try {
            let json = JSON.parse(data);
            if (!json.ItemType)
                return false;
            let old = this.mappings[json.ItemType][(_a = json.Id) !== null && _a !== void 0 ? _a : 0];
            if (old) {
                this.errors.push(`${path} have same ID as ${old.path}`);
                return true;
            }
            this.mappings[json.ItemType][(_b = json.Id) !== null && _b !== void 0 ? _b : 0] = {
                ItemType: json.ItemType,
                Id: (_c = json.Id) !== null && _c !== void 0 ? _c : 0,
                path: path,
                value: data
            };
            return true;
        }
        catch (e) {
            return false;
        }
    }
    async tryApplyChanges(old, changed, files) {
        var _a, _b;
        old.Id = (_a = old.Id) !== null && _a !== void 0 ? _a : 0;
        changed.Id = (_b = changed.Id) !== null && _b !== void 0 ? _b : 0;
        if (old.Id != changed.Id) {
            if (changed.Id > 2 ** 31 - 1) {
                this.err(`Id ${changed.Id} is too large, it must be ${2 ** 31 - 1} at most!`);
                changed.Id = old.Id;
            }
            else {
                let targ = this.mappings[changed.ItemType][changed.Id];
                if (targ) {
                    this.err(`Id ${types_1.ItemTypesMapRev[changed.ItemType]}.${changed.Id} is already occupied by ${targ.path}`);
                    changed.Id = old.Id;
                }
                else {
                    this.mappings[changed.ItemType][changed.Id] = this.mappings[changed.ItemType][old.Id];
                    delete this.mappings[changed.ItemType][old.Id];
                    await this.changeIds(files, changed.ItemType, old.Id, changed.Id);
                }
            }
        }
        return true;
    }
    async changeIds(files, type, oldId, newId) {
        for (let file of (await files.allFiles())) {
            let data = JSON.parse(file.value);
            if (Database.changeIdRecursive(data, type, oldId, newId)) {
                await files.writeFile(file.path, JSON.stringify(data, undefined, "\t"));
            }
        }
    }
    getIds(type) {
        return utils_1.keys(this.mappings[type]).map(e => Number(e));
    }
    err(message) {
        console.warn(message);
        alert(message);
    }
}
exports.Database = Database;
Database.deleteNumber = 2 ** 32 - 9870;
},{"./schema/typeMappings":73,"./types":75,"./utils":78}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Files = void 0;
class Files {
}
exports.Files = Files;
},{}],71:[function(require,module,exports){
(function (global){(function (){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const $ = require("jquery");
const EditorTab_1 = require("./ui/EditorTab");
const TreeTab_1 = require("./ui/TreeTab");
const zipFiles_1 = require("./zipFiles");
const database_1 = require("./database");
global.jQuery = global.$ = $;
$(async () => {
    let db = new database_1.Database();
    await EditorTab_1.EditorTab.init(db);
    let zf = new zipFiles_1.ZipFiles(db);
    await TreeTab_1.TreeTab.init(zf, db);
});
}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"./database":69,"./ui/EditorTab":76,"./ui/TreeTab":77,"./zipFiles":79,"jquery":38}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.schemaForType = void 0;
const types_1 = require("../types");
const database_1 = require("../database");
let trav = (obj, d) => {
    for (let key of Object.getOwnPropertyNames(obj)) {
        let val = obj[key];
        if (val && typeof val === "object" || Array.isArray(val)) {
            trav(val, d);
        }
        if (typeof val === "string") {
            if (val.startsWith("$enumSource_")) {
                obj[key] = d.getIds(Number(val.replace("$enumSource_", "")));
                obj[key].unshift(database_1.Database.deleteNumber);
            }
        }
    }
    return obj;
};
function schemaForType(type, d) {
    let base = { "$id": "https://juh9870.cf/EhMod.json", "title": "EH Mod", "description": "Event Horizon mod file", "type": "object", "format": "grid", "options": { "keep_oneof_values": false }, "definitions": { "itype_0": { "type": "object", "format": "grid", "additionalProperties": false, "properties": { "ItemType": { "type": "integer", "enum": [0], "options": { "hidden": true } } } }, "vector": { "type": "object", "format": "grid", "additionalProperties": false, "properties": { "x": { "type": "number" }, "y": { "type": "number" } } }, "ActivationType": { "type": "integer", "enum": [0, 1, 2], "options": { "enum_titles": ["None", "Manual", "Mixed"] } }, "AmmunitionClassObsolete": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31], "options": { "enum_titles": ["Common", "Acid", "Aura", "Carrier", "Bomb", "DamageOverTime", "DroneControl", "Emp", "EmpMissile", "EnergyBeam", "EnergySiphon", "Explosion", "Fireworks", "FragBomb", "Fragment", "HomingImmobilizer", "HomingTorpedo", "Immobilizer", "LaserBeam", "Rocket", "Singularity", "TractorBeam", "VampiricRay", "SmallVampiricRay", "RepairRay", "PlasmaWeb", "UnguidedRocket", "IonBeam", "AcidRocket", "BlackHole", "ClusterMissile", "HomingCarrier"] } }, "Availability": { "type": "integer", "enum": [0, 1, 2, 3, 4], "options": { "enum_titles": ["None", "Common", "Rare", "Special", "Hidden"] } }, "CellType": { "type": "string", "enum": ["0", "4", "1", "2", "3", "5", "*"], "options": { "enum_titles": ["Empty", "Weapon", "Outer", "Inner", "InnerOuter", "Engine", "Custom"] } }, "ComponentCategory": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6], "options": { "enum_titles": ["Undefined", "Weapon", "Defense", "Energy", "Engine", "Drones", "Special"] } }, "ComponentModType": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "options": { "enum_titles": ["Empty", "Lightweight", "LowEnergyCost", "Fortified", "ExtraHitPoints", "Damage", "Cooldown", "Range", "BulletVelocity", "EnergyCapacity", "RepairRate", "EnginePower", "RechargeRate", "BulletVelocity2", "AreaOfEffect", "ShieldPower", "Damage2", "DroneDamage", "DroneDefense", "DroneSpeed", "DroneRange", "Recoil"] } }, "ComponentStatsType": { "type": "integer", "enum": [0, 1], "options": { "enum_titles": ["PerComponent", "PerOneCell"] } }, "DeviceClass": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "options": { "enum_titles": ["Accelerator", "Decoy", "EnergyShield", "Ghost", "GravityGenerator", "PartialShield", "PointDefense", "RepairBot", "Detonator", "Stealth", "Teleporter", "Brake", "SuperStealth", "Fortification", "ToxicWaste", "WormTail", "ClonningCenter", "TimeMachine"] } }, "DifficultyClass": { "type": "integer", "enum": [0, 1, 2], "options": { "enum_titles": ["Default", "Class1", "Class2"] } }, "ItemType": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 25, 26, 27, 100, 101, 102, 103], "options": { "enum_titles": ["Undefined", "Component", "Device", "Weapon", "AmmunitionObsolete", "DroneBay", "Ship", "Satellite", "ShipBuild", "SatelliteBuild", "Technology", "ComponentStats", "ComponentMod", "Skill", "Faction", "Quest", "Loot", "Fleet", "Character", "QuestItem", "Ammunition", "VisualEffect", "BulletPrefab", "ShipSettings", "GalaxySettings", "DatabaseSettings", "ExplorationSettings"] } }, "ModificationQuality": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5], "options": { "enum_titles": ["N3", "N2", "N1", "P1", "P2", "P3"] } }, "PlatformType": { "type": "integer", "enum": [0, 1, 2, 3], "options": { "enum_titles": ["Common", "AutoTarget", "AutoTargetFrontal", "TargetingUnit"] } }, "FactionFilterType": { "type": "integer", "enum": [0, 1, 2, 3], "options": { "enum_titles": ["AllButList", "ListOnly", "StarOwnersAndList", "AllAvailable"] } }, "LootItemType": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 10, 20, 21, 22, 25, 30, 31, 35], "options": { "enum_titles": ["None", "SomeMoney", "Fuel", "Money", "Stars", "StarMap", "RandomComponents", "RandomItems", "AllItems", "ItemsWithChance", "QuestItem", "Ship", "EmptyShip", "Component"] } }, "NodeType": { "type": "integer", "enum": [0, 1, 10, 11, 15, 16, 17, 20, 21, 25, 26, 30, 35, 36, 37, 40, 41, 42, 43, 50, 51, 55, 56], "options": { "enum_titles": ["Undefined", "ComingSoon", "ShowDialog", "OpenShipyard", "Switch", "Random", "Condition", "AttackFleet", "AttackOccupants", "DestroyOccupants", "SuppressOccupants", "Retreat", "ReceiveItem", "RemoveItem", "Trade", "CompleteQuest", "FailQuest", "CancelQuest", "StartQuest", "SetCharacterRelations", "SetFactionRelations", "ChangeCharacterRelations", "ChangeFactionRelations"] } }, "QuestType": { "type": "integer", "enum": [0, 1, 2, 3], "options": { "enum_titles": ["Common", "Singleton", "Storyline", "Temporary"] } }, "RequiredViewMode": { "type": "integer", "enum": [0, 1, 2, 3], "options": { "enum_titles": ["Any", "StarSystem", "StarMap", "GalaxyMap"] } }, "RequirementType": { "type": "integer", "enum": [0, 1, 2, 3, 6, 7, 8, 9, 10, 15, 16, 20, 25, 26, 27, 30], "options": { "enum_titles": ["Empty", "Any", "All", "None", "PlayerPosition", "RandomStarSystem", "AggressiveOccupants", "QuestCompleted", "QuestActive", "CharacterRelations", "FactionRelations", "Faction", "HaveQuestItem", "HaveItem", "HaveItemById", "ComeBack"] } }, "RewardCondition": { "type": "integer", "enum": [0, 1, 2], "options": { "enum_titles": ["Default", "Always", "Never"] } }, "StartCondition": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6], "options": { "enum_titles": ["Manual", "Beacon", "LocalEncounter", "FactionMission", "GameStart", "NewStarExplored", "ArrivedAtStar"] } }, "ShipCategory": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6], "options": { "enum_titles": ["Common", "Rare", "Flagship", "Special", "Starbase", "Hidden", "Drone"] } }, "SizeClass": { "type": "integer", "enum": [-1, 0, 1, 2, 3, 4], "options": { "enum_titles": ["Undefined", "Frigate", "Destroyer", "Cruiser", "Battleship", "Titan"] } }, "SkillType": { "type": "integer", "enum": [0, 1, 2, 4, 5, 6, 7, 10, 12], "options": { "enum_titles": ["Undefined", "Blueprint", "Ship", "ShipAttack", "ShipDefense", "StarbaseAttack", "StarbaseDefense", "BetterPrices", "BetterLoot"] } }, "TechType": { "type": "integer", "enum": [0, 1, 2], "options": { "enum_titles": ["Component", "Ship", "Satellite"] } }, "BulletEffectType": { "type": "integer", "enum": [0, 1, 2, 3], "options": { "enum_titles": ["None", "PlaySfx", "SpawnBullet", "Detonate"] } }, "BulletImpactType": { "type": "integer", "enum": [0, 1, 2], "options": { "enum_titles": ["HitFirstTarget", "HitAllTargets", "DamageOverTime"] } }, "BulletShape": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6], "options": { "enum_titles": ["Projectile", "Rocket", "LaserBeam", "LightningBolt", "EnergyBeam", "Spark", "Mine"] } }, "BulletTriggerCondition": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6, 7], "options": { "enum_titles": ["Undefined", "Created", "Destroyed", "Hit", "Disarmed", "Expired", "Detonated", "OutOfAmmo"] } }, "BulletType": { "type": "integer", "enum": [0, 1, 2, 3], "options": { "enum_titles": ["Projectile", "Homing", "Static", "Continuous"] } }, "ColorMode": { "type": "integer", "enum": [0, 1, 2, 3], "options": { "enum_titles": ["TakeFromOwner", "UseMyOwn", "Blend", "Multiply"] } }, "DamageType": { "type": "integer", "enum": [0, 1, 2, 3], "options": { "enum_titles": ["Impact", "Energy", "Heat", "Direct"] } }, "ImpactEffectType": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5, 6, 7], "options": { "enum_titles": ["Damage", "Push", "Pull", "DrainEnergy", "SiphonHitPoints", "SlowDown", "CaptureDrones", "Repair"] } }, "VisualEffectType": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5], "options": { "enum_titles": ["Flash", "FlashAdditive", "Shockwave", "Smoke", "SmokeAdditive", "Shake"] } }, "WeaponClass": { "type": "integer", "enum": [0, 1, 2, 3, 4, 5], "options": { "enum_titles": ["Common", "Manageable", "Continuous", "MashineGun", "MultiShot", "RequiredCharging"] } }, "WeaponSlotType": { "type": "string", "enum": ["", "C", "T", "M", "L", "S"], "options": { "enum_titles": ["Default", "Cannon", "Torpedo", "Missile", "Laser", "Special"] } }, "itype_4": { "type": "object", "format": "grid", "title": "AmmunitionObsolete", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [4], "options": { "hidden": true } }, "Id": { "type": "integer" }, "AmmunitionClass": { "title": "AmmunitionClass", "$ref": "#/definitions/AmmunitionClassObsolete" }, "DamageType": { "title": "DamageType", "$ref": "#/definitions/DamageType" }, "Impulse": { "title": "Impulse", "type": "number", "minimum": 0, "maximum": 10 }, "Recoil": { "title": "Recoil", "type": "number", "minimum": 0, "maximum": 10 }, "Size": { "title": "Size", "type": "number", "minimum": 0, "maximum": 1000 }, "InitialPosition": { "title": "InitialPosition", "$ref": "#/definitions/vector" }, "AreaOfEffect": { "title": "AreaOfEffect", "type": "number", "minimum": 0, "maximum": 1000 }, "Damage": { "title": "Damage", "type": "number", "minimum": 0, "maximum": 999999999 }, "Range": { "title": "Range", "type": "number", "minimum": 0, "maximum": 1000 }, "Velocity": { "title": "Velocity", "type": "number", "minimum": 0, "maximum": 1000 }, "LifeTime": { "title": "LifeTime", "type": "number", "minimum": 0, "maximum": 999999999 }, "HitPoints": { "title": "HitPoints", "type": "integer", "minimum": 0, "maximum": 999999999 }, "IgnoresShipVelocity": { "title": "IgnoresShipVelocity", "type": "boolean", "format": "checkbox" }, "EnergyCost": { "title": "EnergyCost", "type": "number", "minimum": 0, "maximum": 999999999 }, "CoupledAmmunitionId": { "title": "CoupledAmmunition", "type": "integer", "options": { "itemType": 4 }, "format": "select2", "enumSource": [{ "source": "$enumSource_4", "title": "4_EnumTitleCB", "value": "4_EnumValueCB" }] }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "FireSound": { "title": "FireSound", "type": "string" }, "HitSound": { "title": "HitSound", "type": "string" }, "HitEffectPrefab": { "title": "HitEffectPrefab", "type": "string" }, "BulletPrefab": { "title": "BulletPrefab", "type": "string" } } }, "Barrel": { "type": "object", "format": "grid", "title": "Barrel", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Position": { "title": "Position", "$ref": "#/definitions/vector" }, "Rotation": { "title": "Rotation", "type": "number", "minimum": -360, "maximum": 360 }, "Offset": { "title": "Offset", "type": "number", "minimum": 0, "maximum": 1 }, "PlatformType": { "title": "PlatformType", "$ref": "#/definitions/PlatformType" }, "AutoAimingArc": { "title": "AutoAimingArc", "type": "number", "minimum": 0, "maximum": 360 }, "RotationSpeed": { "title": "RotationSpeed", "type": "number", "minimum": 0, "maximum": 1000 }, "WeaponClass": { "title": "WeaponClass", "type": "string" }, "Image": { "title": "Image", "type": "string" }, "Size": { "title": "Size", "type": "number", "minimum": 0, "maximum": 100 } } }, "itype_1": { "type": "object", "format": "grid", "title": "Component", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [1], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Name": { "title": "Name", "type": "string" }, "Description": { "title": "Description", "type": "string" }, "DisplayCategory": { "title": "DisplayCategory", "$ref": "#/definitions/ComponentCategory" }, "Availability": { "title": "Availability", "$ref": "#/definitions/Availability" }, "ComponentStatsId": { "title": "Stats", "type": "integer", "options": { "itemType": 11 }, "format": "select2", "enumSource": [{ "source": "$enumSource_11", "title": "11_EnumTitleCB", "value": "11_EnumValueCB" }] }, "Faction": { "title": "Faction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "Level": { "title": "Level", "type": "integer", "minimum": 0, "maximum": 1000 }, "Icon": { "title": "Icon", "type": "string" }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "Layout": { "title": "Layout", "type": "string" }, "CellType": { "title": "CellType", "type": "string" }, "DeviceId": { "title": "Device", "type": "integer", "options": { "itemType": 2 }, "format": "select2", "enumSource": [{ "source": "$enumSource_2", "title": "2_EnumTitleCB", "value": "2_EnumValueCB" }] }, "WeaponId": { "title": "Weapon", "type": "integer", "options": { "itemType": 3 }, "format": "select2", "enumSource": [{ "source": "$enumSource_3", "title": "3_EnumTitleCB", "value": "3_EnumValueCB" }] }, "AmmunitionId": { "title": "Ammunition", "type": "integer", "options": { "itemType": 25 }, "format": "select2", "enumSource": [{ "source": "$enumSource_25", "title": "25_EnumTitleCB", "value": "25_EnumValueCB" }] }, "AmmunitionIdObsolete": { "title": "AmmunitionObsolete", "type": "integer", "options": { "itemType": 4 }, "format": "select2", "enumSource": [{ "source": "$enumSource_4", "title": "4_EnumTitleCB", "value": "4_EnumValueCB" }] }, "WeaponSlotType": { "title": "WeaponSlotType", "type": "string" }, "DroneBayId": { "title": "DroneBay", "type": "integer", "options": { "itemType": 5 }, "format": "select2", "enumSource": [{ "source": "$enumSource_5", "title": "5_EnumTitleCB", "value": "5_EnumValueCB" }] }, "DroneId": { "title": "Drone", "type": "integer", "options": { "itemType": 8 }, "format": "select2", "enumSource": [{ "source": "$enumSource_8", "title": "8_EnumTitleCB", "value": "8_EnumValueCB" }] }, "Restrictions": { "title": "Restrictions", "$ref": "#/definitions/ComponentRestrictions" }, "PossibleModifications": { "type": "array", "title": "PossibleModifications", "items": { "type": "integer", "options": { "itemType": 12 }, "format": "select2", "enumSource": [{ "source": "$enumSource_12", "title": "12_EnumTitleCB", "value": "12_EnumValueCB" }] }, "format": "tabs-top" } } }, "itype_12": { "type": "object", "format": "grid", "title": "ComponentMod", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [12], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Type": { "title": "Type", "$ref": "#/definitions/ComponentModType" } } }, "ComponentRestrictions": { "type": "object", "format": "grid", "title": "ComponentRestrictions", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "ShipSizes": { "type": "array", "title": "ShipSizes", "items": { "type": "integer", "enum": [-1, 0, 1, 2, 3, 4], "options": { "enum_titles": ["Undefined", "Frigate", "Destroyer", "Cruiser", "Battleship", "Titan"] } }, "uniqueItems": true }, "NotForOrganicShips": { "title": "NotForOrganicShips", "type": "boolean", "format": "checkbox" }, "NotForMechanicShips": { "title": "NotForMechanicShips", "type": "boolean", "format": "checkbox" }, "UniqueComponentTag": { "title": "UniqueComponentTag", "type": "string" } } }, "itype_11": { "type": "object", "format": "grid", "title": "ComponentStats", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [11], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Type": { "title": "Type", "$ref": "#/definitions/ComponentStatsType" }, "ArmorPoints": { "title": "ArmorPoints", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "ArmorRepairRate": { "title": "ArmorRepairRate", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "ArmorRepairCooldownModifier": { "title": "ArmorRepairCooldownModifier", "type": "number", "minimum": -1, "maximum": 1 }, "EnergyPoints": { "title": "EnergyPoints", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "EnergyRechargeRate": { "title": "EnergyRechargeRate", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "EnergyRechargeCooldownModifier": { "title": "EnergyRechargeCooldownModifier", "type": "number", "minimum": -5, "maximum": 5 }, "ShieldPoints": { "title": "ShieldPoints", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "ShieldRechargeRate": { "title": "ShieldRechargeRate", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "ShieldRechargeCooldownModifier": { "title": "ShieldRechargeCooldownModifier", "type": "number", "minimum": -5, "maximum": 5 }, "Weight": { "title": "Weight", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "RammingDamage": { "title": "RammingDamage", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "EnergyAbsorption": { "title": "EnergyAbsorption", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "KineticResistance": { "title": "KineticResistance", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "EnergyResistance": { "title": "EnergyResistance", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "ThermalResistance": { "title": "ThermalResistance", "type": "number", "minimum": -1000000, "maximum": 1000000 }, "EnginePower": { "title": "EnginePower", "type": "number", "minimum": 0, "maximum": 2000 }, "TurnRate": { "title": "TurnRate", "type": "number", "minimum": 0, "maximum": 2000 }, "Autopilot": { "title": "Autopilot", "type": "boolean", "format": "checkbox" }, "DroneRangeModifier": { "title": "DroneRangeModifier", "type": "number", "minimum": -50, "maximum": 50 }, "DroneDamageModifier": { "title": "DroneDamageModifier", "type": "number", "minimum": -50, "maximum": 50 }, "DroneDefenseModifier": { "title": "DroneDefenseModifier", "type": "number", "minimum": -50, "maximum": 50 }, "DroneSpeedModifier": { "title": "DroneSpeedModifier", "type": "number", "minimum": -50, "maximum": 50 }, "DronesBuiltPerSecond": { "title": "DronesBuiltPerSecond", "type": "number", "minimum": 0, "maximum": 100 }, "DroneBuildTimeModifier": { "title": "DroneBuildTimeModifier", "type": "number", "minimum": 0, "maximum": 100 }, "WeaponFireRateModifier": { "title": "WeaponFireRateModifier", "type": "number", "minimum": -100, "maximum": 100 }, "WeaponDamageModifier": { "title": "WeaponDamageModifier", "type": "number", "minimum": -100, "maximum": 100 }, "WeaponRangeModifier": { "title": "WeaponRangeModifier", "type": "number", "minimum": -100, "maximum": 100 }, "WeaponEnergyCostModifier": { "title": "WeaponEnergyCostModifier", "type": "number", "minimum": -100, "maximum": 100 }, "AlterWeaponPlatform": { "title": "AlterWeaponPlatform", "$ref": "#/definitions/PlatformType" } } }, "itype_102": { "type": "object", "format": "grid", "title": "DatabaseSettings", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [102], "options": { "hidden": true } }, "Id": { "type": "integer" }, "DatabaseVersion": { "title": "DatabaseVersion", "type": "integer", "minimum": 1 }, "ModName": { "title": "ModName", "type": "string" }, "ModId": { "title": "ModId", "type": "string" }, "ModVersion": { "title": "ModVersion", "type": "integer" }, "UnloadOriginalDatabase": { "title": "UnloadOriginalDatabase", "type": "boolean", "format": "checkbox" } } }, "itype_2": { "type": "object", "format": "grid", "title": "Device", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [2], "options": { "hidden": true } }, "Id": { "type": "integer" }, "DeviceClass": { "title": "DeviceClass", "$ref": "#/definitions/DeviceClass" }, "EnergyConsumption": { "title": "EnergyConsumption", "type": "number", "minimum": 0, "maximum": 999999999 }, "PassiveEnergyConsumption": { "title": "PassiveEnergyConsumption", "type": "number", "minimum": 0, "maximum": 999999999 }, "Power": { "title": "Power", "type": "number", "minimum": 0, "maximum": 1000 }, "Range": { "title": "Range", "type": "number", "minimum": 0, "maximum": 1000 }, "Size": { "title": "Size", "type": "number", "minimum": 0, "maximum": 1000 }, "Cooldown": { "title": "Cooldown", "type": "number", "minimum": 0, "maximum": 1000 }, "Lifetime": { "title": "Lifetime", "type": "number", "minimum": 0, "maximum": 1000 }, "Offset": { "title": "Offset", "$ref": "#/definitions/vector" }, "ActivationType": { "title": "ActivationType", "$ref": "#/definitions/ActivationType" }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "Sound": { "title": "Sound", "type": "string" }, "EffectPrefab": { "title": "EffectPrefab", "type": "string" }, "ObjectPrefab": { "title": "ObjectPrefab", "type": "string" }, "ControlButtonIcon": { "title": "ControlButtonIcon", "type": "string" } } }, "itype_5": { "type": "object", "format": "grid", "title": "DroneBay", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [5], "options": { "hidden": true } }, "Id": { "type": "integer" }, "EnergyConsumption": { "title": "EnergyConsumption", "type": "number", "minimum": 0, "maximum": 999999999 }, "PassiveEnergyConsumption": { "title": "PassiveEnergyConsumption", "type": "number", "minimum": 0, "maximum": 999999999 }, "Range": { "title": "Range", "type": "number", "minimum": 1, "maximum": 1000 }, "DamageMultiplier": { "title": "DamageMultiplier", "type": "number", "minimum": 0.01, "maximum": 1000 }, "DefenseMultiplier": { "title": "DefenseMultiplier", "type": "number", "minimum": 0.01, "maximum": 1000 }, "SpeedMultiplier": { "title": "SpeedMultiplier", "type": "number", "minimum": 0.01, "maximum": 1000 }, "ImprovedAi": { "title": "ImprovedAi", "type": "boolean", "format": "checkbox" }, "Capacity": { "title": "Capacity", "type": "integer", "minimum": 1, "maximum": 1000 }, "ActivationType": { "title": "ActivationType", "$ref": "#/definitions/ActivationType" }, "LaunchSound": { "title": "LaunchSound", "type": "string" }, "LaunchEffectPrefab": { "title": "LaunchEffectPrefab", "type": "string" }, "ControlButtonIcon": { "title": "ControlButtonIcon", "type": "string" } } }, "Engine": { "type": "object", "format": "grid", "title": "Engine", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Position": { "title": "Position", "$ref": "#/definitions/vector" }, "Size": { "title": "Size", "type": "number", "minimum": 0, "maximum": 1 } } }, "itype_103": { "type": "object", "format": "grid", "title": "ExplorationSettings", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [103], "options": { "hidden": true } }, "Id": { "type": "integer" }, "OutpostShip": { "title": "OutpostShip", "type": "integer", "options": { "itemType": 6 }, "format": "select2", "enumSource": [{ "source": "$enumSource_6", "title": "6_EnumTitleCB", "value": "6_EnumValueCB" }] }, "TurretShip": { "title": "TurretShip", "type": "integer", "options": { "itemType": 6 }, "format": "select2", "enumSource": [{ "source": "$enumSource_6", "title": "6_EnumTitleCB", "value": "6_EnumValueCB" }] }, "InfectedPlanetFaction": { "title": "InfectedPlanetFaction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "HiveShipBuild": { "title": "HiveShipBuild", "type": "integer", "options": { "itemType": 8 }, "format": "select2", "enumSource": [{ "source": "$enumSource_8", "title": "8_EnumTitleCB", "value": "8_EnumValueCB" }] } } }, "itype_14": { "type": "object", "format": "grid", "title": "Faction", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [14], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Name": { "title": "Name", "type": "string" }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "HomeStarDistance": { "title": "HomeStarDistance", "type": "integer", "minimum": 0, "maximum": 1000 }, "WanderingShipsDistance": { "title": "WanderingShipsDistance", "type": "integer", "minimum": 0, "maximum": 1000 }, "Hidden": { "title": "Hidden", "type": "boolean", "format": "checkbox" }, "Hostile": { "title": "Hostile", "type": "boolean", "format": "checkbox" } } }, "itype_101": { "type": "object", "format": "grid", "title": "GalaxySettings", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [101], "options": { "hidden": true } }, "Id": { "type": "integer" }, "AbandonedStarbaseFaction": { "title": "AbandonedStarbaseFaction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "StartingShipBuilds": { "type": "array", "title": "StartingShipBuilds", "items": { "type": "integer", "options": { "itemType": 8 }, "format": "select2", "enumSource": [{ "source": "$enumSource_8", "title": "8_EnumTitleCB", "value": "8_EnumValueCB" }] }, "format": "tabs-top" } } }, "InstalledComponent": { "type": "object", "format": "grid", "title": "InstalledComponent", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "ComponentId": { "title": "Component", "type": "integer", "options": { "itemType": 1 }, "format": "select2", "enumSource": [{ "source": "$enumSource_1", "title": "1_EnumTitleCB", "value": "1_EnumValueCB" }] }, "Modification": { "title": "Modification", "$ref": "#/definitions/ComponentModType" }, "Quality": { "title": "Quality", "$ref": "#/definitions/ModificationQuality" }, "Locked": { "title": "Locked", "type": "boolean", "format": "checkbox" }, "X": { "title": "X", "type": "integer", "minimum": -32768, "maximum": 32767 }, "Y": { "title": "Y", "type": "integer", "minimum": -32768, "maximum": 32767 }, "BarrelId": { "title": "BarrelId", "type": "integer", "minimum": -1, "maximum": 255 }, "Behaviour": { "title": "Behaviour", "type": "integer", "minimum": 0, "maximum": 10 }, "KeyBinding": { "title": "KeyBinding", "type": "integer", "minimum": -10, "maximum": 10 } } }, "itype_19": { "type": "object", "format": "grid", "title": "Character", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [19], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Name": { "title": "Name", "type": "string" }, "AvatarIcon": { "title": "AvatarIcon", "type": "string" }, "Faction": { "title": "Faction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "Inventory": { "title": "Inventory", "type": "integer", "options": { "itemType": 16 }, "format": "select2", "enumSource": [{ "source": "$enumSource_16", "title": "16_EnumTitleCB", "value": "16_EnumValueCB" }] }, "Fleet": { "title": "Fleet", "type": "integer", "options": { "itemType": 18 }, "format": "select2", "enumSource": [{ "source": "$enumSource_18", "title": "18_EnumTitleCB", "value": "18_EnumValueCB" }] }, "Relations": { "title": "Relations", "type": "integer", "minimum": -100, "maximum": 100 }, "IsUnique": { "title": "IsUnique", "type": "boolean", "format": "checkbox" } } }, "FactionFilter": { "type": "object", "format": "grid", "title": "FactionFilter", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Type": { "title": "Type", "$ref": "#/definitions/FactionFilterType" }, "List": { "type": "array", "title": "List", "items": { "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "format": "tabs-top" } } }, "itype_18": { "type": "object", "format": "grid", "title": "Fleet", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [18], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Factions": { "title": "Factions", "$ref": "#/definitions/FactionFilter" }, "LevelBonus": { "title": "LevelBonus", "type": "integer", "minimum": -10000, "maximum": 10000 }, "NoRandomShips": { "title": "NoRandomShips", "type": "boolean", "format": "checkbox" }, "CombatTimeLimit": { "title": "CombatTimeLimit", "type": "integer", "minimum": 0, "maximum": 999 }, "LootCondition": { "title": "LootCondition", "$ref": "#/definitions/RewardCondition" }, "ExpCondition": { "title": "ExpCondition", "$ref": "#/definitions/RewardCondition" }, "SpecificShips": { "type": "array", "title": "SpecificShips", "items": { "type": "integer", "options": { "itemType": 8 }, "format": "select2", "enumSource": [{ "source": "$enumSource_8", "title": "8_EnumTitleCB", "value": "8_EnumValueCB" }] }, "format": "tabs-top" } } }, "itype_16": { "type": "object", "format": "grid", "title": "Loot", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [16], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Loot": { "title": "Loot", "$ref": "#/definitions/LootContent" } } }, "LootContent": { "type": "object", "format": "grid", "title": "LootContent", "additionalProperties": true, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Type": { "type": "integer", "options": { "hidden": true } } }, "oneOf": [{ "title": "None", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [0], "options": { "hidden": true } } } }, { "title": "SomeMoney", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [1], "options": { "hidden": true } }, "ValueRatio": { "title": "ValueRatio", "type": "number", "minimum": 0.001, "maximum": 1000 } } }, { "title": "Fuel", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [2], "options": { "hidden": true } }, "MinAmount": { "title": "MinAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "MaxAmount": { "title": "MaxAmount", "type": "integer", "minimum": 0, "maximum": 999999999 } } }, { "title": "Money", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [3], "options": { "hidden": true } }, "MinAmount": { "title": "MinAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "MaxAmount": { "title": "MaxAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "ValueRatio": { "title": "ValueRatio", "type": "number", "minimum": 0.001, "maximum": 1000 } } }, { "title": "Stars", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [4], "options": { "hidden": true } }, "MinAmount": { "title": "MinAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "MaxAmount": { "title": "MaxAmount", "type": "integer", "minimum": 0, "maximum": 999999999 } } }, { "title": "StarMap", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [5], "options": { "hidden": true } } } }, { "title": "RandomComponents", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [10], "options": { "hidden": true } }, "MinAmount": { "title": "MinAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "MaxAmount": { "title": "MaxAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "ValueRatio": { "title": "ValueRatio", "type": "number", "minimum": 0.001, "maximum": 1000 }, "Factions": { "title": "Factions", "$ref": "#/definitions/FactionFilter" } } }, { "title": "RandomItems", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [20], "options": { "hidden": true } }, "MinAmount": { "title": "MinAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "MaxAmount": { "title": "MaxAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "Items": { "type": "array", "title": "Items", "items": { "$ref": "#/definitions/LootItem" }, "format": "tabs-top" } } }, { "title": "AllItems", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [21], "options": { "hidden": true } }, "Items": { "type": "array", "title": "Items", "items": { "$ref": "#/definitions/LootItem" }, "format": "tabs-top" } } }, { "title": "ItemsWithChance", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [22], "options": { "hidden": true } }, "Items": { "type": "array", "title": "Items", "items": { "$ref": "#/definitions/LootItem" }, "format": "tabs-top" } } }, { "title": "QuestItem", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [25], "options": { "hidden": true } }, "ItemId": { "title": "QuestItem", "type": "integer", "options": { "itemType": 20 }, "format": "select2", "enumSource": [{ "source": "$enumSource_20", "title": "20_EnumTitleCB", "value": "20_EnumValueCB" }] }, "MinAmount": { "title": "MinAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "MaxAmount": { "title": "MaxAmount", "type": "integer", "minimum": 0, "maximum": 999999999 } } }, { "title": "Ship", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [30], "options": { "hidden": true } }, "ItemId": { "title": "ShipBuild", "type": "integer", "options": { "itemType": 8 }, "format": "select2", "enumSource": [{ "source": "$enumSource_8", "title": "8_EnumTitleCB", "value": "8_EnumValueCB" }] } } }, { "title": "EmptyShip", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [31], "options": { "hidden": true } }, "ItemId": { "title": "Ship", "type": "integer", "options": { "itemType": 6 }, "format": "select2", "enumSource": [{ "source": "$enumSource_6", "title": "6_EnumTitleCB", "value": "6_EnumValueCB" }] } } }, { "title": "Component", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [35], "options": { "hidden": true } }, "ItemId": { "title": "Component", "type": "integer", "options": { "itemType": 1 }, "format": "select2", "enumSource": [{ "source": "$enumSource_1", "title": "1_EnumTitleCB", "value": "1_EnumValueCB" }] }, "MinAmount": { "title": "MinAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "MaxAmount": { "title": "MaxAmount", "type": "integer", "minimum": 0, "maximum": 999999999 }, "ValueRatio": { "title": "ValueRatio", "type": "number", "minimum": 0.001, "maximum": 1000 }, "Factions": { "title": "Factions", "$ref": "#/definitions/FactionFilter" } } }] }, "LootItem": { "type": "object", "format": "grid", "title": "LootItem", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Weight": { "title": "Weight", "type": "number" }, "Loot": { "title": "Loot", "$ref": "#/definitions/LootContent" } } }, "Node": { "type": "object", "format": "grid", "title": "Node", "additionalProperties": true, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Type": { "type": "integer", "options": { "hidden": true } } }, "headerTemplate": "Id {{ self.Id }}", "oneOf": [{ "title": "Undefined", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [0], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "ComingSoon", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [1], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "ShowDialog", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [10], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "RequiredView": { "title": "RequiredView", "$ref": "#/definitions/RequiredViewMode" }, "Message": { "title": "Message", "type": "string" }, "Enemy": { "title": "Enemy", "type": "integer", "options": { "itemType": 18 }, "format": "select2", "enumSource": [{ "source": "$enumSource_18", "title": "18_EnumTitleCB", "value": "18_EnumValueCB" }] }, "Loot": { "title": "Loot", "type": "integer", "options": { "itemType": 16 }, "format": "select2", "enumSource": [{ "source": "$enumSource_16", "title": "16_EnumTitleCB", "value": "16_EnumValueCB" }] }, "Character": { "title": "Character", "type": "integer", "options": { "itemType": 19 }, "format": "select2", "enumSource": [{ "source": "$enumSource_19", "title": "19_EnumTitleCB", "value": "19_EnumValueCB" }] }, "Actions": { "type": "array", "title": "Actions", "items": { "$ref": "#/definitions/NodeAction" }, "format": "tabs-top" } } }, { "title": "OpenShipyard", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [11], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Faction": { "title": "Faction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "Value": { "title": "Level", "type": "integer", "minimum": 0, "maximum": 10000 } } }, { "title": "Switch", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [15], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "Message": { "title": "Message", "type": "string" }, "DefaultTransition": { "title": "DefaultTransition", "type": "integer", "minimum": 0, "maximum": 1000 }, "Transitions": { "type": "array", "title": "Transitions", "items": { "$ref": "#/definitions/NodeTransition" }, "format": "tabs-top" } } }, { "title": "Random", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [16], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "Message": { "title": "Message", "type": "string" }, "DefaultTransition": { "title": "DefaultTransition", "type": "integer", "minimum": 0, "maximum": 1000 }, "Transitions": { "type": "array", "title": "Transitions", "items": { "$ref": "#/definitions/NodeTransition" }, "format": "tabs-top" } } }, { "title": "Condition", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [17], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "Message": { "title": "Message", "type": "string" }, "Transitions": { "type": "array", "title": "Transitions", "items": { "$ref": "#/definitions/NodeTransition" }, "format": "tabs-top" } } }, { "title": "AttackFleet", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [20], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "VictoryTransition", "type": "integer", "minimum": 1, "maximum": 1000 }, "FailureTransition": { "title": "FailureTransition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Enemy": { "title": "Enemy", "type": "integer", "options": { "itemType": 18 }, "format": "select2", "enumSource": [{ "source": "$enumSource_18", "title": "18_EnumTitleCB", "value": "18_EnumValueCB" }] }, "Loot": { "title": "Loot", "type": "integer", "options": { "itemType": 16 }, "format": "select2", "enumSource": [{ "source": "$enumSource_16", "title": "16_EnumTitleCB", "value": "16_EnumValueCB" }] } } }, { "title": "AttackOccupants", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [21], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "VictoryTransition", "type": "integer", "minimum": 1, "maximum": 1000 }, "FailureTransition": { "title": "FailureTransition", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "DestroyOccupants", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [25], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "SuppressOccupants", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [26], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "Retreat", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [30], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "ReceiveItem", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [35], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Loot": { "title": "Loot", "type": "integer", "options": { "itemType": 16 }, "format": "select2", "enumSource": [{ "source": "$enumSource_16", "title": "16_EnumTitleCB", "value": "16_EnumValueCB" }] } } }, { "title": "RemoveItem", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [36], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Loot": { "title": "Loot", "type": "integer", "options": { "itemType": 16 }, "format": "select2", "enumSource": [{ "source": "$enumSource_16", "title": "16_EnumTitleCB", "value": "16_EnumValueCB" }] } } }, { "title": "Trade", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [37], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Loot": { "title": "Loot", "type": "integer", "options": { "itemType": 16 }, "format": "select2", "enumSource": [{ "source": "$enumSource_16", "title": "16_EnumTitleCB", "value": "16_EnumValueCB" }] } } }, { "title": "CompleteQuest", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [40], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "FailQuest", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [41], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "CancelQuest", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [42], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 } } }, { "title": "StartQuest", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [43], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Quest": { "title": "Quest", "type": "integer", "options": { "itemType": 15 }, "format": "select2", "enumSource": [{ "source": "$enumSource_15", "title": "15_EnumTitleCB", "value": "15_EnumValueCB" }] } } }, { "title": "SetCharacterRelations", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [50], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Character": { "title": "Character", "type": "integer", "options": { "itemType": 19 }, "format": "select2", "enumSource": [{ "source": "$enumSource_19", "title": "19_EnumTitleCB", "value": "19_EnumValueCB" }] }, "Value": { "title": "Value", "type": "integer", "minimum": -100, "maximum": 100 } } }, { "title": "SetFactionRelations", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [51], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Value": { "title": "Value", "type": "integer", "minimum": -100, "maximum": 100 } } }, { "title": "ChangeCharacterRelations", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [55], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Character": { "title": "Character", "type": "integer", "options": { "itemType": 19 }, "format": "select2", "enumSource": [{ "source": "$enumSource_19", "title": "19_EnumTitleCB", "value": "19_EnumValueCB" }] }, "Value": { "title": "Value", "type": "integer", "minimum": -100, "maximum": 100 } } }, { "title": "ChangeFactionRelations", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [56], "options": { "hidden": true } }, "Id": { "title": "Id", "type": "integer", "minimum": 1, "maximum": 1000 }, "DefaultTransition": { "title": "Transition", "type": "integer", "minimum": 1, "maximum": 1000 }, "Value": { "title": "Value", "type": "integer", "minimum": -100, "maximum": 100 } } }] }, "NodeAction": { "type": "object", "format": "grid", "title": "NodeAction", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "TargetNode": { "title": "TargetNode", "type": "integer", "minimum": 1, "maximum": 1000 }, "Requirement": { "title": "Requirement", "$ref": "#/definitions/Requirement" }, "ButtonText": { "title": "ButtonText", "type": "string" } } }, "NodeTransition": { "type": "object", "format": "grid", "title": "NodeTransition", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "TargetNode": { "title": "TargetNode", "type": "integer", "minimum": 1, "maximum": 1000 }, "Requirement": { "title": "Requirement", "$ref": "#/definitions/Requirement" }, "Weight": { "title": "Weight", "type": "number", "minimum": 0, "maximum": 1000 } } }, "itype_15": { "type": "object", "format": "grid", "title": "Quest", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [15], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Name": { "title": "Name", "type": "string" }, "QuestType": { "title": "QuestType", "$ref": "#/definitions/QuestType" }, "StartCondition": { "title": "StartCondition", "$ref": "#/definitions/StartCondition" }, "Weight": { "title": "Weight", "type": "number", "minimum": 0, "maximum": 1000 }, "Requirement": { "title": "Requirement", "$ref": "#/definitions/Requirement" }, "Level": { "title": "Level", "type": "integer", "minimum": 0, "maximum": 1000 }, "Nodes": { "type": "array", "title": "Nodes", "items": { "$ref": "#/definitions/Node" }, "format": "tabs-top" } } }, "itype_20": { "type": "object", "format": "grid", "title": "QuestItem", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [20], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Name": { "title": "Name", "type": "string" }, "Description": { "title": "Description", "type": "string" }, "Icon": { "title": "Icon", "type": "string" }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "Price": { "title": "Price", "type": "integer", "minimum": 0, "maximum": 999999999 } } }, "Requirement": { "type": "object", "format": "grid", "title": "Requirement", "additionalProperties": true, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Type": { "type": "integer", "options": { "hidden": true } } }, "oneOf": [{ "title": "Empty", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [0], "options": { "hidden": true } } } }, { "title": "Any", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [1], "options": { "hidden": true } }, "Requirements": { "type": "array", "title": "Requirements", "items": { "$ref": "#/definitions/Requirement" }, "format": "tabs-top" } } }, { "title": "All", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [2], "options": { "hidden": true } }, "Requirements": { "type": "array", "title": "Requirements", "items": { "$ref": "#/definitions/Requirement" }, "format": "tabs-top" } } }, { "title": "None", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [3], "options": { "hidden": true } }, "Requirements": { "type": "array", "title": "Requirements", "items": { "$ref": "#/definitions/Requirement" }, "format": "tabs-top" } } }, { "title": "PlayerPosition", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [6], "options": { "hidden": true } }, "MinValue": { "title": "MinValue", "type": "integer", "minimum": 0, "maximum": 10000 }, "MaxValue": { "title": "MaxValue", "type": "integer", "minimum": 0, "maximum": 10000 } } }, { "title": "RandomStarSystem", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [7], "options": { "hidden": true } }, "MinValue": { "title": "MinValue", "type": "integer", "minimum": 0, "maximum": 10000 }, "MaxValue": { "title": "MaxValue", "type": "integer", "minimum": 0, "maximum": 10000 } } }, { "title": "AggressiveOccupants", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [8], "options": { "hidden": true } } } }, { "title": "QuestCompleted", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [9], "options": { "hidden": true } }, "ItemId": { "title": "Quest", "type": "integer", "options": { "itemType": 15 }, "format": "select2", "enumSource": [{ "source": "$enumSource_15", "title": "15_EnumTitleCB", "value": "15_EnumValueCB" }] } } }, { "title": "QuestActive", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [10], "options": { "hidden": true } }, "ItemId": { "title": "Quest", "type": "integer", "options": { "itemType": 15 }, "format": "select2", "enumSource": [{ "source": "$enumSource_15", "title": "15_EnumTitleCB", "value": "15_EnumValueCB" }] } } }, { "title": "CharacterRelations", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [15], "options": { "hidden": true } }, "MinValue": { "title": "MinValue", "type": "integer", "minimum": -100, "maximum": 100 }, "MaxValue": { "title": "MaxValue", "type": "integer", "minimum": -100, "maximum": 100 }, "Character": { "title": "Character", "type": "integer", "options": { "itemType": 19 }, "format": "select2", "enumSource": [{ "source": "$enumSource_19", "title": "19_EnumTitleCB", "value": "19_EnumValueCB" }] } } }, { "title": "FactionRelations", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [16], "options": { "hidden": true } }, "MinValue": { "title": "MinValue", "type": "integer", "minimum": -100, "maximum": 100 }, "MaxValue": { "title": "MaxValue", "type": "integer", "minimum": -100, "maximum": 100 } } }, { "title": "Faction", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [20], "options": { "hidden": true } }, "MinValue": { "title": "MinValue", "type": "integer", "minimum": -100, "maximum": 100 }, "MaxValue": { "title": "MaxValue", "type": "integer", "minimum": -100, "maximum": 100 }, "Faction": { "title": "Faction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] } } }, { "title": "HaveQuestItem", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [25], "options": { "hidden": true } }, "ItemId": { "title": "QuestItem", "type": "integer", "options": { "itemType": 20 }, "format": "select2", "enumSource": [{ "source": "$enumSource_20", "title": "20_EnumTitleCB", "value": "20_EnumValueCB" }] }, "MinValue": { "title": "Amount", "type": "integer", "minimum": 1, "maximum": 1000000 } } }, { "title": "HaveItem", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [26], "options": { "hidden": true } }, "ItemId": { "title": "Loot", "type": "integer", "options": { "itemType": 16 }, "format": "select2", "enumSource": [{ "source": "$enumSource_16", "title": "16_EnumTitleCB", "value": "16_EnumValueCB" }] }, "Loot": { "title": "Loot", "$ref": "#/definitions/LootContent" } } }, { "title": "HaveItemById", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [27], "options": { "hidden": true } }, "ItemId": { "title": "Loot", "type": "integer", "options": { "itemType": 16 }, "format": "select2", "enumSource": [{ "source": "$enumSource_16", "title": "16_EnumTitleCB", "value": "16_EnumValueCB" }] } } }, { "title": "ComeBack", "type": "object", "format": "grid", "properties": { "Type": { "type": "integer", "enum": [30], "options": { "hidden": true } } } }] }, "itype_7": { "type": "object", "format": "grid", "title": "Satellite", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [7], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Name": { "title": "Name", "type": "string" }, "ModelImage": { "title": "ModelImage", "type": "string" }, "ModelScale": { "title": "ModelScale", "type": "number", "minimum": 0.1, "maximum": 100 }, "SizeClass": { "title": "SizeClass", "$ref": "#/definitions/SizeClass" }, "Layout": { "title": "Layout", "type": "string" }, "Barrels": { "type": "array", "title": "Barrels", "items": { "$ref": "#/definitions/Barrel" }, "format": "tabs-top" } } }, "itype_9": { "type": "object", "format": "grid", "title": "SatelliteBuild", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [9], "options": { "hidden": true } }, "Id": { "type": "integer" }, "SatelliteId": { "title": "Satellite", "type": "integer", "options": { "itemType": 7 }, "format": "select2", "enumSource": [{ "source": "$enumSource_7", "title": "7_EnumTitleCB", "value": "7_EnumValueCB" }] }, "NotAvailableInGame": { "title": "NotAvailableInGame", "type": "boolean", "format": "checkbox" }, "DifficultyClass": { "title": "DifficultyClass", "$ref": "#/definitions/DifficultyClass" }, "Components": { "type": "array", "title": "Components", "items": { "$ref": "#/definitions/InstalledComponent" }, "format": "tabs-top" } } }, "itype_6": { "type": "object", "format": "grid", "title": "Ship", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [6], "options": { "hidden": true } }, "Id": { "type": "integer" }, "ShipCategory": { "title": "ShipCategory", "$ref": "#/definitions/ShipCategory" }, "Name": { "title": "Name", "type": "string" }, "Faction": { "title": "Faction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "SizeClass": { "title": "SizeClass", "$ref": "#/definitions/SizeClass" }, "IconImage": { "title": "IconImage", "type": "string" }, "IconScale": { "title": "IconScale", "type": "number", "minimum": 0.1, "maximum": 100 }, "ModelImage": { "title": "ModelImage", "type": "string" }, "ModelScale": { "title": "ModelScale", "type": "number", "minimum": 0.1, "maximum": 100 }, "EnginePosition": { "title": "EnginePosition", "$ref": "#/definitions/vector" }, "EngineColor": { "title": "EngineColor", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "EngineSize": { "title": "EngineSize", "type": "number", "minimum": 0, "maximum": 1 }, "Engines": { "type": "array", "title": "Engines", "items": { "$ref": "#/definitions/Engine" }, "format": "tabs-top" }, "EnergyResistance": { "title": "EnergyResistance", "type": "number", "minimum": -100, "maximum": 100 }, "KineticResistance": { "title": "KineticResistance", "type": "number", "minimum": -100, "maximum": 100 }, "HeatResistance": { "title": "HeatResistance", "type": "number", "minimum": -100, "maximum": 100 }, "Regeneration": { "title": "Regeneration", "type": "boolean", "format": "checkbox" }, "BaseWeightModifier": { "title": "BaseWeightModifier", "type": "number", "minimum": -0.9, "maximum": 1000 }, "BuiltinDevices": { "type": "array", "title": "BuiltinDevices", "items": { "type": "integer", "options": { "itemType": 2 }, "format": "select2", "enumSource": [{ "source": "$enumSource_2", "title": "2_EnumTitleCB", "value": "2_EnumValueCB" }] }, "format": "tabs-top" }, "Layout": { "title": "Layout", "type": "string" }, "Barrels": { "type": "array", "title": "Barrels", "items": { "$ref": "#/definitions/Barrel" }, "format": "tabs-top" } } }, "itype_8": { "type": "object", "format": "grid", "title": "ShipBuild", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [8], "options": { "hidden": true } }, "Id": { "type": "integer" }, "ShipId": { "title": "Ship", "type": "integer", "options": { "itemType": 6 }, "format": "select2", "enumSource": [{ "source": "$enumSource_6", "title": "6_EnumTitleCB", "value": "6_EnumValueCB" }] }, "NotAvailableInGame": { "title": "NotAvailableInGame", "type": "boolean", "format": "checkbox" }, "DifficultyClass": { "title": "DifficultyClass", "$ref": "#/definitions/DifficultyClass" }, "BuildFaction": { "title": "BuildFaction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "Components": { "type": "array", "title": "Components", "items": { "$ref": "#/definitions/InstalledComponent" }, "format": "tabs-top" } } }, "itype_100": { "type": "object", "format": "grid", "title": "ShipSettings", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [100], "options": { "hidden": true } }, "Id": { "type": "integer" }, "DefaultWeightPerCell": { "title": "DefaultWeightPerCell", "type": "number", "minimum": 1, "maximum": 1000000 }, "MinimumWeightPerCell": { "title": "MinimumWeightPerCell", "type": "number", "minimum": 1, "maximum": 1000000 }, "BaseArmorPoints": { "title": "BaseArmorPoints", "type": "number", "minimum": 0, "maximum": 1000000 }, "ArmorPointsPerCell": { "title": "ArmorPointsPerCell", "type": "number", "minimum": 0, "maximum": 1000000 }, "ArmorRepairCooldown": { "title": "ArmorRepairCooldown", "type": "number", "minimum": 0, "maximum": 60 }, "BaseEnergyPoints": { "title": "BaseEnergyPoints", "type": "number", "minimum": 0, "maximum": 1000000 }, "BaseEnergyRechargeRate": { "title": "BaseEnergyRechargeRate", "type": "number", "minimum": 0, "maximum": 1000000 }, "EnergyRechargeCooldown": { "title": "EnergyRechargeCooldown", "type": "number", "minimum": 0, "maximum": 60 }, "BaseShieldRechargeRate": { "title": "BaseShieldRechargeRate", "type": "number", "minimum": 0, "maximum": 1000000 }, "ShieldRechargeCooldown": { "title": "ShieldRechargeCooldown", "type": "number", "minimum": 0, "maximum": 60 }, "BaseDroneReconstructionSpeed": { "title": "BaseDroneReconstructionSpeed", "type": "number", "minimum": 0, "maximum": 100 }, "MaxVelocity": { "title": "MaxVelocity", "type": "number", "minimum": 5, "maximum": 30 }, "MaxTurnRate": { "title": "MaxTurnRate", "type": "number", "minimum": 5, "maximum": 30 } } }, "itype_13": { "type": "object", "format": "grid", "title": "Skill", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [13], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Name": { "title": "Name", "type": "string" }, "Icon": { "title": "Icon", "type": "string" }, "Description": { "title": "Description", "type": "string" }, "BaseRequirement": { "title": "BaseRequirement", "type": "number", "minimum": 0, "maximum": 100 }, "RequirementPerLevel": { "title": "RequirementPerLevel", "type": "number", "minimum": 0, "maximum": 100 }, "BasePrice": { "title": "BasePrice", "type": "number", "minimum": 0, "maximum": 100 }, "PricePerLevel": { "title": "PricePerLevel", "type": "number", "minimum": 0, "maximum": 100 }, "MaxLevel": { "title": "MaxLevel", "type": "integer", "minimum": 1, "maximum": 1000 } } }, "itype_10": { "type": "object", "format": "grid", "title": "Technology", "additionalProperties": true, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [10], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Type": { "type": "integer", "options": { "hidden": true } } }, "oneOf": [{ "title": "Component", "type": "object", "format": "grid", "properties": { "ItemType": { "type": "integer", "enum": [10], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Type": { "type": "integer", "enum": [0], "options": { "hidden": true } }, "ItemId": { "title": "Component", "type": "integer", "options": { "itemType": 1 }, "format": "select2", "enumSource": [{ "source": "$enumSource_1", "title": "1_EnumTitleCB", "value": "1_EnumValueCB" }] }, "Faction": { "title": "Faction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "Price": { "title": "Price", "type": "integer", "minimum": 0, "maximum": 10000 }, "Hidden": { "title": "Hidden", "type": "boolean", "format": "checkbox" }, "Special": { "title": "Special", "type": "boolean", "format": "checkbox" }, "Dependencies": { "type": "array", "title": "Dependencies", "items": { "type": "integer", "options": { "itemType": 10 }, "format": "select2", "enumSource": [{ "source": "$enumSource_10", "title": "10_EnumTitleCB", "value": "10_EnumValueCB" }] }, "format": "tabs-top" } } }, { "title": "Ship", "type": "object", "format": "grid", "properties": { "ItemType": { "type": "integer", "enum": [10], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Type": { "type": "integer", "enum": [1], "options": { "hidden": true } }, "ItemId": { "title": "Ship", "type": "integer", "options": { "itemType": 6 }, "format": "select2", "enumSource": [{ "source": "$enumSource_6", "title": "6_EnumTitleCB", "value": "6_EnumValueCB" }] }, "Price": { "title": "Price", "type": "integer", "minimum": 0, "maximum": 10000 }, "Hidden": { "title": "Hidden", "type": "boolean", "format": "checkbox" }, "Special": { "title": "Special", "type": "boolean", "format": "checkbox" }, "Dependencies": { "type": "array", "title": "Dependencies", "items": { "type": "integer", "options": { "itemType": 10 }, "format": "select2", "enumSource": [{ "source": "$enumSource_10", "title": "10_EnumTitleCB", "value": "10_EnumValueCB" }] }, "format": "tabs-top" } } }, { "title": "Satellite", "type": "object", "format": "grid", "properties": { "ItemType": { "type": "integer", "enum": [10], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Type": { "type": "integer", "enum": [2], "options": { "hidden": true } }, "ItemId": { "title": "Satellite", "type": "integer", "options": { "itemType": 7 }, "format": "select2", "enumSource": [{ "source": "$enumSource_7", "title": "7_EnumTitleCB", "value": "7_EnumValueCB" }] }, "Faction": { "title": "Faction", "type": "integer", "options": { "itemType": 14 }, "format": "select2", "enumSource": [{ "source": "$enumSource_14", "title": "14_EnumTitleCB", "value": "14_EnumValueCB" }] }, "Price": { "title": "Price", "type": "integer", "minimum": 0, "maximum": 10000 }, "Hidden": { "title": "Hidden", "type": "boolean", "format": "checkbox" }, "Special": { "title": "Special", "type": "boolean", "format": "checkbox" }, "Dependencies": { "type": "array", "title": "Dependencies", "items": { "type": "integer", "options": { "itemType": 10 }, "format": "select2", "enumSource": [{ "source": "$enumSource_10", "title": "10_EnumTitleCB", "value": "10_EnumValueCB" }] }, "format": "tabs-top" } } }] }, "itype_25": { "type": "object", "format": "grid", "title": "Ammunition", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [25], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Body": { "title": "Body", "$ref": "#/definitions/BulletBody" }, "Triggers": { "type": "array", "title": "Triggers", "items": { "$ref": "#/definitions/BulletTrigger" }, "format": "tabs-top" }, "ImpactType": { "title": "ImpactType", "$ref": "#/definitions/BulletImpactType" }, "Effects": { "type": "array", "title": "Effects", "items": { "$ref": "#/definitions/ImpactEffect" }, "format": "tabs-top" } } }, "BulletBody": { "type": "object", "format": "grid", "title": "BulletBody", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Type": { "title": "Type", "$ref": "#/definitions/BulletType" }, "Size": { "title": "Size", "type": "number", "minimum": 0, "maximum": 1000 }, "Velocity": { "title": "Velocity", "type": "number", "minimum": 0, "maximum": 1000 }, "Range": { "title": "Range", "type": "number", "minimum": 0, "maximum": 999999999 }, "Lifetime": { "title": "Lifetime", "type": "number", "minimum": 0, "maximum": 999999999 }, "Weight": { "title": "Weight", "type": "number", "minimum": 0, "maximum": 999999999 }, "HitPoints": { "title": "HitPoints", "type": "integer", "minimum": 0, "maximum": 999999999 }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "BulletPrefab": { "title": "BulletPrefab", "type": "integer", "options": { "itemType": 27 }, "format": "select2", "enumSource": [{ "source": "$enumSource_27", "title": "27_EnumTitleCB", "value": "27_EnumValueCB" }] }, "EnergyCost": { "title": "EnergyCost", "type": "number", "minimum": 0, "maximum": 999999999 }, "CanBeDisarmed": { "title": "CanBeDisarmed", "type": "boolean", "format": "checkbox" }, "FriendlyFire": { "title": "FriendlyFire", "type": "boolean", "format": "checkbox" } } }, "itype_27": { "type": "object", "format": "grid", "title": "BulletPrefab", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [27], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Shape": { "title": "Shape", "$ref": "#/definitions/BulletShape" }, "Image": { "title": "Image", "type": "string" }, "Size": { "title": "Size", "type": "number", "minimum": 0.01, "maximum": 100 }, "Margins": { "title": "Margins", "type": "number", "minimum": 0, "maximum": 1 }, "MainColor": { "title": "MainColor", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "MainColorMode": { "title": "MainColorMode", "$ref": "#/definitions/ColorMode" }, "SecondColor": { "title": "SecondColor", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "SecondColorMode": { "title": "SecondColorMode", "$ref": "#/definitions/ColorMode" } } }, "BulletTrigger": { "type": "object", "format": "grid", "title": "BulletTrigger", "additionalProperties": true, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "EffectType": { "type": "integer", "options": { "hidden": true } } }, "oneOf": [{ "title": "None", "type": "object", "format": "grid", "properties": { "EffectType": { "type": "integer", "enum": [0], "options": { "hidden": true } }, "Condition": { "title": "Condition", "$ref": "#/definitions/BulletTriggerCondition" } } }, { "title": "PlaySfx", "type": "object", "format": "grid", "properties": { "EffectType": { "type": "integer", "enum": [1], "options": { "hidden": true } }, "Condition": { "title": "Condition", "$ref": "#/definitions/BulletTriggerCondition" }, "VisualEffect": { "title": "VisualEffect", "type": "integer", "options": { "itemType": 26 }, "format": "select2", "enumSource": [{ "source": "$enumSource_26", "title": "26_EnumTitleCB", "value": "26_EnumValueCB" }] }, "AudioClip": { "title": "AudioClip", "type": "string" }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "ColorMode": { "title": "ColorMode", "$ref": "#/definitions/ColorMode" }, "Size": { "title": "Size", "type": "number", "minimum": 0, "maximum": 100 }, "Lifetime": { "title": "Lifetime", "type": "number", "minimum": 0, "maximum": 1000 } } }, { "title": "SpawnBullet", "type": "object", "format": "grid", "properties": { "EffectType": { "type": "integer", "enum": [2], "options": { "hidden": true } }, "Condition": { "title": "Condition", "$ref": "#/definitions/BulletTriggerCondition" }, "AudioClip": { "title": "AudioClip", "type": "string" }, "Ammunition": { "title": "Ammunition", "type": "integer", "options": { "itemType": 25 }, "format": "select2", "enumSource": [{ "source": "$enumSource_25", "title": "25_EnumTitleCB", "value": "25_EnumValueCB" }] }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "ColorMode": { "title": "ColorMode", "$ref": "#/definitions/ColorMode" }, "Quantity": { "title": "Quantity", "type": "integer", "minimum": 0, "maximum": 1000 }, "Size": { "title": "Size", "type": "number", "minimum": 0, "maximum": 100 }, "Cooldown": { "title": "Cooldown", "type": "number", "minimum": 0, "maximum": 1000 }, "RandomFactor": { "title": "RandomFactor", "type": "number", "minimum": 0, "maximum": 1 }, "PowerMultiplier": { "title": "PowerMultiplier", "type": "number", "minimum": 0, "maximum": 1000 }, "MaxNestingLevel": { "title": "MaxNestingLevel", "type": "integer", "minimum": 0, "maximum": 100 } } }, { "title": "Detonate", "type": "object", "format": "grid", "properties": { "EffectType": { "type": "integer", "enum": [3], "options": { "hidden": true } }, "Condition": { "title": "Condition", "$ref": "#/definitions/BulletTriggerCondition" } } }] }, "ImpactEffect": { "type": "object", "format": "grid", "title": "ImpactEffect", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Type": { "title": "Type", "$ref": "#/definitions/ImpactEffectType" }, "DamageType": { "title": "DamageType", "$ref": "#/definitions/DamageType" }, "Power": { "title": "Power", "type": "number", "minimum": 0, "maximum": 999999999 }, "Factor": { "title": "Factor", "type": "number", "minimum": 0, "maximum": 1 } } }, "itype_26": { "type": "object", "format": "grid", "title": "VisualEffect", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [26], "options": { "hidden": true } }, "Id": { "type": "integer" }, "Elements": { "type": "array", "title": "Elements", "items": { "$ref": "#/definitions/VisualEffectElement" }, "format": "tabs-top" } } }, "VisualEffectElement": { "type": "object", "format": "grid", "title": "VisualEffectElement", "additionalProperties": false, "options": { "keep_oneof_values": false, "disable_edit_json": true, "disable_properties": true }, "properties": { "Type": { "title": "Type", "$ref": "#/definitions/VisualEffectType" }, "Image": { "title": "Image", "type": "string" }, "ColorMode": { "title": "ColorMode", "$ref": "#/definitions/ColorMode" }, "Color": { "title": "Color", "type": "string", "format": "color", "options": { "colorpicker": { "alpha": true } } }, "Size": { "title": "Size", "type": "number", "minimum": 0.001, "maximum": 100 }, "StartTime": { "title": "StartTime", "type": "number", "minimum": 0, "maximum": 1000 }, "Lifetime": { "title": "Lifetime", "type": "number", "minimum": 0, "maximum": 1000 } } }, "itype_3": { "type": "object", "format": "grid", "title": "Weapon", "additionalProperties": false, "options": { "keep_oneof_values": false }, "properties": { "ItemType": { "type": "integer", "enum": [3], "options": { "hidden": true } }, "Id": { "type": "integer" }, "WeaponClass": { "title": "WeaponClass", "$ref": "#/definitions/WeaponClass" }, "FireRate": { "title": "FireRate", "type": "number", "minimum": 0, "maximum": 100 }, "Spread": { "title": "Spread", "type": "number", "minimum": 0, "maximum": 360 }, "Magazine": { "title": "Magazine", "type": "integer", "minimum": 0, "maximum": 999999999 }, "ActivationType": { "title": "ActivationType", "$ref": "#/definitions/ActivationType" }, "ShotSound": { "title": "ShotSound", "type": "string" }, "ChargeSound": { "title": "ChargeSound", "type": "string" }, "ShotEffectPrefab": { "title": "ShotEffectPrefab", "type": "string" }, "ControlButtonIcon": { "title": "ControlButtonIcon", "type": "string" } } } } };
    trav(base, d);
    base.$ref = `#/definitions/itype_${type}`;
    base.title = types_1.ItemTypesMapRev[type];
    return base;
}
exports.schemaForType = schemaForType;
},{"../database":69,"../types":75}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TypeMappings = void 0;
const types_1 = require("../types");
let map;
class TypeMappings {
    static getMappings() {
        return map !== null && map !== void 0 ? map : (map = require("./typesMaps.json"));
    }
    static resolveConflict(target, entry) {
        let targ = "";
        //LootContent
        if ("MinAmount" in target || "MaxAmount" in target) {
            targ = "LootContent";
        }
        else if (target.ItemType === types_1.ItemType.Technology) {
            targ = "Technology";
        }
        else {
            targ = "Requirement";
        }
        let val = entry[targ];
        let sw = Number(target[val[0].caseVar] || 0);
        let node = val.find(e => e.cases.includes(sw));
        return node.type;
    }
    static fieldType(targ, fieldName) {
        var _a;
        let map = TypeMappings.getMappings();
        let e = (_a = map[fieldName]) !== null && _a !== void 0 ? _a : -1;
        if (typeof e === "number")
            return e;
        return TypeMappings.resolveConflict(targ, e);
    }
}
exports.TypeMappings = TypeMappings;
},{"../types":75,"./typesMaps.json":74}],74:[function(require,module,exports){
module.exports={
	"CoupledAmmunitionId": 25,
	"ComponentStatsId": 11,
	"Faction": 14,
	"DeviceId": 2,
	"WeaponId": 3,
	"AmmunitionId": 25,
	"AmmunitionIdObsolete": 25,
	"DroneBayId": 5,
	"DroneId": 8,
	"PossibleModifications": 12,
	"OutpostShip": 6,
	"TurretShip": 6,
	"InfectedPlanetFaction": 14,
	"HiveShipBuild": 8,
	"AbandonedStarbaseFaction": 14,
	"StartingShipBuilds": 8,
	"ComponentId": 1,
	"Inventory": 16,
	"Fleet": 18,
	"List": 14,
	"SpecificShips": 8,
	"ItemId": {
		"LootContent": [
			{
				"type": 20,
				"cases": [
					25
				],
				"caseVar": "Type"
			},
			{
				"type": 6,
				"cases": [
					30,
					31
				],
				"caseVar": "Type"
			},
			{
				"type": 8,
				"cases": [
					30
				],
				"caseVar": "Type"
			},
			{
				"type": 6,
				"cases": [
					30,
					31
				],
				"caseVar": "Type"
			},
			{
				"type": 1,
				"cases": [
					35
				],
				"caseVar": "Type"
			}
		],
		"Requirement": [
			{
				"type": 15,
				"cases": [
					9,
					10
				],
				"caseVar": "Type"
			},
			{
				"type": 15,
				"cases": [
					9,
					10
				],
				"caseVar": "Type"
			},
			{
				"type": 20,
				"cases": [
					25
				],
				"caseVar": "Type"
			},
			{
				"type": 16,
				"cases": [
					26,
					27
				],
				"caseVar": "Type"
			},
			{
				"type": 16,
				"cases": [
					26,
					27
				],
				"caseVar": "Type"
			}
		],
		"Technology": [
			{
				"type": 1,
				"cases": [
					0
				],
				"caseVar": "Type"
			},
			{
				"type": 6,
				"cases": [
					1
				],
				"caseVar": "Type"
			},
			{
				"type": 7,
				"cases": [
					2
				],
				"caseVar": "Type"
			}
		]
	},
	"Enemy": 18,
	"Loot": 16,
	"Character": 19,
	"Quest": 15,
	"SatelliteId": 7,
	"BuiltinDevices": 2,
	"ShipId": 6,
	"BuildFaction": 14,
	"Dependencies": 10,
	"BulletPrefab": 27,
	"VisualEffect": 26,
	"Ammunition": 25
}
},{}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemTypesMapRev = exports.ItemTypesMap = exports.ItemType = void 0;
var ItemType;
(function (ItemType) {
    ItemType[ItemType["Undefined"] = 0] = "Undefined";
    ItemType[ItemType["Component"] = 1] = "Component";
    ItemType[ItemType["Device"] = 2] = "Device";
    ItemType[ItemType["Weapon"] = 3] = "Weapon";
    ItemType[ItemType["AmmunitionObsolete"] = 4] = "AmmunitionObsolete";
    ItemType[ItemType["DroneBay"] = 5] = "DroneBay";
    ItemType[ItemType["Ship"] = 6] = "Ship";
    ItemType[ItemType["Satellite"] = 7] = "Satellite";
    ItemType[ItemType["ShipBuild"] = 8] = "ShipBuild";
    ItemType[ItemType["SatelliteBuild"] = 9] = "SatelliteBuild";
    ItemType[ItemType["Technology"] = 10] = "Technology";
    ItemType[ItemType["ComponentStats"] = 11] = "ComponentStats";
    ItemType[ItemType["ComponentMod"] = 12] = "ComponentMod";
    ItemType[ItemType["Skill"] = 13] = "Skill";
    ItemType[ItemType["Faction"] = 14] = "Faction";
    ItemType[ItemType["Quest"] = 15] = "Quest";
    ItemType[ItemType["Loot"] = 16] = "Loot";
    ItemType[ItemType["Fleet"] = 18] = "Fleet";
    ItemType[ItemType["Character"] = 19] = "Character";
    ItemType[ItemType["QuestItem"] = 20] = "QuestItem";
    ItemType[ItemType["Ammunition"] = 25] = "Ammunition";
    ItemType[ItemType["VisualEffect"] = 26] = "VisualEffect";
    ItemType[ItemType["BulletPrefab"] = 27] = "BulletPrefab";
    ItemType[ItemType["ShipSettings"] = 100] = "ShipSettings";
    ItemType[ItemType["GalaxySettings"] = 101] = "GalaxySettings";
    ItemType[ItemType["DatabaseSettings"] = 102] = "DatabaseSettings";
    ItemType[ItemType["ExplorationSettings"] = 103] = "ExplorationSettings";
})(ItemType = exports.ItemType || (exports.ItemType = {}));
exports.ItemTypesMap = Object.freeze({
    "Undefined": 0,
    "Component": 1,
    "Device": 2,
    "Weapon": 3,
    "AmmunitionObsolete": 4,
    "DroneBay": 5,
    "Ship": 6,
    "Satellite": 7,
    "ShipBuild": 8,
    "SatelliteBuild": 9,
    "Technology": 10,
    "ComponentStats": 11,
    "ComponentMod": 12,
    "Skill": 13,
    "Faction": 14,
    "Quest": 15,
    "Loot": 16,
    "Fleet": 18,
    "Character": 19,
    "QuestItem": 20,
    "Ammunition": 25,
    "VisualEffect": 26,
    "BulletPrefab": 27,
    "ShipSettings": 100,
    "GalaxySettings": 101,
    "DatabaseSettings": 102,
    "ExplorationSettings": 103,
});
exports.ItemTypesMapRev = Object.freeze({
    0: "Undefined",
    1: "Component",
    2: "Device",
    3: "Weapon",
    4: "AmmunitionObsolete",
    5: "DroneBay",
    6: "Ship",
    7: "Satellite",
    8: "ShipBuild",
    9: "SatelliteBuild",
    10: "Technology",
    11: "ComponentStats",
    12: "ComponentMod",
    13: "Skill",
    14: "Faction",
    15: "Quest",
    16: "Loot",
    18: "Fleet",
    19: "Character",
    20: "QuestItem",
    25: "Ammunition",
    26: "VisualEffect",
    27: "BulletPrefab",
    100: "ShipSettings",
    101: "GalaxySettings",
    102: "DatabaseSettings",
    103: "ExplorationSettings",
});
},{}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EditorTab = void 0;
const $ = require("jquery");
const types_1 = require("../types");
const schema_1 = require("../schema/schema");
const utils_1 = require("../utils");
const database_1 = require("../database");
require("select2");
const JSONEditor = require("@json-editor/json-editor").JSONEditor;
// declare global {
//     const JSONEditor:any;
// }
let swr = (obj, r) => {
    for (let key of Object.getOwnPropertyNames(obj)) {
        let val = obj[key];
        if (r && (key.startsWith("$") || val === database_1.Database.deleteNumber)) {
            delete obj[key];
            continue;
        }
        if (typeof val === "string") {
            if (val.match(/^#[0-9a-fA-F]{8}$/)) {
                let split = val.match(/[0-9a-fA-F]{2}/g);
                if (r) {
                    split.unshift(split.pop());
                }
                else {
                    split.push(split.shift());
                }
                obj[key] = "#" + split.join("");
            }
        }
        else if (val && typeof val === "object" || Array.isArray(val)) {
            swr(val, r);
        }
    }
    return obj;
};
let editors = window.editors = {};
let holders = {};
let current = types_1.ItemType.Undefined;
let curData;
let database;
let root;
let ready = false;
let readyAwaiters = [];
// debugger;
JSONEditor.defaults.callbacks.template = {};
for (let type of utils_1.values(types_1.ItemTypesMap)) {
    let keyT = type + "_EnumTitleCB";
    let keyV = type + "_EnumValueCB";
    JSONEditor.defaults.callbacks.template[keyT] = (jseditor, e) => {
        if (e.item === database_1.Database.deleteNumber)
            return "None";
        return database.mappings[type][e.item].path;
    };
    JSONEditor.defaults.callbacks.template[keyV] = (jseditor, e) => {
        return e.item;
    };
}
class EditorTab {
    static async init(_database) {
        database = _database;
        root = $("#contentHolder");
        for (let editor of utils_1.values(editors)) {
            editor.destroy();
        }
        holders = {};
        root.empty();
        for (let type of utils_1.values(types_1.ItemTypesMap)) {
        }
        EditorTab.closeAll();
    }
    static closeAll() {
        for (let type of utils_1.values(types_1.ItemTypesMap)) {
            EditorTab.close(type);
        }
    }
    static close(type) {
        var _a;
        // editors[type].disable();
        // holders[type].hide();
        (_a = editors[type]) === null || _a === void 0 ? void 0 : _a.destroy();
    }
    static show(type) {
        EditorTab.close(current);
        current = type;
        let typeSchema = schema_1.schemaForType(type, database);
        let holder = $(`<div id="editor_holder" data-theme="html"></div>`);
        root.append(holder);
        holders[type] = holder;
        ready = false;
        editors[type] = new JSONEditor(holder[0], {
            schema: typeSchema,
            "template": "default",
            "show_errors": "always",
            "required_by_default": 1,
            "show_opt_in": 1,
            "disable_properties": 1,
            "enable_array_copy": 1,
            "disable_array_delete_all_rows": 1,
            "disable_array_delete_last_row": 1,
            "prompt_before_delete": 1
        });
        editors[current].on("ready", () => {
            ready = true;
            for (let readyAwaiter of readyAwaiters) {
                readyAwaiter();
            }
        });
        // editors[type].enable();
        holders[type].show();
    }
    static feedData(data) {
        let type = data.ItemType;
        EditorTab.show(type);
        editors[current].setValue({});
        // let hold = $(editors[current].element);
        // let inp = hold.find(".je-switcher")[0] as HTMLSelectElement;
        // inp.value=ItemTypesMapRev[type];
        // let ev = new Event('change');
        // inp.dispatchEvent(ev);
        curData = swr(utils_1.clone(data), false);
        EditorTab.populateTech(curData);
        editors[current].setValue(curData);
    }
    static async getData() {
        await EditorTab.waitTillReady();
        let data = editors[current].getValue();
        data = swr(utils_1.clone(data), true);
        EditorTab.depopulateTech(data);
        return data;
    }
    static waitTillReady() {
        if (ready) {
            return Promise.resolve();
        }
        return new Promise((resolve, reject) => {
            readyAwaiters.push(resolve);
        });
    }
    static populateTech(targ) {
        if (targ.ItemType == types_1.ItemType.Component) {
            targ.AmmunitionIdObsolete = targ.AmmunitionId;
        }
    }
    static depopulateTech(targ) {
        var _a;
        if (targ.ItemType == types_1.ItemType.Component) {
            targ.AmmunitionId = (_a = targ.AmmunitionId) !== null && _a !== void 0 ? _a : targ.AmmunitionIdObsolete;
            delete targ.AmmunitionIdObsolete;
        }
    }
}
exports.EditorTab = EditorTab;
},{"../database":69,"../schema/schema":72,"../types":75,"../utils":78,"@json-editor/json-editor":2,"jquery":38,"select2":62}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.TreeTab = void 0;
const $ = require("jquery");
const EditorTab_1 = require("./EditorTab");
const equal = require("deep-equal");
require("jstree");
let treeBase;
let tree;
let curPath = "";
let prevData;
let eventLocked;
let to;
let folderInput;
let saveButton;
let searchInput;
let ready = false;
let cover;
let lockEvents = (text) => {
    cover.find("div")[0].textContent = text;
    if (eventLocked) {
        return;
    }
    eventLocked = true;
    cover.show(0.5);
};
let unlockEvents = () => {
    if (!eventLocked)
        return;
    eventLocked = false;
    cover.hide(0.5);
};
class TreeTab {
    static init(files, database) {
        cover = $(`<div class="cover"><div></div><div class="loader"></div></div>`);
        $("body").append(cover);
        lockEvents("Editor is starting");
        TreeTab.files = files;
        TreeTab.database = database;
        let holder = $("#treeHolder");
        let r1 = $("<div class='r1'></div>");
        let r2 = $("<div class='r2'></div>");
        holder.append(r1);
        holder.append(r2);
        folderInput = $(`<input type="file" webkitdirectory multiple>`);
        saveButton = $(`<input type="button" value="Save database">`);
        let searchLabel = $(`<label for="tree-search">Search: </label>`);
        searchInput = $(`<input id="tree-search" type="search">`);
        r1.append(folderInput);
        r1.append(saveButton);
        r2.append(searchLabel);
        r2.append(searchInput);
        saveButton.prop("disabled", true);
        searchInput.prop("disabled", true);
        treeBase = $(`<div></div>`);
        holder.append(treeBase);
        folderInput.on("change", async (event) => {
            if (eventLocked)
                return;
            lockEvents("Loading database");
            if (ready && prompt("Save before changing database?")) {
                await TreeTab.saveDatabase();
                lockEvents("Loading database");
            }
            await TreeTab.close();
            let _files = Array.from(folderInput[0].files);
            await TreeTab.files.init(_files);
            await TreeTab.redrawTree();
            ready = true;
            unlockEvents();
        });
        saveButton.on('click', async () => {
            if (eventLocked)
                return;
            lockEvents("Saving database (this might take some time on larger database)");
            await TreeTab.saveDatabase();
            unlockEvents();
        });
        searchInput.on('keyup', () => {
            if (!tree)
                return;
            if (to)
                clearTimeout(to);
            to = setTimeout(function () {
                let v = searchInput.val();
                tree.search(v);
            }, 250);
        });
        unlockEvents();
    }
    static async saveDatabase() {
        lockEvents("Archiving database (this might take some time on larger database)");
        await TreeTab.close();
        lockEvents("Preparing download (if this step takes too long, something might b wrong with your device)");
        await TreeTab.files.save();
    }
    static async redrawTree() {
        if (tree)
            tree.destroy(false);
        saveButton.prop("disabled", true);
        searchInput.prop("disabled", true);
        tree = treeBase.jstree({
            core: {
                data: await TreeTab.files.treeData(),
                error: console.error,
                multiple: false,
            },
            types: {
                json: {
                    icon: "assets/json.png",
                    max_children: 0
                }
            },
            search: {
                show_only_matches: true,
                show_only_matches_children: true
            },
            plugins: ["search", "types", "wholerow"]
        }).jstree(true);
        TreeTab.createEvents();
        saveButton.prop("disabled", false);
        searchInput.prop("disabled", false);
    }
    static async save() {
        try {
            if (!curPath.length)
                return;
            let curData = await EditorTab_1.EditorTab.getData();
            if (!equal(curData, prevData, { strict: true })) {
                if (!await TreeTab.database.tryApplyChanges(prevData, curData, this.files)) {
                    return;
                }
                let curDataStr = JSON.stringify(curData, null, "\t");
                await TreeTab.files.writeFile(curPath, curDataStr);
            }
        }
        catch (e) {
            return;
        }
    }
    static async close() {
        await TreeTab.save();
        EditorTab_1.EditorTab.closeAll();
    }
    static createEvents() {
        treeBase.on('changed.jstree', async function (e, data) {
            var _a;
            if (eventLocked)
                return;
            if (((_a = data === null || data === void 0 ? void 0 : data.node) === null || _a === void 0 ? void 0 : _a.type) !== "json")
                return;
            lockEvents("Saving current file.");
            await TreeTab.save();
            curPath = await TreeTab.files.getPathFromSelection(data.selected);
            let selected = await TreeTab.files.readFile(curPath);
            prevData = JSON.parse(selected);
            lockEvents("Opening new file.");
            EditorTab_1.EditorTab.feedData(prevData);
            unlockEvents();
        });
    }
}
exports.TreeTab = TreeTab;
},{"./EditorTab":76,"deep-equal":10,"jquery":38,"jstree":39}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.values = exports.keys = exports.clone = void 0;
const _clone = require("rfdc");
exports.clone = _clone({
    proto: true,
    circles: true
});
const keys = (o) => Object.getOwnPropertyNames(o);
exports.keys = keys;
const values = (o) => exports.keys(o).map(e => o[e]);
exports.values = values;
},{"rfdc":61}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZipFiles = void 0;
const files_1 = require("./files");
const download = require("downloadjs");
const zip = require("../lib/zip-fs-full.min");
class ZipFiles extends files_1.Files {
    constructor(database) {
        super();
        this.hide = new Set();
        this.database = database;
    }
    static isZipDirectoryEntry(object) {
        return object && 'getChildByName' in object;
    }
    static isZipFileEntry(object) {
        return object && 'getText' in object;
    }
    async init(files) {
        this.fs = new zip.fs.FS();
        let unName = "__UNCHANGED#" + (Math.random() * 0xFFFFFFFFFFFFF).toString(16);
        await Promise.all(files.map(async (file) => {
            if (!file.webkitRelativePath)
                return;
            if (!file.webkitRelativePath.toLowerCase().endsWith(".json"))
                return;
            let text = await file.text();
            if (!await this.database.tryAddFile(file.webkitRelativePath, text))
                return;
            await this.writeFile(unName + "/" + file.webkitRelativePath, text);
        }));
        this.unchangedDir = this.getDirByPath(unName);
        window.fs = this.fs;
        this.hide.add(this.unchangedDir.id);
    }
    async readFile(path) {
        let data = await this.getFileByPath(path);
        if (data == null)
            throw new Error("File not found: " + path);
        return data.getText();
    }
    async writeFile(path, data) {
        let _p = path.split(/[/\\]/);
        while (_p[0].length === 0)
            _p.shift();
        let filename = _p.pop();
        let dir = this.getDirByPath(_p);
        let c = dir.getChildByName(filename);
        if (ZipFiles.isZipFileEntry(c)) {
            c.replaceText(data);
        }
        else {
            c = dir.addText(filename, data);
        }
        if (this.unchangedDir && _p[0] == this.unchangedDir.name) {
            _p[0] = "";
            this.hide.add((await this.writeFile(_p.join("/") + "/" + filename, data)).id);
        }
        return c;
    }
    async treeData() {
        let files = [];
        for (let child of this.fs.entries) {
            if (this.hide.has(child.id))
                continue;
            if (!child.parent)
                continue;
            let el = ZipFiles.isZipFileEntry(child);
            files.push({
                id: child.id,
                parent: child.parent.name !== this.unchangedDir.name ? child.parent.id : "#",
                text: child.name,
                state: {
                    opened: !child.parent
                },
                type: ZipFiles.isZipFileEntry(child) ? "json" : undefined
            });
        }
        return files;
    }
    async getPathFromSelection(selection) {
        return this.entryToPath(this.fs.getById(Number(selection))).join("/");
    }
    async save() {
        let dir = this.fs.children[1];
        if (!ZipFiles.isZipDirectoryEntry(dir)) {
            alert("No changes to save");
            return;
        }
        let blob = await dir.exportBlob();
        await download(blob, dir.name + ".zip", "application/zip");
    }
    async allFiles() {
        let ret = [];
        for (let entry of this.fs.entries) {
            if (this.hide.has(entry.id))
                continue;
            if (!ZipFiles.isZipFileEntry(entry))
                continue;
            let path = (await this.getPathFromSelection(entry.id.toString()));
            ret.push({ path: path, value: await entry.getText() });
        }
        return ret;
    }
    getDirByPath(path) {
        if (typeof path === "string")
            path = path.split(/[/\\]/);
        let cur = this.fs.root;
        for (let i = 0; i < path.length; i++) {
            if (!path[i] || path[i].length === 0)
                continue;
            let c = cur.getChildByName(path[i]);
            if (ZipFiles.isZipDirectoryEntry(c)) {
                cur = c;
            }
            else {
                cur = cur.addDirectory(path[i]);
            }
        }
        return cur;
    }
    entryToPath(node) {
        let arr = [];
        if (node.parent) {
            arr = this.entryToPath(node.parent);
        }
        arr.push(node.name);
        return arr;
    }
    getFileByPath(path) {
        if (typeof path === "string")
            path = path.split(/[/\\]/);
        path = [...path];
        let filename = path.pop();
        let dir = this.getDirByPath(path);
        let c = dir.getChildByName(filename);
        if (ZipFiles.isZipFileEntry(c))
            return c;
        return null;
    }
}
exports.ZipFiles = ZipFiles;
},{"../lib/zip-fs-full.min":1,"./files":70,"downloadjs":13}]},{},[71]);
